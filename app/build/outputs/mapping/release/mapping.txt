# compiler: R8
# compiler_version: 2.1.86
# min_api: 31
# pg_map_id: dbaecb9
# common_typos_disable
androidx.activity.Cancellable -> a.a.a:
androidx.activity.ComponentActivity -> androidx.activity.ComponentActivity:
    1:1:androidx.savedstate.SavedStateRegistryController androidx.savedstate.SavedStateRegistryController.create(androidx.savedstate.SavedStateRegistryOwner):0:0 -> <init>
    1:1:void <init>():0 -> <init>
    2:2:void <init>():0:0 -> <init>
    1:1:void androidx.activity.contextaware.ContextAwareHelper.addOnContextAvailableListener(androidx.activity.contextaware.OnContextAvailableListener):0:0 -> addOnContextAvailableListener
    1:1:void addOnContextAvailableListener(androidx.activity.contextaware.OnContextAvailableListener):0 -> addOnContextAvailableListener
    1:1:androidx.savedstate.SavedStateRegistry androidx.savedstate.SavedStateRegistryController.getSavedStateRegistry():0:0 -> getSavedStateRegistry
    1:1:androidx.savedstate.SavedStateRegistry getSavedStateRegistry():0 -> getSavedStateRegistry
    1:1:void androidx.lifecycle.ViewTreeLifecycleOwner.set(android.view.View,androidx.lifecycle.LifecycleOwner):0:0 -> initViewTreeOwners
    1:1:void initViewTreeOwners():0 -> initViewTreeOwners
    2:2:void initViewTreeOwners():0:0 -> initViewTreeOwners
    3:3:void androidx.lifecycle.ViewTreeViewModelStoreOwner.set(android.view.View,androidx.lifecycle.ViewModelStoreOwner):0:0 -> initViewTreeOwners
    3:3:void initViewTreeOwners():0 -> initViewTreeOwners
    4:4:void initViewTreeOwners():0:0 -> initViewTreeOwners
    5:5:void androidx.savedstate.ViewTreeSavedStateRegistryOwner.set(android.view.View,androidx.savedstate.SavedStateRegistryOwner):0:0 -> initViewTreeOwners
    5:5:void initViewTreeOwners():0 -> initViewTreeOwners
    1:1:void androidx.activity.contextaware.ContextAwareHelper.dispatchOnContextAvailable(android.content.Context):0:0 -> onCreate
    1:1:void onCreate(android.os.Bundle):0 -> onCreate
    2:2:void onCreate(android.os.Bundle):0:0 -> onCreate
    1:1:void androidx.lifecycle.LifecycleRegistry.setCurrentState(androidx.lifecycle.Lifecycle$State):0:0 -> onSaveInstanceState
    1:1:void onSaveInstanceState(android.os.Bundle):0 -> onSaveInstanceState
    2:2:void onSaveInstanceState(android.os.Bundle):0:0 -> onSaveInstanceState
    1:1:android.content.Context androidx.activity.contextaware.ContextAwareHelper.peekAvailableContext():0:0 -> peekAvailableContext
    1:1:android.content.Context peekAvailableContext():0 -> peekAvailableContext
    1:1:void androidx.activity.contextaware.ContextAwareHelper.removeOnContextAvailableListener(androidx.activity.contextaware.OnContextAvailableListener):0:0 -> removeOnContextAvailableListener
    1:1:void removeOnContextAvailableListener(androidx.activity.contextaware.OnContextAvailableListener):0 -> removeOnContextAvailableListener
    1:1:void androidx.tracing.TraceApi18Impl.beginSection(java.lang.String):0:0 -> reportFullyDrawn
    1:1:void androidx.tracing.Trace.beginSection(java.lang.String):0 -> reportFullyDrawn
    1:1:void reportFullyDrawn():0 -> reportFullyDrawn
    2:2:void reportFullyDrawn():0:0 -> reportFullyDrawn
    3:3:void androidx.tracing.TraceApi18Impl.endSection():0:0 -> reportFullyDrawn
    3:3:void androidx.tracing.Trace.endSection():0 -> reportFullyDrawn
    3:3:void reportFullyDrawn():0 -> reportFullyDrawn
    4:4:void reportFullyDrawn():0:0 -> reportFullyDrawn
androidx.activity.ComponentActivity$1 -> androidx.activity.ComponentActivity$a:
    androidx.activity.ComponentActivity this$0 -> a
androidx.activity.ComponentActivity$2 -> androidx.activity.ComponentActivity$b:
    androidx.activity.ComponentActivity this$0 -> i
    1:1:void androidx.core.app.ActivityCompat.requestPermissions(android.app.Activity,java.lang.String[],int):0:0 -> b
    1:1:void onLaunch(int,androidx.activity.result.contract.ActivityResultContract,java.lang.Object,androidx.core.app.ActivityOptionsCompat):0 -> b
    2:2:void onLaunch(int,androidx.activity.result.contract.ActivityResultContract,java.lang.Object,androidx.core.app.ActivityOptionsCompat):0:0 -> b
    3:3:android.content.IntentSender androidx.activity.result.IntentSenderRequest.getIntentSender():0:0 -> b
    3:3:void onLaunch(int,androidx.activity.result.contract.ActivityResultContract,java.lang.Object,androidx.core.app.ActivityOptionsCompat):0 -> b
    4:4:android.content.Intent androidx.activity.result.IntentSenderRequest.getFillInIntent():0:0 -> b
    4:4:void onLaunch(int,androidx.activity.result.contract.ActivityResultContract,java.lang.Object,androidx.core.app.ActivityOptionsCompat):0 -> b
    5:5:int androidx.activity.result.IntentSenderRequest.getFlagsMask():0:0 -> b
    5:5:void onLaunch(int,androidx.activity.result.contract.ActivityResultContract,java.lang.Object,androidx.core.app.ActivityOptionsCompat):0 -> b
    6:6:int androidx.activity.result.IntentSenderRequest.getFlagsValues():0:0 -> b
    6:6:void onLaunch(int,androidx.activity.result.contract.ActivityResultContract,java.lang.Object,androidx.core.app.ActivityOptionsCompat):0 -> b
    7:7:void androidx.core.app.ActivityCompat.startIntentSenderForResult(android.app.Activity,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle):0:0 -> b
    7:7:void onLaunch(int,androidx.activity.result.contract.ActivityResultContract,java.lang.Object,androidx.core.app.ActivityOptionsCompat):0 -> b
    8:8:void onLaunch(int,androidx.activity.result.contract.ActivityResultContract,java.lang.Object,androidx.core.app.ActivityOptionsCompat):0:0 -> b
    9:9:void androidx.core.app.ActivityCompat.startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle):0:0 -> b
    9:9:void onLaunch(int,androidx.activity.result.contract.ActivityResultContract,java.lang.Object,androidx.core.app.ActivityOptionsCompat):0 -> b
    10:10:android.os.Bundle androidx.core.app.ActivityOptionsCompat.toBundle():0:0 -> b
    10:10:void onLaunch(int,androidx.activity.result.contract.ActivityResultContract,java.lang.Object,androidx.core.app.ActivityOptionsCompat):0 -> b
androidx.activity.ComponentActivity$2$1 -> androidx.activity.ComponentActivity$b$a:
    androidx.activity.result.contract.ActivityResultContract$SynchronousResult val$synchronousResult -> b
    androidx.activity.ComponentActivity$2 this$1 -> c
    int val$requestCode -> a
    1:1:java.lang.Object androidx.activity.result.contract.ActivityResultContract$SynchronousResult.getValue():0:0 -> run
    1:1:void run():0 -> run
    2:2:boolean androidx.activity.result.ActivityResultRegistry.dispatchResult(int,java.lang.Object):0:0 -> run
    2:2:void run():0 -> run
androidx.activity.ComponentActivity$2$2 -> androidx.activity.ComponentActivity$b$b:
    android.content.IntentSender$SendIntentException val$e -> b
    androidx.activity.ComponentActivity$2 this$1 -> c
    int val$requestCode -> a
androidx.activity.ComponentActivity$3 -> androidx.activity.ComponentActivity$3:
    androidx.activity.ComponentActivity this$0 -> a
    void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> g
androidx.activity.ComponentActivity$4 -> androidx.activity.ComponentActivity$4:
    androidx.activity.ComponentActivity this$0 -> a
    1:1:void androidx.activity.contextaware.ContextAwareHelper.clearAvailableContext():0:0 -> g
    1:1:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):0 -> g
    2:2:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):0:0 -> g
androidx.activity.ComponentActivity$5 -> androidx.activity.ComponentActivity$5:
    androidx.activity.ComponentActivity this$0 -> a
    1:1:void androidx.lifecycle.LifecycleRegistry.removeObserver(androidx.lifecycle.LifecycleObserver):0:0 -> g
    1:1:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):0 -> g
androidx.activity.ComponentActivity$6 -> androidx.activity.ComponentActivity$c:
    androidx.activity.ComponentActivity this$0 -> a
    1:1:void androidx.activity.result.ActivityResultRegistry.onSaveInstanceState(android.os.Bundle):0:0 -> a
    1:1:android.os.Bundle saveState():0 -> a
androidx.activity.ComponentActivity$7 -> androidx.activity.ComponentActivity$d:
    androidx.activity.ComponentActivity this$0 -> a
    1:1:void androidx.activity.result.ActivityResultRegistry.onRestoreInstanceState(android.os.Bundle):0:0 -> a
    1:1:void onContextAvailable(android.content.Context):0 -> a
    2:2:void androidx.activity.result.ActivityResultRegistry.bindRcKey(int,java.lang.String):0:0 -> a
    2:2:void androidx.activity.result.ActivityResultRegistry.onRestoreInstanceState(android.os.Bundle):0 -> a
    2:2:void onContextAvailable(android.content.Context):0 -> a
androidx.activity.ComponentActivity$NonConfigurationInstances -> androidx.activity.ComponentActivity$e:
    androidx.lifecycle.ViewModelStore viewModelStore -> b
    java.lang.Object custom -> a
androidx.activity.ImmLeaksCleaner -> androidx.activity.ImmLeaksCleaner:
    java.lang.reflect.Field sServedViewField -> d
    java.lang.reflect.Field sNextServedViewField -> e
    java.lang.reflect.Field sHField -> c
    int sReflectedFieldsInitialized -> b
    android.app.Activity mActivity -> a
    1:1:void initializeReflectiveFields():0:0 -> g
    1:1:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):0 -> g
    2:2:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):0:0 -> g
androidx.activity.OnBackPressedCallback -> a.a.b:
    boolean mEnabled -> a
    java.util.concurrent.CopyOnWriteArrayList mCancellables -> b
    void handleOnBackPressed() -> a
androidx.activity.OnBackPressedDispatcher -> androidx.activity.OnBackPressedDispatcher:
    java.lang.Runnable mFallbackOnBackPressed -> a
    java.util.ArrayDeque mOnBackPressedCallbacks -> b
    1:1:boolean androidx.activity.OnBackPressedCallback.isEnabled():0:0 -> a
    1:1:void onBackPressed():0 -> a
    2:2:void onBackPressed():0:0 -> a
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable -> androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable:
    androidx.lifecycle.Lifecycle mLifecycle -> a
    androidx.activity.OnBackPressedCallback mOnBackPressedCallback -> b
    androidx.activity.OnBackPressedDispatcher this$0 -> d
    androidx.activity.Cancellable mCurrentCancellable -> c
    1:1:void androidx.lifecycle.LifecycleRegistry.removeObserver(androidx.lifecycle.LifecycleObserver):0:0 -> cancel
    1:1:void cancel():0 -> cancel
    2:2:void cancel():0:0 -> cancel
    3:3:void androidx.activity.OnBackPressedCallback.removeCancellable(androidx.activity.Cancellable):0:0 -> cancel
    3:3:void cancel():0 -> cancel
    4:4:void cancel():0:0 -> cancel
    1:1:androidx.activity.Cancellable androidx.activity.OnBackPressedDispatcher.addCancellableCallback(androidx.activity.OnBackPressedCallback):0:0 -> g
    1:1:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):0 -> g
    2:2:void androidx.activity.OnBackPressedCallback.addCancellable(androidx.activity.Cancellable):0:0 -> g
    2:2:androidx.activity.Cancellable androidx.activity.OnBackPressedDispatcher.addCancellableCallback(androidx.activity.OnBackPressedCallback):0 -> g
    2:2:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):0 -> g
    3:3:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):0:0 -> g
androidx.activity.OnBackPressedDispatcher$OnBackPressedCancellable -> androidx.activity.OnBackPressedDispatcher$a:
    androidx.activity.OnBackPressedCallback mOnBackPressedCallback -> a
    androidx.activity.OnBackPressedDispatcher this$0 -> b
    1:1:void androidx.activity.OnBackPressedCallback.removeCancellable(androidx.activity.Cancellable):0:0 -> cancel
    1:1:void cancel():0 -> cancel
androidx.activity.OnBackPressedDispatcherOwner -> a.a.c:
androidx.activity.contextaware.ContextAwareHelper -> a.a.d.a:
    android.content.Context mContext -> b
    java.util.Set mListeners -> a
androidx.activity.contextaware.OnContextAvailableListener -> a.a.d.b:
    void onContextAvailable(android.content.Context) -> a
androidx.activity.result.ActivityResult -> a.a.e.a:
    android.content.Intent mData -> b
    int mResultCode -> a
    1:1:java.lang.String resultCodeToString(int):0:0 -> toString
    1:1:java.lang.String toString():0 -> toString
    2:2:java.lang.String toString():0:0 -> toString
androidx.activity.result.ActivityResult$1 -> a.a.e.a$a:
    1:1:androidx.activity.result.ActivityResult createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    1:1:java.lang.Object createFromParcel(android.os.Parcel):0 -> createFromParcel
    1:1:androidx.activity.result.ActivityResult[] newArray(int):0:0 -> newArray
    1:1:java.lang.Object[] newArray(int):0 -> newArray
androidx.activity.result.ActivityResultCallback -> a.a.e.b:
    void onActivityResult(java.lang.Object) -> a
androidx.activity.result.ActivityResultLauncher -> a.a.e.c:
    void launch(java.lang.Object,androidx.core.app.ActivityOptionsCompat) -> a
    void unregister() -> b
androidx.activity.result.ActivityResultRegistry -> androidx.activity.result.ActivityResultRegistry:
    java.util.Map mRcToKey -> b
    java.util.Map mKeyToRc -> c
    java.util.Map mKeyToLifecycleContainers -> d
    java.util.ArrayList mLaunchedKeys -> e
    java.util.Random mRandom -> a
    android.os.Bundle mPendingResults -> h
    java.util.Map mKeyToCallback -> f
    java.util.Map mParsedPendingResults -> g
    1:1:void doDispatch(java.lang.String,int,android.content.Intent,androidx.activity.result.ActivityResultRegistry$CallbackAndContract):0:0 -> a
    1:1:boolean dispatchResult(int,int,android.content.Intent):0 -> a
    void onLaunch(int,androidx.activity.result.contract.ActivityResultContract,java.lang.Object,androidx.core.app.ActivityOptionsCompat) -> b
    1:1:int androidx.activity.result.ActivityResult.getResultCode():0:0 -> c
    1:1:androidx.activity.result.ActivityResultLauncher register(java.lang.String,androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultCallback):0 -> c
    2:2:android.content.Intent androidx.activity.result.ActivityResult.getData():0:0 -> c
    2:2:androidx.activity.result.ActivityResultLauncher register(java.lang.String,androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultCallback):0 -> c
    3:3:androidx.activity.result.ActivityResultLauncher register(java.lang.String,androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultCallback):0:0 -> c
    1:1:androidx.lifecycle.Lifecycle$State androidx.lifecycle.LifecycleRegistry.getCurrentState():0:0 -> d
    1:1:androidx.activity.result.ActivityResultLauncher register(java.lang.String,androidx.lifecycle.LifecycleOwner,androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultCallback):0 -> d
    2:2:androidx.activity.result.ActivityResultLauncher register(java.lang.String,androidx.lifecycle.LifecycleOwner,androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultCallback):0:0 -> d
    3:3:boolean androidx.lifecycle.Lifecycle$State.isAtLeast(androidx.lifecycle.Lifecycle$State):0:0 -> d
    3:3:androidx.activity.result.ActivityResultLauncher register(java.lang.String,androidx.lifecycle.LifecycleOwner,androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultCallback):0 -> d
    4:4:androidx.activity.result.ActivityResultLauncher register(java.lang.String,androidx.lifecycle.LifecycleOwner,androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultCallback):0:0 -> d
    5:5:void androidx.activity.result.ActivityResultRegistry$LifecycleContainer.addObserver(androidx.lifecycle.LifecycleEventObserver):0:0 -> d
    5:5:androidx.activity.result.ActivityResultLauncher register(java.lang.String,androidx.lifecycle.LifecycleOwner,androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultCallback):0 -> d
    6:6:androidx.activity.result.ActivityResultLauncher register(java.lang.String,androidx.lifecycle.LifecycleOwner,androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultCallback):0:0 -> d
    7:7:androidx.lifecycle.Lifecycle$State androidx.lifecycle.LifecycleRegistry.getCurrentState():0:0 -> d
    7:7:androidx.activity.result.ActivityResultLauncher register(java.lang.String,androidx.lifecycle.LifecycleOwner,androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultCallback):0 -> d
    8:8:androidx.activity.result.ActivityResultLauncher register(java.lang.String,androidx.lifecycle.LifecycleOwner,androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultCallback):0:0 -> d
    1:1:int generateRandomNumber():0:0 -> e
    1:1:int registerKey(java.lang.String):0 -> e
    2:2:void bindRcKey(int,java.lang.String):0:0 -> e
    2:2:int registerKey(java.lang.String):0 -> e
    1:1:void androidx.activity.result.ActivityResultRegistry$LifecycleContainer.clearObservers():0:0 -> f
    1:1:void unregister(java.lang.String):0 -> f
    2:2:void unregister(java.lang.String):0:0 -> f
androidx.activity.result.ActivityResultRegistry$1 -> androidx.activity.result.ActivityResultRegistry$1:
    androidx.activity.result.ActivityResultCallback val$callback -> b
    java.lang.String val$key -> a
    androidx.activity.result.contract.ActivityResultContract val$contract -> c
    androidx.activity.result.ActivityResultRegistry this$0 -> d
    1:1:int androidx.activity.result.ActivityResult.getResultCode():0:0 -> g
    1:1:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):0 -> g
    2:2:android.content.Intent androidx.activity.result.ActivityResult.getData():0:0 -> g
    2:2:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):0 -> g
    3:3:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):0:0 -> g
androidx.activity.result.ActivityResultRegistry$2 -> androidx.activity.result.ActivityResultRegistry$a:
    java.lang.String val$key -> a
    int val$requestCode -> b
    androidx.activity.result.contract.ActivityResultContract val$contract -> c
    androidx.activity.result.ActivityResultRegistry this$0 -> d
    void launch(java.lang.Object,androidx.core.app.ActivityOptionsCompat) -> a
    void unregister() -> b
androidx.activity.result.ActivityResultRegistry$3 -> androidx.activity.result.ActivityResultRegistry$b:
    java.lang.String val$key -> a
    int val$requestCode -> b
    androidx.activity.result.contract.ActivityResultContract val$contract -> c
    androidx.activity.result.ActivityResultRegistry this$0 -> d
    void launch(java.lang.Object,androidx.core.app.ActivityOptionsCompat) -> a
    void unregister() -> b
androidx.activity.result.ActivityResultRegistry$CallbackAndContract -> androidx.activity.result.ActivityResultRegistry$c:
    androidx.activity.result.ActivityResultCallback mCallback -> a
    androidx.activity.result.contract.ActivityResultContract mContract -> b
androidx.activity.result.ActivityResultRegistry$LifecycleContainer -> androidx.activity.result.ActivityResultRegistry$d:
    androidx.lifecycle.Lifecycle mLifecycle -> a
    java.util.ArrayList mObservers -> b
androidx.activity.result.ActivityResultRegistryOwner -> a.a.e.d:
androidx.activity.result.IntentSenderRequest -> a.a.e.e:
    android.content.IntentSender mIntentSender -> a
    android.content.Intent mFillInIntent -> b
    int mFlagsValues -> d
    int mFlagsMask -> c
androidx.activity.result.IntentSenderRequest$1 -> a.a.e.e$a:
    1:1:androidx.activity.result.IntentSenderRequest createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    1:1:java.lang.Object createFromParcel(android.os.Parcel):0 -> createFromParcel
    1:1:androidx.activity.result.IntentSenderRequest[] newArray(int):0:0 -> newArray
    1:1:java.lang.Object[] newArray(int):0 -> newArray
androidx.activity.result.contract.ActivityResultContract -> a.a.e.f.a:
    android.content.Intent createIntent(android.content.Context,java.lang.Object) -> a
    androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context,java.lang.Object) -> b
    java.lang.Object parseResult(int,android.content.Intent) -> c
androidx.activity.result.contract.ActivityResultContract$SynchronousResult -> a.a.e.f.a$a:
    java.lang.Object mValue -> a
androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions -> a.a.e.f.b:
    1:1:android.content.Intent createIntent(java.lang.String[]):0:0 -> a
    1:1:android.content.Intent createIntent(android.content.Context,java.lang.String[]):0 -> a
    1:1:android.content.Intent createIntent(android.content.Context,java.lang.Object):0 -> a
    1:1:androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context,java.lang.String[]):0:0 -> b
    1:1:androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context,java.lang.Object):0 -> b
    1:1:java.util.Map parseResult(int,android.content.Intent):0:0 -> c
    1:1:java.lang.Object parseResult(int,android.content.Intent):0 -> c
androidx.activity.result.contract.ActivityResultContracts$StartActivityForResult -> a.a.e.f.c:
    android.content.Intent createIntent(android.content.Context,java.lang.Object) -> a
    1:1:androidx.activity.result.ActivityResult parseResult(int,android.content.Intent):0:0 -> c
    1:1:java.lang.Object parseResult(int,android.content.Intent):0 -> c
androidx.appcompat.R$string -> a.b.a:
    android.view.inputmethod.InputConnection androidx.appcompat.widget.AppCompatHintHelper.onCreateInputConnection(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo,android.view.View) -> a
androidx.appcompat.R$styleable -> a.b.b:
    int[] TextAppearance -> w
    int[] View -> y
    int[] RecycleListView -> s
    int[] Spinner -> u
    int[] ViewStubCompat -> A
    int[] AppCompatImageView -> f
    int[] AppCompatTextHelper -> h
    int[] ActionBarLayout -> b
    int[] ActionMode -> d
    int[] ListPopupWindow -> n
    int[] MenuItem -> p
    int[] AppCompatTheme -> j
    int[] CompoundButton -> l
    int[] SwitchCompat -> v
    int[] Toolbar -> x
    int[] PopupWindow -> r
    int[] SearchView -> t
    int[] ActionBar -> a
    int[] ViewBackgroundHelper -> z
    int[] AppCompatSeekBar -> g
    int[] AppCompatTextView -> i
    int[] ActionMenuItemView -> c
    int[] AlertDialog -> e
    int[] MenuGroup -> o
    int[] MenuView -> q
    int[] ButtonBarLayout -> k
    int[] LinearLayoutCompat -> m
androidx.appcompat.app.ActionBar -> a.b.c.a:
    boolean closeOptionsMenu() -> a
    boolean collapseActionView() -> b
    void dispatchMenuVisibilityChanged(boolean) -> c
    int getDisplayOptions() -> d
    android.content.Context getThemedContext() -> e
    boolean invalidateOptionsMenu() -> f
    void onConfigurationChanged(android.content.res.Configuration) -> g
    void onDestroy() -> h
    boolean onKeyShortcut(int,android.view.KeyEvent) -> i
    boolean onMenuKeyEvent(android.view.KeyEvent) -> j
    boolean openOptionsMenu() -> k
    void setDefaultDisplayHomeAsUpEnabled(boolean) -> l
    void setShowHideAnimationEnabled(boolean) -> m
    void setWindowTitle(java.lang.CharSequence) -> n
    androidx.appcompat.view.ActionMode startActionMode(androidx.appcompat.view.ActionMode$Callback) -> o
androidx.appcompat.app.ActionBar$LayoutParams -> a.b.c.a$a:
    int gravity -> a
androidx.appcompat.app.ActionBar$OnMenuVisibilityListener -> a.b.c.a$b:
    void onMenuVisibilityChanged(boolean) -> a
androidx.appcompat.app.ActionBar$Tab -> a.b.c.a$c:
    void select() -> a
androidx.appcompat.app.ActionBarDrawerToggle$Delegate -> a.b.c.b:
androidx.appcompat.app.AlertController -> androidx.appcompat.app.AlertController:
    android.content.Context mContext -> a
    int mListItemLayout -> O
    int mViewSpacingRight -> l
    android.widget.Button mButtonNeutral -> w
    int mMultiChoiceItemLayout -> M
    boolean mShowTitle -> P
    int mViewSpacingLeft -> j
    int mButtonPanelSideLayout -> K
    int mCheckedItem -> I
    int mButtonIconDimen -> d
    java.lang.CharSequence mMessage -> f
    android.widget.Button mButtonPositive -> o
    android.widget.ImageView mIconView -> D
    android.widget.ListAdapter mAdapter -> H
    android.widget.Button mButtonNegative -> s
    android.graphics.drawable.Drawable mButtonNegativeIcon -> v
    android.widget.TextView mTitleView -> E
    android.graphics.drawable.Drawable mButtonNeutralIcon -> z
    android.graphics.drawable.Drawable mButtonPositiveIcon -> r
    android.graphics.drawable.Drawable mIcon -> C
    int mSingleChoiceItemLayout -> N
    boolean mViewSpacingSpecified -> n
    int mListLayout -> L
    int mViewSpacingBottom -> m
    android.os.Message mButtonPositiveMessage -> q
    androidx.core.widget.NestedScrollView mScrollView -> A
    int mAlertDialogLayout -> J
    int mViewSpacingTop -> k
    android.os.Handler mHandler -> Q
    int mViewLayoutResId -> i
    java.lang.CharSequence mTitle -> e
    android.os.Message mButtonNeutralMessage -> y
    int mIconId -> B
    android.os.Message mButtonNegativeMessage -> u
    android.view.Window mWindow -> c
    android.view.View mView -> h
    android.widget.ListView mListView -> g
    java.lang.CharSequence mButtonPositiveText -> p
    java.lang.CharSequence mButtonNegativeText -> t
    android.view.View$OnClickListener mButtonHandler -> R
    androidx.appcompat.app.AppCompatDialog mDialog -> b
    android.widget.TextView mMessageView -> F
    java.lang.CharSequence mButtonNeutralText -> x
    android.view.View mCustomTitleView -> G
    1:1:boolean androidx.appcompat.app.AppCompatDialog.supportRequestWindowFeature(int):0:0 -> <init>
    1:1:void <init>(android.content.Context,androidx.appcompat.app.AppCompatDialog,android.view.Window):0 -> <init>
    boolean canTextInput(android.view.View) -> a
    void centerButton(android.widget.Button) -> b
    void manageScrollIndicators(android.view.View,android.view.View,android.view.View) -> c
    android.view.ViewGroup resolvePanel(android.view.View,android.view.View) -> d
    void setButton(int,java.lang.CharSequence,android.content.DialogInterface$OnClickListener,android.os.Message,android.graphics.drawable.Drawable) -> e
androidx.appcompat.app.AlertController$1 -> androidx.appcompat.app.AlertController$a:
    androidx.appcompat.app.AlertController this$0 -> a
androidx.appcompat.app.AlertController$2 -> a.b.c.c:
    android.view.View val$top -> a
    android.view.View val$bottom -> b
androidx.appcompat.app.AlertController$AlertParams -> androidx.appcompat.app.AlertController$b:
    android.content.Context mContext -> a
    android.graphics.drawable.Drawable mIcon -> c
    android.view.LayoutInflater mInflater -> b
    java.lang.CharSequence mTitle -> d
    android.content.DialogInterface$OnKeyListener mOnKeyListener -> k
    java.lang.CharSequence mMessage -> f
    android.widget.ListAdapter mAdapter -> m
    java.lang.CharSequence mPositiveButtonText -> g
    boolean[] mCheckedItems -> p
    boolean mIsMultiChoice -> q
    java.lang.CharSequence mNegativeButtonText -> i
    boolean mIsSingleChoice -> r
    java.lang.CharSequence[] mItems -> l
    android.view.View mView -> o
    android.content.DialogInterface$OnClickListener mPositiveButtonListener -> h
    android.content.DialogInterface$OnClickListener mNegativeButtonListener -> j
    android.view.View mCustomTitleView -> e
    int mCheckedItem -> s
    android.content.DialogInterface$OnMultiChoiceClickListener mOnCheckboxClickListener -> t
    android.content.DialogInterface$OnClickListener mOnClickListener -> n
androidx.appcompat.app.AlertController$AlertParams$1 -> a.b.c.d:
    androidx.appcompat.app.AlertController$AlertParams this$0 -> b
    androidx.appcompat.app.AlertController$RecycleListView val$listView -> a
androidx.appcompat.app.AlertController$AlertParams$3 -> a.b.c.e:
    androidx.appcompat.app.AlertController val$dialog -> a
    androidx.appcompat.app.AlertController$AlertParams this$0 -> b
androidx.appcompat.app.AlertController$AlertParams$4 -> a.b.c.f:
    androidx.appcompat.app.AlertController val$dialog -> b
    androidx.appcompat.app.AlertController$AlertParams this$0 -> c
    androidx.appcompat.app.AlertController$RecycleListView val$listView -> a
androidx.appcompat.app.AlertController$ButtonHandler -> androidx.appcompat.app.AlertController$c:
    java.lang.ref.WeakReference mDialog -> a
androidx.appcompat.app.AlertController$CheckedItemAdapter -> androidx.appcompat.app.AlertController$d:
androidx.appcompat.app.AlertController$RecycleListView -> androidx.appcompat.app.AlertController$RecycleListView:
    int mPaddingBottomNoButtons -> b
    int mPaddingTopNoTitle -> a
androidx.appcompat.app.AlertDialog -> a.b.c.g:
    androidx.appcompat.app.AlertController mAlert -> c
    int resolveDialogTheme(android.content.Context,int) -> c
    1:1:int androidx.appcompat.app.AlertController.selectContentView():0:0 -> onCreate
    1:1:void androidx.appcompat.app.AlertController.installContent():0 -> onCreate
    1:1:void onCreate(android.os.Bundle):0 -> onCreate
    2:2:void androidx.appcompat.app.AlertController.installContent():0:0 -> onCreate
    2:2:void onCreate(android.os.Bundle):0 -> onCreate
    3:3:void androidx.appcompat.app.AlertController.setupView():0:0 -> onCreate
    3:3:void androidx.appcompat.app.AlertController.installContent():0 -> onCreate
    3:3:void onCreate(android.os.Bundle):0 -> onCreate
    4:4:void androidx.appcompat.app.AlertController.setupCustomContent(android.view.ViewGroup):0:0 -> onCreate
    4:4:void androidx.appcompat.app.AlertController.setupView():0 -> onCreate
    4:4:void androidx.appcompat.app.AlertController.installContent():0 -> onCreate
    4:4:void onCreate(android.os.Bundle):0 -> onCreate
    5:5:void androidx.appcompat.app.AlertController.setupView():0:0 -> onCreate
    5:5:void androidx.appcompat.app.AlertController.installContent():0 -> onCreate
    5:5:void onCreate(android.os.Bundle):0 -> onCreate
    6:6:void androidx.appcompat.app.AlertController.setupContent(android.view.ViewGroup):0:0 -> onCreate
    6:6:void androidx.appcompat.app.AlertController.setupView():0 -> onCreate
    6:6:void androidx.appcompat.app.AlertController.installContent():0 -> onCreate
    6:6:void onCreate(android.os.Bundle):0 -> onCreate
    7:7:void androidx.appcompat.app.AlertController.setupButtons(android.view.ViewGroup):0:0 -> onCreate
    7:7:void androidx.appcompat.app.AlertController.setupView():0 -> onCreate
    7:7:void androidx.appcompat.app.AlertController.installContent():0 -> onCreate
    7:7:void onCreate(android.os.Bundle):0 -> onCreate
    8:8:boolean androidx.appcompat.app.AlertController.shouldCenterSingleButton(android.content.Context):0:0 -> onCreate
    8:8:void androidx.appcompat.app.AlertController.setupButtons(android.view.ViewGroup):0 -> onCreate
    8:8:void androidx.appcompat.app.AlertController.setupView():0 -> onCreate
    8:8:void androidx.appcompat.app.AlertController.installContent():0 -> onCreate
    8:8:void onCreate(android.os.Bundle):0 -> onCreate
    9:9:void androidx.appcompat.app.AlertController.setupButtons(android.view.ViewGroup):0:0 -> onCreate
    9:9:void androidx.appcompat.app.AlertController.setupView():0 -> onCreate
    9:9:void androidx.appcompat.app.AlertController.installContent():0 -> onCreate
    9:9:void onCreate(android.os.Bundle):0 -> onCreate
    10:10:void androidx.appcompat.app.AlertController.setupTitle(android.view.ViewGroup):0:0 -> onCreate
    10:10:void androidx.appcompat.app.AlertController.setupView():0 -> onCreate
    10:10:void androidx.appcompat.app.AlertController.installContent():0 -> onCreate
    10:10:void onCreate(android.os.Bundle):0 -> onCreate
    11:11:void androidx.appcompat.app.AlertController.setupView():0:0 -> onCreate
    11:11:void androidx.appcompat.app.AlertController.installContent():0 -> onCreate
    11:11:void onCreate(android.os.Bundle):0 -> onCreate
    12:12:void androidx.appcompat.app.AlertController$RecycleListView.setHasDecor(boolean,boolean):0:0 -> onCreate
    12:12:void androidx.appcompat.app.AlertController.setupView():0 -> onCreate
    12:12:void androidx.appcompat.app.AlertController.installContent():0 -> onCreate
    12:12:void onCreate(android.os.Bundle):0 -> onCreate
    13:13:void androidx.appcompat.app.AlertController.setupView():0:0 -> onCreate
    13:13:void androidx.appcompat.app.AlertController.installContent():0 -> onCreate
    13:13:void onCreate(android.os.Bundle):0 -> onCreate
    14:14:void androidx.appcompat.app.AlertController.setScrollIndicators(android.view.ViewGroup,android.view.View,int,int):0:0 -> onCreate
    14:14:void androidx.appcompat.app.AlertController.setupView():0 -> onCreate
    14:14:void androidx.appcompat.app.AlertController.installContent():0 -> onCreate
    14:14:void onCreate(android.os.Bundle):0 -> onCreate
    15:15:void androidx.core.view.ViewCompat.setScrollIndicators(android.view.View,int,int):0:0 -> onCreate
    15:15:void androidx.appcompat.app.AlertController.setScrollIndicators(android.view.ViewGroup,android.view.View,int,int):0 -> onCreate
    15:15:void androidx.appcompat.app.AlertController.setupView():0 -> onCreate
    15:15:void androidx.appcompat.app.AlertController.installContent():0 -> onCreate
    15:15:void onCreate(android.os.Bundle):0 -> onCreate
    16:16:void androidx.appcompat.app.AlertController.setScrollIndicators(android.view.ViewGroup,android.view.View,int,int):0:0 -> onCreate
    16:16:void androidx.appcompat.app.AlertController.setupView():0 -> onCreate
    16:16:void androidx.appcompat.app.AlertController.installContent():0 -> onCreate
    16:16:void onCreate(android.os.Bundle):0 -> onCreate
    17:17:void androidx.appcompat.app.AlertController.setupView():0:0 -> onCreate
    17:17:void androidx.appcompat.app.AlertController.installContent():0 -> onCreate
    17:17:void onCreate(android.os.Bundle):0 -> onCreate
    1:1:boolean androidx.appcompat.app.AlertController.onKeyDown(int,android.view.KeyEvent):0:0 -> onKeyDown
    1:1:boolean onKeyDown(int,android.view.KeyEvent):0 -> onKeyDown
    2:2:boolean onKeyDown(int,android.view.KeyEvent):0:0 -> onKeyDown
    1:1:boolean androidx.appcompat.app.AlertController.onKeyUp(int,android.view.KeyEvent):0:0 -> onKeyUp
    1:1:boolean onKeyUp(int,android.view.KeyEvent):0 -> onKeyUp
    2:2:boolean onKeyUp(int,android.view.KeyEvent):0:0 -> onKeyUp
    1:1:void androidx.appcompat.app.AlertController.setTitle(java.lang.CharSequence):0:0 -> setTitle
    1:1:void setTitle(java.lang.CharSequence):0 -> setTitle
androidx.appcompat.app.AlertDialog$Builder -> a.b.c.g$a:
    androidx.appcompat.app.AlertController$AlertParams P -> a
    int mTheme -> b
    1:1:void <init>(android.content.Context,int):0:0 -> <init>
    1:1:void <init>(android.content.Context):0 -> <init>
    1:1:void androidx.appcompat.app.AlertController$AlertParams.apply(androidx.appcompat.app.AlertController):0:0 -> a
    1:1:androidx.appcompat.app.AlertDialog create():0 -> a
    2:2:void androidx.appcompat.app.AlertController.setCustomTitle(android.view.View):0:0 -> a
    2:2:void androidx.appcompat.app.AlertController$AlertParams.apply(androidx.appcompat.app.AlertController):0 -> a
    2:2:androidx.appcompat.app.AlertDialog create():0 -> a
    3:3:void androidx.appcompat.app.AlertController$AlertParams.apply(androidx.appcompat.app.AlertController):0:0 -> a
    3:3:androidx.appcompat.app.AlertDialog create():0 -> a
    4:4:void androidx.appcompat.app.AlertController.setTitle(java.lang.CharSequence):0:0 -> a
    4:4:void androidx.appcompat.app.AlertController$AlertParams.apply(androidx.appcompat.app.AlertController):0 -> a
    4:4:androidx.appcompat.app.AlertDialog create():0 -> a
    5:5:void androidx.appcompat.app.AlertController$AlertParams.apply(androidx.appcompat.app.AlertController):0:0 -> a
    5:5:androidx.appcompat.app.AlertDialog create():0 -> a
    6:6:void androidx.appcompat.app.AlertController.setIcon(android.graphics.drawable.Drawable):0:0 -> a
    6:6:void androidx.appcompat.app.AlertController$AlertParams.apply(androidx.appcompat.app.AlertController):0 -> a
    6:6:androidx.appcompat.app.AlertDialog create():0 -> a
    7:7:void androidx.appcompat.app.AlertController$AlertParams.apply(androidx.appcompat.app.AlertController):0:0 -> a
    7:7:androidx.appcompat.app.AlertDialog create():0 -> a
    8:8:void androidx.appcompat.app.AlertController.setMessage(java.lang.CharSequence):0:0 -> a
    8:8:void androidx.appcompat.app.AlertController$AlertParams.apply(androidx.appcompat.app.AlertController):0 -> a
    8:8:androidx.appcompat.app.AlertDialog create():0 -> a
    9:9:void androidx.appcompat.app.AlertController$AlertParams.apply(androidx.appcompat.app.AlertController):0:0 -> a
    9:9:androidx.appcompat.app.AlertDialog create():0 -> a
    10:10:void androidx.appcompat.app.AlertController$AlertParams.createListView(androidx.appcompat.app.AlertController):0:0 -> a
    10:10:void androidx.appcompat.app.AlertController$AlertParams.apply(androidx.appcompat.app.AlertController):0 -> a
    10:10:androidx.appcompat.app.AlertDialog create():0 -> a
    11:11:void androidx.appcompat.app.AlertController$AlertParams.apply(androidx.appcompat.app.AlertController):0:0 -> a
    11:11:androidx.appcompat.app.AlertDialog create():0 -> a
    12:12:void androidx.appcompat.app.AlertController.setView(android.view.View):0:0 -> a
    12:12:void androidx.appcompat.app.AlertController$AlertParams.apply(androidx.appcompat.app.AlertController):0 -> a
    12:12:androidx.appcompat.app.AlertDialog create():0 -> a
    13:13:androidx.appcompat.app.AlertDialog create():0:0 -> a
androidx.appcompat.app.AppCompatActivity -> a.b.c.h:
    1:1:androidx.appcompat.app.AppCompatDelegate androidx.appcompat.app.AppCompatDelegate.create(android.app.Activity,androidx.appcompat.app.AppCompatCallback):0:0 -> getDelegate
    1:1:androidx.appcompat.app.AppCompatDelegate getDelegate():0 -> getDelegate
    2:2:void androidx.appcompat.app.AppCompatDelegateImpl.<init>(android.app.Activity,androidx.appcompat.app.AppCompatCallback):0:0 -> getDelegate
    2:2:androidx.appcompat.app.AppCompatDelegate androidx.appcompat.app.AppCompatDelegate.create(android.app.Activity,androidx.appcompat.app.AppCompatCallback):0 -> getDelegate
    2:2:androidx.appcompat.app.AppCompatDelegate getDelegate():0 -> getDelegate
    3:3:androidx.appcompat.app.AppCompatDelegate getDelegate():0:0 -> getDelegate
    1:1:void androidx.lifecycle.ViewTreeLifecycleOwner.set(android.view.View,androidx.lifecycle.LifecycleOwner):0:0 -> initViewTreeOwners
    1:1:void initViewTreeOwners():0 -> initViewTreeOwners
    2:2:void initViewTreeOwners():0:0 -> initViewTreeOwners
    3:3:void androidx.lifecycle.ViewTreeViewModelStoreOwner.set(android.view.View,androidx.lifecycle.ViewModelStoreOwner):0:0 -> initViewTreeOwners
    3:3:void initViewTreeOwners():0 -> initViewTreeOwners
    4:4:void initViewTreeOwners():0:0 -> initViewTreeOwners
    5:5:void androidx.savedstate.ViewTreeSavedStateRegistryOwner.set(android.view.View,androidx.savedstate.SavedStateRegistryOwner):0:0 -> initViewTreeOwners
    5:5:void initViewTreeOwners():0 -> initViewTreeOwners
    1:1:androidx.core.app.TaskStackBuilder androidx.core.app.TaskStackBuilder.addParentStack(android.app.Activity):0:0 -> onCreateSupportNavigateUpTaskStack
    1:1:void onCreateSupportNavigateUpTaskStack(androidx.core.app.TaskStackBuilder):0 -> onCreateSupportNavigateUpTaskStack
    2:2:androidx.core.app.TaskStackBuilder androidx.core.app.TaskStackBuilder.addParentStack(android.content.ComponentName):0:0 -> onCreateSupportNavigateUpTaskStack
    2:2:androidx.core.app.TaskStackBuilder androidx.core.app.TaskStackBuilder.addParentStack(android.app.Activity):0 -> onCreateSupportNavigateUpTaskStack
    2:2:void onCreateSupportNavigateUpTaskStack(androidx.core.app.TaskStackBuilder):0 -> onCreateSupportNavigateUpTaskStack
    3:3:androidx.core.app.TaskStackBuilder androidx.core.app.TaskStackBuilder.addNextIntent(android.content.Intent):0:0 -> onCreateSupportNavigateUpTaskStack
    3:3:androidx.core.app.TaskStackBuilder androidx.core.app.TaskStackBuilder.addParentStack(android.app.Activity):0 -> onCreateSupportNavigateUpTaskStack
    3:3:void onCreateSupportNavigateUpTaskStack(androidx.core.app.TaskStackBuilder):0 -> onCreateSupportNavigateUpTaskStack
    4:4:androidx.core.app.TaskStackBuilder androidx.core.app.TaskStackBuilder.addParentStack(android.content.ComponentName):0:0 -> onCreateSupportNavigateUpTaskStack
    4:4:androidx.core.app.TaskStackBuilder androidx.core.app.TaskStackBuilder.addParentStack(android.app.Activity):0 -> onCreateSupportNavigateUpTaskStack
    4:4:void onCreateSupportNavigateUpTaskStack(androidx.core.app.TaskStackBuilder):0 -> onCreateSupportNavigateUpTaskStack
    1:1:androidx.core.app.TaskStackBuilder androidx.core.app.TaskStackBuilder.create(android.content.Context):0:0 -> onSupportNavigateUp
    1:1:boolean onSupportNavigateUp():0 -> onSupportNavigateUp
    2:2:boolean onSupportNavigateUp():0:0 -> onSupportNavigateUp
    3:3:void androidx.core.app.TaskStackBuilder.startActivities(android.os.Bundle):0:0 -> onSupportNavigateUp
    3:3:void androidx.core.app.TaskStackBuilder.startActivities():0 -> onSupportNavigateUp
    3:3:boolean onSupportNavigateUp():0 -> onSupportNavigateUp
    4:4:boolean androidx.core.content.ContextCompat.startActivities(android.content.Context,android.content.Intent[],android.os.Bundle):0:0 -> onSupportNavigateUp
    4:4:void androidx.core.app.TaskStackBuilder.startActivities(android.os.Bundle):0 -> onSupportNavigateUp
    4:4:void androidx.core.app.TaskStackBuilder.startActivities():0 -> onSupportNavigateUp
    4:4:boolean onSupportNavigateUp():0 -> onSupportNavigateUp
    5:5:void androidx.core.app.ActivityCompat.finishAffinity(android.app.Activity):0:0 -> onSupportNavigateUp
    5:5:boolean onSupportNavigateUp():0 -> onSupportNavigateUp
    6:6:boolean onSupportNavigateUp():0:0 -> onSupportNavigateUp
    7:7:void androidx.core.app.TaskStackBuilder.startActivities(android.os.Bundle):0:0 -> onSupportNavigateUp
    7:7:void androidx.core.app.TaskStackBuilder.startActivities():0 -> onSupportNavigateUp
    7:7:boolean onSupportNavigateUp():0 -> onSupportNavigateUp
    8:8:boolean onSupportNavigateUp():0:0 -> onSupportNavigateUp
    1:1:void androidx.core.app.NavUtils.navigateUpTo(android.app.Activity,android.content.Intent):0:0 -> supportNavigateUpTo
    1:1:void supportNavigateUpTo(android.content.Intent):0 -> supportNavigateUpTo
    1:1:boolean androidx.core.app.NavUtils.shouldUpRecreateTask(android.app.Activity,android.content.Intent):0:0 -> supportShouldUpRecreateTask
    1:1:boolean supportShouldUpRecreateTask(android.content.Intent):0 -> supportShouldUpRecreateTask
androidx.appcompat.app.AppCompatActivity$1 -> a.b.c.h$a:
    androidx.appcompat.app.AppCompatActivity this$0 -> a
    android.os.Bundle saveState() -> a
androidx.appcompat.app.AppCompatActivity$2 -> a.b.c.h$b:
    androidx.appcompat.app.AppCompatActivity this$0 -> a
    void onContextAvailable(android.content.Context) -> a
androidx.appcompat.app.AppCompatCallback -> a.b.c.i:
androidx.appcompat.app.AppCompatDelegate -> a.b.c.j:
    androidx.collection.ArraySet sActivityDelegates -> a
    java.lang.Object sActivityDelegatesLock -> b
    void setTitle(java.lang.CharSequence) -> A
    androidx.appcompat.view.ActionMode startSupportActionMode(androidx.appcompat.view.ActionMode$Callback) -> B
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> c
    android.content.Context attachBaseContext2(android.content.Context) -> d
    android.view.View findViewById(int) -> e
    androidx.appcompat.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate() -> f
    int getLocalNightMode() -> g
    android.view.MenuInflater getMenuInflater() -> h
    androidx.appcompat.app.ActionBar getSupportActionBar() -> i
    void installViewFactory() -> j
    void invalidateOptionsMenu() -> k
    void onConfigurationChanged(android.content.res.Configuration) -> l
    void onCreate(android.os.Bundle) -> m
    void onDestroy() -> n
    void onPostCreate(android.os.Bundle) -> o
    void onPostResume() -> p
    void onSaveInstanceState(android.os.Bundle) -> q
    void onStart() -> r
    void onStop() -> s
    void removeDelegateFromActives(androidx.appcompat.app.AppCompatDelegate) -> t
    boolean requestWindowFeature(int) -> u
    void setContentView(int) -> v
    void setContentView(android.view.View) -> w
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> x
    void setSupportActionBar(androidx.appcompat.widget.Toolbar) -> y
    void setTheme(int) -> z
androidx.appcompat.app.AppCompatDelegateImpl -> a.b.c.k:
    androidx.core.view.ViewPropertyAnimatorCompat mFadeAnim -> r
    androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager mAutoBatteryNightModeManager -> Q
    boolean sCanApplyOverrideConfiguration -> b0
    androidx.appcompat.app.ActionBar mActionBar -> h
    android.view.MenuInflater mMenuInflater -> i
    int[] sWindowBackgroundStyleable -> Z
    androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback mActionMenuPresenterCallback -> l
    boolean mHasActionBar -> y
    androidx.collection.SimpleArrayMap sLocalNightModes -> Y
    android.graphics.Rect mTempRect2 -> W
    boolean mLongPressBackDown -> G
    androidx.appcompat.widget.DecorContentParent mDecorContentParent -> k
    boolean mWindowNoTitle -> C
    androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback mAppCompatWindowCallback -> f
    androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager mAutoTimeNightModeManager -> P
    android.view.ViewGroup mSubDecor -> t
    int mLocalNightMode -> L
    boolean mCreated -> I
    boolean mEnableDefaultActionBarUp -> U
    boolean mOverlayActionBar -> z
    boolean mBaseContextAttached -> H
    androidx.appcompat.widget.ActionBarContextView mActionModeView -> o
    boolean mClosingActionMenu -> D
    boolean mActivityHandlesUiMode -> N
    androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState mPreparedPanel -> F
    int mThemeResId -> M
    boolean sCanReturnDifferentContext -> a0
    boolean mStarted -> J
    boolean mFeatureProgress -> w
    androidx.appcompat.app.AppCompatCallback mAppCompatCallback -> g
    boolean mInvalidatePanelMenuPosted -> R
    java.lang.CharSequence mTitle -> j
    boolean mSubDecorInstalled -> s
    android.view.View mStatusGuard -> v
    androidx.appcompat.view.ActionMode mActionMode -> n
    android.widget.PopupWindow mActionModePopup -> p
    java.lang.Runnable mShowActionModePopup -> q
    boolean mOverlayActionMode -> A
    androidx.appcompat.app.AppCompatViewInflater mAppCompatViewInflater -> X
    androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState[] mPanels -> E
    java.lang.Runnable mInvalidatePanelMenuRunnable -> T
    boolean mActivityHandlesUiModeChecked -> O
    android.widget.TextView mTitleView -> u
    boolean mIsDestroyed -> K
    boolean mFeatureIndeterminateProgress -> x
    android.content.Context mContext -> d
    android.view.Window mWindow -> e
    java.lang.Object mHost -> c
    androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback mPanelMenuPresenterCallback -> m
    android.graphics.Rect mTempRect1 -> V
    boolean mIsFloating -> B
    int mInvalidatePanelMenuFeatures -> S
    1:1:androidx.appcompat.app.AppCompatActivity tryUnwrapContext():0:0 -> <init>
    1:1:void <init>(android.content.Context,android.view.Window,androidx.appcompat.app.AppCompatCallback,java.lang.Object):0 -> <init>
    2:2:void <init>(android.content.Context,android.view.Window,androidx.appcompat.app.AppCompatCallback,java.lang.Object):0:0 -> <init>
    3:3:java.lang.Object androidx.collection.SimpleArrayMap.get(java.lang.Object):0:0 -> <init>
    3:3:void <init>(android.content.Context,android.view.Window,androidx.appcompat.app.AppCompatCallback,java.lang.Object):0 -> <init>
    4:4:void <init>(android.content.Context,android.view.Window,androidx.appcompat.app.AppCompatCallback,java.lang.Object):0:0 -> <init>
    1:1:androidx.appcompat.app.ActionBar peekSupportActionBar():0:0 -> A
    1:1:void setTitle(java.lang.CharSequence):0 -> A
    2:2:void setTitle(java.lang.CharSequence):0:0 -> A
    1:1:androidx.appcompat.app.ActionBar getSupportActionBar():0:0 -> B
    1:1:androidx.appcompat.view.ActionMode startSupportActionMode(androidx.appcompat.view.ActionMode$Callback):0 -> B
    2:2:androidx.appcompat.view.ActionMode startSupportActionMode(androidx.appcompat.view.ActionMode$Callback):0:0 -> B
    3:3:androidx.appcompat.view.ActionMode startSupportActionModeFromWindow(androidx.appcompat.view.ActionMode$Callback):0:0 -> B
    3:3:androidx.appcompat.view.ActionMode startSupportActionMode(androidx.appcompat.view.ActionMode$Callback):0 -> B
    4:4:void androidx.appcompat.widget.ActionBarContextView.<init>(android.content.Context):0:0 -> B
    4:4:androidx.appcompat.view.ActionMode startSupportActionModeFromWindow(androidx.appcompat.view.ActionMode$Callback):0 -> B
    4:4:androidx.appcompat.view.ActionMode startSupportActionMode(androidx.appcompat.view.ActionMode$Callback):0 -> B
    5:5:androidx.appcompat.view.ActionMode startSupportActionModeFromWindow(androidx.appcompat.view.ActionMode$Callback):0:0 -> B
    5:5:androidx.appcompat.view.ActionMode startSupportActionMode(androidx.appcompat.view.ActionMode$Callback):0 -> B
    6:6:void androidx.core.widget.PopupWindowCompat.setWindowLayoutType(android.widget.PopupWindow,int):0:0 -> B
    6:6:androidx.appcompat.view.ActionMode startSupportActionModeFromWindow(androidx.appcompat.view.ActionMode$Callback):0 -> B
    6:6:androidx.appcompat.view.ActionMode startSupportActionMode(androidx.appcompat.view.ActionMode$Callback):0 -> B
    7:7:androidx.appcompat.view.ActionMode startSupportActionModeFromWindow(androidx.appcompat.view.ActionMode$Callback):0:0 -> B
    7:7:androidx.appcompat.view.ActionMode startSupportActionMode(androidx.appcompat.view.ActionMode$Callback):0 -> B
    8:8:androidx.appcompat.app.ActionBar getSupportActionBar():0:0 -> B
    8:8:android.content.Context getActionBarThemedContext():0 -> B
    8:8:androidx.appcompat.view.ActionMode startSupportActionModeFromWindow(androidx.appcompat.view.ActionMode$Callback):0 -> B
    8:8:androidx.appcompat.view.ActionMode startSupportActionMode(androidx.appcompat.view.ActionMode$Callback):0 -> B
    9:9:android.content.Context getActionBarThemedContext():0:0 -> B
    9:9:androidx.appcompat.view.ActionMode startSupportActionModeFromWindow(androidx.appcompat.view.ActionMode$Callback):0 -> B
    9:9:androidx.appcompat.view.ActionMode startSupportActionMode(androidx.appcompat.view.ActionMode$Callback):0 -> B
    10:10:androidx.appcompat.view.ActionMode startSupportActionModeFromWindow(androidx.appcompat.view.ActionMode$Callback):0:0 -> B
    10:10:androidx.appcompat.view.ActionMode startSupportActionMode(androidx.appcompat.view.ActionMode$Callback):0 -> B
    11:11:android.view.Menu androidx.appcompat.view.StandaloneActionMode.getMenu():0:0 -> B
    11:11:androidx.appcompat.view.ActionMode startSupportActionModeFromWindow(androidx.appcompat.view.ActionMode$Callback):0 -> B
    11:11:androidx.appcompat.view.ActionMode startSupportActionMode(androidx.appcompat.view.ActionMode$Callback):0 -> B
    12:12:boolean androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9.onCreateActionMode(androidx.appcompat.view.ActionMode,android.view.Menu):0:0 -> B
    12:12:androidx.appcompat.view.ActionMode startSupportActionModeFromWindow(androidx.appcompat.view.ActionMode$Callback):0 -> B
    12:12:androidx.appcompat.view.ActionMode startSupportActionMode(androidx.appcompat.view.ActionMode$Callback):0 -> B
    13:13:androidx.appcompat.view.ActionMode startSupportActionModeFromWindow(androidx.appcompat.view.ActionMode$Callback):0:0 -> B
    13:13:androidx.appcompat.view.ActionMode startSupportActionMode(androidx.appcompat.view.ActionMode$Callback):0 -> B
    14:14:androidx.core.view.ViewPropertyAnimatorCompat androidx.core.view.ViewPropertyAnimatorCompat.setListener(androidx.core.view.ViewPropertyAnimatorListener):0:0 -> B
    14:14:androidx.appcompat.view.ActionMode startSupportActionModeFromWindow(androidx.appcompat.view.ActionMode$Callback):0 -> B
    14:14:androidx.appcompat.view.ActionMode startSupportActionMode(androidx.appcompat.view.ActionMode$Callback):0 -> B
    15:15:androidx.appcompat.view.ActionMode startSupportActionModeFromWindow(androidx.appcompat.view.ActionMode$Callback):0:0 -> B
    15:15:androidx.appcompat.view.ActionMode startSupportActionMode(androidx.appcompat.view.ActionMode$Callback):0 -> B
    16:16:void androidx.core.view.ViewCompat.requestApplyInsets(android.view.View):0:0 -> B
    16:16:androidx.appcompat.view.ActionMode startSupportActionModeFromWindow(androidx.appcompat.view.ActionMode$Callback):0 -> B
    16:16:androidx.appcompat.view.ActionMode startSupportActionMode(androidx.appcompat.view.ActionMode$Callback):0 -> B
    17:17:androidx.appcompat.view.ActionMode startSupportActionModeFromWindow(androidx.appcompat.view.ActionMode$Callback):0:0 -> B
    17:17:androidx.appcompat.view.ActionMode startSupportActionMode(androidx.appcompat.view.ActionMode$Callback):0 -> B
    18:18:androidx.appcompat.view.ActionMode startSupportActionMode(androidx.appcompat.view.ActionMode$Callback):0:0 -> B
    boolean applyDayNight() -> C
    1:1:int calculateNightMode():0:0 -> D
    1:1:boolean applyDayNight(boolean):0 -> D
    2:2:boolean applyDayNight(boolean):0:0 -> D
    3:3:boolean updateForNightMode(int,boolean):0:0 -> D
    3:3:boolean applyDayNight(boolean):0 -> D
    4:4:boolean isActivityManifestHandlingUiMode():0:0 -> D
    4:4:boolean updateForNightMode(int,boolean):0 -> D
    4:4:boolean applyDayNight(boolean):0 -> D
    5:5:boolean updateForNightMode(int,boolean):0:0 -> D
    5:5:boolean applyDayNight(boolean):0 -> D
    6:6:void androidx.core.app.ActivityCompat.recreate(android.app.Activity):0:0 -> D
    6:6:boolean updateForNightMode(int,boolean):0 -> D
    6:6:boolean applyDayNight(boolean):0 -> D
    7:7:void updateResourcesConfigurationForNightMode(int,boolean,android.content.res.Configuration):0:0 -> D
    7:7:boolean updateForNightMode(int,boolean):0 -> D
    7:7:boolean applyDayNight(boolean):0 -> D
    8:8:androidx.lifecycle.Lifecycle$State androidx.lifecycle.LifecycleRegistry.getCurrentState():0:0 -> D
    8:8:void updateResourcesConfigurationForNightMode(int,boolean,android.content.res.Configuration):0 -> D
    8:8:boolean updateForNightMode(int,boolean):0 -> D
    8:8:boolean applyDayNight(boolean):0 -> D
    9:9:void updateResourcesConfigurationForNightMode(int,boolean,android.content.res.Configuration):0:0 -> D
    9:9:boolean updateForNightMode(int,boolean):0 -> D
    9:9:boolean applyDayNight(boolean):0 -> D
    10:10:boolean androidx.lifecycle.Lifecycle$State.isAtLeast(androidx.lifecycle.Lifecycle$State):0:0 -> D
    10:10:void updateResourcesConfigurationForNightMode(int,boolean,android.content.res.Configuration):0 -> D
    10:10:boolean updateForNightMode(int,boolean):0 -> D
    10:10:boolean applyDayNight(boolean):0 -> D
    11:11:void updateResourcesConfigurationForNightMode(int,boolean,android.content.res.Configuration):0:0 -> D
    11:11:boolean updateForNightMode(int,boolean):0 -> D
    11:11:boolean applyDayNight(boolean):0 -> D
    12:12:boolean updateForNightMode(int,boolean):0:0 -> D
    12:12:boolean applyDayNight(boolean):0 -> D
    13:13:boolean applyDayNight(boolean):0:0 -> D
    14:14:androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager getAutoBatteryNightModeManager(android.content.Context):0:0 -> D
    14:14:boolean applyDayNight(boolean):0 -> D
    15:15:boolean applyDayNight(boolean):0:0 -> D
    1:1:void androidx.appcompat.widget.TintTypedArray.recycle():0:0 -> E
    1:1:void attachToWindow(android.view.Window):0 -> E
    2:2:void attachToWindow(android.view.Window):0:0 -> E
    1:1:android.view.Window$Callback androidx.appcompat.view.WindowCallbackWrapper.getWrapped():0:0 -> F
    1:1:void callOnPanelClosed(int,androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.Menu):0 -> F
    2:2:void callOnPanelClosed(int,androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.Menu):0:0 -> F
    void checkCloseActionMenu(androidx.appcompat.view.menu.MenuBuilder) -> G
    void closePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,boolean) -> H
    android.content.res.Configuration createOverrideConfigurationForDayNight(android.content.Context,int,android.content.res.Configuration) -> I
    1:1:boolean androidx.core.view.KeyEventDispatcher.dispatchBeforeHierarchy(android.view.View,android.view.KeyEvent):0:0 -> J
    1:1:boolean dispatchKeyEvent(android.view.KeyEvent):0 -> J
    2:2:boolean dispatchKeyEvent(android.view.KeyEvent):0:0 -> J
    3:3:android.view.Window$Callback androidx.appcompat.view.WindowCallbackWrapper.getWrapped():0:0 -> J
    3:3:boolean dispatchKeyEvent(android.view.KeyEvent):0 -> J
    4:4:boolean dispatchKeyEvent(android.view.KeyEvent):0:0 -> J
    5:5:boolean onKeyDownPanel(int,android.view.KeyEvent):0:0 -> J
    5:5:boolean onKeyDown(int,android.view.KeyEvent):0 -> J
    5:5:boolean dispatchKeyEvent(android.view.KeyEvent):0 -> J
    6:6:boolean onKeyDown(int,android.view.KeyEvent):0:0 -> J
    6:6:boolean dispatchKeyEvent(android.view.KeyEvent):0 -> J
    7:7:boolean onKeyUpPanel(int,android.view.KeyEvent):0:0 -> J
    7:7:boolean onKeyUp(int,android.view.KeyEvent):0 -> J
    7:7:boolean dispatchKeyEvent(android.view.KeyEvent):0 -> J
    8:8:boolean onKeyUp(int,android.view.KeyEvent):0:0 -> J
    8:8:boolean dispatchKeyEvent(android.view.KeyEvent):0 -> J
    9:9:boolean onBackPressed():0:0 -> J
    9:9:boolean onKeyUp(int,android.view.KeyEvent):0 -> J
    9:9:boolean dispatchKeyEvent(android.view.KeyEvent):0 -> J
    10:10:androidx.appcompat.app.ActionBar getSupportActionBar():0:0 -> J
    10:10:boolean onBackPressed():0 -> J
    10:10:boolean onKeyUp(int,android.view.KeyEvent):0 -> J
    10:10:boolean dispatchKeyEvent(android.view.KeyEvent):0 -> J
    11:11:boolean onBackPressed():0:0 -> J
    11:11:boolean onKeyUp(int,android.view.KeyEvent):0 -> J
    11:11:boolean dispatchKeyEvent(android.view.KeyEvent):0 -> J
    void doInvalidatePanelMenu(int) -> K
    void endOnGoingFadeAnimation() -> L
    1:1:android.view.ViewGroup createSubDecor():0:0 -> M
    1:1:void ensureSubDecor():0 -> M
    2:2:void androidx.core.view.ViewCompat.setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener):0:0 -> M
    2:2:android.view.ViewGroup createSubDecor():0 -> M
    2:2:void ensureSubDecor():0 -> M
    3:3:void androidx.core.view.ViewCompat$Api21Impl.setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener):0:0 -> M
    3:3:void androidx.core.view.ViewCompat.setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener):0 -> M
    3:3:android.view.ViewGroup createSubDecor():0 -> M
    3:3:void ensureSubDecor():0 -> M
    4:4:android.view.ViewGroup createSubDecor():0:0 -> M
    4:4:void ensureSubDecor():0 -> M
    5:5:void androidx.appcompat.widget.ViewUtils.makeOptionalFitsSystemWindows(android.view.View):0:0 -> M
    5:5:android.view.ViewGroup createSubDecor():0 -> M
    5:5:void ensureSubDecor():0 -> M
    6:6:android.view.ViewGroup createSubDecor():0:0 -> M
    6:6:void ensureSubDecor():0 -> M
    7:7:void ensureSubDecor():0:0 -> M
    8:8:java.lang.CharSequence getTitle():0:0 -> M
    8:8:void ensureSubDecor():0 -> M
    9:9:void ensureSubDecor():0:0 -> M
    10:10:androidx.appcompat.app.ActionBar peekSupportActionBar():0:0 -> M
    10:10:void ensureSubDecor():0 -> M
    11:11:void ensureSubDecor():0:0 -> M
    12:12:void applyFixedSizeWindow():0:0 -> M
    12:12:void ensureSubDecor():0 -> M
    13:13:void androidx.appcompat.widget.ContentFrameLayout.setDecorPadding(int,int,int,int):0:0 -> M
    13:13:void applyFixedSizeWindow():0 -> M
    13:13:void ensureSubDecor():0 -> M
    14:14:boolean androidx.core.view.ViewCompat.isLaidOut(android.view.View):0:0 -> M
    14:14:void androidx.appcompat.widget.ContentFrameLayout.setDecorPadding(int,int,int,int):0 -> M
    14:14:void applyFixedSizeWindow():0 -> M
    14:14:void ensureSubDecor():0 -> M
    15:15:void androidx.appcompat.widget.ContentFrameLayout.setDecorPadding(int,int,int,int):0:0 -> M
    15:15:void applyFixedSizeWindow():0 -> M
    15:15:void ensureSubDecor():0 -> M
    16:16:void applyFixedSizeWindow():0:0 -> M
    16:16:void ensureSubDecor():0 -> M
    17:17:void ensureSubDecor():0:0 -> M
    18:18:android.view.ViewGroup createSubDecor():0:0 -> M
    18:18:void ensureSubDecor():0 -> M
    void ensureWindow() -> N
    androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState findMenuPanel(android.view.Menu) -> O
    1:1:androidx.appcompat.app.TwilightManager androidx.appcompat.app.TwilightManager.getInstance(android.content.Context):0:0 -> P
    1:1:androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager getAutoTimeNightModeManager(android.content.Context):0 -> P
    2:2:androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager getAutoTimeNightModeManager(android.content.Context):0:0 -> P
    androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState getPanelState(int,boolean) -> Q
    android.view.Window$Callback getWindowCallback() -> R
    void initWindowDecorActionBar() -> S
    1:1:void androidx.core.view.ViewCompat.postOnAnimation(android.view.View,java.lang.Runnable):0:0 -> T
    1:1:void invalidatePanelMenu(int):0 -> T
    2:2:void invalidatePanelMenu(int):0:0 -> T
    1:1:androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager getAutoBatteryNightModeManager(android.content.Context):0:0 -> U
    1:1:int mapNightMode(android.content.Context,int):0 -> U
    2:2:int mapNightMode(android.content.Context,int):0:0 -> U
    1:1:androidx.appcompat.app.ActionBar getSupportActionBar():0:0 -> V
    1:1:android.content.Context getActionBarThemedContext():0 -> V
    1:1:boolean initializePanelDecor(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState):0 -> V
    1:1:void openPanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent):0 -> V
    2:2:android.content.Context getActionBarThemedContext():0:0 -> V
    2:2:boolean initializePanelDecor(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState):0 -> V
    2:2:void openPanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent):0 -> V
    3:3:void androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState.setStyle(android.content.Context):0:0 -> V
    3:3:boolean initializePanelDecor(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState):0 -> V
    3:3:void openPanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent):0 -> V
    4:4:boolean initializePanelDecor(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState):0:0 -> V
    4:4:void openPanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent):0 -> V
    5:5:void openPanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent):0:0 -> V
    6:6:boolean initializePanelContent(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState):0:0 -> V
    6:6:void openPanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent):0 -> V
    7:7:androidx.appcompat.view.menu.MenuView androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState.getListMenuView(androidx.appcompat.view.menu.MenuPresenter$Callback):0:0 -> V
    7:7:boolean initializePanelContent(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState):0 -> V
    7:7:void openPanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent):0 -> V
    8:8:void androidx.appcompat.view.menu.ListMenuPresenter.setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback):0:0 -> V
    8:8:androidx.appcompat.view.menu.MenuView androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState.getListMenuView(androidx.appcompat.view.menu.MenuPresenter$Callback):0 -> V
    8:8:boolean initializePanelContent(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState):0 -> V
    8:8:void openPanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent):0 -> V
    9:9:androidx.appcompat.view.menu.MenuView androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState.getListMenuView(androidx.appcompat.view.menu.MenuPresenter$Callback):0:0 -> V
    9:9:boolean initializePanelContent(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState):0 -> V
    9:9:void openPanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent):0 -> V
    10:10:void androidx.appcompat.view.menu.MenuBuilder.addMenuPresenter(androidx.appcompat.view.menu.MenuPresenter):0:0 -> V
    10:10:androidx.appcompat.view.menu.MenuView androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState.getListMenuView(androidx.appcompat.view.menu.MenuPresenter$Callback):0 -> V
    10:10:boolean initializePanelContent(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState):0 -> V
    10:10:void openPanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent):0 -> V
    11:11:androidx.appcompat.view.menu.MenuView androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState.getListMenuView(androidx.appcompat.view.menu.MenuPresenter$Callback):0:0 -> V
    11:11:boolean initializePanelContent(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState):0 -> V
    11:11:void openPanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent):0 -> V
    12:12:androidx.appcompat.view.menu.MenuView androidx.appcompat.view.menu.ListMenuPresenter.getMenuView(android.view.ViewGroup):0:0 -> V
    12:12:androidx.appcompat.view.menu.MenuView androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState.getListMenuView(androidx.appcompat.view.menu.MenuPresenter$Callback):0 -> V
    12:12:boolean initializePanelContent(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState):0 -> V
    12:12:void openPanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent):0 -> V
    13:13:boolean initializePanelContent(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState):0:0 -> V
    13:13:void openPanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent):0 -> V
    14:14:boolean androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState.hasPanelItems():0:0 -> V
    14:14:void openPanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent):0 -> V
    15:15:void openPanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent):0:0 -> V
    boolean performPanelShortcut(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,int,android.view.KeyEvent,int) -> W
    1:1:androidx.appcompat.app.ActionBar peekSupportActionBar():0:0 -> X
    1:1:boolean preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent):0 -> X
    2:2:boolean preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent):0:0 -> X
    3:3:boolean initializePanelMenu(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState):0:0 -> X
    3:3:boolean preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent):0 -> X
    4:4:void androidx.appcompat.view.menu.MenuBuilder.setCallback(androidx.appcompat.view.menu.MenuBuilder$Callback):0:0 -> X
    4:4:boolean initializePanelMenu(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState):0 -> X
    4:4:boolean preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent):0 -> X
    5:5:boolean initializePanelMenu(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState):0:0 -> X
    5:5:boolean preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent):0 -> X
    6:6:boolean preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent):0:0 -> X
    1:1:boolean androidx.core.view.ViewCompat.isLaidOut(android.view.View):0:0 -> Y
    1:1:boolean shouldAnimateActionModeView():0 -> Y
    void throwFeatureRequestIfSubDecorInstalled() -> Z
    1:1:void reopenMenu(boolean):0:0 -> a
    1:1:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder):0 -> a
    1:1:int androidx.core.view.ViewCompat.getWindowSystemUiVisibility(android.view.View):0:0 -> a0
    1:1:void updateStatusGuardColor(android.view.View):0 -> a0
    1:1:int updateStatusGuard(androidx.core.view.WindowInsetsCompat,android.graphics.Rect):0 -> a0
    2:2:void updateStatusGuardColor(android.view.View):0:0 -> a0
    2:2:int updateStatusGuard(androidx.core.view.WindowInsetsCompat,android.graphics.Rect):0 -> a0
    3:3:int androidx.core.content.ContextCompat.getColor(android.content.Context,int):0:0 -> a0
    3:3:void updateStatusGuardColor(android.view.View):0 -> a0
    3:3:int updateStatusGuard(androidx.core.view.WindowInsetsCompat,android.graphics.Rect):0 -> a0
    4:4:void updateStatusGuardColor(android.view.View):0:0 -> a0
    4:4:int updateStatusGuard(androidx.core.view.WindowInsetsCompat,android.graphics.Rect):0 -> a0
    5:5:int updateStatusGuard(androidx.core.view.WindowInsetsCompat,android.graphics.Rect):0:0 -> a0
    boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> b
    1:1:android.view.Window$Callback androidx.appcompat.view.WindowCallbackWrapper.getWrapped():0:0 -> c
    1:1:void addContentView(android.view.View,android.view.ViewGroup$LayoutParams):0 -> c
    2:2:void addContentView(android.view.View,android.view.ViewGroup$LayoutParams):0:0 -> c
    1:1:int calculateNightMode():0:0 -> d
    1:1:android.content.Context attachBaseContext2(android.content.Context):0 -> d
    2:2:android.content.Context attachBaseContext2(android.content.Context):0:0 -> d
    3:3:void androidx.appcompat.app.AppCompatDelegateImpl$ContextThemeWrapperCompatApi17Impl.applyOverrideConfiguration(android.view.ContextThemeWrapper,android.content.res.Configuration):0:0 -> d
    3:3:android.content.Context attachBaseContext2(android.content.Context):0 -> d
    4:4:android.content.Context attachBaseContext2(android.content.Context):0:0 -> d
    5:5:android.content.Context androidx.appcompat.app.AppCompatDelegateImpl$Api17Impl.createConfigurationContext(android.content.Context,android.content.res.Configuration):0:0 -> d
    5:5:android.content.Context attachBaseContext2(android.content.Context):0 -> d
    6:6:android.content.Context attachBaseContext2(android.content.Context):0:0 -> d
    7:7:android.content.res.Configuration generateConfigDelta(android.content.res.Configuration,android.content.res.Configuration):0:0 -> d
    7:7:android.content.Context attachBaseContext2(android.content.Context):0 -> d
    8:8:void androidx.appcompat.app.AppCompatDelegateImpl$Api24Impl.generateConfigDelta_locale(android.content.res.Configuration,android.content.res.Configuration,android.content.res.Configuration):0:0 -> d
    8:8:android.content.res.Configuration generateConfigDelta(android.content.res.Configuration,android.content.res.Configuration):0 -> d
    8:8:android.content.Context attachBaseContext2(android.content.Context):0 -> d
    9:9:android.content.res.Configuration generateConfigDelta(android.content.res.Configuration,android.content.res.Configuration):0:0 -> d
    9:9:android.content.Context attachBaseContext2(android.content.Context):0 -> d
    10:10:void androidx.appcompat.app.AppCompatDelegateImpl$Api26Impl.generateConfigDelta_colorMode(android.content.res.Configuration,android.content.res.Configuration,android.content.res.Configuration):0:0 -> d
    10:10:android.content.res.Configuration generateConfigDelta(android.content.res.Configuration,android.content.res.Configuration):0 -> d
    10:10:android.content.Context attachBaseContext2(android.content.Context):0 -> d
    11:11:android.content.res.Configuration generateConfigDelta(android.content.res.Configuration,android.content.res.Configuration):0:0 -> d
    11:11:android.content.Context attachBaseContext2(android.content.Context):0 -> d
    12:12:void androidx.appcompat.app.AppCompatDelegateImpl$Api17Impl.generateConfigDelta_densityDpi(android.content.res.Configuration,android.content.res.Configuration,android.content.res.Configuration):0:0 -> d
    12:12:android.content.res.Configuration generateConfigDelta(android.content.res.Configuration,android.content.res.Configuration):0 -> d
    12:12:android.content.Context attachBaseContext2(android.content.Context):0 -> d
    13:13:android.content.Context attachBaseContext2(android.content.Context):0:0 -> d
    14:14:void androidx.core.content.res.ResourcesCompat$ThemeCompat$ImplApi29.rebase(android.content.res.Resources$Theme):0:0 -> d
    14:14:void androidx.core.content.res.ResourcesCompat$ThemeCompat.rebase(android.content.res.Resources$Theme):0 -> d
    14:14:android.content.Context attachBaseContext2(android.content.Context):0 -> d
    android.view.View findViewById(int) -> e
    androidx.appcompat.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate() -> f
    int getLocalNightMode() -> g
    android.view.MenuInflater getMenuInflater() -> h
    androidx.appcompat.app.ActionBar getSupportActionBar() -> i
    1:1:void androidx.core.view.LayoutInflaterCompat.setFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2):0:0 -> j
    1:1:void installViewFactory():0 -> j
    2:2:void installViewFactory():0:0 -> j
    1:1:androidx.appcompat.app.ActionBar getSupportActionBar():0:0 -> k
    1:1:void invalidateOptionsMenu():0 -> k
    2:2:void invalidateOptionsMenu():0:0 -> k
    1:1:androidx.appcompat.app.ActionBar getSupportActionBar():0:0 -> l
    1:1:void onConfigurationChanged(android.content.res.Configuration):0 -> l
    2:2:void onConfigurationChanged(android.content.res.Configuration):0:0 -> l
    3:3:void androidx.appcompat.widget.AppCompatDrawableManager.onConfigurationChanged(android.content.Context):0:0 -> l
    3:3:void onConfigurationChanged(android.content.res.Configuration):0 -> l
    4:4:void androidx.appcompat.widget.ResourceManagerInternal.onConfigurationChanged(android.content.Context):0:0 -> l
    4:4:void androidx.appcompat.widget.AppCompatDrawableManager.onConfigurationChanged(android.content.Context):0 -> l
    4:4:void onConfigurationChanged(android.content.res.Configuration):0 -> l
    5:5:void androidx.appcompat.widget.AppCompatDrawableManager.onConfigurationChanged(android.content.Context):0:0 -> l
    5:5:void onConfigurationChanged(android.content.res.Configuration):0 -> l
    6:6:void onConfigurationChanged(android.content.res.Configuration):0:0 -> l
    7:7:void androidx.appcompat.widget.ResourceManagerInternal.onConfigurationChanged(android.content.Context):0:0 -> l
    7:7:void androidx.appcompat.widget.AppCompatDrawableManager.onConfigurationChanged(android.content.Context):0 -> l
    7:7:void onConfigurationChanged(android.content.res.Configuration):0 -> l
    1:1:java.lang.String androidx.core.app.NavUtils.getParentActivityName(android.app.Activity):0:0 -> m
    1:1:void onCreate(android.os.Bundle):0 -> m
    2:2:androidx.appcompat.app.ActionBar peekSupportActionBar():0:0 -> m
    2:2:void onCreate(android.os.Bundle):0 -> m
    3:3:void onCreate(android.os.Bundle):0:0 -> m
    4:4:void androidx.appcompat.app.AppCompatDelegate.addActiveDelegate(androidx.appcompat.app.AppCompatDelegate):0:0 -> m
    4:4:void onCreate(android.os.Bundle):0 -> m
    5:5:void onCreate(android.os.Bundle):0:0 -> m
    1:1:void androidx.appcompat.app.AppCompatDelegate.removeActivityDelegate(androidx.appcompat.app.AppCompatDelegate):0:0 -> n
    1:1:void onDestroy():0 -> n
    2:2:void onDestroy():0:0 -> n
    3:3:void cleanupAutoManagers():0:0 -> n
    3:3:void onDestroy():0 -> n
    void onPostCreate(android.os.Bundle) -> o
    1:1:android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0:0 -> onCreateView
    1:1:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0 -> onCreateView
    2:2:android.view.View androidx.appcompat.app.AppCompatViewInflater.createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,boolean,boolean):0:0 -> onCreateView
    2:2:android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0 -> onCreateView
    2:2:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0 -> onCreateView
    3:3:android.content.Context androidx.appcompat.app.AppCompatViewInflater.themifyContext(android.content.Context,android.util.AttributeSet,boolean,boolean):0:0 -> onCreateView
    3:3:android.view.View androidx.appcompat.app.AppCompatViewInflater.createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,boolean,boolean):0 -> onCreateView
    3:3:android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0 -> onCreateView
    3:3:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0 -> onCreateView
    4:4:int androidx.appcompat.view.ContextThemeWrapper.getThemeResId():0:0 -> onCreateView
    4:4:android.content.Context androidx.appcompat.app.AppCompatViewInflater.themifyContext(android.content.Context,android.util.AttributeSet,boolean,boolean):0 -> onCreateView
    4:4:android.view.View androidx.appcompat.app.AppCompatViewInflater.createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,boolean,boolean):0 -> onCreateView
    4:4:android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0 -> onCreateView
    4:4:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0 -> onCreateView
    5:5:android.content.Context androidx.appcompat.app.AppCompatViewInflater.themifyContext(android.content.Context,android.util.AttributeSet,boolean,boolean):0:0 -> onCreateView
    5:5:android.view.View androidx.appcompat.app.AppCompatViewInflater.createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,boolean,boolean):0 -> onCreateView
    5:5:android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0 -> onCreateView
    5:5:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0 -> onCreateView
    6:6:android.view.View androidx.appcompat.app.AppCompatViewInflater.createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,boolean,boolean):0:0 -> onCreateView
    6:6:android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0 -> onCreateView
    6:6:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0 -> onCreateView
    7:7:androidx.appcompat.widget.AppCompatButton androidx.appcompat.app.AppCompatViewInflater.createButton(android.content.Context,android.util.AttributeSet):0:0 -> onCreateView
    7:7:android.view.View androidx.appcompat.app.AppCompatViewInflater.createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,boolean,boolean):0 -> onCreateView
    7:7:android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0 -> onCreateView
    7:7:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0 -> onCreateView
    8:8:androidx.appcompat.widget.AppCompatEditText androidx.appcompat.app.AppCompatViewInflater.createEditText(android.content.Context,android.util.AttributeSet):0:0 -> onCreateView
    8:8:android.view.View androidx.appcompat.app.AppCompatViewInflater.createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,boolean,boolean):0 -> onCreateView
    8:8:android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0 -> onCreateView
    8:8:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0 -> onCreateView
    9:9:androidx.appcompat.widget.AppCompatCheckBox androidx.appcompat.app.AppCompatViewInflater.createCheckBox(android.content.Context,android.util.AttributeSet):0:0 -> onCreateView
    9:9:android.view.View androidx.appcompat.app.AppCompatViewInflater.createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,boolean,boolean):0 -> onCreateView
    9:9:android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0 -> onCreateView
    9:9:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0 -> onCreateView
    10:10:androidx.appcompat.widget.AppCompatAutoCompleteTextView androidx.appcompat.app.AppCompatViewInflater.createAutoCompleteTextView(android.content.Context,android.util.AttributeSet):0:0 -> onCreateView
    10:10:android.view.View androidx.appcompat.app.AppCompatViewInflater.createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,boolean,boolean):0 -> onCreateView
    10:10:android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0 -> onCreateView
    10:10:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0 -> onCreateView
    11:11:androidx.appcompat.widget.AppCompatImageView androidx.appcompat.app.AppCompatViewInflater.createImageView(android.content.Context,android.util.AttributeSet):0:0 -> onCreateView
    11:11:android.view.View androidx.appcompat.app.AppCompatViewInflater.createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,boolean,boolean):0 -> onCreateView
    11:11:android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0 -> onCreateView
    11:11:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0 -> onCreateView
    12:12:void androidx.appcompat.widget.AppCompatImageView.<init>(android.content.Context,android.util.AttributeSet):0:0 -> onCreateView
    12:12:androidx.appcompat.widget.AppCompatImageView androidx.appcompat.app.AppCompatViewInflater.createImageView(android.content.Context,android.util.AttributeSet):0 -> onCreateView
    12:12:android.view.View androidx.appcompat.app.AppCompatViewInflater.createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,boolean,boolean):0 -> onCreateView
    12:12:android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0 -> onCreateView
    12:12:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0 -> onCreateView
    13:13:androidx.appcompat.widget.AppCompatToggleButton androidx.appcompat.app.AppCompatViewInflater.createToggleButton(android.content.Context,android.util.AttributeSet):0:0 -> onCreateView
    13:13:android.view.View androidx.appcompat.app.AppCompatViewInflater.createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,boolean,boolean):0 -> onCreateView
    13:13:android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0 -> onCreateView
    13:13:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0 -> onCreateView
    14:14:androidx.appcompat.widget.AppCompatRadioButton androidx.appcompat.app.AppCompatViewInflater.createRadioButton(android.content.Context,android.util.AttributeSet):0:0 -> onCreateView
    14:14:android.view.View androidx.appcompat.app.AppCompatViewInflater.createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,boolean,boolean):0 -> onCreateView
    14:14:android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0 -> onCreateView
    14:14:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0 -> onCreateView
    15:15:androidx.appcompat.widget.AppCompatSpinner androidx.appcompat.app.AppCompatViewInflater.createSpinner(android.content.Context,android.util.AttributeSet):0:0 -> onCreateView
    15:15:android.view.View androidx.appcompat.app.AppCompatViewInflater.createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,boolean,boolean):0 -> onCreateView
    15:15:android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0 -> onCreateView
    15:15:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0 -> onCreateView
    16:16:void androidx.appcompat.widget.AppCompatSpinner.<init>(android.content.Context,android.util.AttributeSet):0:0 -> onCreateView
    16:16:androidx.appcompat.widget.AppCompatSpinner androidx.appcompat.app.AppCompatViewInflater.createSpinner(android.content.Context,android.util.AttributeSet):0 -> onCreateView
    16:16:android.view.View androidx.appcompat.app.AppCompatViewInflater.createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,boolean,boolean):0 -> onCreateView
    16:16:android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0 -> onCreateView
    16:16:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0 -> onCreateView
    17:17:androidx.appcompat.widget.AppCompatSeekBar androidx.appcompat.app.AppCompatViewInflater.createSeekBar(android.content.Context,android.util.AttributeSet):0:0 -> onCreateView
    17:17:android.view.View androidx.appcompat.app.AppCompatViewInflater.createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,boolean,boolean):0 -> onCreateView
    17:17:android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0 -> onCreateView
    17:17:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0 -> onCreateView
    18:18:androidx.appcompat.widget.AppCompatImageButton androidx.appcompat.app.AppCompatViewInflater.createImageButton(android.content.Context,android.util.AttributeSet):0:0 -> onCreateView
    18:18:android.view.View androidx.appcompat.app.AppCompatViewInflater.createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,boolean,boolean):0 -> onCreateView
    18:18:android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0 -> onCreateView
    18:18:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0 -> onCreateView
    19:19:void androidx.appcompat.widget.AppCompatImageButton.<init>(android.content.Context,android.util.AttributeSet):0:0 -> onCreateView
    19:19:androidx.appcompat.widget.AppCompatImageButton androidx.appcompat.app.AppCompatViewInflater.createImageButton(android.content.Context,android.util.AttributeSet):0 -> onCreateView
    19:19:android.view.View androidx.appcompat.app.AppCompatViewInflater.createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,boolean,boolean):0 -> onCreateView
    19:19:android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0 -> onCreateView
    19:19:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0 -> onCreateView
    20:20:androidx.appcompat.widget.AppCompatTextView androidx.appcompat.app.AppCompatViewInflater.createTextView(android.content.Context,android.util.AttributeSet):0:0 -> onCreateView
    20:20:android.view.View androidx.appcompat.app.AppCompatViewInflater.createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,boolean,boolean):0 -> onCreateView
    20:20:android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0 -> onCreateView
    20:20:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0 -> onCreateView
    21:21:androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView androidx.appcompat.app.AppCompatViewInflater.createMultiAutoCompleteTextView(android.content.Context,android.util.AttributeSet):0:0 -> onCreateView
    21:21:android.view.View androidx.appcompat.app.AppCompatViewInflater.createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,boolean,boolean):0 -> onCreateView
    21:21:android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0 -> onCreateView
    21:21:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0 -> onCreateView
    22:22:androidx.appcompat.widget.AppCompatCheckedTextView androidx.appcompat.app.AppCompatViewInflater.createCheckedTextView(android.content.Context,android.util.AttributeSet):0:0 -> onCreateView
    22:22:android.view.View androidx.appcompat.app.AppCompatViewInflater.createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,boolean,boolean):0 -> onCreateView
    22:22:android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0 -> onCreateView
    22:22:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0 -> onCreateView
    23:23:androidx.appcompat.widget.AppCompatRatingBar androidx.appcompat.app.AppCompatViewInflater.createRatingBar(android.content.Context,android.util.AttributeSet):0:0 -> onCreateView
    23:23:android.view.View androidx.appcompat.app.AppCompatViewInflater.createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,boolean,boolean):0 -> onCreateView
    23:23:android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0 -> onCreateView
    23:23:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0 -> onCreateView
    24:24:android.view.View androidx.appcompat.app.AppCompatViewInflater.createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,boolean,boolean):0:0 -> onCreateView
    24:24:android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0 -> onCreateView
    24:24:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0 -> onCreateView
    25:25:android.view.View androidx.appcompat.app.AppCompatViewInflater.createViewFromTag(android.content.Context,java.lang.String,android.util.AttributeSet):0:0 -> onCreateView
    25:25:android.view.View androidx.appcompat.app.AppCompatViewInflater.createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,boolean,boolean):0 -> onCreateView
    25:25:android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0 -> onCreateView
    25:25:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0 -> onCreateView
    26:26:void androidx.appcompat.app.AppCompatViewInflater.checkOnClickListener(android.view.View,android.util.AttributeSet):0:0 -> onCreateView
    26:26:android.view.View androidx.appcompat.app.AppCompatViewInflater.createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,boolean,boolean):0 -> onCreateView
    26:26:android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0 -> onCreateView
    26:26:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0 -> onCreateView
    27:27:boolean androidx.core.view.ViewCompat.hasOnClickListeners(android.view.View):0:0 -> onCreateView
    27:27:void androidx.appcompat.app.AppCompatViewInflater.checkOnClickListener(android.view.View,android.util.AttributeSet):0 -> onCreateView
    27:27:android.view.View androidx.appcompat.app.AppCompatViewInflater.createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,boolean,boolean):0 -> onCreateView
    27:27:android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0 -> onCreateView
    27:27:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0 -> onCreateView
    28:28:void androidx.appcompat.app.AppCompatViewInflater.checkOnClickListener(android.view.View,android.util.AttributeSet):0:0 -> onCreateView
    28:28:android.view.View androidx.appcompat.app.AppCompatViewInflater.createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,boolean,boolean):0 -> onCreateView
    28:28:android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0 -> onCreateView
    28:28:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0 -> onCreateView
    1:1:androidx.appcompat.app.ActionBar getSupportActionBar():0:0 -> p
    1:1:void onPostResume():0 -> p
    2:2:void onPostResume():0:0 -> p
    void onSaveInstanceState(android.os.Bundle) -> q
    void onStart() -> r
    1:1:androidx.appcompat.app.ActionBar getSupportActionBar():0:0 -> s
    1:1:void onStop():0 -> s
    2:2:void onStop():0:0 -> s
    1:1:int sanitizeWindowFeatureId(int):0:0 -> u
    1:1:boolean requestWindowFeature(int):0 -> u
    2:2:boolean requestWindowFeature(int):0:0 -> u
    1:1:android.view.Window$Callback androidx.appcompat.view.WindowCallbackWrapper.getWrapped():0:0 -> v
    1:1:void setContentView(int):0 -> v
    2:2:void setContentView(int):0:0 -> v
    1:1:android.view.Window$Callback androidx.appcompat.view.WindowCallbackWrapper.getWrapped():0:0 -> w
    1:1:void setContentView(android.view.View):0 -> w
    2:2:void setContentView(android.view.View):0:0 -> w
    1:1:android.view.Window$Callback androidx.appcompat.view.WindowCallbackWrapper.getWrapped():0:0 -> x
    1:1:void setContentView(android.view.View,android.view.ViewGroup$LayoutParams):0 -> x
    2:2:void setContentView(android.view.View,android.view.ViewGroup$LayoutParams):0:0 -> x
    1:1:androidx.appcompat.app.ActionBar getSupportActionBar():0:0 -> y
    1:1:void setSupportActionBar(androidx.appcompat.widget.Toolbar):0 -> y
    2:2:void setSupportActionBar(androidx.appcompat.widget.Toolbar):0:0 -> y
    3:3:java.lang.CharSequence getTitle():0:0 -> y
    3:3:void setSupportActionBar(androidx.appcompat.widget.Toolbar):0 -> y
    4:4:void setSupportActionBar(androidx.appcompat.widget.Toolbar):0:0 -> y
    5:5:android.view.Window$Callback androidx.appcompat.app.ToolbarActionBar.getWrappedWindowCallback():0:0 -> y
    5:5:void setSupportActionBar(androidx.appcompat.widget.Toolbar):0 -> y
    6:6:void setSupportActionBar(androidx.appcompat.widget.Toolbar):0:0 -> y
    void setTheme(int) -> z
androidx.appcompat.app.AppCompatDelegateImpl$2 -> a.b.c.k$a:
    androidx.appcompat.app.AppCompatDelegateImpl this$0 -> a
androidx.appcompat.app.AppCompatDelegateImpl$3 -> a.b.c.l:
    androidx.appcompat.app.AppCompatDelegateImpl this$0 -> a
    1:1:void androidx.core.view.WindowInsetsCompat$BuilderImpl.<init>():0:0 -> a
    1:1:void androidx.core.view.WindowInsetsCompat$BuilderImpl29.<init>(androidx.core.view.WindowInsetsCompat):0 -> a
    1:1:void androidx.core.view.WindowInsetsCompat$BuilderImpl30.<init>(androidx.core.view.WindowInsetsCompat):0 -> a
    1:1:void androidx.core.view.WindowInsetsCompat$Builder.<init>(androidx.core.view.WindowInsetsCompat):0 -> a
    1:1:androidx.core.view.WindowInsetsCompat androidx.core.view.WindowInsetsCompat.replaceSystemWindowInsets(int,int,int,int):0 -> a
    1:1:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat):0 -> a
    2:2:void androidx.core.view.WindowInsetsCompat$BuilderImpl29.<init>(androidx.core.view.WindowInsetsCompat):0:0 -> a
    2:2:void androidx.core.view.WindowInsetsCompat$BuilderImpl30.<init>(androidx.core.view.WindowInsetsCompat):0 -> a
    2:2:void androidx.core.view.WindowInsetsCompat$Builder.<init>(androidx.core.view.WindowInsetsCompat):0 -> a
    2:2:androidx.core.view.WindowInsetsCompat androidx.core.view.WindowInsetsCompat.replaceSystemWindowInsets(int,int,int,int):0 -> a
    2:2:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat):0 -> a
    3:3:androidx.core.view.WindowInsetsCompat androidx.core.view.WindowInsetsCompat.replaceSystemWindowInsets(int,int,int,int):0:0 -> a
    3:3:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat):0 -> a
    4:4:void androidx.core.view.WindowInsetsCompat$BuilderImpl29.setSystemWindowInsets(androidx.core.graphics.Insets):0:0 -> a
    4:4:androidx.core.view.WindowInsetsCompat$Builder androidx.core.view.WindowInsetsCompat$Builder.setSystemWindowInsets(androidx.core.graphics.Insets):0 -> a
    4:4:androidx.core.view.WindowInsetsCompat androidx.core.view.WindowInsetsCompat.replaceSystemWindowInsets(int,int,int,int):0 -> a
    4:4:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat):0 -> a
    5:5:androidx.core.view.WindowInsetsCompat androidx.core.view.WindowInsetsCompat$BuilderImpl29.build():0:0 -> a
    5:5:androidx.core.view.WindowInsetsCompat androidx.core.view.WindowInsetsCompat$Builder.build():0 -> a
    5:5:androidx.core.view.WindowInsetsCompat androidx.core.view.WindowInsetsCompat.replaceSystemWindowInsets(int,int,int,int):0 -> a
    5:5:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat):0 -> a
    6:6:void androidx.core.view.WindowInsetsCompat.setOverriddenInsets(androidx.core.graphics.Insets[]):0:0 -> a
    6:6:androidx.core.view.WindowInsetsCompat androidx.core.view.WindowInsetsCompat$BuilderImpl29.build():0 -> a
    6:6:androidx.core.view.WindowInsetsCompat androidx.core.view.WindowInsetsCompat$Builder.build():0 -> a
    6:6:androidx.core.view.WindowInsetsCompat androidx.core.view.WindowInsetsCompat.replaceSystemWindowInsets(int,int,int,int):0 -> a
    6:6:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat):0 -> a
    7:7:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat):0:0 -> a
androidx.appcompat.app.AppCompatDelegateImpl$5 -> a.b.c.m:
    androidx.appcompat.app.AppCompatDelegateImpl this$0 -> a
androidx.appcompat.app.AppCompatDelegateImpl$6 -> a.b.c.n:
    androidx.appcompat.app.AppCompatDelegateImpl this$0 -> a
    1:1:androidx.core.view.ViewPropertyAnimatorCompat androidx.core.view.ViewPropertyAnimatorCompat.setListener(androidx.core.view.ViewPropertyAnimatorListener):0:0 -> run
    1:1:void run():0 -> run
    2:2:void run():0:0 -> run
androidx.appcompat.app.AppCompatDelegateImpl$6$1 -> a.b.c.n$a:
    androidx.appcompat.app.AppCompatDelegateImpl$6 this$1 -> a
    void onAnimationEnd(android.view.View) -> a
    void onAnimationStart(android.view.View) -> b
androidx.appcompat.app.AppCompatDelegateImpl$7 -> a.b.c.o:
    androidx.appcompat.app.AppCompatDelegateImpl this$0 -> a
    void onAnimationEnd(android.view.View) -> a
    1:1:void androidx.core.view.ViewCompat.requestApplyInsets(android.view.View):0:0 -> b
    1:1:void onAnimationStart(android.view.View):0 -> b
androidx.appcompat.app.AppCompatDelegateImpl$ActionBarDrawableToggleImpl -> a.b.c.k$b:
androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback -> a.b.c.k$c:
    androidx.appcompat.app.AppCompatDelegateImpl this$0 -> a
    void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> b
    boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> c
androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9 -> a.b.c.k$d:
    androidx.appcompat.app.AppCompatDelegateImpl this$0 -> b
    androidx.appcompat.view.ActionMode$Callback mWrapped -> a
    1:1:void androidx.core.view.ViewCompat.requestApplyInsets(android.view.View):0:0 -> a
    1:1:boolean onPrepareActionMode(androidx.appcompat.view.ActionMode,android.view.Menu):0 -> a
    2:2:boolean onPrepareActionMode(androidx.appcompat.view.ActionMode,android.view.Menu):0:0 -> a
    1:1:androidx.core.view.ViewPropertyAnimatorCompat androidx.core.view.ViewPropertyAnimatorCompat.setListener(androidx.core.view.ViewPropertyAnimatorListener):0:0 -> b
    1:1:void onDestroyActionMode(androidx.appcompat.view.ActionMode):0 -> b
    2:2:void onDestroyActionMode(androidx.appcompat.view.ActionMode):0:0 -> b
    3:3:void androidx.core.view.ViewCompat.requestApplyInsets(android.view.View):0:0 -> b
    3:3:void onDestroyActionMode(androidx.appcompat.view.ActionMode):0 -> b
    boolean onActionItemClicked(androidx.appcompat.view.ActionMode,android.view.MenuItem) -> c
    boolean onCreateActionMode(androidx.appcompat.view.ActionMode,android.view.Menu) -> d
androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9$1 -> a.b.c.k$d$a:
    androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9 this$1 -> a
    1:1:void androidx.core.view.ViewCompat.requestApplyInsets(android.view.View):0:0 -> a
    1:1:void onAnimationEnd(android.view.View):0 -> a
    2:2:void onAnimationEnd(android.view.View):0:0 -> a
    3:3:void androidx.core.view.ViewCompat.requestApplyInsets(android.view.View):0:0 -> a
    3:3:void onAnimationEnd(android.view.View):0 -> a
androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback -> a.b.c.k$e:
    androidx.appcompat.app.AppCompatDelegateImpl this$0 -> b
    android.view.ActionMode startAsSupportActionMode(android.view.ActionMode$Callback) -> a
    1:1:boolean androidx.appcompat.view.WindowCallbackWrapper.dispatchKeyEvent(android.view.KeyEvent):0:0 -> dispatchKeyEvent
    1:1:boolean dispatchKeyEvent(android.view.KeyEvent):0 -> dispatchKeyEvent
    1:1:boolean androidx.appcompat.view.WindowCallbackWrapper.dispatchKeyShortcutEvent(android.view.KeyEvent):0:0 -> dispatchKeyShortcutEvent
    1:1:boolean dispatchKeyShortcutEvent(android.view.KeyEvent):0 -> dispatchKeyShortcutEvent
    2:2:boolean dispatchKeyShortcutEvent(android.view.KeyEvent):0:0 -> dispatchKeyShortcutEvent
    3:3:androidx.appcompat.app.ActionBar androidx.appcompat.app.AppCompatDelegateImpl.getSupportActionBar():0:0 -> dispatchKeyShortcutEvent
    3:3:boolean androidx.appcompat.app.AppCompatDelegateImpl.onKeyShortcut(int,android.view.KeyEvent):0 -> dispatchKeyShortcutEvent
    3:3:boolean dispatchKeyShortcutEvent(android.view.KeyEvent):0 -> dispatchKeyShortcutEvent
    4:4:boolean androidx.appcompat.app.AppCompatDelegateImpl.onKeyShortcut(int,android.view.KeyEvent):0:0 -> dispatchKeyShortcutEvent
    4:4:boolean dispatchKeyShortcutEvent(android.view.KeyEvent):0 -> dispatchKeyShortcutEvent
    1:1:boolean androidx.appcompat.view.WindowCallbackWrapper.onCreatePanelMenu(int,android.view.Menu):0:0 -> onCreatePanelMenu
    1:1:boolean onCreatePanelMenu(int,android.view.Menu):0 -> onCreatePanelMenu
    1:1:boolean androidx.appcompat.view.WindowCallbackWrapper.onMenuOpened(int,android.view.Menu):0:0 -> onMenuOpened
    1:1:boolean onMenuOpened(int,android.view.Menu):0 -> onMenuOpened
    2:2:boolean onMenuOpened(int,android.view.Menu):0:0 -> onMenuOpened
    3:3:void androidx.appcompat.app.AppCompatDelegateImpl.onMenuOpened(int):0:0 -> onMenuOpened
    3:3:boolean onMenuOpened(int,android.view.Menu):0 -> onMenuOpened
    4:4:androidx.appcompat.app.ActionBar androidx.appcompat.app.AppCompatDelegateImpl.getSupportActionBar():0:0 -> onMenuOpened
    4:4:void androidx.appcompat.app.AppCompatDelegateImpl.onMenuOpened(int):0 -> onMenuOpened
    4:4:boolean onMenuOpened(int,android.view.Menu):0 -> onMenuOpened
    5:5:void androidx.appcompat.app.AppCompatDelegateImpl.onMenuOpened(int):0:0 -> onMenuOpened
    5:5:boolean onMenuOpened(int,android.view.Menu):0 -> onMenuOpened
    1:1:void androidx.appcompat.view.WindowCallbackWrapper.onPanelClosed(int,android.view.Menu):0:0 -> onPanelClosed
    1:1:void onPanelClosed(int,android.view.Menu):0 -> onPanelClosed
    2:2:void onPanelClosed(int,android.view.Menu):0:0 -> onPanelClosed
    3:3:void androidx.appcompat.app.AppCompatDelegateImpl.onPanelClosed(int):0:0 -> onPanelClosed
    3:3:void onPanelClosed(int,android.view.Menu):0 -> onPanelClosed
    4:4:androidx.appcompat.app.ActionBar androidx.appcompat.app.AppCompatDelegateImpl.getSupportActionBar():0:0 -> onPanelClosed
    4:4:void androidx.appcompat.app.AppCompatDelegateImpl.onPanelClosed(int):0 -> onPanelClosed
    4:4:void onPanelClosed(int,android.view.Menu):0 -> onPanelClosed
    5:5:void androidx.appcompat.app.AppCompatDelegateImpl.onPanelClosed(int):0:0 -> onPanelClosed
    5:5:void onPanelClosed(int,android.view.Menu):0 -> onPanelClosed
    1:1:void androidx.appcompat.view.menu.MenuBuilder.setOverrideVisibleItems(boolean):0:0 -> onPreparePanel
    1:1:boolean onPreparePanel(int,android.view.View,android.view.Menu):0 -> onPreparePanel
    2:2:boolean androidx.appcompat.view.WindowCallbackWrapper.onPreparePanel(int,android.view.View,android.view.Menu):0:0 -> onPreparePanel
    2:2:boolean onPreparePanel(int,android.view.View,android.view.Menu):0 -> onPreparePanel
    3:3:void androidx.appcompat.view.menu.MenuBuilder.setOverrideVisibleItems(boolean):0:0 -> onPreparePanel
    3:3:boolean onPreparePanel(int,android.view.View,android.view.Menu):0 -> onPreparePanel
    1:1:void androidx.appcompat.view.WindowCallbackWrapper.onProvideKeyboardShortcuts(java.util.List,android.view.Menu,int):0:0 -> onProvideKeyboardShortcuts
    1:1:void onProvideKeyboardShortcuts(java.util.List,android.view.Menu,int):0 -> onProvideKeyboardShortcuts
    1:1:boolean androidx.appcompat.app.AppCompatDelegateImpl.isHandleNativeActionModesEnabled():0:0 -> onWindowStartingActionMode
    1:1:android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback,int):0 -> onWindowStartingActionMode
    2:2:android.view.ActionMode androidx.appcompat.view.WindowCallbackWrapper.onWindowStartingActionMode(android.view.ActionMode$Callback,int):0:0 -> onWindowStartingActionMode
    2:2:android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback,int):0 -> onWindowStartingActionMode
    3:3:android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback,int):0:0 -> onWindowStartingActionMode
androidx.appcompat.app.AppCompatDelegateImpl$AutoBatteryNightModeManager -> a.b.c.k$f:
    android.os.PowerManager mPowerManager -> c
    androidx.appcompat.app.AppCompatDelegateImpl this$0 -> d
    android.content.IntentFilter createIntentFilterForBroadcastReceiver() -> b
    1:1:boolean androidx.appcompat.app.AppCompatDelegateImpl$Api21Impl.isPowerSaveMode(android.os.PowerManager):0:0 -> c
    1:1:int getApplyableNightMode():0 -> c
    void onChange() -> d
androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager -> a.b.c.k$g:
    androidx.appcompat.app.AppCompatDelegateImpl this$0 -> b
    android.content.BroadcastReceiver mReceiver -> a
    void cleanup() -> a
    android.content.IntentFilter createIntentFilterForBroadcastReceiver() -> b
    int getApplyableNightMode() -> c
    void onChange() -> d
    void setup() -> e
androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager$1 -> a.b.c.k$g$a:
    androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager this$1 -> a
androidx.appcompat.app.AppCompatDelegateImpl$AutoTimeNightModeManager -> a.b.c.k$h:
    androidx.appcompat.app.TwilightManager mTwilightManager -> c
    androidx.appcompat.app.AppCompatDelegateImpl this$0 -> d
    android.content.IntentFilter createIntentFilterForBroadcastReceiver() -> b
    1:1:boolean androidx.appcompat.app.TwilightManager.isNight():0:0 -> c
    1:1:int getApplyableNightMode():0 -> c
    2:2:boolean androidx.appcompat.app.TwilightManager.isStateValid():0:0 -> c
    2:2:boolean androidx.appcompat.app.TwilightManager.isNight():0 -> c
    2:2:int getApplyableNightMode():0 -> c
    3:3:boolean androidx.appcompat.app.TwilightManager.isNight():0:0 -> c
    3:3:int getApplyableNightMode():0 -> c
    4:4:android.location.Location androidx.appcompat.app.TwilightManager.getLastKnownLocation():0:0 -> c
    4:4:boolean androidx.appcompat.app.TwilightManager.isNight():0 -> c
    4:4:int getApplyableNightMode():0 -> c
    5:5:void androidx.appcompat.app.TwilightManager.updateState(android.location.Location):0:0 -> c
    5:5:boolean androidx.appcompat.app.TwilightManager.isNight():0 -> c
    5:5:int getApplyableNightMode():0 -> c
    6:6:androidx.appcompat.app.TwilightCalculator androidx.appcompat.app.TwilightCalculator.getInstance():0:0 -> c
    6:6:void androidx.appcompat.app.TwilightManager.updateState(android.location.Location):0 -> c
    6:6:boolean androidx.appcompat.app.TwilightManager.isNight():0 -> c
    6:6:int getApplyableNightMode():0 -> c
    7:7:void androidx.appcompat.app.TwilightManager.updateState(android.location.Location):0:0 -> c
    7:7:boolean androidx.appcompat.app.TwilightManager.isNight():0 -> c
    7:7:int getApplyableNightMode():0 -> c
    8:8:boolean androidx.appcompat.app.TwilightManager.isNight():0:0 -> c
    8:8:int getApplyableNightMode():0 -> c
    void onChange() -> d
androidx.appcompat.app.AppCompatDelegateImpl$ListMenuDecorView -> a.b.c.k$i:
    androidx.appcompat.app.AppCompatDelegateImpl this$0 -> i
    1:1:void androidx.appcompat.widget.ContentFrameLayout.<init>(android.content.Context):0:0 -> <init>
    1:1:void <init>(androidx.appcompat.app.AppCompatDelegateImpl,android.content.Context):0 -> <init>
    1:1:boolean isOutOfBounds(int,int):0:0 -> onInterceptTouchEvent
    1:1:boolean onInterceptTouchEvent(android.view.MotionEvent):0 -> onInterceptTouchEvent
    2:2:boolean onInterceptTouchEvent(android.view.MotionEvent):0:0 -> onInterceptTouchEvent
    3:3:void androidx.appcompat.app.AppCompatDelegateImpl.closePanel(int):0:0 -> onInterceptTouchEvent
    3:3:boolean onInterceptTouchEvent(android.view.MotionEvent):0 -> onInterceptTouchEvent
    4:4:boolean onInterceptTouchEvent(android.view.MotionEvent):0:0 -> onInterceptTouchEvent
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState -> a.b.c.k$j:
    boolean isOpen -> m
    boolean qwertyMode -> n
    boolean refreshDecorView -> o
    boolean refreshMenuContent -> p
    androidx.appcompat.view.menu.ListMenuPresenter listMenuPresenter -> i
    boolean isPrepared -> k
    boolean isHandled -> l
    int windowAnimations -> d
    android.content.Context listPresenterContext -> j
    int background -> b
    int gravity -> c
    int featureId -> a
    android.os.Bundle frozenActionViewState -> q
    android.view.ViewGroup decorView -> e
    android.view.View createdPanelView -> g
    android.view.View shownPanelView -> f
    androidx.appcompat.view.menu.MenuBuilder menu -> h
    1:1:void androidx.appcompat.view.menu.MenuBuilder.addMenuPresenter(androidx.appcompat.view.menu.MenuPresenter):0:0 -> a
    1:1:void setMenu(androidx.appcompat.view.menu.MenuBuilder):0 -> a
androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback -> a.b.c.k$k:
    androidx.appcompat.app.AppCompatDelegateImpl this$0 -> a
    void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> b
    boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> c
androidx.appcompat.app.AppCompatDialog -> a.b.c.p:
    androidx.core.view.KeyEventDispatcher$Component mKeyDispatcher -> b
    androidx.appcompat.app.AppCompatDelegate mDelegate -> a
    1:1:int getThemeResId(android.content.Context,int):0:0 -> <init>
    1:1:void <init>(android.content.Context,int):0 -> <init>
    2:2:void <init>(android.content.Context,int):0:0 -> <init>
    3:3:int getThemeResId(android.content.Context,int):0:0 -> <init>
    3:3:void <init>(android.content.Context,int):0 -> <init>
    4:4:void <init>(android.content.Context,int):0:0 -> <init>
    1:1:androidx.appcompat.app.AppCompatDelegate androidx.appcompat.app.AppCompatDelegate.create(android.app.Dialog,androidx.appcompat.app.AppCompatCallback):0:0 -> a
    1:1:androidx.appcompat.app.AppCompatDelegate getDelegate():0 -> a
    2:2:void androidx.appcompat.app.AppCompatDelegateImpl.<init>(android.app.Dialog,androidx.appcompat.app.AppCompatCallback):0:0 -> a
    2:2:androidx.appcompat.app.AppCompatDelegate androidx.appcompat.app.AppCompatDelegate.create(android.app.Dialog,androidx.appcompat.app.AppCompatCallback):0 -> a
    2:2:androidx.appcompat.app.AppCompatDelegate getDelegate():0 -> a
    3:3:androidx.appcompat.app.AppCompatDelegate getDelegate():0:0 -> a
    boolean superDispatchKeyEvent(android.view.KeyEvent) -> b
    1:1:boolean androidx.core.view.KeyEventDispatcher.dispatchKeyEvent(androidx.core.view.KeyEventDispatcher$Component,android.view.View,android.view.Window$Callback,android.view.KeyEvent):0:0 -> dispatchKeyEvent
    1:1:boolean dispatchKeyEvent(android.view.KeyEvent):0 -> dispatchKeyEvent
androidx.appcompat.app.AppCompatDialog$1 -> a.b.c.p$a:
    androidx.appcompat.app.AppCompatDialog this$0 -> a
androidx.appcompat.app.AppCompatViewInflater -> a.b.c.q:
    androidx.collection.SimpleArrayMap sConstructorMap -> e
    int[] sOnClickAttrs -> c
    java.lang.Object[] mConstructorArgs -> a
    java.lang.Class[] sConstructorSignature -> b
    java.lang.String[] sClassPrefixList -> d
    1:1:java.lang.Object androidx.collection.SimpleArrayMap.get(java.lang.Object):0:0 -> a
    1:1:android.view.View createViewByPrefix(android.content.Context,java.lang.String,java.lang.String):0 -> a
    2:2:android.view.View createViewByPrefix(android.content.Context,java.lang.String,java.lang.String):0:0 -> a
    void verifyNotNull(android.view.View,java.lang.String) -> b
androidx.appcompat.app.AppCompatViewInflater$DeclaredOnClickListener -> a.b.c.q$a:
    android.view.View mHostView -> a
    java.lang.reflect.Method mResolvedMethod -> c
    java.lang.String mMethodName -> b
    android.content.Context mResolvedContext -> d
    1:1:void resolveMethod(android.content.Context):0:0 -> onClick
    1:1:void onClick(android.view.View):0 -> onClick
    2:2:void onClick(android.view.View):0:0 -> onClick
androidx.appcompat.app.ToolbarActionBar -> a.b.c.r:
    java.lang.Runnable mMenuInvalidator -> g
    boolean mLastMenuVisibility -> e
    androidx.appcompat.widget.Toolbar$OnMenuItemClickListener mMenuClicker -> h
    java.util.ArrayList mMenuVisibilityListeners -> f
    android.view.Window$Callback mWindowCallback -> c
    boolean mToolbarMenuPrepared -> b
    androidx.appcompat.widget.DecorToolbar mDecorToolbar -> a
    boolean mMenuCallbackSet -> d
    boolean closeOptionsMenu() -> a
    boolean collapseActionView() -> b
    void dispatchMenuVisibilityChanged(boolean) -> c
    int getDisplayOptions() -> d
    android.content.Context getThemedContext() -> e
    1:1:void androidx.core.view.ViewCompat.postOnAnimation(android.view.View,java.lang.Runnable):0:0 -> f
    1:1:boolean invalidateOptionsMenu():0 -> f
    void onConfigurationChanged(android.content.res.Configuration) -> g
    void onDestroy() -> h
    boolean onKeyShortcut(int,android.view.KeyEvent) -> i
    1:1:boolean openOptionsMenu():0:0 -> j
    1:1:boolean onMenuKeyEvent(android.view.KeyEvent):0 -> j
    boolean openOptionsMenu() -> k
    void setDefaultDisplayHomeAsUpEnabled(boolean) -> l
    void setShowHideAnimationEnabled(boolean) -> m
    void setWindowTitle(java.lang.CharSequence) -> n
    android.view.Menu getMenu() -> p
androidx.appcompat.app.ToolbarActionBar$1 -> a.b.c.r$a:
    androidx.appcompat.app.ToolbarActionBar this$0 -> a
    1:1:void androidx.appcompat.app.ToolbarActionBar.populateOptionsMenu():0:0 -> run
    1:1:void run():0 -> run
androidx.appcompat.app.ToolbarActionBar$2 -> a.b.c.r$b:
    androidx.appcompat.app.ToolbarActionBar this$0 -> a
androidx.appcompat.app.ToolbarActionBar$ActionMenuPresenterCallback -> a.b.c.r$c:
    androidx.appcompat.app.ToolbarActionBar this$0 -> b
    boolean mClosingActionMenu -> a
    void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> b
    boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> c
androidx.appcompat.app.ToolbarActionBar$MenuBuilderCallback -> a.b.c.r$d:
    androidx.appcompat.app.ToolbarActionBar this$0 -> a
    void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> a
    boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> b
androidx.appcompat.app.ToolbarActionBar$ToolbarCallbackWrapper -> a.b.c.r$e:
    androidx.appcompat.app.ToolbarActionBar this$0 -> b
    1:1:android.view.View androidx.appcompat.view.WindowCallbackWrapper.onCreatePanelView(int):0:0 -> onCreatePanelView
    1:1:android.view.View onCreatePanelView(int):0 -> onCreatePanelView
    1:1:boolean androidx.appcompat.view.WindowCallbackWrapper.onPreparePanel(int,android.view.View,android.view.Menu):0:0 -> onPreparePanel
    1:1:boolean onPreparePanel(int,android.view.View,android.view.Menu):0 -> onPreparePanel
    2:2:boolean onPreparePanel(int,android.view.View,android.view.Menu):0:0 -> onPreparePanel
androidx.appcompat.app.TwilightCalculator -> a.b.c.s:
    long sunrise -> b
    long sunset -> a
    androidx.appcompat.app.TwilightCalculator sInstance -> d
    int state -> c
    void calculateTwilight(long,double,double) -> a
androidx.appcompat.app.TwilightManager -> a.b.c.t:
    android.content.Context mContext -> a
    androidx.appcompat.app.TwilightManager sInstance -> d
    androidx.appcompat.app.TwilightManager$TwilightState mTwilightState -> c
    android.location.LocationManager mLocationManager -> b
    android.location.Location getLastKnownLocationForProvider(java.lang.String) -> a
androidx.appcompat.app.TwilightManager$TwilightState -> a.b.c.t$a:
    long nextUpdate -> b
    boolean isNight -> a
androidx.appcompat.app.WindowDecorActionBar -> a.b.c.u:
    android.content.Context mContext -> a
    android.view.animation.Interpolator sShowInterpolator -> A
    androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl mActionMode -> i
    boolean mShowHideAnimationEnabled -> u
    androidx.appcompat.view.ViewPropertyAnimatorCompatSet mCurrentShowAnim -> t
    androidx.core.view.ViewPropertyAnimatorListener mShowListener -> x
    androidx.appcompat.view.ActionMode$Callback mDeferredModeDestroyCallback -> k
    boolean mHiddenBySystem -> q
    boolean mNowShowing -> s
    java.util.ArrayList mMenuVisibilityListeners -> m
    androidx.appcompat.widget.ActionBarContextView mContextView -> f
    androidx.appcompat.view.ActionMode mDeferredDestroyActionMode -> j
    boolean mDisplayHomeAsUpSet -> h
    android.view.View mContentView -> g
    android.view.animation.Interpolator sHideInterpolator -> z
    boolean mHasEmbeddedTabs -> n
    int mCurWindowVisibility -> o
    android.content.Context mThemedContext -> b
    boolean mContentAnimations -> p
    androidx.appcompat.widget.ActionBarOverlayLayout mOverlayLayout -> c
    boolean mLastMenuVisibility -> l
    androidx.core.view.ViewPropertyAnimatorUpdateListener mUpdateListener -> y
    boolean mHideOnContentScroll -> v
    androidx.core.view.ViewPropertyAnimatorListener mHideListener -> w
    boolean mShowingForMode -> r
    androidx.appcompat.widget.DecorToolbar mDecorToolbar -> e
    androidx.appcompat.widget.ActionBarContainer mContainerView -> d
    boolean collapseActionView() -> b
    void dispatchMenuVisibilityChanged(boolean) -> c
    int getDisplayOptions() -> d
    android.content.Context getThemedContext() -> e
    1:1:boolean androidx.appcompat.view.ActionBarPolicy.hasEmbeddedTabs():0:0 -> g
    1:1:void onConfigurationChanged(android.content.res.Configuration):0 -> g
    2:2:void onConfigurationChanged(android.content.res.Configuration):0:0 -> g
    1:1:android.view.Menu androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl.getMenu():0:0 -> i
    1:1:boolean onKeyShortcut(int,android.view.KeyEvent):0 -> i
    2:2:boolean onKeyShortcut(int,android.view.KeyEvent):0:0 -> i
    1:1:void setDisplayOptions(int,int):0:0 -> l
    1:1:void setDisplayHomeAsUpEnabled(boolean):0 -> l
    1:1:void setDefaultDisplayHomeAsUpEnabled(boolean):0 -> l
    void setShowHideAnimationEnabled(boolean) -> m
    void setWindowTitle(java.lang.CharSequence) -> n
    1:1:boolean androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl.dispatchOnCreate():0:0 -> o
    1:1:androidx.appcompat.view.ActionMode startActionMode(androidx.appcompat.view.ActionMode$Callback):0 -> o
    2:2:androidx.appcompat.view.ActionMode startActionMode(androidx.appcompat.view.ActionMode$Callback):0:0 -> o
    3:3:boolean androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl.dispatchOnCreate():0:0 -> o
    3:3:androidx.appcompat.view.ActionMode startActionMode(androidx.appcompat.view.ActionMode$Callback):0 -> o
    1:1:void showForActionMode():0:0 -> p
    1:1:void animateToMode(boolean):0 -> p
    2:2:void hideForActionMode():0:0 -> p
    2:2:void animateToMode(boolean):0 -> p
    3:3:boolean shouldAnimateContextView():0:0 -> p
    3:3:void animateToMode(boolean):0 -> p
    4:4:boolean androidx.core.view.ViewCompat.isLaidOut(android.view.View):0:0 -> p
    4:4:boolean shouldAnimateContextView():0 -> p
    4:4:void animateToMode(boolean):0 -> p
    5:5:void animateToMode(boolean):0:0 -> p
    6:6:androidx.appcompat.view.ViewPropertyAnimatorCompatSet androidx.appcompat.view.ViewPropertyAnimatorCompatSet.playSequentially(androidx.core.view.ViewPropertyAnimatorCompat,androidx.core.view.ViewPropertyAnimatorCompat):0:0 -> p
    6:6:void animateToMode(boolean):0 -> p
    7:7:long androidx.core.view.ViewPropertyAnimatorCompat.getDuration():0:0 -> p
    7:7:androidx.appcompat.view.ViewPropertyAnimatorCompatSet androidx.appcompat.view.ViewPropertyAnimatorCompatSet.playSequentially(androidx.core.view.ViewPropertyAnimatorCompat,androidx.core.view.ViewPropertyAnimatorCompat):0 -> p
    7:7:void animateToMode(boolean):0 -> p
    8:8:androidx.core.view.ViewPropertyAnimatorCompat androidx.core.view.ViewPropertyAnimatorCompat.setStartDelay(long):0:0 -> p
    8:8:androidx.appcompat.view.ViewPropertyAnimatorCompatSet androidx.appcompat.view.ViewPropertyAnimatorCompatSet.playSequentially(androidx.core.view.ViewPropertyAnimatorCompat,androidx.core.view.ViewPropertyAnimatorCompat):0 -> p
    8:8:void animateToMode(boolean):0 -> p
    9:9:androidx.appcompat.view.ViewPropertyAnimatorCompatSet androidx.appcompat.view.ViewPropertyAnimatorCompatSet.playSequentially(androidx.core.view.ViewPropertyAnimatorCompat,androidx.core.view.ViewPropertyAnimatorCompat):0:0 -> p
    9:9:void animateToMode(boolean):0 -> p
    10:10:void animateToMode(boolean):0:0 -> p
    1:1:androidx.appcompat.widget.DecorToolbar getDecorToolbar(android.view.View):0:0 -> q
    1:1:void init(android.view.View):0 -> q
    2:2:void init(android.view.View):0:0 -> q
    3:3:boolean androidx.appcompat.view.ActionBarPolicy.enableHomeButtonByDefault():0:0 -> q
    3:3:void init(android.view.View):0 -> q
    4:4:void setHomeButtonEnabled(boolean):0:0 -> q
    4:4:void init(android.view.View):0 -> q
    5:5:boolean androidx.appcompat.view.ActionBarPolicy.hasEmbeddedTabs():0:0 -> q
    5:5:void init(android.view.View):0 -> q
    6:6:void init(android.view.View):0:0 -> q
    7:7:void setHideOnContentScrollEnabled(boolean):0:0 -> q
    7:7:void init(android.view.View):0 -> q
    8:8:boolean androidx.appcompat.widget.ActionBarOverlayLayout.isInOverlayMode():0:0 -> q
    8:8:void setHideOnContentScrollEnabled(boolean):0 -> q
    8:8:void init(android.view.View):0 -> q
    9:9:void setHideOnContentScrollEnabled(boolean):0:0 -> q
    9:9:void init(android.view.View):0 -> q
    10:10:void init(android.view.View):0:0 -> q
    11:11:void setElevation(float):0:0 -> q
    11:11:void init(android.view.View):0 -> q
    12:12:void androidx.core.view.ViewCompat.setElevation(android.view.View,float):0:0 -> q
    12:12:void setElevation(float):0 -> q
    12:12:void init(android.view.View):0 -> q
    13:13:void init(android.view.View):0:0 -> q
    14:14:androidx.appcompat.widget.DecorToolbar getDecorToolbar(android.view.View):0:0 -> q
    14:14:void init(android.view.View):0 -> q
    1:1:int getNavigationMode():0:0 -> r
    1:1:void setHasEmbeddedTabs(boolean):0 -> r
    2:2:void setHasEmbeddedTabs(boolean):0:0 -> r
    1:1:void doShow(boolean):0:0 -> s
    1:1:void updateVisibility(boolean):0 -> s
    2:2:androidx.appcompat.view.ViewPropertyAnimatorCompatSet androidx.appcompat.view.ViewPropertyAnimatorCompatSet.play(androidx.core.view.ViewPropertyAnimatorCompat):0:0 -> s
    2:2:void doShow(boolean):0 -> s
    2:2:void updateVisibility(boolean):0 -> s
    3:3:void doShow(boolean):0:0 -> s
    3:3:void updateVisibility(boolean):0 -> s
    4:4:androidx.appcompat.view.ViewPropertyAnimatorCompatSet androidx.appcompat.view.ViewPropertyAnimatorCompatSet.play(androidx.core.view.ViewPropertyAnimatorCompat):0:0 -> s
    4:4:void doShow(boolean):0 -> s
    4:4:void updateVisibility(boolean):0 -> s
    5:5:void doShow(boolean):0:0 -> s
    5:5:void updateVisibility(boolean):0 -> s
    6:6:androidx.appcompat.view.ViewPropertyAnimatorCompatSet androidx.appcompat.view.ViewPropertyAnimatorCompatSet.setInterpolator(android.view.animation.Interpolator):0:0 -> s
    6:6:void doShow(boolean):0 -> s
    6:6:void updateVisibility(boolean):0 -> s
    7:7:androidx.appcompat.view.ViewPropertyAnimatorCompatSet androidx.appcompat.view.ViewPropertyAnimatorCompatSet.setDuration(long):0:0 -> s
    7:7:void doShow(boolean):0 -> s
    7:7:void updateVisibility(boolean):0 -> s
    8:8:void doShow(boolean):0:0 -> s
    8:8:void updateVisibility(boolean):0 -> s
    9:9:androidx.appcompat.view.ViewPropertyAnimatorCompatSet androidx.appcompat.view.ViewPropertyAnimatorCompatSet.setListener(androidx.core.view.ViewPropertyAnimatorListener):0:0 -> s
    9:9:void doShow(boolean):0 -> s
    9:9:void updateVisibility(boolean):0 -> s
    10:10:void doShow(boolean):0:0 -> s
    10:10:void updateVisibility(boolean):0 -> s
    11:11:void androidx.core.view.ViewCompat.requestApplyInsets(android.view.View):0:0 -> s
    11:11:void doShow(boolean):0 -> s
    11:11:void updateVisibility(boolean):0 -> s
    12:12:void updateVisibility(boolean):0:0 -> s
    13:13:void doHide(boolean):0:0 -> s
    13:13:void updateVisibility(boolean):0 -> s
    14:14:androidx.appcompat.view.ViewPropertyAnimatorCompatSet androidx.appcompat.view.ViewPropertyAnimatorCompatSet.play(androidx.core.view.ViewPropertyAnimatorCompat):0:0 -> s
    14:14:void doHide(boolean):0 -> s
    14:14:void updateVisibility(boolean):0 -> s
    15:15:void doHide(boolean):0:0 -> s
    15:15:void updateVisibility(boolean):0 -> s
    16:16:androidx.appcompat.view.ViewPropertyAnimatorCompatSet androidx.appcompat.view.ViewPropertyAnimatorCompatSet.play(androidx.core.view.ViewPropertyAnimatorCompat):0:0 -> s
    16:16:void doHide(boolean):0 -> s
    16:16:void updateVisibility(boolean):0 -> s
    17:17:void doHide(boolean):0:0 -> s
    17:17:void updateVisibility(boolean):0 -> s
    18:18:androidx.appcompat.view.ViewPropertyAnimatorCompatSet androidx.appcompat.view.ViewPropertyAnimatorCompatSet.setInterpolator(android.view.animation.Interpolator):0:0 -> s
    18:18:void doHide(boolean):0 -> s
    18:18:void updateVisibility(boolean):0 -> s
    19:19:androidx.appcompat.view.ViewPropertyAnimatorCompatSet androidx.appcompat.view.ViewPropertyAnimatorCompatSet.setDuration(long):0:0 -> s
    19:19:void doHide(boolean):0 -> s
    19:19:void updateVisibility(boolean):0 -> s
    20:20:void doHide(boolean):0:0 -> s
    20:20:void updateVisibility(boolean):0 -> s
    21:21:androidx.appcompat.view.ViewPropertyAnimatorCompatSet androidx.appcompat.view.ViewPropertyAnimatorCompatSet.setListener(androidx.core.view.ViewPropertyAnimatorListener):0:0 -> s
    21:21:void doHide(boolean):0 -> s
    21:21:void updateVisibility(boolean):0 -> s
    22:22:void doHide(boolean):0:0 -> s
    22:22:void updateVisibility(boolean):0 -> s
androidx.appcompat.app.WindowDecorActionBar$1 -> a.b.c.u$a:
    androidx.appcompat.app.WindowDecorActionBar this$0 -> a
    1:1:void androidx.appcompat.app.WindowDecorActionBar.completeDeferredDestroyActionMode():0:0 -> a
    1:1:void onAnimationEnd(android.view.View):0 -> a
    2:2:void onAnimationEnd(android.view.View):0:0 -> a
    3:3:void androidx.core.view.ViewCompat.requestApplyInsets(android.view.View):0:0 -> a
    3:3:void onAnimationEnd(android.view.View):0 -> a
androidx.appcompat.app.WindowDecorActionBar$2 -> a.b.c.u$b:
    androidx.appcompat.app.WindowDecorActionBar this$0 -> a
    void onAnimationEnd(android.view.View) -> a
androidx.appcompat.app.WindowDecorActionBar$3 -> a.b.c.u$c:
    androidx.appcompat.app.WindowDecorActionBar this$0 -> a
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl -> a.b.c.u$d:
    android.content.Context mActionModeContext -> c
    androidx.appcompat.view.ActionMode$Callback mCallback -> e
    androidx.appcompat.view.menu.MenuBuilder mMenu -> d
    java.lang.ref.WeakReference mCustomView -> f
    androidx.appcompat.app.WindowDecorActionBar this$0 -> g
    1:1:androidx.appcompat.view.menu.MenuBuilder androidx.appcompat.view.menu.MenuBuilder.setDefaultShowAsAction(int):0:0 -> <init>
    1:1:void <init>(androidx.appcompat.app.WindowDecorActionBar,android.content.Context,androidx.appcompat.view.ActionMode$Callback):0 -> <init>
    2:2:void <init>(androidx.appcompat.app.WindowDecorActionBar,android.content.Context,androidx.appcompat.view.ActionMode$Callback):0:0 -> <init>
    3:3:void androidx.appcompat.view.menu.MenuBuilder.setCallback(androidx.appcompat.view.menu.MenuBuilder$Callback):0:0 -> <init>
    3:3:void <init>(androidx.appcompat.app.WindowDecorActionBar,android.content.Context,androidx.appcompat.view.ActionMode$Callback):0 -> <init>
    1:1:boolean androidx.appcompat.widget.ActionBarContextView.showOverflowMenu():0:0 -> a
    1:1:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder):0 -> a
    boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> b
    1:1:void androidx.appcompat.widget.ActionBarContextView.closeMode():0:0 -> c
    1:1:void finish():0 -> c
    2:2:void finish():0:0 -> c
    android.view.View getCustomView() -> d
    android.view.Menu getMenu() -> e
    android.view.MenuInflater getMenuInflater() -> f
    java.lang.CharSequence getSubtitle() -> g
    java.lang.CharSequence getTitle() -> h
    void invalidate() -> i
    1:1:boolean androidx.appcompat.widget.ActionBarContextView.isTitleOptional():0:0 -> j
    1:1:boolean isTitleOptional():0 -> j
    void setCustomView(android.view.View) -> k
    1:1:void setSubtitle(java.lang.CharSequence):0:0 -> l
    1:1:void setSubtitle(int):0 -> l
    void setSubtitle(java.lang.CharSequence) -> m
    1:1:void setTitle(java.lang.CharSequence):0:0 -> n
    1:1:void setTitle(int):0 -> n
    void setTitle(java.lang.CharSequence) -> o
    1:1:void androidx.appcompat.view.ActionMode.setTitleOptionalHint(boolean):0:0 -> p
    1:1:void setTitleOptionalHint(boolean):0 -> p
    2:2:void setTitleOptionalHint(boolean):0:0 -> p
androidx.appcompat.content.res.AppCompatResources -> a.b.d.a.a:
    java.lang.ThreadLocal TL_TYPED_VALUE -> a
    java.lang.Object sColorStateCacheLock -> c
    java.util.WeakHashMap sColorStateCaches -> b
    android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> a
androidx.appcompat.graphics.drawable.DrawableWrapper -> a.b.e.a.a:
    android.graphics.drawable.Drawable mDrawable -> a
    1:1:void setWrappedDrawable(android.graphics.drawable.Drawable):0:0 -> <init>
    1:1:void <init>(android.graphics.drawable.Drawable):0 -> <init>
    1:1:boolean androidx.core.graphics.drawable.DrawableCompat.isAutoMirrored(android.graphics.drawable.Drawable):0:0 -> isAutoMirrored
    1:1:boolean isAutoMirrored():0 -> isAutoMirrored
    1:1:void androidx.core.graphics.drawable.DrawableCompat.setAutoMirrored(android.graphics.drawable.Drawable,boolean):0:0 -> setAutoMirrored
    1:1:void setAutoMirrored(boolean):0 -> setAutoMirrored
    1:1:void androidx.core.graphics.drawable.DrawableCompat.setHotspot(android.graphics.drawable.Drawable,float,float):0:0 -> setHotspot
    1:1:void setHotspot(float,float):0 -> setHotspot
    1:1:void androidx.core.graphics.drawable.DrawableCompat.setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int):0:0 -> setHotspotBounds
    1:1:void setHotspotBounds(int,int,int,int):0 -> setHotspotBounds
    1:1:void androidx.core.graphics.drawable.DrawableCompat.setTint(android.graphics.drawable.Drawable,int):0:0 -> setTint
    1:1:void setTint(int):0 -> setTint
    1:1:void androidx.core.graphics.drawable.DrawableCompat.setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList):0:0 -> setTintList
    1:1:void setTintList(android.content.res.ColorStateList):0 -> setTintList
    1:1:void androidx.core.graphics.drawable.DrawableCompat.setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode):0:0 -> setTintMode
    1:1:void setTintMode(android.graphics.PorterDuff$Mode):0 -> setTintMode
androidx.appcompat.text.AllCapsTransformationMethod -> a.b.f.a:
    java.util.Locale mLocale -> a
androidx.appcompat.view.ActionMode -> a.b.g.a:
    java.lang.Object mTag -> a
    boolean mTitleOptionalHint -> b
    void finish() -> c
    android.view.View getCustomView() -> d
    android.view.Menu getMenu() -> e
    android.view.MenuInflater getMenuInflater() -> f
    java.lang.CharSequence getSubtitle() -> g
    java.lang.CharSequence getTitle() -> h
    void invalidate() -> i
    boolean isTitleOptional() -> j
    void setCustomView(android.view.View) -> k
    void setSubtitle(int) -> l
    void setSubtitle(java.lang.CharSequence) -> m
    void setTitle(int) -> n
    void setTitle(java.lang.CharSequence) -> o
    void setTitleOptionalHint(boolean) -> p
androidx.appcompat.view.ActionMode$Callback -> a.b.g.a$a:
    boolean onPrepareActionMode(androidx.appcompat.view.ActionMode,android.view.Menu) -> a
    void onDestroyActionMode(androidx.appcompat.view.ActionMode) -> b
    boolean onActionItemClicked(androidx.appcompat.view.ActionMode,android.view.MenuItem) -> c
    boolean onCreateActionMode(androidx.appcompat.view.ActionMode,android.view.Menu) -> d
androidx.appcompat.view.CollapsibleActionView -> a.b.g.b:
    void onActionViewExpanded() -> a
    void onActionViewCollapsed() -> d
androidx.appcompat.view.ContextThemeWrapper -> a.b.g.c:
    android.content.res.Resources$Theme mTheme -> b
    android.content.res.Configuration mOverrideConfiguration -> d
    android.content.res.Resources mResources -> e
    android.view.LayoutInflater mInflater -> c
    int mThemeResource -> a
    void applyOverrideConfiguration(android.content.res.Configuration) -> a
    1:1:void onApplyThemeResource(android.content.res.Resources$Theme,int,boolean):0:0 -> b
    1:1:void initializeTheme():0 -> b
    1:1:android.content.res.Resources getResourcesInternal():0:0 -> getResources
    1:1:android.content.res.Resources getResources():0 -> getResources
androidx.appcompat.view.StandaloneActionMode -> a.b.g.d:
    android.content.Context mContext -> c
    androidx.appcompat.widget.ActionBarContextView mContextView -> d
    androidx.appcompat.view.ActionMode$Callback mCallback -> e
    java.lang.ref.WeakReference mCustomView -> f
    boolean mFinished -> g
    androidx.appcompat.view.menu.MenuBuilder mMenu -> h
    1:1:androidx.appcompat.view.menu.MenuBuilder androidx.appcompat.view.menu.MenuBuilder.setDefaultShowAsAction(int):0:0 -> <init>
    1:1:void <init>(android.content.Context,androidx.appcompat.widget.ActionBarContextView,androidx.appcompat.view.ActionMode$Callback,boolean):0 -> <init>
    2:2:void <init>(android.content.Context,androidx.appcompat.widget.ActionBarContextView,androidx.appcompat.view.ActionMode$Callback,boolean):0:0 -> <init>
    3:3:void androidx.appcompat.view.menu.MenuBuilder.setCallback(androidx.appcompat.view.menu.MenuBuilder$Callback):0:0 -> <init>
    3:3:void <init>(android.content.Context,androidx.appcompat.widget.ActionBarContextView,androidx.appcompat.view.ActionMode$Callback,boolean):0 -> <init>
    1:1:boolean androidx.appcompat.widget.ActionBarContextView.showOverflowMenu():0:0 -> a
    1:1:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder):0 -> a
    boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> b
    void finish() -> c
    android.view.View getCustomView() -> d
    android.view.Menu getMenu() -> e
    android.view.MenuInflater getMenuInflater() -> f
    java.lang.CharSequence getSubtitle() -> g
    java.lang.CharSequence getTitle() -> h
    void invalidate() -> i
    1:1:boolean androidx.appcompat.widget.ActionBarContextView.isTitleOptional():0:0 -> j
    1:1:boolean isTitleOptional():0 -> j
    void setCustomView(android.view.View) -> k
    1:1:void setSubtitle(java.lang.CharSequence):0:0 -> l
    1:1:void setSubtitle(int):0 -> l
    void setSubtitle(java.lang.CharSequence) -> m
    1:1:void setTitle(java.lang.CharSequence):0:0 -> n
    1:1:void setTitle(int):0 -> n
    void setTitle(java.lang.CharSequence) -> o
    1:1:void androidx.appcompat.view.ActionMode.setTitleOptionalHint(boolean):0:0 -> p
    1:1:void setTitleOptionalHint(boolean):0 -> p
    2:2:void setTitleOptionalHint(boolean):0:0 -> p
androidx.appcompat.view.SupportActionModeWrapper -> a.b.g.e:
    android.content.Context mContext -> a
    androidx.appcompat.view.ActionMode mWrappedObject -> b
    1:1:java.lang.Object androidx.appcompat.view.ActionMode.getTag():0:0 -> getTag
    1:1:java.lang.Object getTag():0 -> getTag
    1:1:boolean androidx.appcompat.view.ActionMode.getTitleOptionalHint():0:0 -> getTitleOptionalHint
    1:1:boolean getTitleOptionalHint():0 -> getTitleOptionalHint
    1:1:void androidx.appcompat.view.ActionMode.setTag(java.lang.Object):0:0 -> setTag
    1:1:void setTag(java.lang.Object):0 -> setTag
androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper -> a.b.g.e$a:
    android.content.Context mContext -> b
    androidx.collection.SimpleArrayMap mMenus -> d
    android.view.ActionMode$Callback mWrappedCallback -> a
    java.util.ArrayList mActionModes -> c
    boolean onPrepareActionMode(androidx.appcompat.view.ActionMode,android.view.Menu) -> a
    void onDestroyActionMode(androidx.appcompat.view.ActionMode) -> b
    boolean onActionItemClicked(androidx.appcompat.view.ActionMode,android.view.MenuItem) -> c
    boolean onCreateActionMode(androidx.appcompat.view.ActionMode,android.view.Menu) -> d
    android.view.ActionMode getActionModeWrapper(androidx.appcompat.view.ActionMode) -> e
    1:1:java.lang.Object androidx.collection.SimpleArrayMap.get(java.lang.Object):0:0 -> f
    1:1:android.view.Menu getMenuWrapper(android.view.Menu):0 -> f
    2:2:android.view.Menu getMenuWrapper(android.view.Menu):0:0 -> f
androidx.appcompat.view.SupportMenuInflater -> a.b.g.f:
    java.lang.Class[] ACTION_VIEW_CONSTRUCTOR_SIGNATURE -> e
    java.lang.Object[] mActionProviderConstructorArguments -> b
    android.content.Context mContext -> c
    java.lang.Class[] ACTION_PROVIDER_CONSTRUCTOR_SIGNATURE -> f
    java.lang.Object[] mActionViewConstructorArguments -> a
    java.lang.Object mRealOwner -> d
    java.lang.Object findRealOwner(java.lang.Object) -> a
    1:1:void androidx.appcompat.view.SupportMenuInflater$MenuState.resetGroup():0:0 -> b
    1:1:void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu):0 -> b
    2:2:void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu):0:0 -> b
    3:3:boolean androidx.appcompat.view.SupportMenuInflater$MenuState.hasAddedItem():0:0 -> b
    3:3:void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu):0 -> b
    4:4:void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu):0:0 -> b
    5:5:void androidx.appcompat.view.SupportMenuInflater$MenuState.addItem():0:0 -> b
    5:5:void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu):0 -> b
    6:6:void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu):0:0 -> b
    7:7:void androidx.appcompat.view.SupportMenuInflater$MenuState.readGroup(android.util.AttributeSet):0:0 -> b
    7:7:void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu):0 -> b
    8:8:void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu):0:0 -> b
    9:9:void androidx.appcompat.view.SupportMenuInflater$MenuState.readItem(android.util.AttributeSet):0:0 -> b
    9:9:void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu):0 -> b
    10:10:char androidx.appcompat.view.SupportMenuInflater$MenuState.getShortcut(java.lang.String):0:0 -> b
    10:10:void androidx.appcompat.view.SupportMenuInflater$MenuState.readItem(android.util.AttributeSet):0 -> b
    10:10:void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu):0 -> b
    11:11:void androidx.appcompat.view.SupportMenuInflater$MenuState.readItem(android.util.AttributeSet):0:0 -> b
    11:11:void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu):0 -> b
    12:12:char androidx.appcompat.view.SupportMenuInflater$MenuState.getShortcut(java.lang.String):0:0 -> b
    12:12:void androidx.appcompat.view.SupportMenuInflater$MenuState.readItem(android.util.AttributeSet):0 -> b
    12:12:void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu):0 -> b
    13:13:void androidx.appcompat.view.SupportMenuInflater$MenuState.readItem(android.util.AttributeSet):0:0 -> b
    13:13:void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu):0 -> b
    14:14:void androidx.appcompat.widget.TintTypedArray.recycle():0:0 -> b
    14:14:void androidx.appcompat.view.SupportMenuInflater$MenuState.readItem(android.util.AttributeSet):0 -> b
    14:14:void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu):0 -> b
    15:15:void androidx.appcompat.view.SupportMenuInflater$MenuState.readItem(android.util.AttributeSet):0:0 -> b
    15:15:void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu):0 -> b
    16:16:void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu):0:0 -> b
androidx.appcompat.view.SupportMenuInflater$InflatedOnMenuItemClickListener -> a.b.g.f$a:
    java.lang.Class[] PARAM_TYPES -> c
    java.lang.Object mRealOwner -> a
    java.lang.reflect.Method mMethod -> b
androidx.appcompat.view.SupportMenuInflater$MenuState -> a.b.g.f$b:
    int itemCategoryOrder -> j
    char itemAlphabeticShortcut -> n
    java.lang.CharSequence itemTooltipText -> C
    char itemNumericShortcut -> p
    boolean itemEnabled -> u
    int groupOrder -> d
    int groupId -> b
    boolean itemChecked -> s
    java.lang.String itemActionViewClassName -> x
    android.content.res.ColorStateList itemIconTintList -> D
    java.lang.String itemListenerMethodName -> z
    android.view.Menu menu -> a
    boolean groupVisible -> f
    int itemActionViewLayout -> w
    androidx.appcompat.view.SupportMenuInflater this$0 -> F
    boolean itemAdded -> h
    androidx.core.view.ActionProvider itemActionProvider -> A
    int itemNumericModifiers -> q
    int itemAlphabeticModifiers -> o
    int itemIconResId -> m
    java.lang.CharSequence itemContentDescription -> B
    int itemId -> i
    int groupCheckable -> e
    int groupCategory -> c
    java.lang.CharSequence itemTitle -> k
    boolean itemVisible -> t
    java.lang.CharSequence itemTitleCondensed -> l
    java.lang.String itemActionProviderClassName -> y
    android.graphics.PorterDuff$Mode itemIconTintMode -> E
    int itemShowAsAction -> v
    boolean groupEnabled -> g
    int itemCheckable -> r
    1:1:void resetGroup():0:0 -> <init>
    1:1:void <init>(androidx.appcompat.view.SupportMenuInflater,android.view.Menu):0 -> <init>
    android.view.SubMenu addSubMenuItem() -> a
    java.lang.Object newInstance(java.lang.String,java.lang.Class[],java.lang.Object[]) -> b
    1:1:java.lang.Object androidx.appcompat.view.SupportMenuInflater.getRealOwner():0:0 -> c
    1:1:void setItem(android.view.MenuItem):0 -> c
    2:2:void setItem(android.view.MenuItem):0:0 -> c
    3:3:void androidx.appcompat.view.menu.MenuItemImpl.setExclusiveCheckable(boolean):0:0 -> c
    3:3:void setItem(android.view.MenuItem):0 -> c
    4:4:void setItem(android.view.MenuItem):0:0 -> c
    5:5:void androidx.appcompat.view.menu.MenuItemWrapperICS.setExclusiveCheckable(boolean):0:0 -> c
    5:5:void setItem(android.view.MenuItem):0 -> c
    6:6:void setItem(android.view.MenuItem):0:0 -> c
    7:7:android.view.MenuItem androidx.core.view.MenuItemCompat.setActionProvider(android.view.MenuItem,androidx.core.view.ActionProvider):0:0 -> c
    7:7:void setItem(android.view.MenuItem):0 -> c
    8:8:void setItem(android.view.MenuItem):0:0 -> c
    9:9:void androidx.core.view.MenuItemCompat.setContentDescription(android.view.MenuItem,java.lang.CharSequence):0:0 -> c
    9:9:void setItem(android.view.MenuItem):0 -> c
    10:10:void setItem(android.view.MenuItem):0:0 -> c
    11:11:void androidx.core.view.MenuItemCompat.setTooltipText(android.view.MenuItem,java.lang.CharSequence):0:0 -> c
    11:11:void setItem(android.view.MenuItem):0 -> c
    12:12:void setItem(android.view.MenuItem):0:0 -> c
    13:13:void androidx.core.view.MenuItemCompat.setAlphabeticShortcut(android.view.MenuItem,char,int):0:0 -> c
    13:13:void setItem(android.view.MenuItem):0 -> c
    14:14:void setItem(android.view.MenuItem):0:0 -> c
    15:15:void androidx.core.view.MenuItemCompat.setNumericShortcut(android.view.MenuItem,char,int):0:0 -> c
    15:15:void setItem(android.view.MenuItem):0 -> c
    16:16:void setItem(android.view.MenuItem):0:0 -> c
    17:17:void androidx.core.view.MenuItemCompat.setIconTintMode(android.view.MenuItem,android.graphics.PorterDuff$Mode):0:0 -> c
    17:17:void setItem(android.view.MenuItem):0 -> c
    18:18:void setItem(android.view.MenuItem):0:0 -> c
    19:19:void androidx.core.view.MenuItemCompat.setIconTintList(android.view.MenuItem,android.content.res.ColorStateList):0:0 -> c
    19:19:void setItem(android.view.MenuItem):0 -> c
androidx.appcompat.view.ViewPropertyAnimatorCompatSet -> a.b.g.g:
    android.view.animation.Interpolator mInterpolator -> c
    androidx.core.view.ViewPropertyAnimatorListener mListener -> d
    long mDuration -> b
    boolean mIsStarted -> e
    androidx.core.view.ViewPropertyAnimatorListenerAdapter mProxyListener -> f
    java.util.ArrayList mAnimators -> a
    void cancel() -> a
    1:1:androidx.core.view.ViewPropertyAnimatorCompat androidx.core.view.ViewPropertyAnimatorCompat.setInterpolator(android.view.animation.Interpolator):0:0 -> b
    1:1:void start():0 -> b
    2:2:void start():0:0 -> b
    3:3:void androidx.core.view.ViewPropertyAnimatorCompat.start():0:0 -> b
    3:3:void start():0 -> b
    4:4:void start():0:0 -> b
androidx.appcompat.view.ViewPropertyAnimatorCompatSet$1 -> a.b.g.g$a:
    androidx.appcompat.view.ViewPropertyAnimatorCompatSet this$0 -> c
    boolean mProxyStarted -> a
    int mProxyEndCount -> b
    1:1:void onEnd():0:0 -> a
    1:1:void onAnimationEnd(android.view.View):0 -> a
    2:2:void androidx.appcompat.view.ViewPropertyAnimatorCompatSet.onAnimationsEnded():0:0 -> a
    2:2:void onEnd():0 -> a
    2:2:void onAnimationEnd(android.view.View):0 -> a
    void onAnimationStart(android.view.View) -> b
androidx.appcompat.view.WindowCallbackWrapper -> a.b.g.h:
    android.view.Window$Callback mWrapped -> a
androidx.appcompat.view.menu.ActionMenuItem -> a.b.g.i.a:
    boolean mHasIconTint -> n
    boolean mHasIconTintMode -> o
    java.lang.CharSequence mTitle -> a
    android.graphics.drawable.Drawable mIconDrawable -> h
    java.lang.CharSequence mTitleCondensed -> b
    android.content.Context mContext -> i
    int mShortcutAlphabeticModifiers -> g
    int mShortcutNumericModifiers -> e
    java.lang.CharSequence mContentDescription -> j
    java.lang.CharSequence mTooltipText -> k
    android.content.Intent mIntent -> c
    char mShortcutNumericChar -> d
    android.content.res.ColorStateList mIconTintList -> l
    android.graphics.PorterDuff$Mode mIconTintMode -> m
    char mShortcutAlphabeticChar -> f
    int mFlags -> p
    androidx.core.view.ActionProvider getSupportActionProvider() -> a
    androidx.core.internal.view.SupportMenuItem setSupportActionProvider(androidx.core.view.ActionProvider) -> b
    1:1:void androidx.core.graphics.drawable.DrawableCompat.setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList):0:0 -> c
    1:1:void applyIconTint():0 -> c
    2:2:void applyIconTint():0:0 -> c
    3:3:void androidx.core.graphics.drawable.DrawableCompat.setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode):0:0 -> c
    3:3:void applyIconTint():0 -> c
    1:1:androidx.core.internal.view.SupportMenuItem setActionView(int):0:0 -> setActionView
    1:1:android.view.MenuItem setActionView(int):0 -> setActionView
    2:2:androidx.core.internal.view.SupportMenuItem setActionView(android.view.View):0:0 -> setActionView
    2:2:android.view.MenuItem setActionView(android.view.View):0 -> setActionView
    1:1:androidx.core.internal.view.SupportMenuItem setContentDescription(java.lang.CharSequence):0:0 -> setContentDescription
    1:1:android.view.MenuItem setContentDescription(java.lang.CharSequence):0 -> setContentDescription
    1:1:android.graphics.drawable.Drawable androidx.core.content.ContextCompat.getDrawable(android.content.Context,int):0:0 -> setIcon
    1:1:android.view.MenuItem setIcon(int):0 -> setIcon
    2:2:android.view.MenuItem setIcon(int):0:0 -> setIcon
    1:1:androidx.core.internal.view.SupportMenuItem setTooltipText(java.lang.CharSequence):0:0 -> setTooltipText
    1:1:android.view.MenuItem setTooltipText(java.lang.CharSequence):0 -> setTooltipText
androidx.appcompat.view.menu.ActionMenuItemView -> androidx.appcompat.view.menu.ActionMenuItemView:
    boolean mExpandedFormat -> m
    int mMinWidth -> n
    int mSavedPaddingLeft -> o
    androidx.appcompat.widget.ForwardingListener mForwardingListener -> j
    android.graphics.drawable.Drawable mIcon -> h
    boolean mAllowTextWithIcon -> l
    androidx.appcompat.view.menu.MenuItemImpl mItemData -> f
    androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback mPopupCallback -> k
    java.lang.CharSequence mTitle -> g
    int mMaxIconSize -> p
    androidx.appcompat.view.menu.MenuBuilder$ItemInvoker mItemInvoker -> i
    1:1:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    boolean needsDividerBefore() -> a
    boolean needsDividerAfter() -> b
    1:1:java.lang.CharSequence androidx.appcompat.view.menu.MenuItemImpl.getTitleForItemView(androidx.appcompat.view.menu.MenuView$ItemView):0:0 -> c
    1:1:void initialize(androidx.appcompat.view.menu.MenuItemImpl,int):0 -> c
    2:2:void initialize(androidx.appcompat.view.menu.MenuItemImpl,int):0:0 -> c
    3:3:int androidx.appcompat.view.menu.MenuItemImpl.getItemId():0:0 -> c
    3:3:void initialize(androidx.appcompat.view.menu.MenuItemImpl,int):0 -> c
    4:4:void initialize(androidx.appcompat.view.menu.MenuItemImpl,int):0:0 -> c
    boolean hasText() -> d
    boolean shouldAllowTextWithIcon() -> e
    1:1:boolean androidx.appcompat.view.menu.MenuItemImpl.showsTextAsAction():0:0 -> f
    1:1:void updateTextButtonVisibility():0 -> f
    2:2:void updateTextButtonVisibility():0:0 -> f
    3:3:java.lang.CharSequence androidx.appcompat.view.menu.MenuItemImpl.getContentDescription():0:0 -> f
    3:3:void updateTextButtonVisibility():0 -> f
    4:4:void updateTextButtonVisibility():0:0 -> f
    5:5:java.lang.CharSequence androidx.appcompat.view.menu.MenuItemImpl.getTitle():0:0 -> f
    5:5:void updateTextButtonVisibility():0 -> f
    6:6:void updateTextButtonVisibility():0:0 -> f
    7:7:java.lang.CharSequence androidx.appcompat.view.menu.MenuItemImpl.getTooltipText():0:0 -> f
    7:7:void updateTextButtonVisibility():0 -> f
    8:8:void updateTextButtonVisibility():0:0 -> f
    9:9:java.lang.CharSequence androidx.appcompat.view.menu.MenuItemImpl.getTitle():0:0 -> f
    9:9:void updateTextButtonVisibility():0 -> f
    10:10:void androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence):0:0 -> f
    10:10:void updateTextButtonVisibility():0 -> f
    1:1:void androidx.appcompat.view.menu.MenuItemImpl.actionFormatChanged():0:0 -> setExpandedFormat
    1:1:void setExpandedFormat(boolean):0 -> setExpandedFormat
androidx.appcompat.view.menu.ActionMenuItemView$ActionMenuItemForwardingListener -> androidx.appcompat.view.menu.ActionMenuItemView$a:
    androidx.appcompat.view.menu.ActionMenuItemView this$0 -> j
    1:1:androidx.appcompat.view.menu.ShowableListMenu androidx.appcompat.widget.ActionMenuPresenter$ActionMenuPopupCallback.getPopup():0:0 -> b
    1:1:androidx.appcompat.view.menu.ShowableListMenu getPopup():0 -> b
    boolean onForwardingStarted() -> c
androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback -> androidx.appcompat.view.menu.ActionMenuItemView$b:
androidx.appcompat.view.menu.BaseMenuPresenter -> a.b.g.i.b:
    android.content.Context mSystemContext -> a
    androidx.appcompat.view.menu.MenuBuilder mMenu -> c
    android.view.LayoutInflater mSystemInflater -> d
    android.content.Context mContext -> b
    androidx.appcompat.view.menu.MenuView mMenuView -> h
    androidx.appcompat.view.menu.MenuPresenter$Callback mCallback -> e
    int mMenuLayoutRes -> f
    int mItemLayoutRes -> g
    boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> c
    void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> d
    boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> k
androidx.appcompat.view.menu.BaseMenuWrapper -> a.b.g.i.c:
    android.content.Context mContext -> a
    androidx.collection.SimpleArrayMap mMenuItems -> b
    androidx.collection.SimpleArrayMap mSubMenus -> c
    1:1:java.lang.Object androidx.collection.SimpleArrayMap.get(java.lang.Object):0:0 -> c
    1:1:android.view.MenuItem getMenuItemWrapper(android.view.MenuItem):0 -> c
    2:2:android.view.MenuItem getMenuItemWrapper(android.view.MenuItem):0:0 -> c
    android.view.SubMenu getSubMenuWrapper(android.view.SubMenu) -> d
androidx.appcompat.view.menu.CascadingMenuPopup -> a.b.g.i.d:
    int mDropDownGravity -> n
    android.view.View mShownAnchorView -> p
    android.widget.PopupWindow$OnDismissListener mOnDismissListener -> z
    int mPopupStyleAttr -> d
    boolean mShowTitle -> w
    boolean mHasYOffset -> s
    android.os.Handler mSubMenuHoverHandler -> g
    android.view.ViewTreeObserver mTreeObserver -> y
    android.view.View mAnchorView -> o
    boolean mOverflowOnly -> f
    java.util.List mPendingMenus -> h
    int mYOffset -> u
    boolean mShouldCloseImmediately -> A
    int mLastPosition -> q
    androidx.appcompat.widget.MenuItemHoverListener mMenuItemHoverListener -> l
    android.content.Context mContext -> b
    int mRawDropDownGravity -> m
    boolean mForceShowIcon -> v
    int mPopupStyleRes -> e
    int mMenuMaxWidth -> c
    boolean mHasXOffset -> r
    android.view.View$OnAttachStateChangeListener mAttachStateChangeListener -> k
    androidx.appcompat.view.menu.MenuPresenter$Callback mPresenterCallback -> x
    java.util.List mShowingMenus -> i
    android.view.ViewTreeObserver$OnGlobalLayoutListener mGlobalLayoutListener -> j
    int mXOffset -> t
    1:1:int androidx.core.view.ViewCompat.getLayoutDirection(android.view.View):0:0 -> <init>
    1:1:int getInitialMenuPosition():0 -> <init>
    1:1:void <init>(android.content.Context,android.view.View,int,int,boolean):0 -> <init>
    2:2:void <init>(android.content.Context,android.view.View,int,int,boolean):0:0 -> <init>
    boolean isShowing() -> a
    1:1:int findIndexOfAddedMenu(androidx.appcompat.view.menu.MenuBuilder):0:0 -> b
    1:1:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean):0 -> b
    2:2:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean):0:0 -> b
    3:3:void androidx.appcompat.widget.MenuPopupWindow.setExitTransition(java.lang.Object):0:0 -> b
    3:3:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean):0 -> b
    4:4:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean):0:0 -> b
    5:5:void androidx.appcompat.widget.ListPopupWindow.setAnimationStyle(int):0:0 -> b
    5:5:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean):0 -> b
    6:6:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean):0:0 -> b
    7:7:int getInitialMenuPosition():0:0 -> b
    7:7:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean):0 -> b
    8:8:int androidx.core.view.ViewCompat.getLayoutDirection(android.view.View):0:0 -> b
    8:8:int getInitialMenuPosition():0 -> b
    8:8:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean):0 -> b
    9:9:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean):0:0 -> b
    void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> d
    1:1:android.widget.ListView androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo.getListView():0:0 -> e
    1:1:android.widget.ListView getListView():0 -> e
    2:2:android.widget.ListView androidx.appcompat.widget.ListPopupWindow.getListView():0:0 -> e
    2:2:android.widget.ListView androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo.getListView():0 -> e
    2:2:android.widget.ListView getListView():0 -> e
    1:1:android.widget.ListView androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo.getListView():0:0 -> f
    1:1:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0 -> f
    2:2:android.widget.ListView androidx.appcompat.widget.ListPopupWindow.getListView():0:0 -> f
    2:2:android.widget.ListView androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo.getListView():0 -> f
    2:2:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0 -> f
    3:3:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0:0 -> f
    4:4:void addMenu(androidx.appcompat.view.menu.MenuBuilder):0:0 -> f
    4:4:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0 -> f
    5:5:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0:0 -> f
    boolean flagActionItems() -> g
    1:1:android.widget.ListView androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo.getListView():0:0 -> h
    1:1:void updateMenuView(boolean):0 -> h
    2:2:android.widget.ListView androidx.appcompat.widget.ListPopupWindow.getListView():0:0 -> h
    2:2:android.widget.ListView androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo.getListView():0 -> h
    2:2:void updateMenuView(boolean):0 -> h
    3:3:void updateMenuView(boolean):0:0 -> h
    4:4:androidx.appcompat.view.menu.MenuAdapter androidx.appcompat.view.menu.MenuPopup.toMenuAdapter(android.widget.ListAdapter):0:0 -> h
    4:4:void updateMenuView(boolean):0 -> h
    5:5:void updateMenuView(boolean):0:0 -> h
    void show() -> i
    void addMenu(androidx.appcompat.view.menu.MenuBuilder) -> l
    boolean closeMenuOnSubMenuOpened() -> m
    1:1:int androidx.core.view.ViewCompat.getLayoutDirection(android.view.View):0:0 -> o
    1:1:void setAnchorView(android.view.View):0 -> o
    2:2:int androidx.core.view.GravityCompat.getAbsoluteGravity(int,int):0:0 -> o
    2:2:void setAnchorView(android.view.View):0 -> o
    3:3:void setAnchorView(android.view.View):0:0 -> o
    void setForceShowIcon(boolean) -> p
    1:1:int androidx.core.view.ViewCompat.getLayoutDirection(android.view.View):0:0 -> q
    1:1:void setGravity(int):0 -> q
    2:2:int androidx.core.view.GravityCompat.getAbsoluteGravity(int,int):0:0 -> q
    2:2:void setGravity(int):0 -> q
    3:3:void setGravity(int):0:0 -> q
    void setHorizontalOffset(int) -> r
    void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> s
    void setShowTitle(boolean) -> t
    void setVerticalOffset(int) -> u
    1:1:void androidx.appcompat.view.menu.MenuAdapter.setForceShowIcon(boolean):0:0 -> w
    1:1:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0 -> w
    2:2:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0:0 -> w
    3:3:void androidx.appcompat.view.menu.MenuAdapter.setForceShowIcon(boolean):0:0 -> w
    3:3:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0 -> w
    4:4:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0:0 -> w
    5:5:androidx.appcompat.widget.MenuPopupWindow createPopupWindow():0:0 -> w
    5:5:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0 -> w
    6:6:void androidx.appcompat.widget.MenuPopupWindow.setHoverListener(androidx.appcompat.widget.MenuItemHoverListener):0:0 -> w
    6:6:androidx.appcompat.widget.MenuPopupWindow createPopupWindow():0 -> w
    6:6:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0 -> w
    7:7:void androidx.appcompat.widget.ListPopupWindow.setOnItemClickListener(android.widget.AdapterView$OnItemClickListener):0:0 -> w
    7:7:androidx.appcompat.widget.MenuPopupWindow createPopupWindow():0 -> w
    7:7:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0 -> w
    8:8:void androidx.appcompat.widget.ListPopupWindow.setOnDismissListener(android.widget.PopupWindow$OnDismissListener):0:0 -> w
    8:8:androidx.appcompat.widget.MenuPopupWindow createPopupWindow():0 -> w
    8:8:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0 -> w
    9:9:androidx.appcompat.widget.MenuPopupWindow createPopupWindow():0:0 -> w
    9:9:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0 -> w
    10:10:void androidx.appcompat.widget.ListPopupWindow.setAnchorView(android.view.View):0:0 -> w
    10:10:androidx.appcompat.widget.MenuPopupWindow createPopupWindow():0 -> w
    10:10:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0 -> w
    11:11:androidx.appcompat.widget.MenuPopupWindow createPopupWindow():0:0 -> w
    11:11:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0 -> w
    12:12:void androidx.appcompat.widget.ListPopupWindow.setDropDownGravity(int):0:0 -> w
    12:12:androidx.appcompat.widget.MenuPopupWindow createPopupWindow():0 -> w
    12:12:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0 -> w
    13:13:androidx.appcompat.widget.MenuPopupWindow createPopupWindow():0:0 -> w
    13:13:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0 -> w
    14:14:void androidx.appcompat.widget.ListPopupWindow.setInputMethodMode(int):0:0 -> w
    14:14:androidx.appcompat.widget.MenuPopupWindow createPopupWindow():0 -> w
    14:14:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0 -> w
    15:15:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0:0 -> w
    16:16:void androidx.appcompat.widget.ListPopupWindow.setDropDownGravity(int):0:0 -> w
    16:16:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0 -> w
    17:17:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0:0 -> w
    18:18:android.view.View findParentViewForSubmenu(androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo,androidx.appcompat.view.menu.MenuBuilder):0:0 -> w
    18:18:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0 -> w
    19:19:android.view.MenuItem findMenuItemForSubmenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuBuilder):0:0 -> w
    19:19:android.view.View findParentViewForSubmenu(androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo,androidx.appcompat.view.menu.MenuBuilder):0 -> w
    19:19:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0 -> w
    20:20:android.widget.ListView androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo.getListView():0:0 -> w
    20:20:android.view.View findParentViewForSubmenu(androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo,androidx.appcompat.view.menu.MenuBuilder):0 -> w
    20:20:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0 -> w
    21:21:android.widget.ListView androidx.appcompat.widget.ListPopupWindow.getListView():0:0 -> w
    21:21:android.widget.ListView androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo.getListView():0 -> w
    21:21:android.view.View findParentViewForSubmenu(androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo,androidx.appcompat.view.menu.MenuBuilder):0 -> w
    21:21:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0 -> w
    22:22:android.view.View findParentViewForSubmenu(androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo,androidx.appcompat.view.menu.MenuBuilder):0:0 -> w
    22:22:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0 -> w
    23:23:void androidx.appcompat.widget.MenuPopupWindow.setTouchModal(boolean):0:0 -> w
    23:23:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0 -> w
    24:24:void androidx.appcompat.widget.MenuPopupWindow.setEnterTransition(java.lang.Object):0:0 -> w
    24:24:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0 -> w
    25:25:int getNextMenuPosition(int):0:0 -> w
    25:25:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0 -> w
    26:26:android.widget.ListView androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo.getListView():0:0 -> w
    26:26:int getNextMenuPosition(int):0 -> w
    26:26:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0 -> w
    27:27:android.widget.ListView androidx.appcompat.widget.ListPopupWindow.getListView():0:0 -> w
    27:27:android.widget.ListView androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo.getListView():0 -> w
    27:27:int getNextMenuPosition(int):0 -> w
    27:27:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0 -> w
    28:28:int getNextMenuPosition(int):0:0 -> w
    28:28:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0 -> w
    29:29:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0:0 -> w
    30:30:void androidx.appcompat.widget.ListPopupWindow.setAnchorView(android.view.View):0:0 -> w
    30:30:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0 -> w
    31:31:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0:0 -> w
    32:32:void androidx.appcompat.widget.ListPopupWindow.setHorizontalOffset(int):0:0 -> w
    32:32:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0 -> w
    33:33:void androidx.appcompat.widget.ListPopupWindow.setOverlapAnchor(boolean):0:0 -> w
    33:33:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0 -> w
    34:34:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0:0 -> w
    35:35:void androidx.appcompat.widget.ListPopupWindow.setHorizontalOffset(int):0:0 -> w
    35:35:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0 -> w
    36:36:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0:0 -> w
    37:37:android.graphics.Rect androidx.appcompat.view.menu.MenuPopup.getEpicenterBounds():0:0 -> w
    37:37:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0 -> w
    38:38:void androidx.appcompat.widget.ListPopupWindow.setEpicenterBounds(android.graphics.Rect):0:0 -> w
    38:38:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0 -> w
    39:39:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0:0 -> w
    40:40:android.widget.ListView androidx.appcompat.widget.ListPopupWindow.getListView():0:0 -> w
    40:40:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0 -> w
    41:41:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0:0 -> w
    42:42:java.lang.CharSequence androidx.appcompat.view.menu.MenuBuilder.getHeaderTitle():0:0 -> w
    42:42:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0 -> w
    43:43:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0:0 -> w
    44:44:java.lang.CharSequence androidx.appcompat.view.menu.MenuBuilder.getHeaderTitle():0:0 -> w
    44:44:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0 -> w
    45:45:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0:0 -> w
androidx.appcompat.view.menu.CascadingMenuPopup$1 -> a.b.g.i.d$a:
    androidx.appcompat.view.menu.CascadingMenuPopup this$0 -> a
    1:1:boolean androidx.appcompat.widget.ListPopupWindow.isModal():0:0 -> onGlobalLayout
    1:1:void onGlobalLayout():0 -> onGlobalLayout
    2:2:void onGlobalLayout():0:0 -> onGlobalLayout
androidx.appcompat.view.menu.CascadingMenuPopup$2 -> a.b.g.i.d$b:
    androidx.appcompat.view.menu.CascadingMenuPopup this$0 -> a
androidx.appcompat.view.menu.CascadingMenuPopup$3 -> a.b.g.i.d$c:
    androidx.appcompat.view.menu.CascadingMenuPopup this$0 -> a
    void onItemHoverEnter(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> g
    void onItemHoverExit(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> k
androidx.appcompat.view.menu.CascadingMenuPopup$3$1 -> a.b.g.i.d$c$a:
    androidx.appcompat.view.menu.MenuBuilder val$menu -> c
    androidx.appcompat.view.menu.CascadingMenuPopup$3 this$1 -> d
    android.view.MenuItem val$item -> b
    androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo val$nextInfo -> a
androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo -> a.b.g.i.d$d:
    androidx.appcompat.view.menu.MenuBuilder menu -> b
    int position -> c
    androidx.appcompat.widget.MenuPopupWindow window -> a
androidx.appcompat.view.menu.ExpandedMenuView -> androidx.appcompat.view.menu.ExpandedMenuView:
    int[] TINT_ATTRS -> b
    androidx.appcompat.view.menu.MenuBuilder mMenu -> a
    1:1:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    2:2:androidx.appcompat.widget.TintTypedArray androidx.appcompat.widget.TintTypedArray.obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int):0:0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    3:3:boolean androidx.appcompat.widget.TintTypedArray.hasValue(int):0:0 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    4:4:android.graphics.drawable.Drawable androidx.appcompat.widget.TintTypedArray.getDrawable(int):0:0 -> <init>
    4:4:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    4:4:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    5:5:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    5:5:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    6:6:boolean androidx.appcompat.widget.TintTypedArray.hasValue(int):0:0 -> <init>
    6:6:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    6:6:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    7:7:android.graphics.drawable.Drawable androidx.appcompat.widget.TintTypedArray.getDrawable(int):0:0 -> <init>
    7:7:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    7:7:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    8:8:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    8:8:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    9:9:void androidx.appcompat.widget.TintTypedArray.recycle():0:0 -> <init>
    9:9:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    9:9:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    1:1:boolean androidx.appcompat.view.menu.MenuBuilder.performItemAction(android.view.MenuItem,int):0:0 -> b
    1:1:boolean invokeItem(androidx.appcompat.view.menu.MenuItemImpl):0 -> b
    void initialize(androidx.appcompat.view.menu.MenuBuilder) -> c
androidx.appcompat.view.menu.ListMenuItemView -> androidx.appcompat.view.menu.ListMenuItemView:
    boolean mPreserveIconSpacing -> m
    boolean mHasListDivider -> o
    int mTextAppearance -> k
    android.graphics.drawable.Drawable mBackground -> j
    android.widget.LinearLayout mContent -> i
    androidx.appcompat.view.menu.MenuItemImpl mItemData -> a
    boolean mForceShowIcon -> q
    android.widget.ImageView mIconView -> b
    android.widget.ImageView mGroupDivider -> h
    android.widget.CheckBox mCheckBox -> e
    android.widget.ImageView mSubMenuArrowView -> g
    android.widget.RadioButton mRadioButton -> c
    android.content.Context mTextAppearanceContext -> l
    android.view.LayoutInflater mInflater -> p
    android.widget.TextView mTitleView -> d
    android.widget.TextView mShortcutView -> f
    android.graphics.drawable.Drawable mSubMenuArrow -> n
    1:1:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    2:2:void androidx.appcompat.widget.TintTypedArray.recycle():0:0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    1:1:void addContentView(android.view.View,int):0:0 -> a
    1:1:void addContentView(android.view.View):0 -> a
    1:1:void insertCheckBox():0 -> a
    1:1:void addContentView(android.view.View,int):0:0 -> b
    1:1:void addContentView(android.view.View):0 -> b
    1:1:void insertRadioButton():0 -> b
    1:1:java.lang.CharSequence androidx.appcompat.view.menu.MenuItemImpl.getTitle():0:0 -> c
    1:1:java.lang.CharSequence androidx.appcompat.view.menu.MenuItemImpl.getTitleForItemView(androidx.appcompat.view.menu.MenuView$ItemView):0 -> c
    1:1:void initialize(androidx.appcompat.view.menu.MenuItemImpl,int):0 -> c
    2:2:void initialize(androidx.appcompat.view.menu.MenuItemImpl,int):0:0 -> c
    3:3:java.lang.CharSequence androidx.appcompat.view.menu.MenuItemImpl.getContentDescription():0:0 -> c
    3:3:void initialize(androidx.appcompat.view.menu.MenuItemImpl,int):0 -> c
    4:4:void initialize(androidx.appcompat.view.menu.MenuItemImpl,int):0:0 -> c
    1:1:java.lang.String androidx.appcompat.view.menu.MenuItemImpl.getShortcutLabel():0:0 -> d
    1:1:void setShortcut(boolean,char):0 -> d
    2:2:android.content.Context androidx.appcompat.view.menu.MenuBuilder.getContext():0:0 -> d
    2:2:java.lang.String androidx.appcompat.view.menu.MenuItemImpl.getShortcutLabel():0 -> d
    2:2:void setShortcut(boolean,char):0 -> d
    3:3:java.lang.String androidx.appcompat.view.menu.MenuItemImpl.getShortcutLabel():0:0 -> d
    3:3:void setShortcut(boolean,char):0 -> d
    4:4:android.content.Context androidx.appcompat.view.menu.MenuBuilder.getContext():0:0 -> d
    4:4:java.lang.String androidx.appcompat.view.menu.MenuItemImpl.getShortcutLabel():0 -> d
    4:4:void setShortcut(boolean,char):0 -> d
    5:5:java.lang.String androidx.appcompat.view.menu.MenuItemImpl.getShortcutLabel():0:0 -> d
    5:5:void setShortcut(boolean,char):0 -> d
    6:6:void setShortcut(boolean,char):0:0 -> d
    1:1:void androidx.core.view.ViewCompat.setBackground(android.view.View,android.graphics.drawable.Drawable):0:0 -> onFinishInflate
    1:1:void onFinishInflate():0 -> onFinishInflate
    2:2:void onFinishInflate():0:0 -> onFinishInflate
    1:1:boolean androidx.appcompat.view.menu.MenuItemImpl.shouldShowIcon():0:0 -> setIcon
    1:1:void setIcon(android.graphics.drawable.Drawable):0 -> setIcon
    2:2:void setIcon(android.graphics.drawable.Drawable):0:0 -> setIcon
    3:3:void insertIconView():0:0 -> setIcon
    3:3:void setIcon(android.graphics.drawable.Drawable):0 -> setIcon
    4:4:void addContentView(android.view.View,int):0:0 -> setIcon
    4:4:void insertIconView():0 -> setIcon
    4:4:void setIcon(android.graphics.drawable.Drawable):0 -> setIcon
    5:5:void setIcon(android.graphics.drawable.Drawable):0:0 -> setIcon
androidx.appcompat.view.menu.ListMenuPresenter -> a.b.g.i.e:
    android.content.Context mContext -> a
    androidx.appcompat.view.menu.MenuBuilder mMenu -> c
    android.view.LayoutInflater mInflater -> b
    androidx.appcompat.view.menu.MenuPresenter$Callback mCallback -> e
    androidx.appcompat.view.menu.ListMenuPresenter$MenuAdapter mAdapter -> f
    androidx.appcompat.view.menu.ExpandedMenuView mMenuView -> d
    1:1:void <init>(int,int):0:0 -> <init>
    1:1:void <init>(android.content.Context,int):0 -> <init>
    2:2:void <init>(android.content.Context,int):0:0 -> <init>
    android.widget.ListAdapter getAdapter() -> a
    void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> b
    boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> c
    void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> d
    1:1:void androidx.appcompat.view.menu.MenuDialogHelper.show(android.os.IBinder):0:0 -> f
    1:1:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0 -> f
    2:2:android.content.Context androidx.appcompat.view.menu.MenuBuilder.getContext():0:0 -> f
    2:2:void androidx.appcompat.view.menu.MenuDialogHelper.show(android.os.IBinder):0 -> f
    2:2:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0 -> f
    3:3:void androidx.appcompat.view.menu.MenuDialogHelper.show(android.os.IBinder):0:0 -> f
    3:3:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0 -> f
    4:4:android.content.Context androidx.appcompat.app.AlertDialog$Builder.getContext():0:0 -> f
    4:4:void androidx.appcompat.view.menu.MenuDialogHelper.show(android.os.IBinder):0 -> f
    4:4:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0 -> f
    5:5:void androidx.appcompat.view.menu.MenuDialogHelper.show(android.os.IBinder):0:0 -> f
    5:5:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0 -> f
    6:6:void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback):0:0 -> f
    6:6:void androidx.appcompat.view.menu.MenuDialogHelper.show(android.os.IBinder):0 -> f
    6:6:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0 -> f
    7:7:void androidx.appcompat.view.menu.MenuDialogHelper.show(android.os.IBinder):0:0 -> f
    7:7:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0 -> f
    8:8:void androidx.appcompat.view.menu.MenuBuilder.addMenuPresenter(androidx.appcompat.view.menu.MenuPresenter):0:0 -> f
    8:8:void androidx.appcompat.view.menu.MenuDialogHelper.show(android.os.IBinder):0 -> f
    8:8:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0 -> f
    9:9:void androidx.appcompat.view.menu.MenuDialogHelper.show(android.os.IBinder):0:0 -> f
    9:9:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0 -> f
    10:10:androidx.appcompat.app.AlertDialog$Builder androidx.appcompat.app.AlertDialog$Builder.setAdapter(android.widget.ListAdapter,android.content.DialogInterface$OnClickListener):0:0 -> f
    10:10:void androidx.appcompat.view.menu.MenuDialogHelper.show(android.os.IBinder):0 -> f
    10:10:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0 -> f
    11:11:android.view.View androidx.appcompat.view.menu.MenuBuilder.getHeaderView():0:0 -> f
    11:11:void androidx.appcompat.view.menu.MenuDialogHelper.show(android.os.IBinder):0 -> f
    11:11:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0 -> f
    12:12:androidx.appcompat.app.AlertDialog$Builder androidx.appcompat.app.AlertDialog$Builder.setCustomTitle(android.view.View):0:0 -> f
    12:12:void androidx.appcompat.view.menu.MenuDialogHelper.show(android.os.IBinder):0 -> f
    12:12:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0 -> f
    13:13:android.graphics.drawable.Drawable androidx.appcompat.view.menu.MenuBuilder.getHeaderIcon():0:0 -> f
    13:13:void androidx.appcompat.view.menu.MenuDialogHelper.show(android.os.IBinder):0 -> f
    13:13:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0 -> f
    14:14:androidx.appcompat.app.AlertDialog$Builder androidx.appcompat.app.AlertDialog$Builder.setIcon(android.graphics.drawable.Drawable):0:0 -> f
    14:14:void androidx.appcompat.view.menu.MenuDialogHelper.show(android.os.IBinder):0 -> f
    14:14:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0 -> f
    15:15:java.lang.CharSequence androidx.appcompat.view.menu.MenuBuilder.getHeaderTitle():0:0 -> f
    15:15:void androidx.appcompat.view.menu.MenuDialogHelper.show(android.os.IBinder):0 -> f
    15:15:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0 -> f
    16:16:androidx.appcompat.app.AlertDialog$Builder androidx.appcompat.app.AlertDialog$Builder.setTitle(java.lang.CharSequence):0:0 -> f
    16:16:void androidx.appcompat.view.menu.MenuDialogHelper.show(android.os.IBinder):0 -> f
    16:16:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0 -> f
    17:17:androidx.appcompat.app.AlertDialog$Builder androidx.appcompat.app.AlertDialog$Builder.setOnKeyListener(android.content.DialogInterface$OnKeyListener):0:0 -> f
    17:17:void androidx.appcompat.view.menu.MenuDialogHelper.show(android.os.IBinder):0 -> f
    17:17:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0 -> f
    18:18:void androidx.appcompat.view.menu.MenuDialogHelper.show(android.os.IBinder):0:0 -> f
    18:18:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0 -> f
    19:19:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0:0 -> f
    boolean flagActionItems() -> g
    void updateMenuView(boolean) -> h
    void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> j
    boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> k
androidx.appcompat.view.menu.ListMenuPresenter$MenuAdapter -> a.b.g.i.e$a:
    androidx.appcompat.view.menu.ListMenuPresenter this$0 -> b
    int mExpandedIndex -> a
    1:1:androidx.appcompat.view.menu.MenuItemImpl androidx.appcompat.view.menu.MenuBuilder.getExpandedItem():0:0 -> a
    1:1:void findExpandedIndex():0 -> a
    2:2:java.util.ArrayList androidx.appcompat.view.menu.MenuBuilder.getNonActionItems():0:0 -> a
    2:2:void findExpandedIndex():0 -> a
    3:3:void findExpandedIndex():0:0 -> a
    1:1:java.util.ArrayList androidx.appcompat.view.menu.MenuBuilder.getNonActionItems():0:0 -> b
    1:1:androidx.appcompat.view.menu.MenuItemImpl getItem(int):0 -> b
    2:2:androidx.appcompat.view.menu.MenuItemImpl getItem(int):0:0 -> b
    1:1:java.util.ArrayList androidx.appcompat.view.menu.MenuBuilder.getNonActionItems():0:0 -> getCount
    1:1:int getCount():0 -> getCount
    2:2:int getCount():0:0 -> getCount
androidx.appcompat.view.menu.MenuAdapter -> a.b.g.i.f:
    android.view.LayoutInflater mInflater -> e
    androidx.appcompat.view.menu.MenuBuilder mAdapterMenu -> a
    int mItemLayoutRes -> f
    int mExpandedIndex -> b
    boolean mForceShowIcon -> c
    boolean mOverflowOnly -> d
    1:1:androidx.appcompat.view.menu.MenuItemImpl androidx.appcompat.view.menu.MenuBuilder.getExpandedItem():0:0 -> a
    1:1:void findExpandedIndex():0 -> a
    2:2:java.util.ArrayList androidx.appcompat.view.menu.MenuBuilder.getNonActionItems():0:0 -> a
    2:2:void findExpandedIndex():0 -> a
    3:3:void findExpandedIndex():0:0 -> a
    1:1:java.util.ArrayList androidx.appcompat.view.menu.MenuBuilder.getNonActionItems():0:0 -> b
    1:1:androidx.appcompat.view.menu.MenuItemImpl getItem(int):0 -> b
    2:2:androidx.appcompat.view.menu.MenuItemImpl getItem(int):0:0 -> b
    1:1:java.util.ArrayList androidx.appcompat.view.menu.MenuBuilder.getNonActionItems():0:0 -> getCount
    1:1:int getCount():0 -> getCount
    2:2:int getCount():0:0 -> getCount
    1:1:int androidx.appcompat.view.menu.MenuItemImpl.getGroupId():0:0 -> getView
    1:1:android.view.View getView(int,android.view.View,android.view.ViewGroup):0 -> getView
    2:2:android.view.View getView(int,android.view.View,android.view.ViewGroup):0:0 -> getView
    3:3:int androidx.appcompat.view.menu.MenuItemImpl.getGroupId():0:0 -> getView
    3:3:android.view.View getView(int,android.view.View,android.view.ViewGroup):0 -> getView
    4:4:android.view.View getView(int,android.view.View,android.view.ViewGroup):0:0 -> getView
androidx.appcompat.view.menu.MenuBuilder -> a.b.g.i.g:
    android.content.Context mContext -> a
    int mDefaultShowAsAction -> l
    int[] sCategoryToOrder -> y
    boolean mIsActionItemsStale -> k
    java.util.ArrayList mVisibleItems -> g
    boolean mGroupDividerEnabled -> w
    boolean mItemsChangedWhileDispatchPrevented -> q
    boolean mIsClosing -> s
    java.lang.CharSequence mHeaderTitle -> m
    java.util.concurrent.CopyOnWriteArrayList mPresenters -> u
    java.util.ArrayList mActionItems -> i
    android.view.View mHeaderView -> o
    androidx.appcompat.view.menu.MenuItemImpl mExpandedItem -> v
    boolean mIsVisibleItemsStale -> h
    android.graphics.drawable.Drawable mHeaderIcon -> n
    android.content.res.Resources mResources -> b
    boolean mShortcutsVisible -> d
    androidx.appcompat.view.menu.MenuBuilder$Callback mCallback -> e
    boolean mPreventDispatchingItemsChanged -> p
    java.util.ArrayList mItems -> f
    boolean mOverrideVisibleItems -> x
    boolean mStructureChangedWhileDispatchPrevented -> r
    java.util.ArrayList mNonActionItems -> j
    java.util.ArrayList mTempShortcutItemList -> t
    boolean mQwertyMode -> c
    1:1:void setShortcutsVisibleInner(boolean):0:0 -> <init>
    1:1:void <init>(android.content.Context):0 -> <init>
    2:2:boolean androidx.core.view.ViewConfigurationCompat.shouldShowMenuShortcutsWhenKeyboardPresent(android.view.ViewConfiguration,android.content.Context):0:0 -> <init>
    2:2:void setShortcutsVisibleInner(boolean):0 -> <init>
    2:2:void <init>(android.content.Context):0 -> <init>
    3:3:void setShortcutsVisibleInner(boolean):0:0 -> <init>
    3:3:void <init>(android.content.Context):0 -> <init>
    1:1:int getOrdering(int):0:0 -> a
    1:1:android.view.MenuItem addInternal(int,int,int,java.lang.CharSequence):0 -> a
    2:2:android.view.MenuItem addInternal(int,int,int,java.lang.CharSequence):0:0 -> a
    3:3:androidx.appcompat.view.menu.MenuItemImpl createNewMenuItem(int,int,int,int,java.lang.CharSequence,int):0:0 -> a
    3:3:android.view.MenuItem addInternal(int,int,int,java.lang.CharSequence):0 -> a
    4:4:android.view.MenuItem addInternal(int,int,int,java.lang.CharSequence):0:0 -> a
    5:5:int findInsertIndex(java.util.ArrayList,int):0:0 -> a
    5:5:android.view.MenuItem addInternal(int,int,int,java.lang.CharSequence):0 -> a
    6:6:int androidx.appcompat.view.menu.MenuItemImpl.getOrdering():0:0 -> a
    6:6:int findInsertIndex(java.util.ArrayList,int):0 -> a
    6:6:android.view.MenuItem addInternal(int,int,int,java.lang.CharSequence):0 -> a
    7:7:android.view.MenuItem addInternal(int,int,int,java.lang.CharSequence):0:0 -> a
    8:8:int getOrdering(int):0:0 -> a
    8:8:android.view.MenuItem addInternal(int,int,int,java.lang.CharSequence):0 -> a
    1:1:android.view.MenuItem add(int,int,int,java.lang.CharSequence):0:0 -> addIntentOptions
    1:1:int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[]):0 -> addIntentOptions
    2:2:int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[]):0:0 -> addIntentOptions
    1:1:void androidx.appcompat.view.menu.MenuItemImpl.setSubMenu(androidx.appcompat.view.menu.SubMenuBuilder):0:0 -> addSubMenu
    1:1:android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence):0 -> addSubMenu
    2:2:java.lang.CharSequence androidx.appcompat.view.menu.MenuItemImpl.getTitle():0:0 -> addSubMenu
    2:2:void androidx.appcompat.view.menu.MenuItemImpl.setSubMenu(androidx.appcompat.view.menu.SubMenuBuilder):0 -> addSubMenu
    2:2:android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence):0 -> addSubMenu
    3:3:void androidx.appcompat.view.menu.MenuItemImpl.setSubMenu(androidx.appcompat.view.menu.SubMenuBuilder):0:0 -> addSubMenu
    3:3:android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence):0 -> addSubMenu
    void addMenuPresenter(androidx.appcompat.view.menu.MenuPresenter,android.content.Context) -> b
    void close(boolean) -> c
    boolean collapseItemActionView(androidx.appcompat.view.menu.MenuItemImpl) -> d
    boolean dispatchMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> e
    boolean expandItemActionView(androidx.appcompat.view.menu.MenuItemImpl) -> f
    1:1:int androidx.appcompat.view.menu.MenuItemImpl.getItemId():0:0 -> findItem
    1:1:android.view.MenuItem findItem(int):0 -> findItem
    2:2:android.view.MenuItem findItem(int):0:0 -> findItem
    3:3:android.view.SubMenu androidx.appcompat.view.menu.MenuItemImpl.getSubMenu():0:0 -> findItem
    3:3:android.view.MenuItem findItem(int):0 -> findItem
    4:4:android.view.MenuItem findItem(int):0:0 -> findItem
    1:1:char androidx.appcompat.view.menu.MenuItemImpl.getAlphabeticShortcut():0:0 -> g
    1:1:androidx.appcompat.view.menu.MenuItemImpl findItemWithShortcutForKey(int,android.view.KeyEvent):0 -> g
    2:2:char androidx.appcompat.view.menu.MenuItemImpl.getNumericShortcut():0:0 -> g
    2:2:androidx.appcompat.view.menu.MenuItemImpl findItemWithShortcutForKey(int,android.view.KeyEvent):0 -> g
    3:3:androidx.appcompat.view.menu.MenuItemImpl findItemWithShortcutForKey(int,android.view.KeyEvent):0:0 -> g
    1:1:android.view.SubMenu androidx.appcompat.view.menu.MenuItemImpl.getSubMenu():0:0 -> h
    1:1:void findItemsWithShortcutForKey(java.util.List,int,android.view.KeyEvent):0 -> h
    2:2:void findItemsWithShortcutForKey(java.util.List,int,android.view.KeyEvent):0:0 -> h
    3:3:char androidx.appcompat.view.menu.MenuItemImpl.getAlphabeticShortcut():0:0 -> h
    3:3:void findItemsWithShortcutForKey(java.util.List,int,android.view.KeyEvent):0 -> h
    4:4:char androidx.appcompat.view.menu.MenuItemImpl.getNumericShortcut():0:0 -> h
    4:4:void findItemsWithShortcutForKey(java.util.List,int,android.view.KeyEvent):0 -> h
    5:5:int androidx.appcompat.view.menu.MenuItemImpl.getAlphabeticModifiers():0:0 -> h
    5:5:void findItemsWithShortcutForKey(java.util.List,int,android.view.KeyEvent):0 -> h
    6:6:int androidx.appcompat.view.menu.MenuItemImpl.getNumericModifiers():0:0 -> h
    6:6:void findItemsWithShortcutForKey(java.util.List,int,android.view.KeyEvent):0 -> h
    7:7:void findItemsWithShortcutForKey(java.util.List,int,android.view.KeyEvent):0:0 -> h
    void flagActionItems() -> i
    java.lang.String getActionViewStatesKey() -> j
    androidx.appcompat.view.menu.MenuBuilder getRootMenu() -> k
    java.util.ArrayList getVisibleItems() -> l
    boolean isGroupDividerEnabled() -> m
    boolean isQwertyMode() -> n
    boolean isShortcutsVisible() -> o
    void onItemActionRequestChanged(androidx.appcompat.view.menu.MenuItemImpl) -> p
    1:1:boolean performItemAction(android.view.MenuItem,int):0:0 -> performShortcut
    1:1:boolean performShortcut(int,android.view.KeyEvent,int):0 -> performShortcut
    2:2:boolean performShortcut(int,android.view.KeyEvent,int):0:0 -> performShortcut
    1:1:void dispatchPresenterUpdate(boolean):0:0 -> q
    1:1:void onItemsChanged(boolean):0 -> q
    2:2:void onItemsChanged(boolean):0:0 -> q
    boolean performItemAction(android.view.MenuItem,int) -> r
    1:1:int findGroupIndex(int,int):0:0 -> removeGroup
    1:1:int findGroupIndex(int):0 -> removeGroup
    1:1:void removeGroup(int):0 -> removeGroup
    2:2:int androidx.appcompat.view.menu.MenuItemImpl.getGroupId():0:0 -> removeGroup
    2:2:int findGroupIndex(int,int):0 -> removeGroup
    2:2:int findGroupIndex(int):0 -> removeGroup
    2:2:void removeGroup(int):0 -> removeGroup
    3:3:void removeGroup(int):0:0 -> removeGroup
    4:4:int androidx.appcompat.view.menu.MenuItemImpl.getGroupId():0:0 -> removeGroup
    4:4:void removeGroup(int):0 -> removeGroup
    5:5:void removeGroup(int):0:0 -> removeGroup
    1:1:int findItemIndex(int):0:0 -> removeItem
    1:1:void removeItem(int):0 -> removeItem
    2:2:int androidx.appcompat.view.menu.MenuItemImpl.getItemId():0:0 -> removeItem
    2:2:int findItemIndex(int):0 -> removeItem
    2:2:void removeItem(int):0 -> removeItem
    3:3:void removeItem(int):0:0 -> removeItem
    1:1:boolean androidx.appcompat.view.menu.MenuItemImpl.invoke():0:0 -> s
    1:1:boolean performItemAction(android.view.MenuItem,androidx.appcompat.view.menu.MenuPresenter,int):0 -> s
    2:2:android.content.Context getContext():0:0 -> s
    2:2:boolean androidx.appcompat.view.menu.MenuItemImpl.invoke():0 -> s
    2:2:boolean performItemAction(android.view.MenuItem,androidx.appcompat.view.menu.MenuPresenter,int):0 -> s
    3:3:boolean androidx.appcompat.view.menu.MenuItemImpl.invoke():0:0 -> s
    3:3:boolean performItemAction(android.view.MenuItem,androidx.appcompat.view.menu.MenuPresenter,int):0 -> s
    4:4:androidx.core.view.ActionProvider androidx.appcompat.view.menu.MenuItemImpl.getSupportActionProvider():0:0 -> s
    4:4:boolean performItemAction(android.view.MenuItem,androidx.appcompat.view.menu.MenuPresenter,int):0 -> s
    5:5:boolean performItemAction(android.view.MenuItem,androidx.appcompat.view.menu.MenuPresenter,int):0:0 -> s
    6:6:android.content.Context getContext():0:0 -> s
    6:6:boolean performItemAction(android.view.MenuItem,androidx.appcompat.view.menu.MenuPresenter,int):0 -> s
    7:7:boolean performItemAction(android.view.MenuItem,androidx.appcompat.view.menu.MenuPresenter,int):0:0 -> s
    8:8:void androidx.appcompat.view.menu.MenuItemImpl.setSubMenu(androidx.appcompat.view.menu.SubMenuBuilder):0:0 -> s
    8:8:boolean performItemAction(android.view.MenuItem,androidx.appcompat.view.menu.MenuPresenter,int):0 -> s
    9:9:java.lang.CharSequence androidx.appcompat.view.menu.MenuItemImpl.getTitle():0:0 -> s
    9:9:void androidx.appcompat.view.menu.MenuItemImpl.setSubMenu(androidx.appcompat.view.menu.SubMenuBuilder):0 -> s
    9:9:boolean performItemAction(android.view.MenuItem,androidx.appcompat.view.menu.MenuPresenter,int):0 -> s
    10:10:void androidx.appcompat.view.menu.MenuItemImpl.setSubMenu(androidx.appcompat.view.menu.SubMenuBuilder):0:0 -> s
    10:10:boolean performItemAction(android.view.MenuItem,androidx.appcompat.view.menu.MenuPresenter,int):0 -> s
    11:11:android.view.SubMenu androidx.appcompat.view.menu.MenuItemImpl.getSubMenu():0:0 -> s
    11:11:boolean performItemAction(android.view.MenuItem,androidx.appcompat.view.menu.MenuPresenter,int):0 -> s
    12:12:boolean performItemAction(android.view.MenuItem,androidx.appcompat.view.menu.MenuPresenter,int):0:0 -> s
    13:13:boolean dispatchSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder,androidx.appcompat.view.menu.MenuPresenter):0:0 -> s
    13:13:boolean performItemAction(android.view.MenuItem,androidx.appcompat.view.menu.MenuPresenter,int):0 -> s
    14:14:boolean performItemAction(android.view.MenuItem,androidx.appcompat.view.menu.MenuPresenter,int):0:0 -> s
    1:1:int androidx.appcompat.view.menu.MenuItemImpl.getGroupId():0:0 -> setGroupCheckable
    1:1:void setGroupCheckable(int,boolean,boolean):0 -> setGroupCheckable
    2:2:void androidx.appcompat.view.menu.MenuItemImpl.setExclusiveCheckable(boolean):0:0 -> setGroupCheckable
    2:2:void setGroupCheckable(int,boolean,boolean):0 -> setGroupCheckable
    3:3:void setGroupCheckable(int,boolean,boolean):0:0 -> setGroupCheckable
    1:1:int androidx.appcompat.view.menu.MenuItemImpl.getGroupId():0:0 -> setGroupEnabled
    1:1:void setGroupEnabled(int,boolean):0 -> setGroupEnabled
    2:2:void setGroupEnabled(int,boolean):0:0 -> setGroupEnabled
    1:1:int androidx.appcompat.view.menu.MenuItemImpl.getGroupId():0:0 -> setGroupVisible
    1:1:void setGroupVisible(int,boolean):0 -> setGroupVisible
    2:2:void setGroupVisible(int,boolean):0:0 -> setGroupVisible
    void removeItemAtInt(int,boolean) -> t
    void removeMenuPresenter(androidx.appcompat.view.menu.MenuPresenter) -> u
    void restoreActionViewStates(android.os.Bundle) -> v
    void saveActionViewStates(android.os.Bundle) -> w
    1:1:android.content.res.Resources getResources():0:0 -> x
    1:1:void setHeaderInternal(int,java.lang.CharSequence,int,android.graphics.drawable.Drawable,android.view.View):0 -> x
    2:2:void setHeaderInternal(int,java.lang.CharSequence,int,android.graphics.drawable.Drawable,android.view.View):0:0 -> x
    3:3:android.content.Context getContext():0:0 -> x
    3:3:void setHeaderInternal(int,java.lang.CharSequence,int,android.graphics.drawable.Drawable,android.view.View):0 -> x
    4:4:android.graphics.drawable.Drawable androidx.core.content.ContextCompat.getDrawable(android.content.Context,int):0:0 -> x
    4:4:void setHeaderInternal(int,java.lang.CharSequence,int,android.graphics.drawable.Drawable,android.view.View):0 -> x
    5:5:void setHeaderInternal(int,java.lang.CharSequence,int,android.graphics.drawable.Drawable,android.view.View):0:0 -> x
    void startDispatchingItemsChanged() -> y
    void stopDispatchingItemsChanged() -> z
androidx.appcompat.view.menu.MenuBuilder$Callback -> a.b.g.i.g$a:
    void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> a
    boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> b
androidx.appcompat.view.menu.MenuBuilder$ItemInvoker -> a.b.g.i.g$b:
    boolean invokeItem(androidx.appcompat.view.menu.MenuItemImpl) -> b
androidx.appcompat.view.menu.MenuDialogHelper -> a.b.g.i.h:
    androidx.appcompat.app.AlertDialog mDialog -> b
    androidx.appcompat.view.menu.MenuBuilder mMenu -> a
    androidx.appcompat.view.menu.ListMenuPresenter mPresenter -> c
    1:1:void dismiss():0:0 -> b
    1:1:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean):0 -> b
    boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> c
    1:1:java.lang.Object androidx.appcompat.view.menu.ListMenuPresenter$MenuAdapter.getItem(int):0:0 -> onClick
    1:1:void onClick(android.content.DialogInterface,int):0 -> onClick
    2:2:void onClick(android.content.DialogInterface,int):0:0 -> onClick
    1:1:void androidx.appcompat.view.menu.ListMenuPresenter.onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean):0:0 -> onDismiss
    1:1:void onDismiss(android.content.DialogInterface):0 -> onDismiss
androidx.appcompat.view.menu.MenuItemImpl -> a.b.g.i.i:
    char mShortcutNumericChar -> h
    char mShortcutAlphabeticChar -> j
    android.view.View mActionView -> z
    boolean mHasIconTint -> u
    int mOrdering -> d
    java.lang.CharSequence mTitleCondensed -> f
    boolean mNeedToApplyIconTint -> w
    int mGroup -> b
    androidx.appcompat.view.menu.SubMenuBuilder mSubMenu -> o
    android.view.MenuItem$OnActionExpandListener mOnActionExpandListener -> B
    android.content.Intent mIntent -> g
    java.lang.CharSequence mContentDescription -> q
    int mShowAsAction -> y
    android.graphics.drawable.Drawable mIconDrawable -> l
    androidx.core.view.ActionProvider mActionProvider -> A
    boolean mIsActionViewExpanded -> C
    int mIconResId -> m
    int mShortcutAlphabeticModifiers -> k
    android.content.res.ColorStateList mIconTintList -> s
    int mShortcutNumericModifiers -> i
    java.lang.CharSequence mTitle -> e
    boolean mHasIconTintMode -> v
    int mCategoryOrder -> c
    int mId -> a
    android.view.MenuItem$OnMenuItemClickListener mClickListener -> p
    java.lang.CharSequence mTooltipText -> r
    int mFlags -> x
    androidx.appcompat.view.menu.MenuBuilder mMenu -> n
    android.graphics.PorterDuff$Mode mIconTintMode -> t
    android.view.ContextMenu$ContextMenuInfo mMenuInfo -> D
    androidx.core.view.ActionProvider getSupportActionProvider() -> a
    1:1:void androidx.core.view.ActionProvider.reset():0:0 -> b
    1:1:androidx.core.internal.view.SupportMenuItem setSupportActionProvider(androidx.core.view.ActionProvider):0 -> b
    2:2:androidx.core.internal.view.SupportMenuItem setSupportActionProvider(androidx.core.view.ActionProvider):0:0 -> b
    void appendModifier(java.lang.StringBuilder,int,int,java.lang.String) -> c
    1:1:void androidx.core.graphics.drawable.DrawableCompat.setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList):0:0 -> d
    1:1:android.graphics.drawable.Drawable applyIconTintIfNecessary(android.graphics.drawable.Drawable):0 -> d
    2:2:android.graphics.drawable.Drawable applyIconTintIfNecessary(android.graphics.drawable.Drawable):0:0 -> d
    3:3:void androidx.core.graphics.drawable.DrawableCompat.setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode):0:0 -> d
    3:3:android.graphics.drawable.Drawable applyIconTintIfNecessary(android.graphics.drawable.Drawable):0 -> d
    4:4:android.graphics.drawable.Drawable applyIconTintIfNecessary(android.graphics.drawable.Drawable):0:0 -> d
    char getShortcut() -> e
    boolean hasCollapsibleActionView() -> f
    boolean isActionButton() -> g
    1:1:android.content.Context androidx.appcompat.view.menu.MenuBuilder.getContext():0:0 -> getIcon
    1:1:android.graphics.drawable.Drawable getIcon():0 -> getIcon
    2:2:android.graphics.drawable.Drawable getIcon():0:0 -> getIcon
    boolean isExclusiveCheckable() -> h
    androidx.core.internal.view.SupportMenuItem setActionView(android.view.View) -> i
    void setCheckedInt(boolean) -> j
    void setIsActionButton(boolean) -> k
    boolean setVisibleInt(boolean) -> l
    boolean shouldShowShortcut() -> m
    1:1:androidx.core.internal.view.SupportMenuItem setActionView(int):0:0 -> setActionView
    1:1:android.view.MenuItem setActionView(int):0 -> setActionView
    2:2:android.content.Context androidx.appcompat.view.menu.MenuBuilder.getContext():0:0 -> setActionView
    2:2:androidx.core.internal.view.SupportMenuItem setActionView(int):0 -> setActionView
    2:2:android.view.MenuItem setActionView(int):0 -> setActionView
    3:3:androidx.core.internal.view.SupportMenuItem setActionView(int):0:0 -> setActionView
    3:3:android.view.MenuItem setActionView(int):0 -> setActionView
    1:1:void androidx.appcompat.view.menu.MenuBuilder.setExclusiveItemChecked(android.view.MenuItem):0:0 -> setChecked
    1:1:android.view.MenuItem setChecked(boolean):0 -> setChecked
    2:2:int getGroupId():0:0 -> setChecked
    2:2:void androidx.appcompat.view.menu.MenuBuilder.setExclusiveItemChecked(android.view.MenuItem):0 -> setChecked
    2:2:android.view.MenuItem setChecked(boolean):0 -> setChecked
    3:3:void androidx.appcompat.view.menu.MenuBuilder.setExclusiveItemChecked(android.view.MenuItem):0:0 -> setChecked
    3:3:android.view.MenuItem setChecked(boolean):0 -> setChecked
    4:4:android.view.MenuItem setChecked(boolean):0:0 -> setChecked
    1:1:androidx.core.internal.view.SupportMenuItem setContentDescription(java.lang.CharSequence):0:0 -> setContentDescription
    1:1:android.view.MenuItem setContentDescription(java.lang.CharSequence):0 -> setContentDescription
    1:1:androidx.core.internal.view.SupportMenuItem setShowAsActionFlags(int):0:0 -> setShowAsActionFlags
    1:1:android.view.MenuItem setShowAsActionFlags(int):0 -> setShowAsActionFlags
    1:1:android.content.Context androidx.appcompat.view.menu.MenuBuilder.getContext():0:0 -> setTitle
    1:1:android.view.MenuItem setTitle(int):0 -> setTitle
    2:2:android.view.MenuItem setTitle(int):0:0 -> setTitle
    1:1:androidx.core.internal.view.SupportMenuItem setTooltipText(java.lang.CharSequence):0:0 -> setTooltipText
    1:1:android.view.MenuItem setTooltipText(java.lang.CharSequence):0 -> setTooltipText
    1:1:void androidx.appcompat.view.menu.MenuBuilder.onItemVisibleChanged(androidx.appcompat.view.menu.MenuItemImpl):0:0 -> setVisible
    1:1:android.view.MenuItem setVisible(boolean):0 -> setVisible
androidx.appcompat.view.menu.MenuItemImpl$1 -> a.b.g.i.i$a:
    androidx.appcompat.view.menu.MenuItemImpl this$0 -> a
androidx.appcompat.view.menu.MenuItemWrapperICS -> a.b.g.i.j:
    java.lang.reflect.Method mSetExclusiveCheckableMethod -> e
    androidx.core.internal.view.SupportMenuItem mWrappedObject -> d
    1:1:android.view.View androidx.appcompat.view.menu.MenuItemWrapperICS$CollapsibleActionViewWrapper.getWrappedView():0:0 -> getActionView
    1:1:android.view.View getActionView():0 -> getActionView
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapper -> a.b.g.i.j$a:
    android.view.ActionProvider mInner -> b
    androidx.appcompat.view.menu.MenuItemWrapperICS this$0 -> c
    boolean hasSubMenu() -> a
    android.view.View onCreateActionView() -> c
    boolean onPerformDefaultAction() -> e
    void onPrepareSubMenu(android.view.SubMenu) -> f
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapperJB -> a.b.g.i.j$b:
    androidx.core.view.ActionProvider$VisibilityListener mListener -> d
    boolean isVisible() -> b
    android.view.View onCreateActionView(android.view.MenuItem) -> d
    boolean overridesItemVisibility() -> g
    void setVisibilityListener(androidx.core.view.ActionProvider$VisibilityListener) -> h
    1:1:void androidx.appcompat.view.menu.MenuItemImpl$1.onActionProviderVisibilityChanged(boolean):0:0 -> onActionProviderVisibilityChanged
    1:1:void onActionProviderVisibilityChanged(boolean):0 -> onActionProviderVisibilityChanged
    2:2:void androidx.appcompat.view.menu.MenuBuilder.onItemVisibleChanged(androidx.appcompat.view.menu.MenuItemImpl):0:0 -> onActionProviderVisibilityChanged
    2:2:void androidx.appcompat.view.menu.MenuItemImpl$1.onActionProviderVisibilityChanged(boolean):0 -> onActionProviderVisibilityChanged
    2:2:void onActionProviderVisibilityChanged(boolean):0 -> onActionProviderVisibilityChanged
androidx.appcompat.view.menu.MenuItemWrapperICS$CollapsibleActionViewWrapper -> a.b.g.i.j$c:
    android.view.CollapsibleActionView mWrappedView -> a
    void onActionViewExpanded() -> a
    void onActionViewCollapsed() -> d
androidx.appcompat.view.menu.MenuItemWrapperICS$OnActionExpandListenerWrapper -> a.b.g.i.j$d:
    androidx.appcompat.view.menu.MenuItemWrapperICS this$0 -> b
    android.view.MenuItem$OnActionExpandListener mObject -> a
androidx.appcompat.view.menu.MenuItemWrapperICS$OnMenuItemClickListenerWrapper -> a.b.g.i.j$e:
    android.view.MenuItem$OnMenuItemClickListener mObject -> a
    androidx.appcompat.view.menu.MenuItemWrapperICS this$0 -> b
androidx.appcompat.view.menu.MenuPopup -> a.b.g.i.k:
    android.graphics.Rect mEpicenterBounds -> a
    boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> c
    void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> j
    boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> k
    void addMenu(androidx.appcompat.view.menu.MenuBuilder) -> l
    boolean closeMenuOnSubMenuOpened() -> m
    int measureIndividualMenuWidth(android.widget.ListAdapter,android.view.ViewGroup,android.content.Context,int) -> n
    void setAnchorView(android.view.View) -> o
    1:1:androidx.appcompat.view.menu.MenuAdapter toMenuAdapter(android.widget.ListAdapter):0:0 -> onItemClick
    1:1:void onItemClick(android.widget.AdapterView,android.view.View,int,long):0 -> onItemClick
    2:2:void onItemClick(android.widget.AdapterView,android.view.View,int,long):0:0 -> onItemClick
    void setForceShowIcon(boolean) -> p
    void setGravity(int) -> q
    void setHorizontalOffset(int) -> r
    void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> s
    void setShowTitle(boolean) -> t
    void setVerticalOffset(int) -> u
    boolean shouldPreserveIconSpacing(androidx.appcompat.view.menu.MenuBuilder) -> v
androidx.appcompat.view.menu.MenuPopupHelper -> a.b.g.i.l:
    android.content.Context mContext -> a
    androidx.appcompat.view.menu.MenuBuilder mMenu -> b
    int mDropDownGravity -> g
    int mPopupStyleAttr -> d
    android.widget.PopupWindow$OnDismissListener mOnDismissListener -> k
    int mPopupStyleRes -> e
    boolean mForceShowIcon -> h
    androidx.appcompat.view.menu.MenuPresenter$Callback mPresenterCallback -> i
    android.widget.PopupWindow$OnDismissListener mInternalOnDismissListener -> l
    boolean mOverflowOnly -> c
    android.view.View mAnchorView -> f
    androidx.appcompat.view.menu.MenuPopup mPopup -> j
    1:1:androidx.appcompat.view.menu.MenuPopup createPopup():0:0 -> a
    1:1:androidx.appcompat.view.menu.MenuPopup getPopup():0 -> a
    2:2:androidx.appcompat.view.menu.MenuPopup getPopup():0:0 -> a
    boolean isShowing() -> b
    void onDismiss() -> c
    void setPresenterCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> d
    1:1:int androidx.core.view.ViewCompat.getLayoutDirection(android.view.View):0:0 -> e
    1:1:void showPopup(int,int,boolean,boolean):0 -> e
    2:2:int androidx.core.view.GravityCompat.getAbsoluteGravity(int,int):0:0 -> e
    2:2:void showPopup(int,int,boolean,boolean):0 -> e
    3:3:void showPopup(int,int,boolean,boolean):0:0 -> e
    4:4:void androidx.appcompat.view.menu.MenuPopup.setEpicenterBounds(android.graphics.Rect):0:0 -> e
    4:4:void showPopup(int,int,boolean,boolean):0 -> e
    5:5:void showPopup(int,int,boolean,boolean):0:0 -> e
    boolean tryShow() -> f
androidx.appcompat.view.menu.MenuPopupHelper$1 -> a.b.g.i.l$a:
    androidx.appcompat.view.menu.MenuPopupHelper this$0 -> a
androidx.appcompat.view.menu.MenuPresenter -> a.b.g.i.m:
    void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> b
    boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> c
    void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> d
    boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> f
    boolean flagActionItems() -> g
    void updateMenuView(boolean) -> h
    void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> j
    boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> k
androidx.appcompat.view.menu.MenuPresenter$Callback -> a.b.g.i.m$a:
    void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> b
    boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> c
androidx.appcompat.view.menu.MenuView -> a.b.g.i.n:
    void initialize(androidx.appcompat.view.menu.MenuBuilder) -> c
androidx.appcompat.view.menu.MenuView$ItemView -> a.b.g.i.n$a:
    void initialize(androidx.appcompat.view.menu.MenuItemImpl,int) -> c
androidx.appcompat.view.menu.MenuWrapperICS -> a.b.g.i.o:
    androidx.core.internal.view.SupportMenu mWrappedObject -> d
    1:1:void androidx.appcompat.view.menu.BaseMenuWrapper.internalClear():0:0 -> clear
    1:1:void clear():0 -> clear
    2:2:void clear():0:0 -> clear
    1:1:void androidx.appcompat.view.menu.BaseMenuWrapper.internalRemoveGroup(int):0:0 -> removeGroup
    1:1:void removeGroup(int):0 -> removeGroup
    2:2:int androidx.collection.SimpleArrayMap.size():0:0 -> removeGroup
    2:2:void androidx.appcompat.view.menu.BaseMenuWrapper.internalRemoveGroup(int):0 -> removeGroup
    2:2:void removeGroup(int):0 -> removeGroup
    3:3:void androidx.appcompat.view.menu.BaseMenuWrapper.internalRemoveGroup(int):0:0 -> removeGroup
    3:3:void removeGroup(int):0 -> removeGroup
    4:4:void removeGroup(int):0:0 -> removeGroup
    1:1:void androidx.appcompat.view.menu.BaseMenuWrapper.internalRemoveItem(int):0:0 -> removeItem
    1:1:void removeItem(int):0 -> removeItem
    2:2:int androidx.collection.SimpleArrayMap.size():0:0 -> removeItem
    2:2:void androidx.appcompat.view.menu.BaseMenuWrapper.internalRemoveItem(int):0 -> removeItem
    2:2:void removeItem(int):0 -> removeItem
    3:3:void androidx.appcompat.view.menu.BaseMenuWrapper.internalRemoveItem(int):0:0 -> removeItem
    3:3:void removeItem(int):0 -> removeItem
    4:4:void removeItem(int):0:0 -> removeItem
androidx.appcompat.view.menu.ShowableListMenu -> a.b.g.i.p:
    boolean isShowing() -> a
    android.widget.ListView getListView() -> e
    void show() -> i
androidx.appcompat.view.menu.StandardMenuPopup -> a.b.g.i.q:
    androidx.appcompat.view.menu.MenuPresenter$Callback mPresenterCallback -> o
    androidx.appcompat.view.menu.MenuBuilder mMenu -> c
    android.content.Context mContext -> b
    int mPopupStyleRes -> h
    int mPopupMaxWidth -> f
    boolean mShowTitle -> u
    int mPopupStyleAttr -> g
    android.view.ViewTreeObserver mTreeObserver -> p
    boolean mWasDismissed -> q
    boolean mHasContentWidth -> r
    android.view.View mAnchorView -> m
    androidx.appcompat.widget.MenuPopupWindow mPopup -> i
    android.view.View$OnAttachStateChangeListener mAttachStateChangeListener -> k
    android.view.View mShownAnchorView -> n
    boolean mOverflowOnly -> e
    android.view.ViewTreeObserver$OnGlobalLayoutListener mGlobalLayoutListener -> j
    int mDropDownGravity -> t
    android.widget.PopupWindow$OnDismissListener mOnDismissListener -> l
    androidx.appcompat.view.menu.MenuAdapter mAdapter -> d
    int mContentWidth -> s
    boolean isShowing() -> a
    void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> b
    void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> d
    1:1:android.widget.ListView androidx.appcompat.widget.ListPopupWindow.getListView():0:0 -> e
    1:1:android.widget.ListView getListView():0 -> e
    1:1:void androidx.appcompat.view.menu.MenuPopupHelper.setForceShowIcon(boolean):0:0 -> f
    1:1:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0 -> f
    2:2:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0:0 -> f
    3:3:void androidx.appcompat.view.menu.MenuPopupHelper.setOnDismissListener(android.widget.PopupWindow$OnDismissListener):0:0 -> f
    3:3:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0 -> f
    4:4:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0:0 -> f
    5:5:int androidx.appcompat.widget.ListPopupWindow.getHorizontalOffset():0:0 -> f
    5:5:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0 -> f
    6:6:int androidx.appcompat.widget.ListPopupWindow.getVerticalOffset():0:0 -> f
    6:6:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0 -> f
    7:7:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0:0 -> f
    8:8:int androidx.core.view.ViewCompat.getLayoutDirection(android.view.View):0:0 -> f
    8:8:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0 -> f
    9:9:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0:0 -> f
    10:10:boolean androidx.appcompat.view.menu.MenuPopupHelper.tryShow(int,int):0:0 -> f
    10:10:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0 -> f
    11:11:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0:0 -> f
    boolean flagActionItems() -> g
    void updateMenuView(boolean) -> h
    1:1:boolean tryShow():0:0 -> i
    1:1:void show():0 -> i
    2:2:void androidx.appcompat.widget.ListPopupWindow.setOnDismissListener(android.widget.PopupWindow$OnDismissListener):0:0 -> i
    2:2:boolean tryShow():0 -> i
    2:2:void show():0 -> i
    3:3:boolean tryShow():0:0 -> i
    3:3:void show():0 -> i
    4:4:void androidx.appcompat.widget.ListPopupWindow.setOnItemClickListener(android.widget.AdapterView$OnItemClickListener):0:0 -> i
    4:4:boolean tryShow():0 -> i
    4:4:void show():0 -> i
    5:5:boolean tryShow():0:0 -> i
    5:5:void show():0 -> i
    6:6:void androidx.appcompat.widget.ListPopupWindow.setAnchorView(android.view.View):0:0 -> i
    6:6:boolean tryShow():0 -> i
    6:6:void show():0 -> i
    7:7:boolean tryShow():0:0 -> i
    7:7:void show():0 -> i
    8:8:void androidx.appcompat.widget.ListPopupWindow.setDropDownGravity(int):0:0 -> i
    8:8:boolean tryShow():0 -> i
    8:8:void show():0 -> i
    9:9:boolean tryShow():0:0 -> i
    9:9:void show():0 -> i
    10:10:void androidx.appcompat.widget.ListPopupWindow.setInputMethodMode(int):0:0 -> i
    10:10:boolean tryShow():0 -> i
    10:10:void show():0 -> i
    11:11:boolean tryShow():0:0 -> i
    11:11:void show():0 -> i
    12:12:android.graphics.Rect androidx.appcompat.view.menu.MenuPopup.getEpicenterBounds():0:0 -> i
    12:12:boolean tryShow():0 -> i
    12:12:void show():0 -> i
    13:13:void androidx.appcompat.widget.ListPopupWindow.setEpicenterBounds(android.graphics.Rect):0:0 -> i
    13:13:boolean tryShow():0 -> i
    13:13:void show():0 -> i
    14:14:boolean tryShow():0:0 -> i
    14:14:void show():0 -> i
    15:15:android.widget.ListView androidx.appcompat.widget.ListPopupWindow.getListView():0:0 -> i
    15:15:boolean tryShow():0 -> i
    15:15:void show():0 -> i
    16:16:boolean tryShow():0:0 -> i
    16:16:void show():0 -> i
    17:17:java.lang.CharSequence androidx.appcompat.view.menu.MenuBuilder.getHeaderTitle():0:0 -> i
    17:17:boolean tryShow():0 -> i
    17:17:void show():0 -> i
    18:18:boolean tryShow():0:0 -> i
    18:18:void show():0 -> i
    19:19:java.lang.CharSequence androidx.appcompat.view.menu.MenuBuilder.getHeaderTitle():0:0 -> i
    19:19:boolean tryShow():0 -> i
    19:19:void show():0 -> i
    20:20:boolean tryShow():0:0 -> i
    20:20:void show():0 -> i
    21:21:void show():0:0 -> i
    void addMenu(androidx.appcompat.view.menu.MenuBuilder) -> l
    void setAnchorView(android.view.View) -> o
    1:1:void androidx.appcompat.view.menu.MenuBuilder.close():0:0 -> onDismiss
    1:1:void onDismiss():0 -> onDismiss
    2:2:void onDismiss():0:0 -> onDismiss
    1:1:void androidx.appcompat.view.menu.MenuAdapter.setForceShowIcon(boolean):0:0 -> p
    1:1:void setForceShowIcon(boolean):0 -> p
    void setGravity(int) -> q
    1:1:void androidx.appcompat.widget.ListPopupWindow.setHorizontalOffset(int):0:0 -> r
    1:1:void setHorizontalOffset(int):0 -> r
    void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> s
    void setShowTitle(boolean) -> t
    1:1:void androidx.appcompat.widget.ListPopupWindow.setVerticalOffset(int):0:0 -> u
    1:1:void setVerticalOffset(int):0 -> u
androidx.appcompat.view.menu.StandardMenuPopup$1 -> a.b.g.i.q$a:
    androidx.appcompat.view.menu.StandardMenuPopup this$0 -> a
    1:1:boolean androidx.appcompat.widget.ListPopupWindow.isModal():0:0 -> onGlobalLayout
    1:1:void onGlobalLayout():0 -> onGlobalLayout
    2:2:void onGlobalLayout():0:0 -> onGlobalLayout
androidx.appcompat.view.menu.StandardMenuPopup$2 -> a.b.g.i.q$b:
    androidx.appcompat.view.menu.StandardMenuPopup this$0 -> a
androidx.appcompat.view.menu.SubMenuBuilder -> a.b.g.i.r:
    androidx.appcompat.view.menu.MenuItemImpl mItem -> A
    androidx.appcompat.view.menu.MenuBuilder mParentMenu -> z
    boolean collapseItemActionView(androidx.appcompat.view.menu.MenuItemImpl) -> d
    boolean dispatchMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> e
    boolean expandItemActionView(androidx.appcompat.view.menu.MenuItemImpl) -> f
    1:1:int androidx.appcompat.view.menu.MenuItemImpl.getItemId():0:0 -> j
    1:1:java.lang.String getActionViewStatesKey():0 -> j
    2:2:java.lang.String getActionViewStatesKey():0:0 -> j
    androidx.appcompat.view.menu.MenuBuilder getRootMenu() -> k
    boolean isGroupDividerEnabled() -> m
    boolean isQwertyMode() -> n
    boolean isShortcutsVisible() -> o
    1:1:androidx.appcompat.view.menu.MenuBuilder androidx.appcompat.view.menu.MenuBuilder.setHeaderIconInt(int):0:0 -> setHeaderIcon
    1:1:android.view.SubMenu setHeaderIcon(int):0 -> setHeaderIcon
    2:2:androidx.appcompat.view.menu.MenuBuilder androidx.appcompat.view.menu.MenuBuilder.setHeaderIconInt(android.graphics.drawable.Drawable):0:0 -> setHeaderIcon
    2:2:android.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable):0 -> setHeaderIcon
    1:1:androidx.appcompat.view.menu.MenuBuilder androidx.appcompat.view.menu.MenuBuilder.setHeaderTitleInt(int):0:0 -> setHeaderTitle
    1:1:android.view.SubMenu setHeaderTitle(int):0 -> setHeaderTitle
    2:2:androidx.appcompat.view.menu.MenuBuilder androidx.appcompat.view.menu.MenuBuilder.setHeaderTitleInt(java.lang.CharSequence):0:0 -> setHeaderTitle
    2:2:android.view.SubMenu setHeaderTitle(java.lang.CharSequence):0 -> setHeaderTitle
    1:1:androidx.appcompat.view.menu.MenuBuilder androidx.appcompat.view.menu.MenuBuilder.setHeaderViewInt(android.view.View):0:0 -> setHeaderView
    1:1:android.view.SubMenu setHeaderView(android.view.View):0 -> setHeaderView
androidx.appcompat.view.menu.SubMenuWrapperICS -> a.b.g.i.s:
    androidx.core.internal.view.SupportSubMenu mSubMenu -> e
androidx.appcompat.widget.AbsActionBarView -> a.b.h.a:
    android.content.Context mPopupContext -> b
    androidx.appcompat.widget.ActionMenuView mMenuView -> c
    androidx.appcompat.widget.ActionMenuPresenter mActionMenuPresenter -> d
    boolean mEatingTouch -> g
    int mContentHeight -> e
    boolean mEatingHover -> h
    androidx.core.view.ViewPropertyAnimatorCompat mVisibilityAnim -> f
    androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener mVisAnimListener -> a
    void access$001(androidx.appcompat.widget.AbsActionBarView,int) -> a
    void access$101(androidx.appcompat.widget.AbsActionBarView,int) -> b
    int measureChildView(android.view.View,int,int,int) -> c
    int positionChild(android.view.View,int,int,int,boolean) -> d
    1:1:androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener.withFinalVisibility(androidx.core.view.ViewPropertyAnimatorCompat,int):0:0 -> e
    1:1:androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long):0 -> e
    2:2:androidx.core.view.ViewPropertyAnimatorCompat androidx.core.view.ViewPropertyAnimatorCompat.setListener(androidx.core.view.ViewPropertyAnimatorListener):0:0 -> e
    2:2:androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long):0 -> e
    3:3:androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long):0:0 -> e
    4:4:androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener.withFinalVisibility(androidx.core.view.ViewPropertyAnimatorCompat,int):0:0 -> e
    4:4:androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long):0 -> e
    5:5:androidx.core.view.ViewPropertyAnimatorCompat androidx.core.view.ViewPropertyAnimatorCompat.setListener(androidx.core.view.ViewPropertyAnimatorListener):0:0 -> e
    5:5:androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long):0 -> e
    1:1:void androidx.appcompat.widget.ActionMenuPresenter.onConfigurationChanged(android.content.res.Configuration):0:0 -> onConfigurationChanged
    1:1:void onConfigurationChanged(android.content.res.Configuration):0 -> onConfigurationChanged
    2:2:int androidx.appcompat.view.ActionBarPolicy.getMaxActionButtons():0:0 -> onConfigurationChanged
    2:2:void androidx.appcompat.widget.ActionMenuPresenter.onConfigurationChanged(android.content.res.Configuration):0 -> onConfigurationChanged
    2:2:void onConfigurationChanged(android.content.res.Configuration):0 -> onConfigurationChanged
    3:3:void androidx.appcompat.widget.ActionMenuPresenter.onConfigurationChanged(android.content.res.Configuration):0:0 -> onConfigurationChanged
    3:3:void onConfigurationChanged(android.content.res.Configuration):0 -> onConfigurationChanged
androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener -> a.b.h.a$a:
    boolean mCanceled -> a
    int mFinalVisibility -> b
    androidx.appcompat.widget.AbsActionBarView this$0 -> c
    void onAnimationEnd(android.view.View) -> a
    void onAnimationStart(android.view.View) -> b
    void onAnimationCancel(android.view.View) -> c
androidx.appcompat.widget.ActionBarBackgroundDrawable -> a.b.h.b:
    androidx.appcompat.widget.ActionBarContainer mContainer -> a
androidx.appcompat.widget.ActionBarContainer -> androidx.appcompat.widget.ActionBarContainer:
    android.graphics.drawable.Drawable mBackground -> e
    android.graphics.drawable.Drawable mStackedBackground -> f
    android.graphics.drawable.Drawable mSplitBackground -> g
    boolean mIsStacked -> i
    int mHeight -> j
    android.view.View mActionBarView -> c
    android.view.View mTabContainer -> b
    boolean mIsSplit -> h
    boolean mIsTransitioning -> a
    android.view.View mContextView -> d
    1:1:void androidx.core.view.ViewCompat.setBackground(android.view.View,android.graphics.drawable.Drawable):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet):0:0 -> <init>
    int getMeasuredHeightWithMargins(android.view.View) -> a
    boolean isCollapsed(android.view.View) -> b
androidx.appcompat.widget.ActionBarContextView -> androidx.appcompat.widget.ActionBarContextView:
    android.widget.TextView mTitleView -> o
    android.view.View mClose -> k
    android.widget.TextView mSubtitleView -> p
    android.view.View mCustomView -> m
    android.widget.LinearLayout mTitleLayout -> n
    android.view.View mCloseButton -> l
    int mCloseItemLayout -> t
    int mSubtitleStyleRes -> r
    java.lang.CharSequence mTitle -> i
    java.lang.CharSequence mSubtitle -> j
    boolean mTitleOptional -> s
    int mTitleStyleRes -> q
    1:1:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    2:2:androidx.appcompat.widget.TintTypedArray androidx.appcompat.widget.TintTypedArray.obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int):0:0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    3:3:android.graphics.drawable.Drawable androidx.appcompat.widget.TintTypedArray.getDrawable(int):0:0 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    4:4:void androidx.core.view.ViewCompat.setBackground(android.view.View,android.graphics.drawable.Drawable):0:0 -> <init>
    4:4:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    4:4:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    5:5:int androidx.appcompat.widget.TintTypedArray.getResourceId(int,int):0:0 -> <init>
    5:5:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    5:5:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    6:6:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    6:6:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    7:7:int androidx.appcompat.widget.TintTypedArray.getResourceId(int,int):0:0 -> <init>
    7:7:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    7:7:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    8:8:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    8:8:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    9:9:int androidx.appcompat.widget.TintTypedArray.getLayoutDimension(int,int):0:0 -> <init>
    9:9:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    9:9:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    10:10:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    10:10:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    11:11:int androidx.appcompat.widget.TintTypedArray.getResourceId(int,int):0:0 -> <init>
    11:11:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    11:11:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    12:12:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    12:12:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    13:13:void androidx.appcompat.widget.TintTypedArray.recycle():0:0 -> <init>
    13:13:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    13:13:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    1:1:void androidx.appcompat.widget.ActionMenuPresenter.setReserveOverflow(boolean):0:0 -> f
    1:1:void initForMode(androidx.appcompat.view.ActionMode):0 -> f
    2:2:void initForMode(androidx.appcompat.view.ActionMode):0:0 -> f
    3:3:androidx.appcompat.view.menu.MenuView androidx.appcompat.widget.ActionMenuPresenter.getMenuView(android.view.ViewGroup):0:0 -> f
    3:3:void initForMode(androidx.appcompat.view.ActionMode):0 -> f
    4:4:androidx.appcompat.view.menu.MenuView androidx.appcompat.view.menu.BaseMenuPresenter.getMenuView(android.view.ViewGroup):0:0 -> f
    4:4:androidx.appcompat.view.menu.MenuView androidx.appcompat.widget.ActionMenuPresenter.getMenuView(android.view.ViewGroup):0 -> f
    4:4:void initForMode(androidx.appcompat.view.ActionMode):0 -> f
    5:5:androidx.appcompat.view.menu.MenuView androidx.appcompat.widget.ActionMenuPresenter.getMenuView(android.view.ViewGroup):0:0 -> f
    5:5:void initForMode(androidx.appcompat.view.ActionMode):0 -> f
    6:6:void initForMode(androidx.appcompat.view.ActionMode):0:0 -> f
    7:7:void androidx.core.view.ViewCompat.setBackground(android.view.View,android.graphics.drawable.Drawable):0:0 -> f
    7:7:void initForMode(androidx.appcompat.view.ActionMode):0 -> f
    8:8:void initForMode(androidx.appcompat.view.ActionMode):0:0 -> f
    void initTitle() -> g
    void killMode() -> h
androidx.appcompat.widget.ActionBarContextView$1 -> androidx.appcompat.widget.ActionBarContextView$a:
    androidx.appcompat.view.ActionMode val$mode -> a
androidx.appcompat.widget.ActionBarOverlayLayout -> androidx.appcompat.widget.ActionBarOverlayLayout:
    int mHideOnContentScrollReference -> l
    boolean mHasNonEmbeddedTabs -> i
    boolean mAnimatingForFling -> k
    androidx.core.view.WindowInsetsCompat mLastBaseInnerInsets -> v
    int mWindowVisibility -> b
    androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback mActionBarVisibilityCallback -> y
    android.graphics.Rect mContentInsets -> p
    java.lang.Runnable mAddActionBarHideOffset -> D
    android.graphics.Rect mBaseContentInsets -> n
    androidx.core.view.WindowInsetsCompat mLastInnerInsets -> x
    android.view.ViewPropertyAnimator mCurrentActionBarTopAnimator -> A
    boolean mOverlayMode -> h
    android.graphics.Rect mLastInnerInsetsRect -> t
    android.graphics.Rect mLastBaseInnerInsetsRect -> r
    android.graphics.drawable.Drawable mWindowContentOverlay -> f
    int mLastSystemUiVisibility -> m
    boolean mHideOnContentScroll -> j
    androidx.core.view.NestedScrollingParentHelper mParentHelper -> E
    android.widget.OverScroller mFlingEstimator -> z
    androidx.appcompat.widget.ContentFrameLayout mContent -> c
    androidx.core.view.WindowInsetsCompat mInnerInsets -> w
    androidx.core.view.WindowInsetsCompat mBaseInnerInsets -> u
    android.animation.AnimatorListenerAdapter mTopAnimatorListener -> B
    int mActionBarHeight -> a
    int[] ATTRS -> F
    android.graphics.Rect mLastBaseContentInsets -> o
    java.lang.Runnable mRemoveActionBarHideOffset -> C
    androidx.appcompat.widget.DecorToolbar mDecorToolbar -> e
    boolean mIgnoreWindowContentOverlay -> g
    android.graphics.Rect mInnerInsetsRect -> s
    androidx.appcompat.widget.ActionBarContainer mActionBarTop -> d
    android.graphics.Rect mBaseInnerInsetsRect -> q
    boolean showOverflowMenu() -> a
    void setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback) -> b
    boolean isOverflowMenuShowPending() -> c
    void setMenuPrepared() -> d
    boolean isOverflowMenuShowing() -> e
    boolean canShowOverflowMenu() -> f
    boolean hideOverflowMenu() -> g
    1:1:androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams generateDefaultLayoutParams():0:0 -> generateDefaultLayoutParams
    1:1:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams():0 -> generateDefaultLayoutParams
    1:1:androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams generateLayoutParams(android.util.AttributeSet):0:0 -> generateLayoutParams
    1:1:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet):0 -> generateLayoutParams
    1:1:int androidx.core.view.NestedScrollingParentHelper.getNestedScrollAxes():0:0 -> getNestedScrollAxes
    1:1:int getNestedScrollAxes():0 -> getNestedScrollAxes
    void initFeature(int) -> h
    void onNestedScrollAccepted(android.view.View,android.view.View,int,int) -> i
    void dismissPopups() -> j
    1:1:void onNestedScroll(android.view.View,int,int,int,int,int):0:0 -> k
    1:1:void onNestedScroll(android.view.View,int,int,int,int,int,int[]):0 -> k
    void onNestedScroll(android.view.View,int,int,int,int,int) -> l
    void onStopNestedScroll(android.view.View,int) -> m
    void onNestedPreScroll(android.view.View,int,int,int[],int) -> n
    boolean onStartNestedScroll(android.view.View,android.view.View,int,int) -> o
    1:1:androidx.core.view.WindowInsetsCompat androidx.core.view.ViewCompat.computeSystemWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,android.graphics.Rect):0:0 -> onApplyWindowInsets
    1:1:android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets):0 -> onApplyWindowInsets
    2:2:androidx.core.view.WindowInsetsCompat androidx.core.view.ViewCompat$Api21Impl.computeSystemWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,android.graphics.Rect):0:0 -> onApplyWindowInsets
    2:2:androidx.core.view.WindowInsetsCompat androidx.core.view.ViewCompat.computeSystemWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,android.graphics.Rect):0 -> onApplyWindowInsets
    2:2:android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets):0 -> onApplyWindowInsets
    3:3:android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets):0:0 -> onApplyWindowInsets
    4:4:androidx.core.view.WindowInsetsCompat androidx.core.view.WindowInsetsCompat.inset(int,int,int,int):0:0 -> onApplyWindowInsets
    4:4:android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets):0 -> onApplyWindowInsets
    5:5:android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets):0:0 -> onApplyWindowInsets
    6:6:androidx.core.view.WindowInsetsCompat androidx.core.view.WindowInsetsCompat.consumeDisplayCutout():0:0 -> onApplyWindowInsets
    6:6:android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets):0 -> onApplyWindowInsets
    7:7:androidx.core.view.WindowInsetsCompat androidx.core.view.WindowInsetsCompat.consumeSystemWindowInsets():0:0 -> onApplyWindowInsets
    7:7:android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets):0 -> onApplyWindowInsets
    8:8:androidx.core.view.WindowInsetsCompat androidx.core.view.WindowInsetsCompat.consumeStableInsets():0:0 -> onApplyWindowInsets
    8:8:android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets):0 -> onApplyWindowInsets
    9:9:android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets):0:0 -> onApplyWindowInsets
    1:1:void androidx.core.view.ViewCompat.requestApplyInsets(android.view.View):0:0 -> onConfigurationChanged
    1:1:void onConfigurationChanged(android.content.res.Configuration):0 -> onConfigurationChanged
    1:1:int androidx.core.view.ViewCompat.getWindowSystemUiVisibility(android.view.View):0:0 -> onMeasure
    1:1:void onMeasure(int,int):0 -> onMeasure
    2:2:void onMeasure(int,int):0:0 -> onMeasure
    3:3:androidx.core.view.WindowInsetsCompat androidx.core.view.WindowInsetsCompat.inset(int,int,int,int):0:0 -> onMeasure
    3:3:void onMeasure(int,int):0 -> onMeasure
    4:4:void onMeasure(int,int):0:0 -> onMeasure
    5:5:void androidx.core.view.WindowInsetsCompat$BuilderImpl.<init>():0:0 -> onMeasure
    5:5:void androidx.core.view.WindowInsetsCompat$BuilderImpl29.<init>(androidx.core.view.WindowInsetsCompat):0 -> onMeasure
    5:5:void androidx.core.view.WindowInsetsCompat$BuilderImpl30.<init>(androidx.core.view.WindowInsetsCompat):0 -> onMeasure
    5:5:void androidx.core.view.WindowInsetsCompat$Builder.<init>(androidx.core.view.WindowInsetsCompat):0 -> onMeasure
    5:5:void onMeasure(int,int):0 -> onMeasure
    6:6:void androidx.core.view.WindowInsetsCompat$BuilderImpl29.<init>(androidx.core.view.WindowInsetsCompat):0:0 -> onMeasure
    6:6:void androidx.core.view.WindowInsetsCompat$BuilderImpl30.<init>(androidx.core.view.WindowInsetsCompat):0 -> onMeasure
    6:6:void androidx.core.view.WindowInsetsCompat$Builder.<init>(androidx.core.view.WindowInsetsCompat):0 -> onMeasure
    6:6:void onMeasure(int,int):0 -> onMeasure
    7:7:void androidx.core.view.WindowInsetsCompat$BuilderImpl29.setSystemWindowInsets(androidx.core.graphics.Insets):0:0 -> onMeasure
    7:7:androidx.core.view.WindowInsetsCompat$Builder androidx.core.view.WindowInsetsCompat$Builder.setSystemWindowInsets(androidx.core.graphics.Insets):0 -> onMeasure
    7:7:void onMeasure(int,int):0 -> onMeasure
    8:8:androidx.core.view.WindowInsetsCompat androidx.core.view.WindowInsetsCompat$BuilderImpl29.build():0:0 -> onMeasure
    8:8:androidx.core.view.WindowInsetsCompat androidx.core.view.WindowInsetsCompat$Builder.build():0 -> onMeasure
    8:8:void onMeasure(int,int):0 -> onMeasure
    9:9:void androidx.core.view.WindowInsetsCompat.setOverriddenInsets(androidx.core.graphics.Insets[]):0:0 -> onMeasure
    9:9:androidx.core.view.WindowInsetsCompat androidx.core.view.WindowInsetsCompat$BuilderImpl29.build():0 -> onMeasure
    9:9:androidx.core.view.WindowInsetsCompat androidx.core.view.WindowInsetsCompat$Builder.build():0 -> onMeasure
    9:9:void onMeasure(int,int):0 -> onMeasure
    10:10:void onMeasure(int,int):0:0 -> onMeasure
    1:1:boolean shouldHideActionBarOnFling(float):0:0 -> onNestedFling
    1:1:boolean onNestedFling(android.view.View,float,float,boolean):0 -> onNestedFling
    2:2:void addActionBarHideOffset():0:0 -> onNestedFling
    2:2:boolean onNestedFling(android.view.View,float,float,boolean):0 -> onNestedFling
    3:3:void removeActionBarHideOffset():0:0 -> onNestedFling
    3:3:boolean onNestedFling(android.view.View,float,float,boolean):0 -> onNestedFling
    4:4:boolean onNestedFling(android.view.View,float,float,boolean):0:0 -> onNestedFling
    1:1:void androidx.core.view.NestedScrollingParentHelper.onNestedScrollAccepted(android.view.View,android.view.View,int,int):0:0 -> onNestedScrollAccepted
    1:1:void androidx.core.view.NestedScrollingParentHelper.onNestedScrollAccepted(android.view.View,android.view.View,int):0 -> onNestedScrollAccepted
    1:1:void onNestedScrollAccepted(android.view.View,android.view.View,int):0 -> onNestedScrollAccepted
    2:2:void onNestedScrollAccepted(android.view.View,android.view.View,int):0:0 -> onNestedScrollAccepted
    3:3:void androidx.appcompat.app.WindowDecorActionBar.onContentScrollStarted():0:0 -> onNestedScrollAccepted
    3:3:void onNestedScrollAccepted(android.view.View,android.view.View,int):0 -> onNestedScrollAccepted
    1:1:void postRemoveActionBarHideOffset():0:0 -> onStopNestedScroll
    1:1:void onStopNestedScroll(android.view.View):0 -> onStopNestedScroll
    2:2:void postAddActionBarHideOffset():0:0 -> onStopNestedScroll
    2:2:void onStopNestedScroll(android.view.View):0 -> onStopNestedScroll
    3:3:void onStopNestedScroll(android.view.View):0:0 -> onStopNestedScroll
    4:4:void androidx.appcompat.app.WindowDecorActionBar.onContentScrollStopped():0:0 -> onStopNestedScroll
    4:4:void onStopNestedScroll(android.view.View):0 -> onStopNestedScroll
    1:1:void androidx.appcompat.app.WindowDecorActionBar.enableContentAnimations(boolean):0:0 -> onWindowSystemUiVisibilityChanged
    1:1:void onWindowSystemUiVisibilityChanged(int):0 -> onWindowSystemUiVisibilityChanged
    2:2:void onWindowSystemUiVisibilityChanged(int):0:0 -> onWindowSystemUiVisibilityChanged
    3:3:void androidx.appcompat.app.WindowDecorActionBar.hideForSystem():0:0 -> onWindowSystemUiVisibilityChanged
    3:3:void onWindowSystemUiVisibilityChanged(int):0 -> onWindowSystemUiVisibilityChanged
    4:4:void onWindowSystemUiVisibilityChanged(int):0:0 -> onWindowSystemUiVisibilityChanged
    5:5:void androidx.appcompat.app.WindowDecorActionBar.showForSystem():0:0 -> onWindowSystemUiVisibilityChanged
    5:5:void onWindowSystemUiVisibilityChanged(int):0 -> onWindowSystemUiVisibilityChanged
    6:6:void onWindowSystemUiVisibilityChanged(int):0:0 -> onWindowSystemUiVisibilityChanged
    7:7:void androidx.core.view.ViewCompat.requestApplyInsets(android.view.View):0:0 -> onWindowSystemUiVisibilityChanged
    7:7:void onWindowSystemUiVisibilityChanged(int):0 -> onWindowSystemUiVisibilityChanged
    1:1:void androidx.appcompat.app.WindowDecorActionBar.onWindowVisibilityChanged(int):0:0 -> onWindowVisibilityChanged
    1:1:void onWindowVisibilityChanged(int):0 -> onWindowVisibilityChanged
    boolean applyInsets(android.view.View,android.graphics.Rect,boolean,boolean,boolean,boolean) -> p
    void haltActionBarHideOffsetAnimations() -> q
    void init(android.content.Context) -> r
    1:1:androidx.appcompat.widget.DecorToolbar getDecorToolbar(android.view.View):0:0 -> s
    1:1:void pullChildren():0 -> s
    2:2:void pullChildren():0:0 -> s
    3:3:androidx.appcompat.widget.DecorToolbar getDecorToolbar(android.view.View):0:0 -> s
    3:3:void pullChildren():0 -> s
    1:1:void androidx.appcompat.app.WindowDecorActionBar.onWindowVisibilityChanged(int):0:0 -> setActionBarVisibilityCallback
    1:1:void setActionBarVisibilityCallback(androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback):0 -> setActionBarVisibilityCallback
    2:2:void setActionBarVisibilityCallback(androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback):0:0 -> setActionBarVisibilityCallback
    3:3:void androidx.core.view.ViewCompat.requestApplyInsets(android.view.View):0:0 -> setActionBarVisibilityCallback
    3:3:void setActionBarVisibilityCallback(androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback):0 -> setActionBarVisibilityCallback
androidx.appcompat.widget.ActionBarOverlayLayout$1 -> androidx.appcompat.widget.ActionBarOverlayLayout$a:
    androidx.appcompat.widget.ActionBarOverlayLayout this$0 -> a
androidx.appcompat.widget.ActionBarOverlayLayout$2 -> androidx.appcompat.widget.ActionBarOverlayLayout$b:
    androidx.appcompat.widget.ActionBarOverlayLayout this$0 -> a
androidx.appcompat.widget.ActionBarOverlayLayout$3 -> androidx.appcompat.widget.ActionBarOverlayLayout$c:
    androidx.appcompat.widget.ActionBarOverlayLayout this$0 -> a
androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback -> androidx.appcompat.widget.ActionBarOverlayLayout$d:
androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams -> androidx.appcompat.widget.ActionBarOverlayLayout$e:
androidx.appcompat.widget.ActionMenuPresenter -> a.b.h.c:
    boolean mReserveOverflowSet -> m
    int mWidthLimit -> n
    int mActionItemWidthLimit -> o
    androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup mOverflowPopup -> t
    boolean mPendingOverflowIconSet -> k
    android.util.SparseBooleanArray mActionButtonGroups -> s
    android.graphics.drawable.Drawable mPendingOverflowIcon -> j
    boolean mReserveOverflow -> l
    boolean mExpandedActionViewsExclusive -> q
    androidx.appcompat.widget.ActionMenuPresenter$ActionButtonSubmenu mActionButtonPopup -> u
    androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton mOverflowButton -> i
    androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable mPostedOpenRunnable -> v
    androidx.appcompat.widget.ActionMenuPresenter$PopupPresenterCallback mPopupPresenterCallback -> x
    androidx.appcompat.widget.ActionMenuPresenter$ActionMenuPopupCallback mPopupCallback -> w
    int mMinCellSize -> r
    int mMaxItems -> p
    boolean dismissPopupMenus() -> a
    1:1:void androidx.appcompat.view.menu.BaseMenuPresenter.onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean):0:0 -> b
    1:1:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean):0 -> b
    1:1:android.view.View androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup):0:0 -> e
    1:1:android.view.View getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup):0 -> e
    2:2:androidx.appcompat.view.menu.MenuView$ItemView androidx.appcompat.view.menu.BaseMenuPresenter.createItemView(android.view.ViewGroup):0:0 -> e
    2:2:android.view.View androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup):0 -> e
    2:2:android.view.View getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup):0 -> e
    3:3:void bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView):0:0 -> e
    3:3:android.view.View androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup):0 -> e
    3:3:android.view.View getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup):0 -> e
    4:4:android.view.View androidx.appcompat.view.menu.BaseMenuPresenter.getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup):0:0 -> e
    4:4:android.view.View getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup):0 -> e
    5:5:boolean androidx.appcompat.view.menu.MenuItemImpl.isActionViewExpanded():0:0 -> e
    5:5:android.view.View getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup):0 -> e
    6:6:android.view.View getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup):0:0 -> e
    1:1:android.view.Menu androidx.appcompat.view.menu.SubMenuBuilder.getParentMenu():0:0 -> f
    1:1:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0 -> f
    2:2:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0:0 -> f
    3:3:android.view.MenuItem androidx.appcompat.view.menu.SubMenuBuilder.getItem():0:0 -> f
    3:3:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0 -> f
    4:4:android.view.View findViewForItem(android.view.MenuItem):0:0 -> f
    4:4:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0 -> f
    5:5:android.view.MenuItem androidx.appcompat.view.menu.SubMenuBuilder.getItem():0:0 -> f
    5:5:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0 -> f
    6:6:int androidx.appcompat.view.menu.MenuItemImpl.getItemId():0:0 -> f
    6:6:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0 -> f
    7:7:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0:0 -> f
    8:8:void androidx.appcompat.view.menu.MenuPopupHelper.setForceShowIcon(boolean):0:0 -> f
    8:8:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0 -> f
    9:9:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0:0 -> f
    10:10:void androidx.appcompat.view.menu.MenuPopupHelper.show():0:0 -> f
    10:10:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0 -> f
    11:11:boolean androidx.appcompat.view.menu.BaseMenuPresenter.onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0:0 -> f
    11:11:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0 -> f
    12:12:void androidx.appcompat.view.menu.MenuPopupHelper.show():0:0 -> f
    12:12:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0 -> f
    1:1:boolean androidx.appcompat.view.menu.MenuItemImpl.requiresActionButton():0:0 -> g
    1:1:boolean flagActionItems():0 -> g
    2:2:boolean flagActionItems():0:0 -> g
    3:3:boolean androidx.appcompat.view.menu.MenuItemImpl.isActionViewExpanded():0:0 -> g
    3:3:boolean flagActionItems():0 -> g
    4:4:boolean flagActionItems():0:0 -> g
    5:5:boolean androidx.appcompat.view.menu.MenuItemImpl.requiresActionButton():0:0 -> g
    5:5:boolean flagActionItems():0 -> g
    6:6:boolean flagActionItems():0:0 -> g
    7:7:int androidx.appcompat.view.menu.MenuItemImpl.getGroupId():0:0 -> g
    7:7:boolean flagActionItems():0 -> g
    8:8:boolean flagActionItems():0:0 -> g
    9:9:int androidx.appcompat.view.menu.MenuItemImpl.getGroupId():0:0 -> g
    9:9:boolean flagActionItems():0 -> g
    10:10:boolean flagActionItems():0:0 -> g
    11:11:int androidx.appcompat.view.menu.MenuItemImpl.getGroupId():0:0 -> g
    11:11:boolean flagActionItems():0 -> g
    12:12:boolean flagActionItems():0:0 -> g
    1:1:void androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean):0:0 -> h
    1:1:void updateMenuView(boolean):0 -> h
    2:2:boolean shouldIncludeItem(int,androidx.appcompat.view.menu.MenuItemImpl):0:0 -> h
    2:2:void androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean):0 -> h
    2:2:void updateMenuView(boolean):0 -> h
    3:3:void androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean):0:0 -> h
    3:3:void updateMenuView(boolean):0 -> h
    4:4:void androidx.appcompat.view.menu.BaseMenuPresenter.addItemView(android.view.View,int):0:0 -> h
    4:4:void androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean):0 -> h
    4:4:void updateMenuView(boolean):0 -> h
    5:5:void androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean):0:0 -> h
    5:5:void updateMenuView(boolean):0 -> h
    6:6:boolean filterLeftoverView(android.view.ViewGroup,int):0:0 -> h
    6:6:void androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean):0 -> h
    6:6:void updateMenuView(boolean):0 -> h
    7:7:boolean androidx.appcompat.view.menu.BaseMenuPresenter.filterLeftoverView(android.view.ViewGroup,int):0:0 -> h
    7:7:boolean filterLeftoverView(android.view.ViewGroup,int):0 -> h
    7:7:void androidx.appcompat.view.menu.BaseMenuPresenter.updateMenuView(boolean):0 -> h
    7:7:void updateMenuView(boolean):0 -> h
    8:8:void updateMenuView(boolean):0:0 -> h
    9:9:java.util.ArrayList androidx.appcompat.view.menu.MenuBuilder.getActionItems():0:0 -> h
    9:9:void updateMenuView(boolean):0 -> h
    10:10:void updateMenuView(boolean):0:0 -> h
    11:11:androidx.core.view.ActionProvider androidx.appcompat.view.menu.MenuItemImpl.getSupportActionProvider():0:0 -> h
    11:11:void updateMenuView(boolean):0 -> h
    12:12:void updateMenuView(boolean):0:0 -> h
    13:13:java.util.ArrayList androidx.appcompat.view.menu.MenuBuilder.getNonActionItems():0:0 -> h
    13:13:void updateMenuView(boolean):0 -> h
    14:14:void updateMenuView(boolean):0:0 -> h
    15:15:boolean androidx.appcompat.view.menu.MenuItemImpl.isActionViewExpanded():0:0 -> h
    15:15:void updateMenuView(boolean):0 -> h
    16:16:void updateMenuView(boolean):0:0 -> h
    17:17:androidx.appcompat.widget.ActionMenuView$LayoutParams androidx.appcompat.widget.ActionMenuView.generateOverflowButtonLayoutParams():0:0 -> h
    17:17:void updateMenuView(boolean):0 -> h
    18:18:void updateMenuView(boolean):0:0 -> h
    1:1:void androidx.appcompat.view.menu.MenuPopupHelper.dismiss():0:0 -> i
    1:1:boolean hideOverflowMenu():0 -> i
    1:1:void androidx.appcompat.view.menu.BaseMenuPresenter.initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder):0:0 -> j
    1:1:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder):0 -> j
    2:2:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder):0:0 -> j
    3:3:int androidx.appcompat.view.ActionBarPolicy.getEmbeddedMenuWidthLimit():0:0 -> j
    3:3:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder):0 -> j
    4:4:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder):0:0 -> j
    5:5:int androidx.appcompat.view.ActionBarPolicy.getMaxActionButtons():0:0 -> j
    5:5:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder):0 -> j
    6:6:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder):0:0 -> j
    1:1:void androidx.appcompat.view.menu.MenuPopupHelper.dismiss():0:0 -> l
    1:1:boolean hideSubMenus():0 -> l
    boolean isOverflowMenuShowing() -> m
    1:1:java.util.ArrayList androidx.appcompat.view.menu.MenuBuilder.getNonActionItems():0:0 -> n
    1:1:boolean showOverflowMenu():0 -> n
    2:2:boolean showOverflowMenu():0:0 -> n
androidx.appcompat.widget.ActionMenuPresenter$ActionButtonSubmenu -> a.b.h.c$a:
    androidx.appcompat.widget.ActionMenuPresenter this$0 -> m
    1:1:void androidx.appcompat.view.menu.MenuPopupHelper.<init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,boolean,int):0:0 -> <init>
    1:1:void <init>(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context,androidx.appcompat.view.menu.SubMenuBuilder,android.view.View):0 -> <init>
    2:2:android.view.MenuItem androidx.appcompat.view.menu.SubMenuBuilder.getItem():0:0 -> <init>
    2:2:void <init>(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context,androidx.appcompat.view.menu.SubMenuBuilder,android.view.View):0 -> <init>
    3:3:void <init>(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context,androidx.appcompat.view.menu.SubMenuBuilder,android.view.View):0:0 -> <init>
    4:4:androidx.appcompat.view.menu.MenuView androidx.appcompat.widget.ActionMenuPresenter.access$200(androidx.appcompat.widget.ActionMenuPresenter):0:0 -> <init>
    4:4:void <init>(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context,androidx.appcompat.view.menu.SubMenuBuilder,android.view.View):0 -> <init>
    5:5:void <init>(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context,androidx.appcompat.view.menu.SubMenuBuilder,android.view.View):0:0 -> <init>
    6:6:void androidx.appcompat.view.menu.MenuPopupHelper.setAnchorView(android.view.View):0:0 -> <init>
    6:6:void <init>(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context,androidx.appcompat.view.menu.SubMenuBuilder,android.view.View):0 -> <init>
    7:7:void <init>(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context,androidx.appcompat.view.menu.SubMenuBuilder,android.view.View):0:0 -> <init>
    void onDismiss() -> c
androidx.appcompat.widget.ActionMenuPresenter$ActionMenuPopupCallback -> a.b.h.c$b:
    androidx.appcompat.widget.ActionMenuPresenter this$0 -> a
androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable -> a.b.h.c$c:
    androidx.appcompat.widget.ActionMenuPresenter this$0 -> b
    androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup mPopup -> a
    1:1:androidx.appcompat.view.menu.MenuBuilder androidx.appcompat.widget.ActionMenuPresenter.access$400(androidx.appcompat.widget.ActionMenuPresenter):0:0 -> run
    1:1:void run():0 -> run
    2:2:void androidx.appcompat.view.menu.MenuBuilder.changeMenuMode():0:0 -> run
    2:2:void run():0 -> run
    3:3:void run():0:0 -> run
    4:4:androidx.appcompat.view.menu.MenuView androidx.appcompat.widget.ActionMenuPresenter.access$600(androidx.appcompat.widget.ActionMenuPresenter):0:0 -> run
    4:4:void run():0 -> run
    5:5:void run():0:0 -> run
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton -> a.b.h.c$d:
    androidx.appcompat.widget.ActionMenuPresenter this$0 -> c
    1:1:void androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence):0:0 -> <init>
    1:1:void <init>(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context):0 -> <init>
    2:2:void <init>(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context):0:0 -> <init>
    boolean needsDividerBefore() -> a
    boolean needsDividerAfter() -> b
    1:1:void androidx.core.graphics.drawable.DrawableCompat.setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int):0:0 -> setFrame
    1:1:boolean setFrame(int,int,int,int):0 -> setFrame
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton$1 -> a.b.h.c$d$a:
    androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton this$1 -> j
    androidx.appcompat.view.menu.ShowableListMenu getPopup() -> b
    boolean onForwardingStarted() -> c
    boolean onForwardingStopped() -> d
androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup -> a.b.h.c$e:
    androidx.appcompat.widget.ActionMenuPresenter this$0 -> m
    1:1:void androidx.appcompat.view.menu.MenuPopupHelper.<init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,boolean,int):0:0 -> <init>
    1:1:void <init>(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,boolean):0 -> <init>
    2:2:void androidx.appcompat.view.menu.MenuPopupHelper.setGravity(int):0:0 -> <init>
    2:2:void <init>(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,boolean):0 -> <init>
    3:3:void <init>(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,boolean):0:0 -> <init>
    1:1:androidx.appcompat.view.menu.MenuBuilder androidx.appcompat.widget.ActionMenuPresenter.access$000(androidx.appcompat.widget.ActionMenuPresenter):0:0 -> c
    1:1:void onDismiss():0 -> c
    2:2:void androidx.appcompat.view.menu.MenuBuilder.close():0:0 -> c
    2:2:void onDismiss():0 -> c
    3:3:void onDismiss():0:0 -> c
androidx.appcompat.widget.ActionMenuPresenter$PopupPresenterCallback -> a.b.h.c$f:
    androidx.appcompat.widget.ActionMenuPresenter this$0 -> a
    1:1:androidx.appcompat.view.menu.MenuPresenter$Callback androidx.appcompat.view.menu.BaseMenuPresenter.getCallback():0:0 -> b
    1:1:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean):0 -> b
    2:2:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean):0:0 -> b
    1:1:androidx.appcompat.view.menu.MenuBuilder androidx.appcompat.widget.ActionMenuPresenter.access$300(androidx.appcompat.widget.ActionMenuPresenter):0:0 -> c
    1:1:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder):0 -> c
    2:2:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder):0:0 -> c
    3:3:android.view.MenuItem androidx.appcompat.view.menu.SubMenuBuilder.getItem():0:0 -> c
    3:3:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder):0 -> c
    4:4:int androidx.appcompat.view.menu.MenuItemImpl.getItemId():0:0 -> c
    4:4:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder):0 -> c
    5:5:androidx.appcompat.view.menu.MenuPresenter$Callback androidx.appcompat.view.menu.BaseMenuPresenter.getCallback():0:0 -> c
    5:5:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder):0 -> c
    6:6:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder):0:0 -> c
androidx.appcompat.widget.ActionMenuView -> androidx.appcompat.widget.ActionMenuView:
    android.content.Context mPopupContext -> q
    androidx.appcompat.view.menu.MenuBuilder$Callback mMenuBuilderCallback -> v
    int mGeneratedItemPadding -> z
    int mFormatItemsWidth -> x
    androidx.appcompat.view.menu.MenuBuilder mMenu -> p
    androidx.appcompat.widget.ActionMenuPresenter mPresenter -> t
    androidx.appcompat.view.menu.MenuPresenter$Callback mActionMenuPresenterCallback -> u
    int mMinCellSize -> y
    androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener mOnMenuItemClickListener -> A
    boolean mFormatItems -> w
    int mPopupTheme -> r
    boolean mReserveOverflow -> s
    1:1:boolean androidx.appcompat.view.menu.MenuBuilder.performItemAction(android.view.MenuItem,int):0:0 -> b
    1:1:boolean invokeItem(androidx.appcompat.view.menu.MenuItemImpl):0 -> b
    void initialize(androidx.appcompat.view.menu.MenuBuilder) -> c
    androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateDefaultLayoutParams() -> g
    1:1:androidx.appcompat.widget.ActionMenuView$LayoutParams generateLayoutParams(android.util.AttributeSet):0:0 -> generateLayoutParams
    1:1:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet):0 -> generateLayoutParams
    1:1:void androidx.appcompat.view.menu.MenuBuilder.setCallback(androidx.appcompat.view.menu.MenuBuilder$Callback):0:0 -> getMenu
    1:1:android.view.Menu getMenu():0 -> getMenu
    2:2:android.view.Menu getMenu():0:0 -> getMenu
    3:3:void androidx.appcompat.widget.ActionMenuPresenter.setReserveOverflow(boolean):0:0 -> getMenu
    3:3:android.view.Menu getMenu():0 -> getMenu
    4:4:android.view.Menu getMenu():0:0 -> getMenu
    5:5:void androidx.appcompat.view.menu.BaseMenuPresenter.setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback):0:0 -> getMenu
    5:5:android.view.Menu getMenu():0 -> getMenu
    6:6:android.view.Menu getMenu():0:0 -> getMenu
    7:7:void androidx.appcompat.widget.ActionMenuPresenter.setMenuView(androidx.appcompat.widget.ActionMenuView):0:0 -> getMenu
    7:7:android.view.Menu getMenu():0 -> getMenu
    8:8:void initialize(androidx.appcompat.view.menu.MenuBuilder):0:0 -> getMenu
    8:8:void androidx.appcompat.widget.ActionMenuPresenter.setMenuView(androidx.appcompat.widget.ActionMenuView):0 -> getMenu
    8:8:android.view.Menu getMenu():0 -> getMenu
    9:9:android.view.Menu getMenu():0:0 -> getMenu
    1:1:android.graphics.drawable.Drawable androidx.appcompat.widget.ActionMenuPresenter.getOverflowIcon():0:0 -> getOverflowIcon
    1:1:android.graphics.drawable.Drawable getOverflowIcon():0 -> getOverflowIcon
    1:1:androidx.appcompat.widget.ActionMenuView$LayoutParams generateLayoutParams(android.util.AttributeSet):0:0 -> h
    1:1:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.util.AttributeSet):0 -> h
    androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> i
    1:1:void dismissPopupMenus():0:0 -> onDetachedFromWindow
    1:1:void onDetachedFromWindow():0 -> onDetachedFromWindow
    1:1:void onMeasureExactFormat(int,int):0:0 -> onMeasure
    1:1:void onMeasure(int,int):0 -> onMeasure
    2:2:void onMeasure(int,int):0:0 -> onMeasure
    androidx.appcompat.widget.ActionMenuView$LayoutParams generateDefaultLayoutParams() -> p
    androidx.appcompat.widget.ActionMenuView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> q
    boolean hasSupportDividerBeforeChildAt(int) -> r
    int measureChildForCells(android.view.View,int,int,int,int) -> s
    1:1:void androidx.appcompat.widget.ActionMenuPresenter.setExpandedActionViewsExclusive(boolean):0:0 -> setExpandedActionViewsExclusive
    1:1:void setExpandedActionViewsExclusive(boolean):0 -> setExpandedActionViewsExclusive
    1:1:void androidx.appcompat.widget.ActionMenuPresenter.setOverflowIcon(android.graphics.drawable.Drawable):0:0 -> setOverflowIcon
    1:1:void setOverflowIcon(android.graphics.drawable.Drawable):0 -> setOverflowIcon
    1:1:void androidx.appcompat.widget.ActionMenuPresenter.setMenuView(androidx.appcompat.widget.ActionMenuView):0:0 -> setPresenter
    1:1:void setPresenter(androidx.appcompat.widget.ActionMenuPresenter):0 -> setPresenter
    2:2:void initialize(androidx.appcompat.view.menu.MenuBuilder):0:0 -> setPresenter
    2:2:void androidx.appcompat.widget.ActionMenuPresenter.setMenuView(androidx.appcompat.widget.ActionMenuView):0 -> setPresenter
    2:2:void setPresenter(androidx.appcompat.widget.ActionMenuPresenter):0 -> setPresenter
androidx.appcompat.widget.ActionMenuView$ActionMenuChildView -> androidx.appcompat.widget.ActionMenuView$a:
    boolean needsDividerBefore() -> a
    boolean needsDividerAfter() -> b
androidx.appcompat.widget.ActionMenuView$ActionMenuPresenterCallback -> androidx.appcompat.widget.ActionMenuView$b:
    void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> b
    boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> c
androidx.appcompat.widget.ActionMenuView$LayoutParams -> androidx.appcompat.widget.ActionMenuView$c:
    boolean preventEdgeOffset -> e
    boolean expanded -> f
    boolean isOverflowButton -> a
    int cellsUsed -> b
    int extraPixels -> c
    boolean expandable -> d
androidx.appcompat.widget.ActionMenuView$MenuBuilderCallback -> androidx.appcompat.widget.ActionMenuView$d:
    androidx.appcompat.widget.ActionMenuView this$0 -> a
    void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> a
    1:1:boolean androidx.appcompat.widget.Toolbar$1.onMenuItemClick(android.view.MenuItem):0:0 -> b
    1:1:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem):0 -> b
    2:2:boolean androidx.appcompat.app.ToolbarActionBar$2.onMenuItemClick(android.view.MenuItem):0:0 -> b
    2:2:boolean androidx.appcompat.widget.Toolbar$1.onMenuItemClick(android.view.MenuItem):0 -> b
    2:2:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem):0 -> b
androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener -> androidx.appcompat.widget.ActionMenuView$e:
androidx.appcompat.widget.ActivityChooserView$InnerLayout -> androidx.appcompat.widget.ActivityChooserView$InnerLayout:
    int[] TINT_ATTRS -> a
    1:1:androidx.appcompat.widget.TintTypedArray androidx.appcompat.widget.TintTypedArray.obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[]):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    2:2:android.graphics.drawable.Drawable androidx.appcompat.widget.TintTypedArray.getDrawable(int):0:0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet):0:0 -> <init>
    4:4:void androidx.appcompat.widget.TintTypedArray.recycle():0:0 -> <init>
    4:4:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
androidx.appcompat.widget.AlertDialogLayout -> androidx.appcompat.widget.AlertDialogLayout:
    1:1:int androidx.core.view.ViewCompat.getLayoutDirection(android.view.View):0:0 -> onLayout
    1:1:void onLayout(boolean,int,int,int,int):0 -> onLayout
    2:2:int androidx.core.view.GravityCompat.getAbsoluteGravity(int,int):0:0 -> onLayout
    2:2:void onLayout(boolean,int,int,int,int):0 -> onLayout
    3:3:void onLayout(boolean,int,int,int,int):0:0 -> onLayout
    4:4:void setChildFrame(android.view.View,int,int,int,int):0:0 -> onLayout
    4:4:void onLayout(boolean,int,int,int,int):0 -> onLayout
    5:5:void onLayout(boolean,int,int,int,int):0:0 -> onLayout
    1:1:boolean tryOnMeasure(int,int):0:0 -> onMeasure
    1:1:void onMeasure(int,int):0 -> onMeasure
    2:2:void forceUniformWidth(int,int):0:0 -> onMeasure
    2:2:boolean tryOnMeasure(int,int):0 -> onMeasure
    2:2:void onMeasure(int,int):0 -> onMeasure
    3:3:void onMeasure(int,int):0:0 -> onMeasure
    1:1:int androidx.core.view.ViewCompat.getMinimumHeight(android.view.View):0:0 -> p
    1:1:int resolveMinimumHeight(android.view.View):0 -> p
    2:2:int resolveMinimumHeight(android.view.View):0:0 -> p
androidx.appcompat.widget.AppCompatAutoCompleteTextView -> a.b.h.d:
    androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper -> a
    int[] TINT_ATTRS -> c
    androidx.appcompat.widget.AppCompatTextHelper mTextHelper -> b
    1:1:void androidx.appcompat.widget.TintTypedArray.recycle():0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
androidx.appcompat.widget.AppCompatBackgroundHelper -> a.b.h.e:
    androidx.appcompat.widget.TintInfo mTmpInfo -> f
    androidx.appcompat.widget.TintInfo mInternalBackgroundTint -> d
    androidx.appcompat.widget.TintInfo mBackgroundTint -> e
    android.view.View mView -> a
    androidx.appcompat.widget.AppCompatDrawableManager mDrawableManager -> b
    int mBackgroundResId -> c
    1:1:boolean shouldApplyFrameworkTintUsingColorFilter():0:0 -> a
    1:1:void applySupportBackgroundTint():0 -> a
    2:2:boolean applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable):0:0 -> a
    2:2:void applySupportBackgroundTint():0 -> a
    3:3:void androidx.appcompat.widget.TintInfo.clear():0:0 -> a
    3:3:boolean applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable):0 -> a
    3:3:void applySupportBackgroundTint():0 -> a
    4:4:boolean applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable):0:0 -> a
    4:4:void applySupportBackgroundTint():0 -> a
    5:5:android.content.res.ColorStateList androidx.core.view.ViewCompat.getBackgroundTintList(android.view.View):0:0 -> a
    5:5:boolean applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable):0 -> a
    5:5:void applySupportBackgroundTint():0 -> a
    6:6:boolean applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable):0:0 -> a
    6:6:void applySupportBackgroundTint():0 -> a
    7:7:android.graphics.PorterDuff$Mode androidx.core.view.ViewCompat.getBackgroundTintMode(android.view.View):0:0 -> a
    7:7:boolean applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable):0 -> a
    7:7:void applySupportBackgroundTint():0 -> a
    8:8:boolean applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable):0:0 -> a
    8:8:void applySupportBackgroundTint():0 -> a
    9:9:void applySupportBackgroundTint():0:0 -> a
    android.content.res.ColorStateList getSupportBackgroundTintList() -> b
    android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> c
    1:1:android.content.res.TypedArray androidx.appcompat.widget.TintTypedArray.getWrappedTypeArray():0:0 -> d
    1:1:void loadFromAttributes(android.util.AttributeSet,int):0 -> d
    2:2:void androidx.core.view.ViewCompat.saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int):0:0 -> d
    2:2:void loadFromAttributes(android.util.AttributeSet,int):0 -> d
    3:3:void androidx.core.view.ViewCompat$Api29Impl.saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int):0:0 -> d
    3:3:void androidx.core.view.ViewCompat.saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int):0 -> d
    3:3:void loadFromAttributes(android.util.AttributeSet,int):0 -> d
    4:4:void loadFromAttributes(android.util.AttributeSet,int):0:0 -> d
    5:5:void androidx.core.view.ViewCompat.setBackgroundTintList(android.view.View,android.content.res.ColorStateList):0:0 -> d
    5:5:void loadFromAttributes(android.util.AttributeSet,int):0 -> d
    6:6:void loadFromAttributes(android.util.AttributeSet,int):0:0 -> d
    7:7:void androidx.core.view.ViewCompat.setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode):0:0 -> d
    7:7:void loadFromAttributes(android.util.AttributeSet,int):0 -> d
    8:8:void androidx.appcompat.widget.TintTypedArray.recycle():0:0 -> d
    8:8:void loadFromAttributes(android.util.AttributeSet,int):0 -> d
    9:9:void loadFromAttributes(android.util.AttributeSet,int):0:0 -> d
    void onSetBackgroundDrawable(android.graphics.drawable.Drawable) -> e
    void onSetBackgroundResource(int) -> f
    void setInternalBackgroundTint(android.content.res.ColorStateList) -> g
    void setSupportBackgroundTintList(android.content.res.ColorStateList) -> h
    void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> i
androidx.appcompat.widget.AppCompatButton -> a.b.h.f:
    androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper -> a
    androidx.appcompat.widget.AppCompatTextHelper mTextHelper -> b
    1:1:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    1:1:android.content.res.ColorStateList androidx.appcompat.widget.AppCompatTextHelper.getCompoundDrawableTintList():0:0 -> getSupportCompoundDrawablesTintList
    1:1:android.content.res.ColorStateList getSupportCompoundDrawablesTintList():0 -> getSupportCompoundDrawablesTintList
    1:1:android.graphics.PorterDuff$Mode androidx.appcompat.widget.AppCompatTextHelper.getCompoundDrawableTintMode():0:0 -> getSupportCompoundDrawablesTintMode
    1:1:android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode():0 -> getSupportCompoundDrawablesTintMode
    1:1:void androidx.appcompat.widget.AppCompatTextHelper.setAllCaps(boolean):0:0 -> setSupportAllCaps
    1:1:void setSupportAllCaps(boolean):0 -> setSupportAllCaps
androidx.appcompat.widget.AppCompatCheckBox -> a.b.h.g:
    androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper -> b
    androidx.appcompat.widget.AppCompatTextHelper mTextHelper -> c
    androidx.appcompat.widget.AppCompatCompoundButtonHelper mCompoundButtonHelper -> a
    1:1:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    1:1:android.content.res.ColorStateList androidx.appcompat.widget.AppCompatCompoundButtonHelper.getSupportButtonTintList():0:0 -> getSupportButtonTintList
    1:1:android.content.res.ColorStateList getSupportButtonTintList():0 -> getSupportButtonTintList
    1:1:android.graphics.PorterDuff$Mode androidx.appcompat.widget.AppCompatCompoundButtonHelper.getSupportButtonTintMode():0:0 -> getSupportButtonTintMode
    1:1:android.graphics.PorterDuff$Mode getSupportButtonTintMode():0 -> getSupportButtonTintMode
    1:1:void androidx.appcompat.widget.AppCompatCompoundButtonHelper.onSetButtonDrawable():0:0 -> setButtonDrawable
    1:1:void setButtonDrawable(android.graphics.drawable.Drawable):0 -> setButtonDrawable
    1:1:void androidx.appcompat.widget.AppCompatCompoundButtonHelper.setSupportButtonTintList(android.content.res.ColorStateList):0:0 -> setSupportButtonTintList
    1:1:void setSupportButtonTintList(android.content.res.ColorStateList):0 -> setSupportButtonTintList
    1:1:void androidx.appcompat.widget.AppCompatCompoundButtonHelper.setSupportButtonTintMode(android.graphics.PorterDuff$Mode):0:0 -> setSupportButtonTintMode
    1:1:void setSupportButtonTintMode(android.graphics.PorterDuff$Mode):0 -> setSupportButtonTintMode
androidx.appcompat.widget.AppCompatCheckedTextView -> a.b.h.h:
    int[] TINT_ATTRS -> b
    androidx.appcompat.widget.AppCompatTextHelper mTextHelper -> a
    1:1:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    2:2:void androidx.appcompat.widget.TintTypedArray.recycle():0:0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
androidx.appcompat.widget.AppCompatCompoundButtonHelper -> a.b.h.i:
    android.content.res.ColorStateList mButtonTintList -> b
    boolean mHasButtonTintMode -> e
    boolean mSkipNextApply -> f
    android.widget.CompoundButton mView -> a
    android.graphics.PorterDuff$Mode mButtonTintMode -> c
    boolean mHasButtonTint -> d
    1:1:android.graphics.drawable.Drawable androidx.core.widget.CompoundButtonCompat.getButtonDrawable(android.widget.CompoundButton):0:0 -> a
    1:1:void applyButtonTint():0 -> a
    2:2:void applyButtonTint():0:0 -> a
    3:3:void androidx.core.graphics.drawable.DrawableCompat.setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList):0:0 -> a
    3:3:void applyButtonTint():0 -> a
    4:4:void applyButtonTint():0:0 -> a
    5:5:void androidx.core.graphics.drawable.DrawableCompat.setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode):0:0 -> a
    5:5:void applyButtonTint():0 -> a
    6:6:void applyButtonTint():0:0 -> a
    1:1:android.content.res.TypedArray androidx.appcompat.widget.TintTypedArray.getWrappedTypeArray():0:0 -> b
    1:1:void loadFromAttributes(android.util.AttributeSet,int):0 -> b
    2:2:void androidx.core.view.ViewCompat.saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int):0:0 -> b
    2:2:void loadFromAttributes(android.util.AttributeSet,int):0 -> b
    3:3:void androidx.core.view.ViewCompat$Api29Impl.saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int):0:0 -> b
    3:3:void androidx.core.view.ViewCompat.saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int):0 -> b
    3:3:void loadFromAttributes(android.util.AttributeSet,int):0 -> b
    4:4:void loadFromAttributes(android.util.AttributeSet,int):0:0 -> b
    5:5:void androidx.core.widget.CompoundButtonCompat.setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList):0:0 -> b
    5:5:void loadFromAttributes(android.util.AttributeSet,int):0 -> b
    6:6:void loadFromAttributes(android.util.AttributeSet,int):0:0 -> b
    7:7:void androidx.core.widget.CompoundButtonCompat.setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode):0:0 -> b
    7:7:void loadFromAttributes(android.util.AttributeSet,int):0 -> b
    8:8:void androidx.appcompat.widget.TintTypedArray.recycle():0:0 -> b
    8:8:void loadFromAttributes(android.util.AttributeSet,int):0 -> b
    9:9:void loadFromAttributes(android.util.AttributeSet,int):0:0 -> b
androidx.appcompat.widget.AppCompatDrawableManager -> a.b.h.j:
    android.graphics.PorterDuff$Mode DEFAULT_MODE -> b
    androidx.appcompat.widget.ResourceManagerInternal mResourceManager -> a
    androidx.appcompat.widget.AppCompatDrawableManager INSTANCE -> c
    androidx.appcompat.widget.AppCompatDrawableManager get() -> a
    android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> b
    android.content.res.ColorStateList getTintList(android.content.Context,int) -> c
    1:1:void androidx.appcompat.widget.ResourceManagerInternal.setHooks(androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks):0:0 -> d
    1:1:void preload():0 -> d
    2:2:void preload():0:0 -> d
    1:1:void androidx.appcompat.widget.ResourceManagerInternal.tintDrawable(android.graphics.drawable.Drawable,androidx.appcompat.widget.TintInfo,int[]):0:0 -> e
    1:1:void tintDrawable(android.graphics.drawable.Drawable,androidx.appcompat.widget.TintInfo,int[]):0 -> e
    2:2:android.graphics.PorterDuffColorFilter androidx.appcompat.widget.ResourceManagerInternal.createTintFilter(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,int[]):0:0 -> e
    2:2:void androidx.appcompat.widget.ResourceManagerInternal.tintDrawable(android.graphics.drawable.Drawable,androidx.appcompat.widget.TintInfo,int[]):0 -> e
    2:2:void tintDrawable(android.graphics.drawable.Drawable,androidx.appcompat.widget.TintInfo,int[]):0 -> e
    3:3:void androidx.appcompat.widget.ResourceManagerInternal.tintDrawable(android.graphics.drawable.Drawable,androidx.appcompat.widget.TintInfo,int[]):0:0 -> e
    3:3:void tintDrawable(android.graphics.drawable.Drawable,androidx.appcompat.widget.TintInfo,int[]):0 -> e
androidx.appcompat.widget.AppCompatDrawableManager$1 -> a.b.h.j$a:
    int[] TINT_CHECKABLE_BUTTON_LIST -> f
    int[] TINT_COLOR_CONTROL_NORMAL -> b
    int[] COLORFILTER_COLOR_CONTROL_ACTIVATED -> c
    int[] COLORFILTER_COLOR_BACKGROUND_MULTIPLY -> d
    int[] TINT_COLOR_CONTROL_STATE_LIST -> e
    int[] COLORFILTER_TINT_COLOR_CONTROL_NORMAL -> a
    boolean arrayContains(int[],int) -> a
    android.content.res.ColorStateList createButtonColorStateList(android.content.Context,int) -> b
    android.graphics.drawable.LayerDrawable getRatingBarLayerDrawable(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int) -> c
    1:1:android.content.res.ColorStateList androidx.appcompat.content.res.AppCompatResources.getColorStateList(android.content.Context,int):0:0 -> d
    1:1:android.content.res.ColorStateList getTintListForDrawableRes(android.content.Context,int):0 -> d
    2:2:android.content.res.ColorStateList createSwitchThumbColorStateList(android.content.Context):0:0 -> d
    2:2:android.content.res.ColorStateList getTintListForDrawableRes(android.content.Context,int):0 -> d
    3:3:android.content.res.ColorStateList createDefaultButtonColorStateList(android.content.Context):0:0 -> d
    3:3:android.content.res.ColorStateList getTintListForDrawableRes(android.content.Context,int):0 -> d
    4:4:android.content.res.ColorStateList createBorderlessButtonColorStateList(android.content.Context):0:0 -> d
    4:4:android.content.res.ColorStateList getTintListForDrawableRes(android.content.Context,int):0 -> d
    5:5:android.content.res.ColorStateList createColoredButtonColorStateList(android.content.Context):0:0 -> d
    5:5:android.content.res.ColorStateList getTintListForDrawableRes(android.content.Context,int):0 -> d
    6:6:android.content.res.ColorStateList getTintListForDrawableRes(android.content.Context,int):0:0 -> d
    7:7:android.content.res.ColorStateList androidx.appcompat.content.res.AppCompatResources.getColorStateList(android.content.Context,int):0:0 -> d
    7:7:android.content.res.ColorStateList getTintListForDrawableRes(android.content.Context,int):0 -> d
    8:8:android.content.res.ColorStateList getTintListForDrawableRes(android.content.Context,int):0:0 -> d
    9:9:android.content.res.ColorStateList androidx.appcompat.content.res.AppCompatResources.getColorStateList(android.content.Context,int):0:0 -> d
    9:9:android.content.res.ColorStateList getTintListForDrawableRes(android.content.Context,int):0 -> d
    1:1:android.graphics.PorterDuff$Mode androidx.appcompat.widget.AppCompatDrawableManager.access$000():0:0 -> e
    1:1:void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode):0 -> e
    2:2:android.graphics.PorterDuffColorFilter androidx.appcompat.widget.AppCompatDrawableManager.getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode):0:0 -> e
    2:2:void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode):0 -> e
    3:3:void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode):0:0 -> e
    4:4:android.graphics.PorterDuffColorFilter androidx.appcompat.widget.AppCompatDrawableManager.getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode):0:0 -> e
    4:4:void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode):0 -> e
androidx.appcompat.widget.AppCompatEditText -> a.b.h.k:
    androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper -> a
    androidx.appcompat.widget.AppCompatTextClassifierHelper mTextClassifierHelper -> c
    androidx.core.widget.TextViewOnReceiveContentListener mDefaultOnReceiveContentListener -> d
    androidx.appcompat.widget.AppCompatTextHelper mTextHelper -> b
    1:1:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    androidx.core.view.ContentInfoCompat onReceiveContent(androidx.core.view.ContentInfoCompat) -> a
    1:1:void androidx.appcompat.widget.AppCompatTextHelper.populateSurroundingTextIfNeeded(android.widget.TextView,android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo):0:0 -> onCreateInputConnection
    1:1:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo):0 -> onCreateInputConnection
    2:2:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo):0:0 -> onCreateInputConnection
    3:3:java.lang.String[] androidx.core.view.ViewCompat.getOnReceiveContentMimeTypes(android.view.View):0:0 -> onCreateInputConnection
    3:3:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo):0 -> onCreateInputConnection
    4:4:void androidx.core.view.inputmethod.EditorInfoCompat.setContentMimeTypes(android.view.inputmethod.EditorInfo,java.lang.String[]):0:0 -> onCreateInputConnection
    4:4:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo):0 -> onCreateInputConnection
    5:5:androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener androidx.appcompat.widget.AppCompatReceiveContentHelper.createOnCommitContentListener(android.view.View):0:0 -> onCreateInputConnection
    5:5:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo):0 -> onCreateInputConnection
    6:6:android.view.inputmethod.InputConnection androidx.core.view.inputmethod.InputConnectionCompat.createWrapper(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo,androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener):0:0 -> onCreateInputConnection
    6:6:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo):0 -> onCreateInputConnection
    1:1:boolean androidx.appcompat.widget.AppCompatReceiveContentHelper.maybeHandleDragEventViaPerformReceiveContent(android.view.View,android.view.DragEvent):0:0 -> onDragEvent
    1:1:boolean onDragEvent(android.view.DragEvent):0 -> onDragEvent
    2:2:java.lang.String[] androidx.core.view.ViewCompat.getOnReceiveContentMimeTypes(android.view.View):0:0 -> onDragEvent
    2:2:boolean androidx.appcompat.widget.AppCompatReceiveContentHelper.maybeHandleDragEventViaPerformReceiveContent(android.view.View,android.view.DragEvent):0 -> onDragEvent
    2:2:boolean onDragEvent(android.view.DragEvent):0 -> onDragEvent
    3:3:android.app.Activity androidx.appcompat.widget.AppCompatReceiveContentHelper.tryGetActivity(android.view.View):0:0 -> onDragEvent
    3:3:boolean androidx.appcompat.widget.AppCompatReceiveContentHelper.maybeHandleDragEventViaPerformReceiveContent(android.view.View,android.view.DragEvent):0 -> onDragEvent
    3:3:boolean onDragEvent(android.view.DragEvent):0 -> onDragEvent
    4:4:boolean androidx.appcompat.widget.AppCompatReceiveContentHelper.maybeHandleDragEventViaPerformReceiveContent(android.view.View,android.view.DragEvent):0:0 -> onDragEvent
    4:4:boolean onDragEvent(android.view.DragEvent):0 -> onDragEvent
    5:5:boolean androidx.appcompat.widget.AppCompatReceiveContentHelper$OnDropApi24Impl.onDropForTextView(android.view.DragEvent,android.widget.TextView,android.app.Activity):0:0 -> onDragEvent
    5:5:boolean androidx.appcompat.widget.AppCompatReceiveContentHelper.maybeHandleDragEventViaPerformReceiveContent(android.view.View,android.view.DragEvent):0 -> onDragEvent
    5:5:boolean onDragEvent(android.view.DragEvent):0 -> onDragEvent
    6:6:androidx.core.view.ContentInfoCompat androidx.core.view.ContentInfoCompat$Builder.build():0:0 -> onDragEvent
    6:6:boolean androidx.appcompat.widget.AppCompatReceiveContentHelper$OnDropApi24Impl.onDropForTextView(android.view.DragEvent,android.widget.TextView,android.app.Activity):0 -> onDragEvent
    6:6:boolean androidx.appcompat.widget.AppCompatReceiveContentHelper.maybeHandleDragEventViaPerformReceiveContent(android.view.View,android.view.DragEvent):0 -> onDragEvent
    6:6:boolean onDragEvent(android.view.DragEvent):0 -> onDragEvent
    7:7:boolean androidx.appcompat.widget.AppCompatReceiveContentHelper$OnDropApi24Impl.onDropForTextView(android.view.DragEvent,android.widget.TextView,android.app.Activity):0:0 -> onDragEvent
    7:7:boolean androidx.appcompat.widget.AppCompatReceiveContentHelper.maybeHandleDragEventViaPerformReceiveContent(android.view.View,android.view.DragEvent):0 -> onDragEvent
    7:7:boolean onDragEvent(android.view.DragEvent):0 -> onDragEvent
    8:8:boolean onDragEvent(android.view.DragEvent):0:0 -> onDragEvent
    1:1:java.lang.String[] androidx.core.view.ViewCompat.getOnReceiveContentMimeTypes(android.view.View):0:0 -> onTextContextMenuItem
    1:1:boolean androidx.appcompat.widget.AppCompatReceiveContentHelper.maybeHandleMenuActionViaPerformReceiveContent(android.widget.TextView,int):0 -> onTextContextMenuItem
    1:1:boolean onTextContextMenuItem(int):0 -> onTextContextMenuItem
    2:2:boolean androidx.appcompat.widget.AppCompatReceiveContentHelper.maybeHandleMenuActionViaPerformReceiveContent(android.widget.TextView,int):0:0 -> onTextContextMenuItem
    2:2:boolean onTextContextMenuItem(int):0 -> onTextContextMenuItem
    3:3:androidx.core.view.ContentInfoCompat$Builder androidx.core.view.ContentInfoCompat$Builder.setFlags(int):0:0 -> onTextContextMenuItem
    3:3:boolean androidx.appcompat.widget.AppCompatReceiveContentHelper.maybeHandleMenuActionViaPerformReceiveContent(android.widget.TextView,int):0 -> onTextContextMenuItem
    3:3:boolean onTextContextMenuItem(int):0 -> onTextContextMenuItem
    4:4:androidx.core.view.ContentInfoCompat androidx.core.view.ContentInfoCompat$Builder.build():0:0 -> onTextContextMenuItem
    4:4:boolean androidx.appcompat.widget.AppCompatReceiveContentHelper.maybeHandleMenuActionViaPerformReceiveContent(android.widget.TextView,int):0 -> onTextContextMenuItem
    4:4:boolean onTextContextMenuItem(int):0 -> onTextContextMenuItem
    5:5:boolean androidx.appcompat.widget.AppCompatReceiveContentHelper.maybeHandleMenuActionViaPerformReceiveContent(android.widget.TextView,int):0:0 -> onTextContextMenuItem
    5:5:boolean onTextContextMenuItem(int):0 -> onTextContextMenuItem
    6:6:boolean onTextContextMenuItem(int):0:0 -> onTextContextMenuItem
androidx.appcompat.widget.AppCompatImageButton -> a.b.h.l:
    androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper -> a
    androidx.appcompat.widget.AppCompatImageHelper mImageHelper -> b
    1:1:android.content.res.ColorStateList androidx.appcompat.widget.AppCompatImageHelper.getSupportImageTintList():0:0 -> getSupportImageTintList
    1:1:android.content.res.ColorStateList getSupportImageTintList():0 -> getSupportImageTintList
    1:1:android.graphics.PorterDuff$Mode androidx.appcompat.widget.AppCompatImageHelper.getSupportImageTintMode():0:0 -> getSupportImageTintMode
    1:1:android.graphics.PorterDuff$Mode getSupportImageTintMode():0 -> getSupportImageTintMode
    1:1:boolean androidx.appcompat.widget.AppCompatImageHelper.hasOverlappingRendering():0:0 -> hasOverlappingRendering
    1:1:boolean hasOverlappingRendering():0 -> hasOverlappingRendering
    2:2:boolean hasOverlappingRendering():0:0 -> hasOverlappingRendering
androidx.appcompat.widget.AppCompatImageHelper -> a.b.h.m:
    android.widget.ImageView mView -> a
    androidx.appcompat.widget.TintInfo mImageTint -> b
    1:1:void androidx.appcompat.widget.DrawableUtils.fixDrawable(android.graphics.drawable.Drawable):0:0 -> a
    1:1:void applySupportImageTint():0 -> a
    2:2:void applySupportImageTint():0:0 -> a
    1:1:android.content.res.TypedArray androidx.appcompat.widget.TintTypedArray.getWrappedTypeArray():0:0 -> b
    1:1:void loadFromAttributes(android.util.AttributeSet,int):0 -> b
    2:2:void androidx.core.view.ViewCompat.saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int):0:0 -> b
    2:2:void loadFromAttributes(android.util.AttributeSet,int):0 -> b
    3:3:void androidx.core.view.ViewCompat$Api29Impl.saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int):0:0 -> b
    3:3:void androidx.core.view.ViewCompat.saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int):0 -> b
    3:3:void loadFromAttributes(android.util.AttributeSet,int):0 -> b
    4:4:void loadFromAttributes(android.util.AttributeSet,int):0:0 -> b
    5:5:void androidx.appcompat.widget.DrawableUtils.fixDrawable(android.graphics.drawable.Drawable):0:0 -> b
    5:5:void loadFromAttributes(android.util.AttributeSet,int):0 -> b
    6:6:void loadFromAttributes(android.util.AttributeSet,int):0:0 -> b
    7:7:void androidx.core.widget.ImageViewCompat.setImageTintList(android.widget.ImageView,android.content.res.ColorStateList):0:0 -> b
    7:7:void loadFromAttributes(android.util.AttributeSet,int):0 -> b
    8:8:void loadFromAttributes(android.util.AttributeSet,int):0:0 -> b
    9:9:void androidx.core.widget.ImageViewCompat.setImageTintMode(android.widget.ImageView,android.graphics.PorterDuff$Mode):0:0 -> b
    9:9:void loadFromAttributes(android.util.AttributeSet,int):0 -> b
    10:10:void androidx.appcompat.widget.TintTypedArray.recycle():0:0 -> b
    10:10:void loadFromAttributes(android.util.AttributeSet,int):0 -> b
    11:11:void loadFromAttributes(android.util.AttributeSet,int):0:0 -> b
    1:1:void androidx.appcompat.widget.DrawableUtils.fixDrawable(android.graphics.drawable.Drawable):0:0 -> c
    1:1:void setImageResource(int):0 -> c
    2:2:void setImageResource(int):0:0 -> c
    void setSupportImageTintList(android.content.res.ColorStateList) -> d
    void setSupportImageTintMode(android.graphics.PorterDuff$Mode) -> e
androidx.appcompat.widget.AppCompatImageView -> a.b.h.n:
    androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper -> a
    androidx.appcompat.widget.AppCompatImageHelper mImageHelper -> b
    1:1:android.content.res.ColorStateList androidx.appcompat.widget.AppCompatImageHelper.getSupportImageTintList():0:0 -> getSupportImageTintList
    1:1:android.content.res.ColorStateList getSupportImageTintList():0 -> getSupportImageTintList
    1:1:android.graphics.PorterDuff$Mode androidx.appcompat.widget.AppCompatImageHelper.getSupportImageTintMode():0:0 -> getSupportImageTintMode
    1:1:android.graphics.PorterDuff$Mode getSupportImageTintMode():0 -> getSupportImageTintMode
    1:1:boolean androidx.appcompat.widget.AppCompatImageHelper.hasOverlappingRendering():0:0 -> hasOverlappingRendering
    1:1:boolean hasOverlappingRendering():0 -> hasOverlappingRendering
    2:2:boolean hasOverlappingRendering():0:0 -> hasOverlappingRendering
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView -> a.b.h.o:
    androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper -> a
    int[] TINT_ATTRS -> c
    androidx.appcompat.widget.AppCompatTextHelper mTextHelper -> b
    1:1:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    2:2:void androidx.appcompat.widget.TintTypedArray.recycle():0:0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
androidx.appcompat.widget.AppCompatPopupWindow -> a.b.h.p:
    1:1:void init(android.content.Context,android.util.AttributeSet,int,int):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    2:2:androidx.appcompat.widget.TintTypedArray androidx.appcompat.widget.TintTypedArray.obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int):0:0 -> <init>
    2:2:void init(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    3:3:boolean androidx.appcompat.widget.TintTypedArray.hasValue(int):0:0 -> <init>
    3:3:void init(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    4:4:boolean androidx.appcompat.widget.TintTypedArray.getBoolean(int,boolean):0:0 -> <init>
    4:4:void init(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    4:4:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    5:5:void androidx.core.widget.PopupWindowCompat.setOverlapAnchor(android.widget.PopupWindow,boolean):0:0 -> <init>
    5:5:void setSupportOverlapAnchor(boolean):0 -> <init>
    5:5:void init(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    5:5:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    6:6:android.graphics.drawable.Drawable androidx.appcompat.widget.TintTypedArray.getDrawable(int):0:0 -> <init>
    6:6:void init(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    6:6:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    7:7:void init(android.content.Context,android.util.AttributeSet,int,int):0:0 -> <init>
    7:7:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    8:8:void androidx.appcompat.widget.TintTypedArray.recycle():0:0 -> <init>
    8:8:void init(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    8:8:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
androidx.appcompat.widget.AppCompatProgressBarHelper -> a.b.h.q:
    android.widget.ProgressBar mView -> a
    android.graphics.Bitmap mSampleTile -> b
    int[] TINT_ATTRS -> c
    1:1:android.graphics.drawable.Drawable tileifyIndeterminate(android.graphics.drawable.Drawable):0:0 -> a
    1:1:void loadFromAttributes(android.util.AttributeSet,int):0 -> a
    2:2:void loadFromAttributes(android.util.AttributeSet,int):0:0 -> a
    3:3:void androidx.appcompat.widget.TintTypedArray.recycle():0:0 -> a
    3:3:void loadFromAttributes(android.util.AttributeSet,int):0 -> a
    1:1:android.graphics.drawable.shapes.Shape getDrawableShape():0:0 -> b
    1:1:android.graphics.drawable.Drawable tileify(android.graphics.drawable.Drawable,boolean):0 -> b
    2:2:android.graphics.drawable.Drawable tileify(android.graphics.drawable.Drawable,boolean):0:0 -> b
androidx.appcompat.widget.AppCompatRadioButton -> a.b.h.r:
    androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper -> b
    androidx.appcompat.widget.AppCompatTextHelper mTextHelper -> c
    androidx.appcompat.widget.AppCompatCompoundButtonHelper mCompoundButtonHelper -> a
    1:1:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    1:1:android.content.res.ColorStateList androidx.appcompat.widget.AppCompatCompoundButtonHelper.getSupportButtonTintList():0:0 -> getSupportButtonTintList
    1:1:android.content.res.ColorStateList getSupportButtonTintList():0 -> getSupportButtonTintList
    1:1:android.graphics.PorterDuff$Mode androidx.appcompat.widget.AppCompatCompoundButtonHelper.getSupportButtonTintMode():0:0 -> getSupportButtonTintMode
    1:1:android.graphics.PorterDuff$Mode getSupportButtonTintMode():0 -> getSupportButtonTintMode
    1:1:void androidx.appcompat.widget.AppCompatCompoundButtonHelper.onSetButtonDrawable():0:0 -> setButtonDrawable
    1:1:void setButtonDrawable(android.graphics.drawable.Drawable):0 -> setButtonDrawable
    1:1:void androidx.appcompat.widget.AppCompatCompoundButtonHelper.setSupportButtonTintList(android.content.res.ColorStateList):0:0 -> setSupportButtonTintList
    1:1:void setSupportButtonTintList(android.content.res.ColorStateList):0 -> setSupportButtonTintList
    1:1:void androidx.appcompat.widget.AppCompatCompoundButtonHelper.setSupportButtonTintMode(android.graphics.PorterDuff$Mode):0:0 -> setSupportButtonTintMode
    1:1:void setSupportButtonTintMode(android.graphics.PorterDuff$Mode):0 -> setSupportButtonTintMode
androidx.appcompat.widget.AppCompatRatingBar -> a.b.h.s:
    androidx.appcompat.widget.AppCompatProgressBarHelper mAppCompatProgressBarHelper -> a
    1:1:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    1:1:android.graphics.Bitmap androidx.appcompat.widget.AppCompatProgressBarHelper.getSampleTile():0:0 -> onMeasure
    1:1:void onMeasure(int,int):0 -> onMeasure
    2:2:void onMeasure(int,int):0:0 -> onMeasure
androidx.appcompat.widget.AppCompatReceiveContentHelper$1 -> a.b.h.t:
    android.view.View val$view -> a
    1:1:void androidx.core.view.inputmethod.InputContentInfoCompat.requestPermission():0:0 -> a
    1:1:boolean onCommitContent(androidx.core.view.inputmethod.InputContentInfoCompat,int,android.os.Bundle):0 -> a
    2:2:java.lang.Object androidx.core.view.inputmethod.InputContentInfoCompat.unwrap():0:0 -> a
    2:2:boolean onCommitContent(androidx.core.view.inputmethod.InputContentInfoCompat,int,android.os.Bundle):0 -> a
    3:3:boolean onCommitContent(androidx.core.view.inputmethod.InputContentInfoCompat,int,android.os.Bundle):0:0 -> a
    4:4:android.content.ClipDescription androidx.core.view.inputmethod.InputContentInfoCompat.getDescription():0:0 -> a
    4:4:boolean onCommitContent(androidx.core.view.inputmethod.InputContentInfoCompat,int,android.os.Bundle):0 -> a
    5:5:android.content.ClipDescription androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl.getDescription():0:0 -> a
    5:5:android.content.ClipDescription androidx.core.view.inputmethod.InputContentInfoCompat.getDescription():0 -> a
    5:5:boolean onCommitContent(androidx.core.view.inputmethod.InputContentInfoCompat,int,android.os.Bundle):0 -> a
    6:6:boolean onCommitContent(androidx.core.view.inputmethod.InputContentInfoCompat,int,android.os.Bundle):0:0 -> a
    7:7:android.net.Uri androidx.core.view.inputmethod.InputContentInfoCompat.getContentUri():0:0 -> a
    7:7:boolean onCommitContent(androidx.core.view.inputmethod.InputContentInfoCompat,int,android.os.Bundle):0 -> a
    8:8:android.net.Uri androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl.getContentUri():0:0 -> a
    8:8:android.net.Uri androidx.core.view.inputmethod.InputContentInfoCompat.getContentUri():0 -> a
    8:8:boolean onCommitContent(androidx.core.view.inputmethod.InputContentInfoCompat,int,android.os.Bundle):0 -> a
    9:9:boolean onCommitContent(androidx.core.view.inputmethod.InputContentInfoCompat,int,android.os.Bundle):0:0 -> a
    10:10:android.net.Uri androidx.core.view.inputmethod.InputContentInfoCompat.getLinkUri():0:0 -> a
    10:10:boolean onCommitContent(androidx.core.view.inputmethod.InputContentInfoCompat,int,android.os.Bundle):0 -> a
    11:11:android.net.Uri androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl.getLinkUri():0:0 -> a
    11:11:android.net.Uri androidx.core.view.inputmethod.InputContentInfoCompat.getLinkUri():0 -> a
    11:11:boolean onCommitContent(androidx.core.view.inputmethod.InputContentInfoCompat,int,android.os.Bundle):0 -> a
    12:12:androidx.core.view.ContentInfoCompat$Builder androidx.core.view.ContentInfoCompat$Builder.setLinkUri(android.net.Uri):0:0 -> a
    12:12:boolean onCommitContent(androidx.core.view.inputmethod.InputContentInfoCompat,int,android.os.Bundle):0 -> a
    13:13:androidx.core.view.ContentInfoCompat$Builder androidx.core.view.ContentInfoCompat$Builder.setExtras(android.os.Bundle):0:0 -> a
    13:13:boolean onCommitContent(androidx.core.view.inputmethod.InputContentInfoCompat,int,android.os.Bundle):0 -> a
    14:14:androidx.core.view.ContentInfoCompat androidx.core.view.ContentInfoCompat$Builder.build():0:0 -> a
    14:14:boolean onCommitContent(androidx.core.view.inputmethod.InputContentInfoCompat,int,android.os.Bundle):0 -> a
    15:15:boolean onCommitContent(androidx.core.view.inputmethod.InputContentInfoCompat,int,android.os.Bundle):0:0 -> a
androidx.appcompat.widget.AppCompatSeekBar -> a.b.h.u:
    androidx.appcompat.widget.AppCompatSeekBarHelper mAppCompatSeekBarHelper -> a
    1:1:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    1:1:void androidx.appcompat.widget.AppCompatSeekBarHelper.drawableStateChanged():0:0 -> drawableStateChanged
    1:1:void drawableStateChanged():0 -> drawableStateChanged
    1:1:void androidx.appcompat.widget.AppCompatSeekBarHelper.jumpDrawablesToCurrentState():0:0 -> jumpDrawablesToCurrentState
    1:1:void jumpDrawablesToCurrentState():0 -> jumpDrawablesToCurrentState
androidx.appcompat.widget.AppCompatSeekBarHelper -> a.b.h.v:
    android.graphics.drawable.Drawable mTickMark -> e
    boolean mHasTickMarkTintMode -> i
    android.content.res.ColorStateList mTickMarkTintList -> f
    android.graphics.PorterDuff$Mode mTickMarkTintMode -> g
    boolean mHasTickMarkTint -> h
    android.widget.SeekBar mView -> d
    1:1:android.content.res.TypedArray androidx.appcompat.widget.TintTypedArray.getWrappedTypeArray():0:0 -> a
    1:1:void loadFromAttributes(android.util.AttributeSet,int):0 -> a
    2:2:void androidx.core.view.ViewCompat.saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int):0:0 -> a
    2:2:void loadFromAttributes(android.util.AttributeSet,int):0 -> a
    3:3:void androidx.core.view.ViewCompat$Api29Impl.saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int):0:0 -> a
    3:3:void androidx.core.view.ViewCompat.saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int):0 -> a
    3:3:void loadFromAttributes(android.util.AttributeSet,int):0 -> a
    4:4:void loadFromAttributes(android.util.AttributeSet,int):0:0 -> a
    5:5:void setTickMark(android.graphics.drawable.Drawable):0:0 -> a
    5:5:void loadFromAttributes(android.util.AttributeSet,int):0 -> a
    6:6:int androidx.core.view.ViewCompat.getLayoutDirection(android.view.View):0:0 -> a
    6:6:void setTickMark(android.graphics.drawable.Drawable):0 -> a
    6:6:void loadFromAttributes(android.util.AttributeSet,int):0 -> a
    7:7:boolean androidx.core.graphics.drawable.DrawableCompat.setLayoutDirection(android.graphics.drawable.Drawable,int):0:0 -> a
    7:7:void setTickMark(android.graphics.drawable.Drawable):0 -> a
    7:7:void loadFromAttributes(android.util.AttributeSet,int):0 -> a
    8:8:void setTickMark(android.graphics.drawable.Drawable):0:0 -> a
    8:8:void loadFromAttributes(android.util.AttributeSet,int):0 -> a
    9:9:void loadFromAttributes(android.util.AttributeSet,int):0:0 -> a
    10:10:void androidx.appcompat.widget.TintTypedArray.recycle():0:0 -> a
    10:10:void loadFromAttributes(android.util.AttributeSet,int):0 -> a
    11:11:void loadFromAttributes(android.util.AttributeSet,int):0:0 -> a
    1:1:void androidx.core.graphics.drawable.DrawableCompat.setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList):0:0 -> c
    1:1:void applyTickMarkTint():0 -> c
    2:2:void applyTickMarkTint():0:0 -> c
    3:3:void androidx.core.graphics.drawable.DrawableCompat.setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode):0:0 -> c
    3:3:void applyTickMarkTint():0 -> c
    4:4:void applyTickMarkTint():0:0 -> c
    void drawTickMarks(android.graphics.Canvas) -> d
androidx.appcompat.widget.AppCompatSpinner -> a.b.h.x:
    androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper -> a
    int[] ATTRS_ANDROID_SPINNERMODE -> i
    android.content.Context mPopupContext -> b
    androidx.appcompat.widget.AppCompatSpinner$SpinnerPopup mPopup -> f
    boolean mPopupSet -> e
    int mDropDownWidth -> g
    android.graphics.Rect mTempRect -> h
    androidx.appcompat.widget.ForwardingListener mForwardingListener -> c
    android.widget.SpinnerAdapter mTempAdapter -> d
    1:1:void <init>(android.content.Context,android.util.AttributeSet,int,int,android.content.res.Resources$Theme):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    2:2:androidx.appcompat.widget.TintTypedArray androidx.appcompat.widget.TintTypedArray.obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int):0:0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet,int,int,android.content.res.Resources$Theme):0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet,int,int,android.content.res.Resources$Theme):0:0 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    4:4:int androidx.appcompat.widget.TintTypedArray.getResourceId(int,int):0:0 -> <init>
    4:4:void <init>(android.content.Context,android.util.AttributeSet,int,int,android.content.res.Resources$Theme):0 -> <init>
    4:4:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    4:4:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    5:5:void <init>(android.content.Context,android.util.AttributeSet,int,int,android.content.res.Resources$Theme):0:0 -> <init>
    5:5:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    5:5:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    6:6:void androidx.appcompat.widget.ListPopupWindow.setBackgroundDrawable(android.graphics.drawable.Drawable):0:0 -> <init>
    6:6:void <init>(android.content.Context,android.util.AttributeSet,int,int,android.content.res.Resources$Theme):0 -> <init>
    6:6:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    6:6:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    7:7:java.lang.String androidx.appcompat.widget.TintTypedArray.getString(int):0:0 -> <init>
    7:7:void <init>(android.content.Context,android.util.AttributeSet,int,int,android.content.res.Resources$Theme):0 -> <init>
    7:7:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    7:7:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    8:8:void androidx.appcompat.widget.AppCompatSpinner$DropdownPopup.setPromptText(java.lang.CharSequence):0:0 -> <init>
    8:8:void <init>(android.content.Context,android.util.AttributeSet,int,int,android.content.res.Resources$Theme):0 -> <init>
    8:8:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    8:8:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    9:9:void androidx.appcompat.widget.TintTypedArray.recycle():0:0 -> <init>
    9:9:void <init>(android.content.Context,android.util.AttributeSet,int,int,android.content.res.Resources$Theme):0 -> <init>
    9:9:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    9:9:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    10:10:void <init>(android.content.Context,android.util.AttributeSet,int,int,android.content.res.Resources$Theme):0:0 -> <init>
    10:10:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    10:10:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    11:11:java.lang.String androidx.appcompat.widget.TintTypedArray.getString(int):0:0 -> <init>
    11:11:void <init>(android.content.Context,android.util.AttributeSet,int,int,android.content.res.Resources$Theme):0 -> <init>
    11:11:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    11:11:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    12:12:void <init>(android.content.Context,android.util.AttributeSet,int,int,android.content.res.Resources$Theme):0:0 -> <init>
    12:12:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    12:12:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    13:13:java.lang.CharSequence[] androidx.appcompat.widget.TintTypedArray.getTextArray(int):0:0 -> <init>
    13:13:void <init>(android.content.Context,android.util.AttributeSet,int,int,android.content.res.Resources$Theme):0 -> <init>
    13:13:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    13:13:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    14:14:void <init>(android.content.Context,android.util.AttributeSet,int,int,android.content.res.Resources$Theme):0:0 -> <init>
    14:14:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    14:14:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    15:15:void androidx.appcompat.widget.TintTypedArray.recycle():0:0 -> <init>
    15:15:void <init>(android.content.Context,android.util.AttributeSet,int,int,android.content.res.Resources$Theme):0 -> <init>
    15:15:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    15:15:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    16:16:void <init>(android.content.Context,android.util.AttributeSet,int,int,android.content.res.Resources$Theme):0:0 -> <init>
    16:16:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    16:16:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    int compatMeasureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable) -> a
    void showPopup() -> b
androidx.appcompat.widget.AppCompatSpinner$1 -> a.b.h.w:
    androidx.appcompat.widget.AppCompatSpinner this$0 -> k
    androidx.appcompat.widget.AppCompatSpinner$DropdownPopup val$popup -> j
    androidx.appcompat.view.menu.ShowableListMenu getPopup() -> b
    boolean onForwardingStarted() -> c
androidx.appcompat.widget.AppCompatSpinner$2 -> a.b.h.x$a:
    androidx.appcompat.widget.AppCompatSpinner this$0 -> a
androidx.appcompat.widget.AppCompatSpinner$DialogPopup -> a.b.h.x$b:
    androidx.appcompat.app.AlertDialog mPopup -> a
    android.widget.ListAdapter mListAdapter -> b
    java.lang.CharSequence mPrompt -> c
    androidx.appcompat.widget.AppCompatSpinner this$0 -> d
    boolean isShowing() -> a
    java.lang.CharSequence getHintText() -> b
    void setHorizontalOffset(int) -> c
    int getHorizontalOffset() -> d
    1:1:androidx.appcompat.app.AlertDialog$Builder androidx.appcompat.app.AlertDialog$Builder.setTitle(java.lang.CharSequence):0:0 -> f
    1:1:void show(int,int):0 -> f
    2:2:void show(int,int):0:0 -> f
    3:3:androidx.appcompat.app.AlertDialog$Builder androidx.appcompat.app.AlertDialog$Builder.setSingleChoiceItems(android.widget.ListAdapter,int,android.content.DialogInterface$OnClickListener):0:0 -> f
    3:3:void show(int,int):0 -> f
    4:4:void show(int,int):0:0 -> f
    5:5:android.widget.ListView androidx.appcompat.app.AlertDialog.getListView():0:0 -> f
    5:5:void show(int,int):0 -> f
    6:6:android.widget.ListView androidx.appcompat.app.AlertController.getListView():0:0 -> f
    6:6:android.widget.ListView androidx.appcompat.app.AlertDialog.getListView():0 -> f
    6:6:void show(int,int):0 -> f
    7:7:void show(int,int):0:0 -> f
    void setPromptText(java.lang.CharSequence) -> h
    int getVerticalOffset() -> j
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> l
    void setVerticalOffset(int) -> m
    android.graphics.drawable.Drawable getBackground() -> n
    void setAdapter(android.widget.ListAdapter) -> o
    1:1:void dismiss():0:0 -> onClick
    1:1:void onClick(android.content.DialogInterface,int):0 -> onClick
    void setHorizontalOriginalOffset(int) -> p
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter -> a.b.h.x$c:
    android.widget.SpinnerAdapter mAdapter -> a
    android.widget.ListAdapter mListAdapter -> b
    1:1:android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup):0:0 -> getView
    1:1:android.view.View getView(int,android.view.View,android.view.ViewGroup):0 -> getView
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup -> a.b.h.x$d:
    java.lang.CharSequence mHintText -> A
    android.widget.ListAdapter mAdapter -> B
    int mOriginalHorizontalOffset -> D
    androidx.appcompat.widget.AppCompatSpinner this$0 -> E
    android.graphics.Rect mVisibleRect -> C
    1:1:void androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    1:1:void <init>(androidx.appcompat.widget.AppCompatSpinner,android.content.Context,android.util.AttributeSet,int):0 -> <init>
    2:2:void <init>(androidx.appcompat.widget.AppCompatSpinner,android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    3:3:void androidx.appcompat.widget.ListPopupWindow.setAnchorView(android.view.View):0:0 -> <init>
    3:3:void <init>(androidx.appcompat.widget.AppCompatSpinner,android.content.Context,android.util.AttributeSet,int):0 -> <init>
    4:4:void <init>(androidx.appcompat.widget.AppCompatSpinner,android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    5:5:void androidx.appcompat.widget.ListPopupWindow.setPromptPosition(int):0:0 -> <init>
    5:5:void <init>(androidx.appcompat.widget.AppCompatSpinner,android.content.Context,android.util.AttributeSet,int):0 -> <init>
    6:6:void <init>(androidx.appcompat.widget.AppCompatSpinner,android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    7:7:void androidx.appcompat.widget.ListPopupWindow.setOnItemClickListener(android.widget.AdapterView$OnItemClickListener):0:0 -> <init>
    7:7:void <init>(androidx.appcompat.widget.AppCompatSpinner,android.content.Context,android.util.AttributeSet,int):0 -> <init>
    java.lang.CharSequence getHintText() -> b
    1:1:void androidx.appcompat.widget.ListPopupWindow.setInputMethodMode(int):0:0 -> f
    1:1:void show(int,int):0 -> f
    2:2:void show(int,int):0:0 -> f
    3:3:android.widget.ListView androidx.appcompat.widget.ListPopupWindow.getListView():0:0 -> f
    3:3:void show(int,int):0 -> f
    4:4:void show(int,int):0:0 -> f
    5:5:void androidx.appcompat.widget.ListPopupWindow.setSelection(int):0:0 -> f
    5:5:void show(int,int):0 -> f
    6:6:void show(int,int):0:0 -> f
    7:7:void androidx.appcompat.widget.ListPopupWindow.setOnDismissListener(android.widget.PopupWindow$OnDismissListener):0:0 -> f
    7:7:void show(int,int):0 -> f
    void setPromptText(java.lang.CharSequence) -> h
    void setAdapter(android.widget.ListAdapter) -> o
    void setHorizontalOriginalOffset(int) -> p
    1:1:int androidx.appcompat.widget.ListPopupWindow.getWidth():0:0 -> t
    1:1:void computeContentWidth():0 -> t
    2:2:int getHorizontalOriginalOffset():0:0 -> t
    2:2:void computeContentWidth():0 -> t
    3:3:void androidx.appcompat.widget.ListPopupWindow.setHorizontalOffset(int):0:0 -> t
    3:3:void computeContentWidth():0 -> t
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$1 -> a.b.h.x$d$a:
    androidx.appcompat.widget.AppCompatSpinner$DropdownPopup this$1 -> a
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$2 -> a.b.h.x$d$b:
    androidx.appcompat.widget.AppCompatSpinner$DropdownPopup this$1 -> a
    1:1:boolean androidx.appcompat.widget.AppCompatSpinner$DropdownPopup.isVisibleToUser(android.view.View):0:0 -> onGlobalLayout
    1:1:void onGlobalLayout():0 -> onGlobalLayout
    2:2:boolean androidx.core.view.ViewCompat.isAttachedToWindow(android.view.View):0:0 -> onGlobalLayout
    2:2:boolean androidx.appcompat.widget.AppCompatSpinner$DropdownPopup.isVisibleToUser(android.view.View):0 -> onGlobalLayout
    2:2:void onGlobalLayout():0 -> onGlobalLayout
    3:3:boolean androidx.appcompat.widget.AppCompatSpinner$DropdownPopup.isVisibleToUser(android.view.View):0:0 -> onGlobalLayout
    3:3:void onGlobalLayout():0 -> onGlobalLayout
    4:4:void onGlobalLayout():0:0 -> onGlobalLayout
    5:5:void androidx.appcompat.widget.AppCompatSpinner$DropdownPopup.access$001(androidx.appcompat.widget.AppCompatSpinner$DropdownPopup):0:0 -> onGlobalLayout
    5:5:void onGlobalLayout():0 -> onGlobalLayout
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$3 -> a.b.h.x$d$c:
    androidx.appcompat.widget.AppCompatSpinner$DropdownPopup this$1 -> b
    android.view.ViewTreeObserver$OnGlobalLayoutListener val$layoutListener -> a
androidx.appcompat.widget.AppCompatSpinner$SavedState -> a.b.h.x$e:
    boolean mShowDropdown -> a
androidx.appcompat.widget.AppCompatSpinner$SavedState$1 -> a.b.h.x$e$a:
    1:1:androidx.appcompat.widget.AppCompatSpinner$SavedState createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    1:1:java.lang.Object createFromParcel(android.os.Parcel):0 -> createFromParcel
    1:1:androidx.appcompat.widget.AppCompatSpinner$SavedState[] newArray(int):0:0 -> newArray
    1:1:java.lang.Object[] newArray(int):0 -> newArray
androidx.appcompat.widget.AppCompatSpinner$SpinnerPopup -> a.b.h.x$f:
    boolean isShowing() -> a
    java.lang.CharSequence getHintText() -> b
    void setHorizontalOffset(int) -> c
    int getHorizontalOffset() -> d
    void show(int,int) -> f
    void setPromptText(java.lang.CharSequence) -> h
    int getVerticalOffset() -> j
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> l
    void setVerticalOffset(int) -> m
    android.graphics.drawable.Drawable getBackground() -> n
    void setAdapter(android.widget.ListAdapter) -> o
    void setHorizontalOriginalOffset(int) -> p
androidx.appcompat.widget.AppCompatTextClassifierHelper -> a.b.h.y:
    android.widget.TextView mTextView -> a
    1:1:void <init>(android.widget.TextView):0:0 -> <init>
androidx.appcompat.widget.AppCompatTextHelper -> a.b.h.z:
    androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper mAutoSizeTextHelper -> i
    boolean mAsyncFontPending -> m
    int mStyle -> j
    int mFontWeight -> k
    androidx.appcompat.widget.TintInfo mDrawableLeftTint -> b
    androidx.appcompat.widget.TintInfo mDrawableTopTint -> c
    androidx.appcompat.widget.TintInfo mDrawableStartTint -> f
    androidx.appcompat.widget.TintInfo mDrawableEndTint -> g
    android.widget.TextView mView -> a
    androidx.appcompat.widget.TintInfo mDrawableRightTint -> d
    androidx.appcompat.widget.TintInfo mDrawableBottomTint -> e
    android.graphics.Typeface mFontTypeface -> l
    androidx.appcompat.widget.TintInfo mDrawableTint -> h
    void applyCompoundDrawableTint(android.graphics.drawable.Drawable,androidx.appcompat.widget.TintInfo) -> a
    void applyCompoundDrawablesTints() -> b
    androidx.appcompat.widget.TintInfo createTintInfo(android.content.Context,androidx.appcompat.widget.AppCompatDrawableManager,int) -> c
    1:1:android.content.res.TypedArray androidx.appcompat.widget.TintTypedArray.getWrappedTypeArray():0:0 -> d
    1:1:void loadFromAttributes(android.util.AttributeSet,int):0 -> d
    2:2:void androidx.core.view.ViewCompat.saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int):0:0 -> d
    2:2:void loadFromAttributes(android.util.AttributeSet,int):0 -> d
    3:3:void androidx.core.view.ViewCompat$Api29Impl.saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int):0:0 -> d
    3:3:void androidx.core.view.ViewCompat.saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int):0 -> d
    3:3:void loadFromAttributes(android.util.AttributeSet,int):0 -> d
    4:4:void loadFromAttributes(android.util.AttributeSet,int):0:0 -> d
    5:5:void androidx.appcompat.widget.TintTypedArray.recycle():0:0 -> d
    5:5:void loadFromAttributes(android.util.AttributeSet,int):0 -> d
    6:6:void loadFromAttributes(android.util.AttributeSet,int):0:0 -> d
    7:7:androidx.appcompat.widget.TintTypedArray androidx.appcompat.widget.TintTypedArray.obtainStyledAttributes(android.content.Context,int,int[]):0:0 -> d
    7:7:void loadFromAttributes(android.util.AttributeSet,int):0 -> d
    8:8:void loadFromAttributes(android.util.AttributeSet,int):0:0 -> d
    9:9:void androidx.appcompat.widget.TintTypedArray.recycle():0:0 -> d
    9:9:void loadFromAttributes(android.util.AttributeSet,int):0 -> d
    10:10:void loadFromAttributes(android.util.AttributeSet,int):0:0 -> d
    11:11:androidx.appcompat.widget.TintTypedArray androidx.appcompat.widget.TintTypedArray.obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int):0:0 -> d
    11:11:void loadFromAttributes(android.util.AttributeSet,int):0 -> d
    12:12:void loadFromAttributes(android.util.AttributeSet,int):0:0 -> d
    13:13:void androidx.appcompat.widget.TintTypedArray.recycle():0:0 -> d
    13:13:void loadFromAttributes(android.util.AttributeSet,int):0 -> d
    14:14:void setAllCaps(boolean):0:0 -> d
    14:14:void loadFromAttributes(android.util.AttributeSet,int):0 -> d
    15:15:void loadFromAttributes(android.util.AttributeSet,int):0:0 -> d
    16:16:void androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.loadFromAttributes(android.util.AttributeSet,int):0:0 -> d
    16:16:void loadFromAttributes(android.util.AttributeSet,int):0 -> d
    17:17:void androidx.core.view.ViewCompat$Api29Impl.saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int):0:0 -> d
    17:17:void androidx.core.view.ViewCompat.saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int):0 -> d
    17:17:void androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.loadFromAttributes(android.util.AttributeSet,int):0 -> d
    17:17:void loadFromAttributes(android.util.AttributeSet,int):0 -> d
    18:18:void androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.loadFromAttributes(android.util.AttributeSet,int):0:0 -> d
    18:18:void loadFromAttributes(android.util.AttributeSet,int):0 -> d
    19:19:void androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.setupAutoSizeUniformPresetSizes(android.content.res.TypedArray):0:0 -> d
    19:19:void androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.loadFromAttributes(android.util.AttributeSet,int):0 -> d
    19:19:void loadFromAttributes(android.util.AttributeSet,int):0 -> d
    20:20:void androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.loadFromAttributes(android.util.AttributeSet,int):0:0 -> d
    20:20:void loadFromAttributes(android.util.AttributeSet,int):0 -> d
    21:21:void loadFromAttributes(android.util.AttributeSet,int):0:0 -> d
    22:22:int androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.getAutoSizeTextType():0:0 -> d
    22:22:void loadFromAttributes(android.util.AttributeSet,int):0 -> d
    23:23:int[] androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.getAutoSizeTextAvailableSizes():0:0 -> d
    23:23:void loadFromAttributes(android.util.AttributeSet,int):0 -> d
    24:24:void loadFromAttributes(android.util.AttributeSet,int):0:0 -> d
    25:25:int androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.getAutoSizeMinTextSize():0:0 -> d
    25:25:void loadFromAttributes(android.util.AttributeSet,int):0 -> d
    26:26:void loadFromAttributes(android.util.AttributeSet,int):0:0 -> d
    27:27:int androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.getAutoSizeMaxTextSize():0:0 -> d
    27:27:void loadFromAttributes(android.util.AttributeSet,int):0 -> d
    28:28:void loadFromAttributes(android.util.AttributeSet,int):0:0 -> d
    29:29:int androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.getAutoSizeStepGranularity():0:0 -> d
    29:29:void loadFromAttributes(android.util.AttributeSet,int):0 -> d
    30:30:void loadFromAttributes(android.util.AttributeSet,int):0:0 -> d
    31:31:androidx.appcompat.widget.TintTypedArray androidx.appcompat.widget.TintTypedArray.obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[]):0:0 -> d
    31:31:void loadFromAttributes(android.util.AttributeSet,int):0 -> d
    32:32:int androidx.appcompat.widget.TintTypedArray.getResourceId(int,int):0:0 -> d
    32:32:void loadFromAttributes(android.util.AttributeSet,int):0 -> d
    33:33:void loadFromAttributes(android.util.AttributeSet,int):0:0 -> d
    34:34:int androidx.appcompat.widget.TintTypedArray.getResourceId(int,int):0:0 -> d
    34:34:void loadFromAttributes(android.util.AttributeSet,int):0 -> d
    35:35:void loadFromAttributes(android.util.AttributeSet,int):0:0 -> d
    36:36:int androidx.appcompat.widget.TintTypedArray.getResourceId(int,int):0:0 -> d
    36:36:void loadFromAttributes(android.util.AttributeSet,int):0 -> d
    37:37:void loadFromAttributes(android.util.AttributeSet,int):0:0 -> d
    38:38:int androidx.appcompat.widget.TintTypedArray.getResourceId(int,int):0:0 -> d
    38:38:void loadFromAttributes(android.util.AttributeSet,int):0 -> d
    39:39:void loadFromAttributes(android.util.AttributeSet,int):0:0 -> d
    40:40:int androidx.appcompat.widget.TintTypedArray.getResourceId(int,int):0:0 -> d
    40:40:void loadFromAttributes(android.util.AttributeSet,int):0 -> d
    41:41:void loadFromAttributes(android.util.AttributeSet,int):0:0 -> d
    42:42:int androidx.appcompat.widget.TintTypedArray.getResourceId(int,int):0:0 -> d
    42:42:void loadFromAttributes(android.util.AttributeSet,int):0 -> d
    43:43:void loadFromAttributes(android.util.AttributeSet,int):0:0 -> d
    44:44:void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable):0:0 -> d
    44:44:void loadFromAttributes(android.util.AttributeSet,int):0 -> d
    45:45:boolean androidx.appcompat.widget.TintTypedArray.hasValue(int):0:0 -> d
    45:45:void loadFromAttributes(android.util.AttributeSet,int):0 -> d
    46:46:android.content.res.ColorStateList androidx.appcompat.widget.TintTypedArray.getColorStateList(int):0:0 -> d
    46:46:void loadFromAttributes(android.util.AttributeSet,int):0 -> d
    47:47:android.content.res.ColorStateList androidx.appcompat.content.res.AppCompatResources.getColorStateList(android.content.Context,int):0:0 -> d
    47:47:android.content.res.ColorStateList androidx.appcompat.widget.TintTypedArray.getColorStateList(int):0 -> d
    47:47:void loadFromAttributes(android.util.AttributeSet,int):0 -> d
    48:48:android.content.res.ColorStateList androidx.appcompat.widget.TintTypedArray.getColorStateList(int):0:0 -> d
    48:48:void loadFromAttributes(android.util.AttributeSet,int):0 -> d
    49:49:void loadFromAttributes(android.util.AttributeSet,int):0:0 -> d
    50:50:java.lang.Object androidx.core.util.Preconditions.checkNotNull(java.lang.Object):0:0 -> d
    50:50:void androidx.core.widget.TextViewCompat.setCompoundDrawableTintList(android.widget.TextView,android.content.res.ColorStateList):0 -> d
    50:50:void loadFromAttributes(android.util.AttributeSet,int):0 -> d
    51:51:void androidx.core.widget.TextViewCompat.setCompoundDrawableTintList(android.widget.TextView,android.content.res.ColorStateList):0:0 -> d
    51:51:void loadFromAttributes(android.util.AttributeSet,int):0 -> d
    52:52:boolean androidx.appcompat.widget.TintTypedArray.hasValue(int):0:0 -> d
    52:52:void loadFromAttributes(android.util.AttributeSet,int):0 -> d
    53:53:int androidx.appcompat.widget.TintTypedArray.getInt(int,int):0:0 -> d
    53:53:void loadFromAttributes(android.util.AttributeSet,int):0 -> d
    54:54:void loadFromAttributes(android.util.AttributeSet,int):0:0 -> d
    55:55:java.lang.Object androidx.core.util.Preconditions.checkNotNull(java.lang.Object):0:0 -> d
    55:55:void androidx.core.widget.TextViewCompat.setCompoundDrawableTintMode(android.widget.TextView,android.graphics.PorterDuff$Mode):0 -> d
    55:55:void loadFromAttributes(android.util.AttributeSet,int):0 -> d
    56:56:void androidx.core.widget.TextViewCompat.setCompoundDrawableTintMode(android.widget.TextView,android.graphics.PorterDuff$Mode):0:0 -> d
    56:56:void loadFromAttributes(android.util.AttributeSet,int):0 -> d
    57:57:int androidx.appcompat.widget.TintTypedArray.getDimensionPixelSize(int,int):0:0 -> d
    57:57:void loadFromAttributes(android.util.AttributeSet,int):0 -> d
    58:58:void androidx.appcompat.widget.TintTypedArray.recycle():0:0 -> d
    58:58:void loadFromAttributes(android.util.AttributeSet,int):0 -> d
    59:59:void loadFromAttributes(android.util.AttributeSet,int):0:0 -> d
    60:60:void androidx.core.widget.TextViewCompat.setFirstBaselineToTopHeight(android.widget.TextView,int):0:0 -> d
    60:60:void loadFromAttributes(android.util.AttributeSet,int):0 -> d
    61:61:void loadFromAttributes(android.util.AttributeSet,int):0:0 -> d
    1:1:androidx.appcompat.widget.TintTypedArray androidx.appcompat.widget.TintTypedArray.obtainStyledAttributes(android.content.Context,int,int[]):0:0 -> e
    1:1:void onSetTextAppearance(android.content.Context,int):0 -> e
    2:2:void onSetTextAppearance(android.content.Context,int):0:0 -> e
    3:3:void setAllCaps(boolean):0:0 -> e
    3:3:void onSetTextAppearance(android.content.Context,int):0 -> e
    4:4:void onSetTextAppearance(android.content.Context,int):0:0 -> e
    5:5:void androidx.appcompat.widget.TintTypedArray.recycle():0:0 -> e
    5:5:void onSetTextAppearance(android.content.Context,int):0 -> e
    6:6:void onSetTextAppearance(android.content.Context,int):0:0 -> e
    1:1:void setCompoundTints():0:0 -> f
    1:1:void setCompoundDrawableTintList(android.content.res.ColorStateList):0 -> f
    1:1:void setCompoundTints():0:0 -> g
    1:1:void setCompoundDrawableTintMode(android.graphics.PorterDuff$Mode):0 -> g
    void updateTypefaceAndStyle(android.content.Context,androidx.appcompat.widget.TintTypedArray) -> h
androidx.appcompat.widget.AppCompatTextHelper$1 -> a.b.h.z$a:
    androidx.appcompat.widget.AppCompatTextHelper this$0 -> d
    java.lang.ref.WeakReference val$textViewWeak -> c
    int val$style -> b
    int val$fontWeight -> a
    1:1:void androidx.appcompat.widget.AppCompatTextHelper.onAsyncTypefaceReceived(java.lang.ref.WeakReference,android.graphics.Typeface):0:0 -> d
    1:1:void onFontRetrieved(android.graphics.Typeface):0 -> d
    2:2:boolean androidx.core.view.ViewCompat.isAttachedToWindow(android.view.View):0:0 -> d
    2:2:void androidx.appcompat.widget.AppCompatTextHelper.onAsyncTypefaceReceived(java.lang.ref.WeakReference,android.graphics.Typeface):0 -> d
    2:2:void onFontRetrieved(android.graphics.Typeface):0 -> d
    3:3:void androidx.appcompat.widget.AppCompatTextHelper.onAsyncTypefaceReceived(java.lang.ref.WeakReference,android.graphics.Typeface):0:0 -> d
    3:3:void onFontRetrieved(android.graphics.Typeface):0 -> d
androidx.appcompat.widget.AppCompatTextHelper$2 -> a.b.h.a0:
    android.widget.TextView val$textView -> a
    android.graphics.Typeface val$typeface -> b
    int val$style -> c
androidx.appcompat.widget.AppCompatTextView -> a.b.h.b0:
    androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper -> a
    androidx.appcompat.widget.AppCompatTextClassifierHelper mTextClassifierHelper -> c
    androidx.appcompat.widget.AppCompatTextHelper mTextHelper -> b
    java.util.concurrent.Future mPrecomputedTextFuture -> e
    boolean mIsSetTypefaceProcessing -> d
    1:1:int androidx.core.widget.TextViewCompat.getFirstBaselineToTopHeight(android.widget.TextView):0:0 -> getFirstBaselineToTopHeight
    1:1:int getFirstBaselineToTopHeight():0 -> getFirstBaselineToTopHeight
    1:1:int androidx.core.widget.TextViewCompat.getLastBaselineToBottomHeight(android.widget.TextView):0:0 -> getLastBaselineToBottomHeight
    1:1:int getLastBaselineToBottomHeight():0 -> getLastBaselineToBottomHeight
    1:1:android.content.res.ColorStateList androidx.appcompat.widget.AppCompatTextHelper.getCompoundDrawableTintList():0:0 -> getSupportCompoundDrawablesTintList
    1:1:android.content.res.ColorStateList getSupportCompoundDrawablesTintList():0 -> getSupportCompoundDrawablesTintList
    1:1:android.graphics.PorterDuff$Mode androidx.appcompat.widget.AppCompatTextHelper.getCompoundDrawableTintMode():0:0 -> getSupportCompoundDrawablesTintMode
    1:1:android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode():0 -> getSupportCompoundDrawablesTintMode
    1:1:void consumeTextFutureAndSetBlocking():0:0 -> getText
    1:1:java.lang.CharSequence getText():0 -> getText
    2:2:void androidx.core.widget.TextViewCompat.setPrecomputedText(android.widget.TextView,androidx.core.text.PrecomputedTextCompat):0:0 -> getText
    2:2:void consumeTextFutureAndSetBlocking():0 -> getText
    2:2:java.lang.CharSequence getText():0 -> getText
    3:3:java.lang.CharSequence getText():0:0 -> getText
    1:1:androidx.core.text.PrecomputedTextCompat$Params androidx.core.widget.TextViewCompat.getTextMetricsParams(android.widget.TextView):0:0 -> getTextMetricsParamsCompat
    1:1:androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParamsCompat():0 -> getTextMetricsParamsCompat
    1:1:void androidx.appcompat.widget.AppCompatTextHelper.populateSurroundingTextIfNeeded(android.widget.TextView,android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo):0:0 -> onCreateInputConnection
    1:1:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo):0 -> onCreateInputConnection
    2:2:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo):0:0 -> onCreateInputConnection
    1:1:void consumeTextFutureAndSetBlocking():0:0 -> onMeasure
    1:1:void onMeasure(int,int):0 -> onMeasure
    2:2:void androidx.core.widget.TextViewCompat.setPrecomputedText(android.widget.TextView,androidx.core.text.PrecomputedTextCompat):0:0 -> onMeasure
    2:2:void consumeTextFutureAndSetBlocking():0 -> onMeasure
    2:2:void onMeasure(int,int):0 -> onMeasure
    3:3:void onMeasure(int,int):0:0 -> onMeasure
    1:1:void androidx.appcompat.widget.AppCompatTextHelper.onSetCompoundDrawables():0:0 -> setCompoundDrawables
    1:1:void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable):0 -> setCompoundDrawables
    1:1:void androidx.appcompat.widget.AppCompatTextHelper.onSetCompoundDrawables():0:0 -> setCompoundDrawablesRelative
    1:1:void setCompoundDrawablesRelative(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable):0 -> setCompoundDrawablesRelative
    1:1:void androidx.appcompat.widget.AppCompatTextHelper.onSetCompoundDrawables():0:0 -> setCompoundDrawablesRelativeWithIntrinsicBounds
    1:1:void setCompoundDrawablesRelativeWithIntrinsicBounds(int,int,int,int):0 -> setCompoundDrawablesRelativeWithIntrinsicBounds
    2:2:void androidx.appcompat.widget.AppCompatTextHelper.onSetCompoundDrawables():0:0 -> setCompoundDrawablesRelativeWithIntrinsicBounds
    2:2:void setCompoundDrawablesRelativeWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable):0 -> setCompoundDrawablesRelativeWithIntrinsicBounds
    1:1:void androidx.appcompat.widget.AppCompatTextHelper.onSetCompoundDrawables():0:0 -> setCompoundDrawablesWithIntrinsicBounds
    1:1:void setCompoundDrawablesWithIntrinsicBounds(int,int,int,int):0 -> setCompoundDrawablesWithIntrinsicBounds
    2:2:void androidx.appcompat.widget.AppCompatTextHelper.onSetCompoundDrawables():0:0 -> setCompoundDrawablesWithIntrinsicBounds
    2:2:void setCompoundDrawablesWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable):0 -> setCompoundDrawablesWithIntrinsicBounds
    1:1:void androidx.core.widget.TextViewCompat.setPrecomputedText(android.widget.TextView,androidx.core.text.PrecomputedTextCompat):0:0 -> setPrecomputedText
    1:1:void setPrecomputedText(androidx.core.text.PrecomputedTextCompat):0 -> setPrecomputedText
    1:1:android.text.TextDirectionHeuristic androidx.core.text.PrecomputedTextCompat$Params.getTextDirection():0:0 -> setTextMetricsParamsCompat
    1:1:void androidx.core.widget.TextViewCompat.setTextMetricsParams(android.widget.TextView,androidx.core.text.PrecomputedTextCompat$Params):0 -> setTextMetricsParamsCompat
    1:1:void setTextMetricsParamsCompat(androidx.core.text.PrecomputedTextCompat$Params):0 -> setTextMetricsParamsCompat
    2:2:int androidx.core.widget.TextViewCompat.getTextDirection(android.text.TextDirectionHeuristic):0:0 -> setTextMetricsParamsCompat
    2:2:void androidx.core.widget.TextViewCompat.setTextMetricsParams(android.widget.TextView,androidx.core.text.PrecomputedTextCompat$Params):0 -> setTextMetricsParamsCompat
    2:2:void setTextMetricsParamsCompat(androidx.core.text.PrecomputedTextCompat$Params):0 -> setTextMetricsParamsCompat
    3:3:void androidx.core.widget.TextViewCompat.setTextMetricsParams(android.widget.TextView,androidx.core.text.PrecomputedTextCompat$Params):0:0 -> setTextMetricsParamsCompat
    3:3:void setTextMetricsParamsCompat(androidx.core.text.PrecomputedTextCompat$Params):0 -> setTextMetricsParamsCompat
    4:4:android.text.TextPaint androidx.core.text.PrecomputedTextCompat$Params.getTextPaint():0:0 -> setTextMetricsParamsCompat
    4:4:void androidx.core.widget.TextViewCompat.setTextMetricsParams(android.widget.TextView,androidx.core.text.PrecomputedTextCompat$Params):0 -> setTextMetricsParamsCompat
    4:4:void setTextMetricsParamsCompat(androidx.core.text.PrecomputedTextCompat$Params):0 -> setTextMetricsParamsCompat
    5:5:void androidx.core.widget.TextViewCompat.setTextMetricsParams(android.widget.TextView,androidx.core.text.PrecomputedTextCompat$Params):0:0 -> setTextMetricsParamsCompat
    5:5:void setTextMetricsParamsCompat(androidx.core.text.PrecomputedTextCompat$Params):0 -> setTextMetricsParamsCompat
    6:6:int androidx.core.text.PrecomputedTextCompat$Params.getBreakStrategy():0:0 -> setTextMetricsParamsCompat
    6:6:void androidx.core.widget.TextViewCompat.setTextMetricsParams(android.widget.TextView,androidx.core.text.PrecomputedTextCompat$Params):0 -> setTextMetricsParamsCompat
    6:6:void setTextMetricsParamsCompat(androidx.core.text.PrecomputedTextCompat$Params):0 -> setTextMetricsParamsCompat
    7:7:void androidx.core.widget.TextViewCompat.setTextMetricsParams(android.widget.TextView,androidx.core.text.PrecomputedTextCompat$Params):0:0 -> setTextMetricsParamsCompat
    7:7:void setTextMetricsParamsCompat(androidx.core.text.PrecomputedTextCompat$Params):0 -> setTextMetricsParamsCompat
    8:8:int androidx.core.text.PrecomputedTextCompat$Params.getHyphenationFrequency():0:0 -> setTextMetricsParamsCompat
    8:8:void androidx.core.widget.TextViewCompat.setTextMetricsParams(android.widget.TextView,androidx.core.text.PrecomputedTextCompat$Params):0 -> setTextMetricsParamsCompat
    8:8:void setTextMetricsParamsCompat(androidx.core.text.PrecomputedTextCompat$Params):0 -> setTextMetricsParamsCompat
    9:9:void androidx.core.widget.TextViewCompat.setTextMetricsParams(android.widget.TextView,androidx.core.text.PrecomputedTextCompat$Params):0:0 -> setTextMetricsParamsCompat
    9:9:void setTextMetricsParamsCompat(androidx.core.text.PrecomputedTextCompat$Params):0 -> setTextMetricsParamsCompat
    1:1:android.graphics.Typeface androidx.core.graphics.TypefaceCompat.create(android.content.Context,android.graphics.Typeface,int):0:0 -> setTypeface
    1:1:void setTypeface(android.graphics.Typeface,int):0 -> setTypeface
    2:2:void setTypeface(android.graphics.Typeface,int):0:0 -> setTypeface
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper -> a.b.h.c0:
    float mAutoSizeMaxTextSizeInPx -> e
    float mAutoSizeMinTextSizeInPx -> d
    android.content.Context mContext -> i
    float mAutoSizeStepGranularityInPx -> c
    android.graphics.RectF TEMP_RECTF -> k
    int mAutoSizeTextType -> a
    int[] mAutoSizeTextSizesInPx -> f
    boolean mHasPresetAutoSizeValues -> g
    java.util.concurrent.ConcurrentHashMap sTextViewFieldByNameCache -> m
    android.widget.TextView mTextView -> h
    java.util.concurrent.ConcurrentHashMap sTextViewMethodByNameCache -> l
    boolean mNeedsAutoSizeText -> b
    androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl mImpl -> j
    int[] cleanupAutoSizePresetSizes(int[]) -> a
    boolean setupAutoSizeText() -> b
    boolean setupAutoSizeUniformPresetSizesConfiguration() -> c
    boolean supportsAutoSizeText() -> d
    void validateAndSetAutoSizeTextTypeUniformConfiguration(float,float,float) -> e
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl -> a.b.h.c0$c:
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl23 -> a.b.h.c0$a:
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29 -> a.b.h.c0$b:
androidx.appcompat.widget.AppCompatToggleButton -> a.b.h.d0:
    androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper -> a
    androidx.appcompat.widget.AppCompatTextHelper mTextHelper -> b
    1:1:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
androidx.appcompat.widget.ButtonBarLayout -> androidx.appcompat.widget.ButtonBarLayout:
    boolean mAllowStacking -> a
    int mLastWidthSize -> b
    1:1:void androidx.core.view.ViewCompat.saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    2:2:void androidx.core.view.ViewCompat$Api29Impl.saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int):0:0 -> <init>
    2:2:void androidx.core.view.ViewCompat.saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int):0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet):0:0 -> <init>
    int getNextVisibleChildIndex(int) -> a
    boolean isStacked() -> b
    1:1:int androidx.core.view.ViewCompat.getMinimumHeight(android.view.View):0:0 -> onMeasure
    1:1:void onMeasure(int,int):0 -> onMeasure
    2:2:void onMeasure(int,int):0:0 -> onMeasure
androidx.appcompat.widget.ContentFrameLayout -> androidx.appcompat.widget.ContentFrameLayout:
    android.util.TypedValue mFixedWidthMinor -> d
    android.util.TypedValue mFixedWidthMajor -> c
    android.util.TypedValue mMinWidthMinor -> b
    android.util.TypedValue mMinWidthMajor -> a
    android.graphics.Rect mDecorPadding -> g
    androidx.appcompat.widget.ContentFrameLayout$OnAttachListener mAttachListener -> h
    android.util.TypedValue mFixedHeightMinor -> f
    android.util.TypedValue mFixedHeightMajor -> e
    1:1:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    1:1:void androidx.appcompat.app.AppCompatDelegateImpl$5.onAttachedFromWindow():0:0 -> onAttachedToWindow
    1:1:void onAttachedToWindow():0 -> onAttachedToWindow
    1:1:void androidx.appcompat.app.AppCompatDelegateImpl$5.onDetachedFromWindow():0:0 -> onDetachedFromWindow
    1:1:void onDetachedFromWindow():0 -> onDetachedFromWindow
    2:2:void androidx.appcompat.app.AppCompatDelegateImpl.dismissPopups():0:0 -> onDetachedFromWindow
    2:2:void androidx.appcompat.app.AppCompatDelegateImpl$5.onDetachedFromWindow():0 -> onDetachedFromWindow
    2:2:void onDetachedFromWindow():0 -> onDetachedFromWindow
    3:3:void androidx.appcompat.view.menu.MenuBuilder.close():0:0 -> onDetachedFromWindow
    3:3:void androidx.appcompat.app.AppCompatDelegateImpl.dismissPopups():0 -> onDetachedFromWindow
    3:3:void androidx.appcompat.app.AppCompatDelegateImpl$5.onDetachedFromWindow():0 -> onDetachedFromWindow
    3:3:void onDetachedFromWindow():0 -> onDetachedFromWindow
androidx.appcompat.widget.ContentFrameLayout$OnAttachListener -> androidx.appcompat.widget.ContentFrameLayout$a:
androidx.appcompat.widget.DecorContentParent -> a.b.h.e0:
    boolean showOverflowMenu() -> a
    void setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback) -> b
    boolean isOverflowMenuShowPending() -> c
    void setMenuPrepared() -> d
    boolean isOverflowMenuShowing() -> e
    boolean canShowOverflowMenu() -> f
    boolean hideOverflowMenu() -> g
    void initFeature(int) -> h
    void dismissPopups() -> j
androidx.appcompat.widget.DecorToolbar -> a.b.h.f0:
    boolean showOverflowMenu() -> a
    void setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback) -> b
    boolean isOverflowMenuShowPending() -> c
    void setMenuPrepared() -> d
    boolean isOverflowMenuShowing() -> e
    boolean canShowOverflowMenu() -> f
    boolean hideOverflowMenu() -> g
    void dismissPopupMenus() -> h
    void setMenuCallbacks(androidx.appcompat.view.menu.MenuPresenter$Callback,androidx.appcompat.view.menu.MenuBuilder$Callback) -> i
    androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long) -> j
    int getDisplayOptions() -> k
    void setVisibility(int) -> l
    void initProgress() -> m
    android.view.Menu getMenu() -> n
    boolean hasExpandedActionView() -> o
    void setLogo(int) -> p
    void setEmbeddedTabView(androidx.appcompat.widget.ScrollingTabContainerView) -> q
    android.view.ViewGroup getViewGroup() -> r
    void setHomeButtonEnabled(boolean) -> s
    void initIndeterminateProgress() -> t
    void setCollapsible(boolean) -> u
    android.content.Context getContext() -> v
    void setDisplayOptions(int) -> w
    int getNavigationMode() -> x
androidx.appcompat.widget.DrawableUtils -> a.b.h.g0:
    int[] EMPTY_STATE_SET -> b
    int[] CHECKED_STATE_SET -> a
    android.graphics.Rect INSETS_NONE -> c
    java.lang.Class sInsetsClazz -> d
    1:1:android.graphics.drawable.Drawable androidx.appcompat.graphics.drawable.DrawableWrapper.getWrappedDrawable():0:0 -> a
    1:1:boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable):0 -> a
    2:2:boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable):0:0 -> a
    android.graphics.Rect getOpticalBounds(android.graphics.drawable.Drawable) -> b
    android.graphics.PorterDuff$Mode parseTintMode(int,android.graphics.PorterDuff$Mode) -> c
androidx.appcompat.widget.DropDownListView -> a.b.h.h0:
    boolean mListSelectionHidden -> i
    boolean mHijackFocus -> j
    boolean mDrawsInPressedState -> k
    int mMotionPosition -> f
    int mSelectionRightPadding -> d
    int mSelectionBottomPadding -> e
    int mSelectionLeftPadding -> b
    int mSelectionTopPadding -> c
    androidx.appcompat.widget.DropDownListView$ResolveHoverRunnable mResolveHoverRunnable -> m
    android.graphics.Rect mSelectorRect -> a
    androidx.core.widget.ListViewAutoScrollHelper mScrollHelper -> l
    java.lang.reflect.Field mIsChildViewEnabled -> g
    androidx.appcompat.widget.DropDownListView$GateKeeperDrawable mSelector -> h
    int measureHeightOfChildrenCompat(int,int,int,int,int) -> a
    1:1:void setPressedItem(android.view.View,int,float,float):0:0 -> b
    1:1:boolean onForwardedEvent(android.view.MotionEvent,int):0 -> b
    2:2:void positionSelectorLikeFocusCompat(int,android.view.View):0:0 -> b
    2:2:void positionSelectorLikeTouchCompat(int,android.view.View,float,float):0 -> b
    2:2:void setPressedItem(android.view.View,int,float,float):0 -> b
    2:2:boolean onForwardedEvent(android.view.MotionEvent,int):0 -> b
    3:3:void positionSelectorCompat(int,android.view.View):0:0 -> b
    3:3:void positionSelectorLikeFocusCompat(int,android.view.View):0 -> b
    3:3:void positionSelectorLikeTouchCompat(int,android.view.View,float,float):0 -> b
    3:3:void setPressedItem(android.view.View,int,float,float):0 -> b
    3:3:boolean onForwardedEvent(android.view.MotionEvent,int):0 -> b
    4:4:void positionSelectorLikeFocusCompat(int,android.view.View):0:0 -> b
    4:4:void positionSelectorLikeTouchCompat(int,android.view.View,float,float):0 -> b
    4:4:void setPressedItem(android.view.View,int,float,float):0 -> b
    4:4:boolean onForwardedEvent(android.view.MotionEvent,int):0 -> b
    5:5:void androidx.core.graphics.drawable.DrawableCompat.setHotspot(android.graphics.drawable.Drawable,float,float):0:0 -> b
    5:5:void positionSelectorLikeFocusCompat(int,android.view.View):0 -> b
    5:5:void positionSelectorLikeTouchCompat(int,android.view.View,float,float):0 -> b
    5:5:void setPressedItem(android.view.View,int,float,float):0 -> b
    5:5:boolean onForwardedEvent(android.view.MotionEvent,int):0 -> b
    6:6:void positionSelectorLikeTouchCompat(int,android.view.View,float,float):0:0 -> b
    6:6:void setPressedItem(android.view.View,int,float,float):0 -> b
    6:6:boolean onForwardedEvent(android.view.MotionEvent,int):0 -> b
    7:7:void androidx.core.graphics.drawable.DrawableCompat.setHotspot(android.graphics.drawable.Drawable,float,float):0:0 -> b
    7:7:void positionSelectorLikeTouchCompat(int,android.view.View,float,float):0 -> b
    7:7:void setPressedItem(android.view.View,int,float,float):0 -> b
    7:7:boolean onForwardedEvent(android.view.MotionEvent,int):0 -> b
    8:8:void setPressedItem(android.view.View,int,float,float):0:0 -> b
    8:8:boolean onForwardedEvent(android.view.MotionEvent,int):0 -> b
    9:9:void clickPressedItem(android.view.View,int):0:0 -> b
    9:9:boolean onForwardedEvent(android.view.MotionEvent,int):0 -> b
    10:10:void clearPressedItem():0:0 -> b
    10:10:boolean onForwardedEvent(android.view.MotionEvent,int):0 -> b
    11:11:boolean onForwardedEvent(android.view.MotionEvent,int):0:0 -> b
    12:12:androidx.core.widget.AutoScrollHelper androidx.core.widget.AutoScrollHelper.setEnabled(boolean):0:0 -> b
    12:12:boolean onForwardedEvent(android.view.MotionEvent,int):0 -> b
    13:13:boolean onForwardedEvent(android.view.MotionEvent,int):0:0 -> b
    14:14:androidx.core.widget.AutoScrollHelper androidx.core.widget.AutoScrollHelper.setEnabled(boolean):0:0 -> b
    14:14:boolean onForwardedEvent(android.view.MotionEvent,int):0 -> b
    1:1:boolean touchModeDrawsInPressedStateCompat():0:0 -> c
    1:1:void updateSelectorStateCompat():0 -> c
    2:2:void updateSelectorStateCompat():0:0 -> c
    1:1:void drawSelectorCompat(android.graphics.Canvas):0:0 -> dispatchDraw
    1:1:void dispatchDraw(android.graphics.Canvas):0 -> dispatchDraw
    2:2:void dispatchDraw(android.graphics.Canvas):0:0 -> dispatchDraw
    1:1:void androidx.appcompat.widget.DropDownListView$ResolveHoverRunnable.post():0:0 -> onHoverEvent
    1:1:boolean onHoverEvent(android.view.MotionEvent):0 -> onHoverEvent
    2:2:boolean onHoverEvent(android.view.MotionEvent):0:0 -> onHoverEvent
    1:1:void androidx.appcompat.widget.DropDownListView$ResolveHoverRunnable.cancel():0:0 -> onTouchEvent
    1:1:boolean onTouchEvent(android.view.MotionEvent):0 -> onTouchEvent
    2:2:boolean onTouchEvent(android.view.MotionEvent):0:0 -> onTouchEvent
    1:1:void androidx.appcompat.widget.DropDownListView$GateKeeperDrawable.setEnabled(boolean):0:0 -> setSelectorEnabled
    1:1:void setSelectorEnabled(boolean):0 -> setSelectorEnabled
androidx.appcompat.widget.DropDownListView$GateKeeperDrawable -> a.b.h.h0$a:
    boolean mEnabled -> b
    1:1:void androidx.appcompat.graphics.drawable.DrawableWrapper.draw(android.graphics.Canvas):0:0 -> draw
    1:1:void draw(android.graphics.Canvas):0 -> draw
    1:1:void androidx.appcompat.graphics.drawable.DrawableWrapper.setHotspot(float,float):0:0 -> setHotspot
    1:1:void setHotspot(float,float):0 -> setHotspot
    2:2:void androidx.core.graphics.drawable.DrawableCompat.setHotspot(android.graphics.drawable.Drawable,float,float):0:0 -> setHotspot
    2:2:void androidx.appcompat.graphics.drawable.DrawableWrapper.setHotspot(float,float):0 -> setHotspot
    2:2:void setHotspot(float,float):0 -> setHotspot
    1:1:void androidx.appcompat.graphics.drawable.DrawableWrapper.setHotspotBounds(int,int,int,int):0:0 -> setHotspotBounds
    1:1:void setHotspotBounds(int,int,int,int):0 -> setHotspotBounds
    2:2:void androidx.core.graphics.drawable.DrawableCompat.setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int):0:0 -> setHotspotBounds
    2:2:void androidx.appcompat.graphics.drawable.DrawableWrapper.setHotspotBounds(int,int,int,int):0 -> setHotspotBounds
    2:2:void setHotspotBounds(int,int,int,int):0 -> setHotspotBounds
    1:1:boolean androidx.appcompat.graphics.drawable.DrawableWrapper.setState(int[]):0:0 -> setState
    1:1:boolean setState(int[]):0 -> setState
androidx.appcompat.widget.DropDownListView$ResolveHoverRunnable -> a.b.h.h0$b:
    androidx.appcompat.widget.DropDownListView this$0 -> a
androidx.appcompat.widget.FitWindowsFrameLayout -> androidx.appcompat.widget.FitWindowsFrameLayout:
    androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener mListener -> a
androidx.appcompat.widget.FitWindowsLinearLayout -> androidx.appcompat.widget.FitWindowsLinearLayout:
    androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener mListener -> a
androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener -> a.b.h.i0:
    void onFitSystemWindows(android.graphics.Rect) -> a
androidx.appcompat.widget.ForwardingListener -> a.b.h.j0:
    java.lang.Runnable mDisallowIntercept -> e
    int[] mTmpLocation -> i
    int mActivePointerId -> h
    java.lang.Runnable mTriggerLongPress -> f
    boolean mForwarding -> g
    float mScaledTouchSlop -> a
    int mTapTimeout -> b
    int mLongPressTimeout -> c
    android.view.View mSrc -> d
    void clearCallbacks() -> a
    androidx.appcompat.view.menu.ShowableListMenu getPopup() -> b
    boolean onForwardingStarted() -> c
    boolean onForwardingStopped() -> d
    1:1:boolean onTouchForwarded(android.view.MotionEvent):0:0 -> onTouch
    1:1:boolean onTouch(android.view.View,android.view.MotionEvent):0 -> onTouch
    2:2:boolean toGlobalMotionEvent(android.view.View,android.view.MotionEvent):0:0 -> onTouch
    2:2:boolean onTouchForwarded(android.view.MotionEvent):0 -> onTouch
    2:2:boolean onTouch(android.view.View,android.view.MotionEvent):0 -> onTouch
    3:3:boolean toLocalMotionEvent(android.view.View,android.view.MotionEvent):0:0 -> onTouch
    3:3:boolean onTouchForwarded(android.view.MotionEvent):0 -> onTouch
    3:3:boolean onTouch(android.view.View,android.view.MotionEvent):0 -> onTouch
    4:4:boolean onTouchForwarded(android.view.MotionEvent):0:0 -> onTouch
    4:4:boolean onTouch(android.view.View,android.view.MotionEvent):0 -> onTouch
    5:5:boolean onTouch(android.view.View,android.view.MotionEvent):0:0 -> onTouch
    6:6:boolean onTouchObserved(android.view.MotionEvent):0:0 -> onTouch
    6:6:boolean onTouch(android.view.View,android.view.MotionEvent):0 -> onTouch
    7:7:boolean pointInView(android.view.View,float,float,float):0:0 -> onTouch
    7:7:boolean onTouchObserved(android.view.MotionEvent):0 -> onTouch
    7:7:boolean onTouch(android.view.View,android.view.MotionEvent):0 -> onTouch
    8:8:boolean onTouchObserved(android.view.MotionEvent):0:0 -> onTouch
    8:8:boolean onTouch(android.view.View,android.view.MotionEvent):0 -> onTouch
    9:9:boolean onTouch(android.view.View,android.view.MotionEvent):0:0 -> onTouch
androidx.appcompat.widget.ForwardingListener$DisallowIntercept -> a.b.h.j0$a:
    androidx.appcompat.widget.ForwardingListener this$0 -> a
androidx.appcompat.widget.ForwardingListener$TriggerLongPress -> a.b.h.j0$b:
    androidx.appcompat.widget.ForwardingListener this$0 -> a
    1:1:void androidx.appcompat.widget.ForwardingListener.onLongPress():0:0 -> run
    1:1:void run():0 -> run
androidx.appcompat.widget.LinearLayoutCompat -> a.b.h.k0:
    int mShowDividers -> n
    int mDividerPadding -> o
    int mDividerWidth -> l
    int mDividerHeight -> m
    float mWeightSum -> g
    int mTotalLength -> f
    int mOrientation -> d
    int mGravity -> e
    int mBaselineAlignedChildIndex -> b
    int mBaselineChildTop -> c
    int[] mMaxAscent -> i
    android.graphics.drawable.Drawable mDivider -> k
    boolean mUseLargestChild -> h
    boolean mBaselineAligned -> a
    int[] mMaxDescent -> j
    1:1:androidx.appcompat.widget.TintTypedArray androidx.appcompat.widget.TintTypedArray.obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    2:2:void androidx.core.view.ViewCompat.saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int):0:0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    3:3:void androidx.core.view.ViewCompat$Api29Impl.saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int):0:0 -> <init>
    3:3:void androidx.core.view.ViewCompat.saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int):0 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    4:4:int androidx.appcompat.widget.TintTypedArray.getInt(int,int):0:0 -> <init>
    4:4:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    5:5:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    6:6:int androidx.appcompat.widget.TintTypedArray.getInt(int,int):0:0 -> <init>
    6:6:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    7:7:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    8:8:boolean androidx.appcompat.widget.TintTypedArray.getBoolean(int,boolean):0:0 -> <init>
    8:8:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    9:9:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    10:10:float androidx.appcompat.widget.TintTypedArray.getFloat(int,float):0:0 -> <init>
    10:10:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    11:11:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    12:12:int androidx.appcompat.widget.TintTypedArray.getInt(int,int):0:0 -> <init>
    12:12:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    13:13:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    14:14:boolean androidx.appcompat.widget.TintTypedArray.getBoolean(int,boolean):0:0 -> <init>
    14:14:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    15:15:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    16:16:android.graphics.drawable.Drawable androidx.appcompat.widget.TintTypedArray.getDrawable(int):0:0 -> <init>
    16:16:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    17:17:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    18:18:int androidx.appcompat.widget.TintTypedArray.getInt(int,int):0:0 -> <init>
    18:18:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    19:19:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    20:20:int androidx.appcompat.widget.TintTypedArray.getDimensionPixelSize(int,int):0:0 -> <init>
    20:20:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    21:21:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    22:22:void androidx.appcompat.widget.TintTypedArray.recycle():0:0 -> <init>
    22:22:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    void drawHorizontalDivider(android.graphics.Canvas,int) -> e
    void drawVerticalDivider(android.graphics.Canvas,int) -> f
    androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateDefaultLayoutParams() -> g
    androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.util.AttributeSet) -> h
    androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> i
    int getChildrenSkipCount(android.view.View,int) -> j
    int getLocationOffset(android.view.View) -> k
    int getNextLocationOffset(android.view.View) -> l
    boolean hasDividerBeforeChildAt(int) -> m
    void measureChildBeforeLayout(android.view.View,int,int,int,int,int) -> n
    int measureNullChild(int) -> o
    1:1:void drawDividersVertical(android.graphics.Canvas):0:0 -> onDraw
    1:1:void onDraw(android.graphics.Canvas):0 -> onDraw
    2:2:android.view.View getVirtualChildAt(int):0:0 -> onDraw
    2:2:void drawDividersVertical(android.graphics.Canvas):0 -> onDraw
    2:2:void onDraw(android.graphics.Canvas):0 -> onDraw
    3:3:void drawDividersVertical(android.graphics.Canvas):0:0 -> onDraw
    3:3:void onDraw(android.graphics.Canvas):0 -> onDraw
    4:4:android.view.View getVirtualChildAt(int):0:0 -> onDraw
    4:4:void drawDividersVertical(android.graphics.Canvas):0 -> onDraw
    4:4:void onDraw(android.graphics.Canvas):0 -> onDraw
    5:5:void drawDividersVertical(android.graphics.Canvas):0:0 -> onDraw
    5:5:void onDraw(android.graphics.Canvas):0 -> onDraw
    6:6:void drawDividersHorizontal(android.graphics.Canvas):0:0 -> onDraw
    6:6:void onDraw(android.graphics.Canvas):0 -> onDraw
    7:7:android.view.View getVirtualChildAt(int):0:0 -> onDraw
    7:7:void drawDividersHorizontal(android.graphics.Canvas):0 -> onDraw
    7:7:void onDraw(android.graphics.Canvas):0 -> onDraw
    8:8:void drawDividersHorizontal(android.graphics.Canvas):0:0 -> onDraw
    8:8:void onDraw(android.graphics.Canvas):0 -> onDraw
    9:9:android.view.View getVirtualChildAt(int):0:0 -> onDraw
    9:9:void drawDividersHorizontal(android.graphics.Canvas):0 -> onDraw
    9:9:void onDraw(android.graphics.Canvas):0 -> onDraw
    10:10:void drawDividersHorizontal(android.graphics.Canvas):0:0 -> onDraw
    10:10:void onDraw(android.graphics.Canvas):0 -> onDraw
    1:1:void layoutVertical(int,int,int,int):0:0 -> onLayout
    1:1:void onLayout(boolean,int,int,int,int):0 -> onLayout
    2:2:android.view.View getVirtualChildAt(int):0:0 -> onLayout
    2:2:void layoutVertical(int,int,int,int):0 -> onLayout
    2:2:void onLayout(boolean,int,int,int,int):0 -> onLayout
    3:3:void layoutVertical(int,int,int,int):0:0 -> onLayout
    3:3:void onLayout(boolean,int,int,int,int):0 -> onLayout
    4:4:int androidx.core.view.ViewCompat.getLayoutDirection(android.view.View):0:0 -> onLayout
    4:4:void layoutVertical(int,int,int,int):0 -> onLayout
    4:4:void onLayout(boolean,int,int,int,int):0 -> onLayout
    5:5:int androidx.core.view.GravityCompat.getAbsoluteGravity(int,int):0:0 -> onLayout
    5:5:void layoutVertical(int,int,int,int):0 -> onLayout
    5:5:void onLayout(boolean,int,int,int,int):0 -> onLayout
    6:6:void layoutVertical(int,int,int,int):0:0 -> onLayout
    6:6:void onLayout(boolean,int,int,int,int):0 -> onLayout
    7:7:void setChildFrame(android.view.View,int,int,int,int):0:0 -> onLayout
    7:7:void layoutVertical(int,int,int,int):0 -> onLayout
    7:7:void onLayout(boolean,int,int,int,int):0 -> onLayout
    8:8:void layoutVertical(int,int,int,int):0:0 -> onLayout
    8:8:void onLayout(boolean,int,int,int,int):0 -> onLayout
    9:9:void layoutHorizontal(int,int,int,int):0:0 -> onLayout
    9:9:void onLayout(boolean,int,int,int,int):0 -> onLayout
    10:10:int androidx.core.view.ViewCompat.getLayoutDirection(android.view.View):0:0 -> onLayout
    10:10:void layoutHorizontal(int,int,int,int):0 -> onLayout
    10:10:void onLayout(boolean,int,int,int,int):0 -> onLayout
    11:11:int androidx.core.view.GravityCompat.getAbsoluteGravity(int,int):0:0 -> onLayout
    11:11:void layoutHorizontal(int,int,int,int):0 -> onLayout
    11:11:void onLayout(boolean,int,int,int,int):0 -> onLayout
    12:12:void layoutHorizontal(int,int,int,int):0:0 -> onLayout
    12:12:void onLayout(boolean,int,int,int,int):0 -> onLayout
    13:13:android.view.View getVirtualChildAt(int):0:0 -> onLayout
    13:13:void layoutHorizontal(int,int,int,int):0 -> onLayout
    13:13:void onLayout(boolean,int,int,int,int):0 -> onLayout
    14:14:void layoutHorizontal(int,int,int,int):0:0 -> onLayout
    14:14:void onLayout(boolean,int,int,int,int):0 -> onLayout
    15:15:void setChildFrame(android.view.View,int,int,int,int):0:0 -> onLayout
    15:15:void layoutHorizontal(int,int,int,int):0 -> onLayout
    15:15:void onLayout(boolean,int,int,int,int):0 -> onLayout
    16:16:void layoutHorizontal(int,int,int,int):0:0 -> onLayout
    16:16:void onLayout(boolean,int,int,int,int):0 -> onLayout
    1:1:void measureVertical(int,int):0:0 -> onMeasure
    1:1:void onMeasure(int,int):0 -> onMeasure
    2:2:android.view.View getVirtualChildAt(int):0:0 -> onMeasure
    2:2:void measureVertical(int,int):0 -> onMeasure
    2:2:void onMeasure(int,int):0 -> onMeasure
    3:3:void measureVertical(int,int):0:0 -> onMeasure
    3:3:void onMeasure(int,int):0 -> onMeasure
    4:4:android.view.View getVirtualChildAt(int):0:0 -> onMeasure
    4:4:void measureVertical(int,int):0 -> onMeasure
    4:4:void onMeasure(int,int):0 -> onMeasure
    5:5:void measureVertical(int,int):0:0 -> onMeasure
    5:5:void onMeasure(int,int):0 -> onMeasure
    6:6:android.view.View getVirtualChildAt(int):0:0 -> onMeasure
    6:6:void measureVertical(int,int):0 -> onMeasure
    6:6:void onMeasure(int,int):0 -> onMeasure
    7:7:void measureVertical(int,int):0:0 -> onMeasure
    7:7:void onMeasure(int,int):0 -> onMeasure
    8:8:android.view.View getVirtualChildAt(int):0:0 -> onMeasure
    8:8:void measureVertical(int,int):0 -> onMeasure
    8:8:void onMeasure(int,int):0 -> onMeasure
    9:9:void measureVertical(int,int):0:0 -> onMeasure
    9:9:void onMeasure(int,int):0 -> onMeasure
    10:10:void forceUniformWidth(int,int):0:0 -> onMeasure
    10:10:void measureVertical(int,int):0 -> onMeasure
    10:10:void onMeasure(int,int):0 -> onMeasure
    11:11:android.view.View getVirtualChildAt(int):0:0 -> onMeasure
    11:11:void forceUniformWidth(int,int):0 -> onMeasure
    11:11:void measureVertical(int,int):0 -> onMeasure
    11:11:void onMeasure(int,int):0 -> onMeasure
    12:12:void forceUniformWidth(int,int):0:0 -> onMeasure
    12:12:void measureVertical(int,int):0 -> onMeasure
    12:12:void onMeasure(int,int):0 -> onMeasure
    13:13:void measureHorizontal(int,int):0:0 -> onMeasure
    13:13:void onMeasure(int,int):0 -> onMeasure
    14:14:android.view.View getVirtualChildAt(int):0:0 -> onMeasure
    14:14:void measureHorizontal(int,int):0 -> onMeasure
    14:14:void onMeasure(int,int):0 -> onMeasure
    15:15:void measureHorizontal(int,int):0:0 -> onMeasure
    15:15:void onMeasure(int,int):0 -> onMeasure
    16:16:android.view.View getVirtualChildAt(int):0:0 -> onMeasure
    16:16:void measureHorizontal(int,int):0 -> onMeasure
    16:16:void onMeasure(int,int):0 -> onMeasure
    17:17:void measureHorizontal(int,int):0:0 -> onMeasure
    17:17:void onMeasure(int,int):0 -> onMeasure
    18:18:android.view.View getVirtualChildAt(int):0:0 -> onMeasure
    18:18:void measureHorizontal(int,int):0 -> onMeasure
    18:18:void onMeasure(int,int):0 -> onMeasure
    19:19:void measureHorizontal(int,int):0:0 -> onMeasure
    19:19:void onMeasure(int,int):0 -> onMeasure
    20:20:android.view.View getVirtualChildAt(int):0:0 -> onMeasure
    20:20:void measureHorizontal(int,int):0 -> onMeasure
    20:20:void onMeasure(int,int):0 -> onMeasure
    21:21:void measureHorizontal(int,int):0:0 -> onMeasure
    21:21:void onMeasure(int,int):0 -> onMeasure
    22:22:void forceUniformHeight(int,int):0:0 -> onMeasure
    22:22:void measureHorizontal(int,int):0 -> onMeasure
    22:22:void onMeasure(int,int):0 -> onMeasure
    23:23:android.view.View getVirtualChildAt(int):0:0 -> onMeasure
    23:23:void forceUniformHeight(int,int):0 -> onMeasure
    23:23:void measureHorizontal(int,int):0 -> onMeasure
    23:23:void onMeasure(int,int):0 -> onMeasure
    24:24:void forceUniformHeight(int,int):0:0 -> onMeasure
    24:24:void measureHorizontal(int,int):0 -> onMeasure
    24:24:void onMeasure(int,int):0 -> onMeasure
androidx.appcompat.widget.LinearLayoutCompat$LayoutParams -> a.b.h.k0$a:
androidx.appcompat.widget.ListPopupWindow -> a.b.h.m0:
    android.content.Context mContext -> a
    int mPromptPosition -> n
    int mDropDownGravity -> l
    boolean mDropDownVerticalOffsetSet -> i
    int mDropDownWindowLayoutType -> h
    boolean mOverlapAnchorSet -> k
    int mDropDownHorizontalOffset -> f
    android.view.View mDropDownAnchorView -> p
    int mDropDownHeight -> d
    android.database.DataSetObserver mObserver -> o
    boolean mModal -> y
    android.widget.ListAdapter mAdapter -> b
    androidx.appcompat.widget.ListPopupWindow$ResizePopupRunnable mResizePopupRunnable -> r
    android.graphics.Rect mEpicenterBounds -> x
    android.os.Handler mHandler -> v
    int mListItemExpandMaximum -> m
    androidx.appcompat.widget.DropDownListView mDropDownList -> c
    boolean mOverlapAnchor -> j
    int mDropDownVerticalOffset -> g
    android.widget.AdapterView$OnItemClickListener mItemClickListener -> q
    int mDropDownWidth -> e
    androidx.appcompat.widget.ListPopupWindow$PopupScrollListener mScrollListener -> t
    androidx.appcompat.widget.ListPopupWindow$ListSelectorHider mHideSelector -> u
    android.widget.PopupWindow mPopup -> z
    androidx.appcompat.widget.ListPopupWindow$PopupTouchInterceptor mTouchInterceptor -> s
    android.graphics.Rect mTempRect -> w
    boolean isShowing() -> a
    void setHorizontalOffset(int) -> c
    int getHorizontalOffset() -> d
    android.widget.ListView getListView() -> e
    1:1:int buildDropDown():0:0 -> i
    1:1:void show():0 -> i
    2:2:android.view.View getAnchorView():0:0 -> i
    2:2:int buildDropDown():0 -> i
    2:2:void show():0 -> i
    3:3:int buildDropDown():0:0 -> i
    3:3:void show():0 -> i
    4:4:int getMaxAvailableHeight(android.view.View,int,boolean):0:0 -> i
    4:4:int buildDropDown():0 -> i
    4:4:void show():0 -> i
    5:5:int buildDropDown():0:0 -> i
    5:5:void show():0 -> i
    6:6:boolean isInputMethodNotNeeded():0:0 -> i
    6:6:void show():0 -> i
    7:7:void show():0:0 -> i
    8:8:void androidx.core.widget.PopupWindowCompat.setWindowLayoutType(android.widget.PopupWindow,int):0:0 -> i
    8:8:void show():0 -> i
    9:9:void show():0:0 -> i
    10:10:android.view.View getAnchorView():0:0 -> i
    10:10:void show():0 -> i
    11:11:boolean androidx.core.view.ViewCompat.isAttachedToWindow(android.view.View):0:0 -> i
    11:11:void show():0 -> i
    12:12:void show():0:0 -> i
    13:13:android.view.View getAnchorView():0:0 -> i
    13:13:void show():0 -> i
    14:14:void show():0:0 -> i
    15:15:android.view.View getAnchorView():0:0 -> i
    15:15:void show():0 -> i
    16:16:void show():0:0 -> i
    17:17:android.view.View getAnchorView():0:0 -> i
    17:17:void show():0 -> i
    18:18:void show():0:0 -> i
    19:19:void setPopupClipToScreenEnabled(boolean):0:0 -> i
    19:19:void show():0 -> i
    20:20:void show():0:0 -> i
    21:21:void androidx.core.widget.PopupWindowCompat.setOverlapAnchor(android.widget.PopupWindow,boolean):0:0 -> i
    21:21:void show():0 -> i
    22:22:void show():0:0 -> i
    23:23:android.view.View getAnchorView():0:0 -> i
    23:23:void show():0 -> i
    24:24:void show():0:0 -> i
    25:25:void androidx.core.widget.PopupWindowCompat.showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int):0:0 -> i
    25:25:void show():0 -> i
    26:26:void show():0:0 -> i
    27:27:void clearListSelection():0:0 -> i
    27:27:void show():0 -> i
    28:28:void show():0:0 -> i
    int getVerticalOffset() -> j
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> l
    void setVerticalOffset(int) -> m
    android.graphics.drawable.Drawable getBackground() -> n
    void setAdapter(android.widget.ListAdapter) -> o
    androidx.appcompat.widget.DropDownListView createDropDownListView(android.content.Context,boolean) -> q
    1:1:void setWidth(int):0:0 -> r
    1:1:void setContentWidth(int):0 -> r
    void setModal(boolean) -> s
androidx.appcompat.widget.ListPopupWindow$3 -> a.b.h.l0:
    androidx.appcompat.widget.ListPopupWindow this$0 -> a
androidx.appcompat.widget.ListPopupWindow$ListSelectorHider -> a.b.h.m0$a:
    androidx.appcompat.widget.ListPopupWindow this$0 -> a
    1:1:void androidx.appcompat.widget.ListPopupWindow.clearListSelection():0:0 -> run
    1:1:void run():0 -> run
androidx.appcompat.widget.ListPopupWindow$PopupDataSetObserver -> a.b.h.m0$b:
    androidx.appcompat.widget.ListPopupWindow this$0 -> a
androidx.appcompat.widget.ListPopupWindow$PopupScrollListener -> a.b.h.m0$c:
    androidx.appcompat.widget.ListPopupWindow this$0 -> a
    1:1:boolean androidx.appcompat.widget.ListPopupWindow.isInputMethodNotNeeded():0:0 -> onScrollStateChanged
    1:1:void onScrollStateChanged(android.widget.AbsListView,int):0 -> onScrollStateChanged
    2:2:void onScrollStateChanged(android.widget.AbsListView,int):0:0 -> onScrollStateChanged
androidx.appcompat.widget.ListPopupWindow$PopupTouchInterceptor -> a.b.h.m0$d:
    androidx.appcompat.widget.ListPopupWindow this$0 -> a
androidx.appcompat.widget.ListPopupWindow$ResizePopupRunnable -> a.b.h.m0$e:
    androidx.appcompat.widget.ListPopupWindow this$0 -> a
    1:1:boolean androidx.core.view.ViewCompat.isAttachedToWindow(android.view.View):0:0 -> run
    1:1:void run():0 -> run
    2:2:void run():0:0 -> run
androidx.appcompat.widget.MenuItemHoverListener -> a.b.h.n0:
    void onItemHoverEnter(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> g
    void onItemHoverExit(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> k
androidx.appcompat.widget.MenuPopupWindow -> a.b.h.o0:
    androidx.appcompat.widget.MenuItemHoverListener mHoverListener -> A
    void onItemHoverEnter(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> g
    void onItemHoverExit(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> k
    androidx.appcompat.widget.DropDownListView createDropDownListView(android.content.Context,boolean) -> q
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView -> a.b.h.o0$a:
    int mAdvanceKey -> n
    int mRetreatKey -> o
    android.view.MenuItem mHoveredMenuItem -> q
    androidx.appcompat.widget.MenuItemHoverListener mHoverListener -> p
    1:1:androidx.appcompat.view.menu.MenuBuilder androidx.appcompat.view.menu.MenuAdapter.getAdapterMenu():0:0 -> onHoverEvent
    1:1:boolean onHoverEvent(android.view.MotionEvent):0 -> onHoverEvent
    2:2:boolean onHoverEvent(android.view.MotionEvent):0:0 -> onHoverEvent
    1:1:androidx.appcompat.view.menu.MenuBuilder androidx.appcompat.view.menu.MenuAdapter.getAdapterMenu():0:0 -> onKeyDown
    1:1:boolean onKeyDown(int,android.view.KeyEvent):0 -> onKeyDown
    2:2:boolean onKeyDown(int,android.view.KeyEvent):0:0 -> onKeyDown
androidx.appcompat.widget.ResourceManagerInternal -> a.b.h.p0:
    androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache COLOR_FILTER_CACHE -> j
    androidx.collection.SimpleArrayMap mDelegates -> b
    androidx.appcompat.widget.ResourceManagerInternal INSTANCE -> i
    androidx.collection.SparseArrayCompat mKnownDrawableIdTags -> c
    android.graphics.PorterDuff$Mode DEFAULT_MODE -> h
    androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks mHooks -> g
    boolean mHasCheckedVectorDrawableSetup -> f
    java.util.WeakHashMap mDrawableCaches -> d
    java.util.WeakHashMap mTintLists -> a
    android.util.TypedValue mTypedValue -> e
    boolean addDrawableToCache(android.content.Context,long,android.graphics.drawable.Drawable) -> a
    1:1:long createCacheKey(android.util.TypedValue):0:0 -> b
    1:1:android.graphics.drawable.Drawable createDrawableIfNeeded(android.content.Context,int):0 -> b
    2:2:android.graphics.drawable.Drawable createDrawableIfNeeded(android.content.Context,int):0:0 -> b
    3:3:android.graphics.drawable.Drawable androidx.appcompat.widget.AppCompatDrawableManager$1.createDrawableFor(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int):0:0 -> b
    3:3:android.graphics.drawable.Drawable createDrawableIfNeeded(android.content.Context,int):0 -> b
    4:4:android.graphics.drawable.Drawable createDrawableIfNeeded(android.content.Context,int):0:0 -> b
    androidx.appcompat.widget.ResourceManagerInternal get() -> c
    1:1:java.lang.Object androidx.collection.LongSparseArray.get(long):0:0 -> d
    1:1:android.graphics.drawable.Drawable getCachedDrawable(android.content.Context,long):0 -> d
    2:2:android.graphics.drawable.Drawable getCachedDrawable(android.content.Context,long):0:0 -> d
    3:3:void androidx.collection.LongSparseArray.remove(long):0:0 -> d
    3:3:android.graphics.drawable.Drawable getCachedDrawable(android.content.Context,long):0 -> d
    4:4:android.graphics.drawable.Drawable getCachedDrawable(android.content.Context,long):0:0 -> d
    android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> e
    1:1:void checkVectorDrawableSetup(android.content.Context):0:0 -> f
    1:1:android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean):0 -> f
    2:2:boolean isVectorDrawable(android.graphics.drawable.Drawable):0:0 -> f
    2:2:void checkVectorDrawableSetup(android.content.Context):0 -> f
    2:2:android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean):0 -> f
    3:3:android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean):0:0 -> f
    4:4:android.graphics.drawable.Drawable androidx.core.content.ContextCompat.getDrawable(android.content.Context,int):0:0 -> f
    4:4:android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean):0 -> f
    5:5:android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean):0:0 -> f
    6:6:void androidx.appcompat.widget.DrawableUtils.fixDrawable(android.graphics.drawable.Drawable):0:0 -> f
    6:6:android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean):0 -> f
    7:7:android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean):0:0 -> f
    8:8:void checkVectorDrawableSetup(android.content.Context):0:0 -> f
    8:8:android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean):0 -> f
    1:1:android.graphics.PorterDuffColorFilter androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache.get(int,android.graphics.PorterDuff$Mode):0:0 -> g
    1:1:android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode):0 -> g
    2:2:int androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache.generateCacheKey(int,android.graphics.PorterDuff$Mode):0:0 -> g
    2:2:android.graphics.PorterDuffColorFilter androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache.get(int,android.graphics.PorterDuff$Mode):0 -> g
    2:2:android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode):0 -> g
    3:3:android.graphics.PorterDuffColorFilter androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache.get(int,android.graphics.PorterDuff$Mode):0:0 -> g
    3:3:android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode):0 -> g
    4:4:android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode):0:0 -> g
    5:5:android.graphics.PorterDuffColorFilter androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache.put(int,android.graphics.PorterDuff$Mode,android.graphics.PorterDuffColorFilter):0:0 -> g
    5:5:android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode):0 -> g
    6:6:int androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache.generateCacheKey(int,android.graphics.PorterDuff$Mode):0:0 -> g
    6:6:android.graphics.PorterDuffColorFilter androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache.put(int,android.graphics.PorterDuff$Mode,android.graphics.PorterDuffColorFilter):0 -> g
    6:6:android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode):0 -> g
    7:7:android.graphics.PorterDuffColorFilter androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache.put(int,android.graphics.PorterDuff$Mode,android.graphics.PorterDuffColorFilter):0:0 -> g
    7:7:android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode):0 -> g
    8:8:android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode):0:0 -> g
    1:1:android.content.res.ColorStateList getTintListFromCache(android.content.Context,int):0:0 -> h
    1:1:android.content.res.ColorStateList getTintList(android.content.Context,int):0 -> h
    2:2:java.lang.Object androidx.collection.SparseArrayCompat.get(int):0:0 -> h
    2:2:android.content.res.ColorStateList getTintListFromCache(android.content.Context,int):0 -> h
    2:2:android.content.res.ColorStateList getTintList(android.content.Context,int):0 -> h
    3:3:android.content.res.ColorStateList getTintListFromCache(android.content.Context,int):0:0 -> h
    3:3:android.content.res.ColorStateList getTintList(android.content.Context,int):0 -> h
    4:4:android.content.res.ColorStateList getTintList(android.content.Context,int):0:0 -> h
    5:5:void addTintListToCache(android.content.Context,int,android.content.res.ColorStateList):0:0 -> h
    5:5:android.content.res.ColorStateList getTintList(android.content.Context,int):0 -> h
    6:6:android.content.res.ColorStateList getTintList(android.content.Context,int):0:0 -> h
    1:1:java.lang.Object androidx.collection.SparseArrayCompat.get(int):0:0 -> i
    1:1:android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int):0 -> i
    2:2:android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int):0:0 -> i
    3:3:java.lang.Object androidx.collection.SimpleArrayMap.get(java.lang.Object):0:0 -> i
    3:3:android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int):0 -> i
    4:4:android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int):0:0 -> i
    5:5:long createCacheKey(android.util.TypedValue):0:0 -> i
    5:5:android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int):0 -> i
    6:6:android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int):0:0 -> i
    1:1:void androidx.core.graphics.drawable.DrawableCompat.setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList):0:0 -> j
    1:1:android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable):0 -> j
    2:2:android.graphics.PorterDuff$Mode getTintMode(int):0:0 -> j
    2:2:android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable):0 -> j
    3:3:android.graphics.PorterDuff$Mode androidx.appcompat.widget.AppCompatDrawableManager$1.getTintModeForDrawableRes(int):0:0 -> j
    3:3:android.graphics.PorterDuff$Mode getTintMode(int):0 -> j
    3:3:android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable):0 -> j
    4:4:void androidx.core.graphics.drawable.DrawableCompat.setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode):0:0 -> j
    4:4:android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable):0 -> j
    5:5:android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable):0:0 -> j
    6:6:boolean androidx.appcompat.widget.AppCompatDrawableManager$1.tintDrawable(android.content.Context,int,android.graphics.drawable.Drawable):0:0 -> j
    6:6:android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable):0 -> j
    7:7:android.graphics.PorterDuff$Mode androidx.appcompat.widget.AppCompatDrawableManager.access$000():0:0 -> j
    7:7:boolean androidx.appcompat.widget.AppCompatDrawableManager$1.tintDrawable(android.content.Context,int,android.graphics.drawable.Drawable):0 -> j
    7:7:android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable):0 -> j
    8:8:boolean androidx.appcompat.widget.AppCompatDrawableManager$1.tintDrawable(android.content.Context,int,android.graphics.drawable.Drawable):0:0 -> j
    8:8:android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable):0 -> j
    9:9:android.graphics.PorterDuff$Mode androidx.appcompat.widget.AppCompatDrawableManager.access$000():0:0 -> j
    9:9:boolean androidx.appcompat.widget.AppCompatDrawableManager$1.tintDrawable(android.content.Context,int,android.graphics.drawable.Drawable):0 -> j
    9:9:android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable):0 -> j
    10:10:boolean androidx.appcompat.widget.AppCompatDrawableManager$1.tintDrawable(android.content.Context,int,android.graphics.drawable.Drawable):0:0 -> j
    10:10:android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable):0 -> j
    11:11:android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable):0:0 -> j
    1:1:boolean androidx.appcompat.widget.AppCompatDrawableManager$1.tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable):0:0 -> k
    1:1:boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable):0 -> k
    2:2:android.graphics.PorterDuff$Mode androidx.appcompat.widget.AppCompatDrawableManager.access$000():0:0 -> k
    2:2:boolean androidx.appcompat.widget.AppCompatDrawableManager$1.tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable):0 -> k
    2:2:boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable):0 -> k
    3:3:boolean androidx.appcompat.widget.AppCompatDrawableManager$1.tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable):0:0 -> k
    3:3:boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable):0 -> k
    4:4:android.graphics.PorterDuffColorFilter androidx.appcompat.widget.AppCompatDrawableManager.getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode):0:0 -> k
    4:4:boolean androidx.appcompat.widget.AppCompatDrawableManager$1.tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable):0 -> k
    4:4:boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable):0 -> k
    5:5:boolean androidx.appcompat.widget.AppCompatDrawableManager$1.tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable):0:0 -> k
    5:5:boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable):0 -> k
    6:6:android.graphics.PorterDuffColorFilter androidx.appcompat.widget.AppCompatDrawableManager.getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode):0:0 -> k
    6:6:boolean androidx.appcompat.widget.AppCompatDrawableManager$1.tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable):0 -> k
    6:6:boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable):0 -> k
androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache -> a.b.h.p0$a:
androidx.appcompat.widget.ResourceManagerInternal$InflateDelegate -> a.b.h.p0$b:
    android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> a
androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks -> a.b.h.p0$c:
androidx.appcompat.widget.ResourcesWrapper -> a.b.h.q0:
androidx.appcompat.widget.RtlSpacingHelper -> a.b.h.r0:
    int mExplicitRight -> f
    int mEnd -> d
    boolean mIsRtl -> g
    int mExplicitLeft -> e
    boolean mIsRelative -> h
    int mRight -> b
    int mStart -> c
    int mLeft -> a
    void setRelative(int,int) -> a
androidx.appcompat.widget.ScrollingTabContainerView -> a.b.h.s0:
    int mSelectedTabIndex -> d
    boolean mAllowCollapse -> a
    int mStackedTabMaxWidth -> b
    int mContentHeight -> c
    1:1:int androidx.appcompat.view.ActionBarPolicy.getTabContainerHeight():0:0 -> onConfigurationChanged
    1:1:void onConfigurationChanged(android.content.res.Configuration):0 -> onConfigurationChanged
    2:2:boolean androidx.appcompat.view.ActionBarPolicy.hasEmbeddedTabs():0:0 -> onConfigurationChanged
    2:2:int androidx.appcompat.view.ActionBarPolicy.getTabContainerHeight():0 -> onConfigurationChanged
    2:2:void onConfigurationChanged(android.content.res.Configuration):0 -> onConfigurationChanged
    3:3:int androidx.appcompat.view.ActionBarPolicy.getTabContainerHeight():0:0 -> onConfigurationChanged
    3:3:void onConfigurationChanged(android.content.res.Configuration):0 -> onConfigurationChanged
    4:4:void onConfigurationChanged(android.content.res.Configuration):0:0 -> onConfigurationChanged
    5:5:int androidx.appcompat.view.ActionBarPolicy.getStackedTabMaxWidth():0:0 -> onConfigurationChanged
    5:5:void onConfigurationChanged(android.content.res.Configuration):0 -> onConfigurationChanged
    6:6:void onConfigurationChanged(android.content.res.Configuration):0:0 -> onConfigurationChanged
    1:1:androidx.appcompat.app.ActionBar$Tab androidx.appcompat.widget.ScrollingTabContainerView$TabView.getTab():0:0 -> onItemSelected
    1:1:void onItemSelected(android.widget.AdapterView,android.view.View,int,long):0 -> onItemSelected
    2:2:void onItemSelected(android.widget.AdapterView,android.view.View,int,long):0:0 -> onItemSelected
androidx.appcompat.widget.ScrollingTabContainerView$TabView -> a.b.h.s0$a:
    androidx.appcompat.app.ActionBar$Tab mTab -> a
    androidx.appcompat.widget.ScrollingTabContainerView this$0 -> b
androidx.appcompat.widget.SearchView -> androidx.appcompat.widget.SearchView:
    boolean mExpandedInActionView -> d0
    android.view.View mDropDownAnchor -> x
    boolean mIconifiedByDefault -> P
    int mSuggestionCommitIconResId -> G
    java.lang.CharSequence mOldQueryText -> b0
    androidx.appcompat.widget.SearchView$UpdatableTouchDelegate mTouchDelegate -> y
    android.content.Intent mVoiceWebSearchIntent -> H
    android.os.Bundle mAppSearchData -> g0
    java.lang.Runnable mReleaseCursorRunnable -> i0
    java.lang.CharSequence mQueryHint -> T
    java.util.WeakHashMap mOutsideDrawablesCache -> j0
    androidx.appcompat.widget.SearchView$OnSuggestionListener mOnSuggestionListener -> N
    android.widget.AdapterView$OnItemClickListener mOnItemClickListener -> n0
    androidx.cursoradapter.widget.CursorAdapter mSuggestionsAdapter -> R
    android.widget.ImageView mVoiceButton -> w
    android.view.View$OnKeyListener mTextKeyListener -> l0
    boolean mQueryRefinement -> U
    android.view.View mSubmitArea -> s
    android.view.View$OnFocusChangeListener mOnQueryTextFocusChangeListener -> M
    boolean mIconified -> Q
    java.lang.CharSequence mDefaultQueryHint -> J
    android.widget.AdapterView$OnItemSelectedListener mOnItemSelectedListener -> o0
    android.widget.TextView$OnEditorActionListener mOnEditorActionListener -> m0
    androidx.appcompat.widget.SearchView$OnQueryTextListener mOnQueryChangeListener -> K
    android.widget.ImageView mCloseButton -> v
    boolean mVoiceButtonEnabled -> a0
    android.graphics.Rect mSearchSrcTextViewBounds -> z
    boolean mClearingFocus -> V
    android.view.View mSearchPlate -> r
    android.widget.ImageView mCollapsedIcon -> D
    java.lang.CharSequence mUserQuery -> c0
    android.view.View$OnClickListener mOnClickListener -> k0
    java.lang.Runnable mUpdateDrawableStateRunnable -> h0
    int[] mTemp2 -> C
    android.view.View$OnClickListener mOnSearchClickListener -> O
    android.widget.ImageView mGoButton -> u
    androidx.appcompat.widget.SearchView$OnCloseListener mOnCloseListener -> L
    android.graphics.drawable.Drawable mSearchHintIcon -> E
    androidx.appcompat.widget.SearchView$SearchAutoComplete mSearchSrcTextView -> p
    int mCollapsedImeOptions -> e0
    android.view.View mSearchEditFrame -> q
    int mSuggestionRowLayout -> F
    android.app.SearchableInfo mSearchable -> f0
    android.graphics.Rect mSearchSrtTextViewBoundsExpanded -> A
    boolean mSubmitButtonEnabled -> S
    int $r8$clinit -> q0
    int[] mTemp -> B
    int mMaxWidth -> W
    android.widget.ImageView mSearchButton -> t
    android.content.Intent mVoiceAppSearchIntent -> I
    android.text.TextWatcher mTextWatcher -> p0
    1:1:androidx.appcompat.widget.TintTypedArray androidx.appcompat.widget.TintTypedArray.obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    3:3:void androidx.core.view.ViewCompat.setBackground(android.view.View,android.graphics.drawable.Drawable):0:0 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    4:4:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    5:5:void androidx.core.view.ViewCompat.setBackground(android.view.View,android.graphics.drawable.Drawable):0:0 -> <init>
    5:5:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    6:6:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    7:7:void androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence):0:0 -> <init>
    7:7:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    8:8:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    9:9:void androidx.appcompat.widget.TintTypedArray.recycle():0:0 -> <init>
    9:9:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    10:10:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    void updateFocusedState() -> A
    1:1:java.lang.CharSequence getDecoratedHint(java.lang.CharSequence):0:0 -> B
    1:1:void updateQueryHint():0 -> B
    2:2:void updateQueryHint():0:0 -> B
    1:1:boolean isSubmitAreaEnabled():0:0 -> C
    1:1:void updateSubmitArea():0 -> C
    2:2:boolean isIconified():0:0 -> C
    2:2:boolean isSubmitAreaEnabled():0 -> C
    2:2:void updateSubmitArea():0 -> C
    3:3:void updateSubmitArea():0:0 -> C
    1:1:boolean isSubmitAreaEnabled():0:0 -> D
    1:1:void updateSubmitButton(boolean):0 -> D
    2:2:boolean isIconified():0:0 -> D
    2:2:boolean isSubmitAreaEnabled():0 -> D
    2:2:void updateSubmitButton(boolean):0 -> D
    3:3:void updateSubmitButton(boolean):0:0 -> D
    void updateViewsVisibility(boolean) -> E
    1:1:boolean isIconified():0:0 -> F
    1:1:void updateVoiceButton(boolean):0 -> F
    2:2:void updateVoiceButton(boolean):0:0 -> F
    void onActionViewExpanded() -> a
    1:1:void setQuery(java.lang.CharSequence,boolean):0:0 -> d
    1:1:void onActionViewCollapsed():0 -> d
    2:2:void onActionViewCollapsed():0:0 -> d
    1:1:void getChildBoundsWithinSearchView(android.view.View,android.graphics.Rect):0:0 -> onLayout
    1:1:void onLayout(boolean,int,int,int,int):0 -> onLayout
    2:2:void onLayout(boolean,int,int,int,int):0:0 -> onLayout
    1:1:boolean isIconified():0:0 -> onMeasure
    1:1:void onMeasure(int,int):0 -> onMeasure
    2:2:void onMeasure(int,int):0:0 -> onMeasure
    1:1:android.os.Parcelable androidx.customview.view.AbsSavedState.getSuperState():0:0 -> onRestoreInstanceState
    1:1:void onRestoreInstanceState(android.os.Parcelable):0 -> onRestoreInstanceState
    2:2:void onRestoreInstanceState(android.os.Parcelable):0:0 -> onRestoreInstanceState
    1:1:boolean isIconified():0:0 -> onSaveInstanceState
    1:1:android.os.Parcelable onSaveInstanceState():0 -> onSaveInstanceState
    2:2:android.os.Parcelable onSaveInstanceState():0:0 -> onSaveInstanceState
    1:1:void postUpdateFocusedState():0:0 -> onWindowFocusChanged
    1:1:void onWindowFocusChanged(boolean):0 -> onWindowFocusChanged
    android.content.Intent createIntent(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String) -> p
    android.content.Intent createVoiceAppSearchIntent(android.content.Intent,android.app.SearchableInfo) -> q
    void launchQuerySearch(int,java.lang.String,java.lang.String) -> r
    1:1:boolean isIconified():0:0 -> requestFocus
    1:1:boolean requestFocus(int,android.graphics.Rect):0 -> requestFocus
    2:2:boolean requestFocus(int,android.graphics.Rect):0:0 -> requestFocus
    void onCloseClicked() -> s
    1:1:void androidx.appcompat.widget.SuggestionsAdapter.setQueryRefinement(int):0:0 -> setQueryRefinementEnabled
    1:1:void setQueryRefinementEnabled(boolean):0 -> setQueryRefinementEnabled
    1:1:void updateSearchAutoComplete():0:0 -> setSearchableInfo
    1:1:void setSearchableInfo(android.app.SearchableInfo):0 -> setSearchableInfo
    2:2:void androidx.appcompat.widget.SuggestionsAdapter.setQueryRefinement(int):0:0 -> setSearchableInfo
    2:2:void updateSearchAutoComplete():0 -> setSearchableInfo
    2:2:void setSearchableInfo(android.app.SearchableInfo):0 -> setSearchableInfo
    3:3:void setSearchableInfo(android.app.SearchableInfo):0:0 -> setSearchableInfo
    4:4:boolean hasVoiceSearch():0:0 -> setSearchableInfo
    4:4:void setSearchableInfo(android.app.SearchableInfo):0 -> setSearchableInfo
    5:5:void setSearchableInfo(android.app.SearchableInfo):0:0 -> setSearchableInfo
    6:6:boolean isIconified():0:0 -> setSearchableInfo
    6:6:void setSearchableInfo(android.app.SearchableInfo):0 -> setSearchableInfo
    7:7:void setSearchableInfo(android.app.SearchableInfo):0:0 -> setSearchableInfo
    1:1:boolean isIconified():0:0 -> setSubmitButtonEnabled
    1:1:void setSubmitButtonEnabled(boolean):0 -> setSubmitButtonEnabled
    2:2:void setSubmitButtonEnabled(boolean):0:0 -> setSubmitButtonEnabled
    1:1:boolean launchSuggestion(int,int,java.lang.String):0:0 -> t
    1:1:boolean onItemClicked(int,int,java.lang.String):0 -> t
    2:2:android.database.Cursor androidx.cursoradapter.widget.CursorAdapter.getCursor():0:0 -> t
    2:2:boolean launchSuggestion(int,int,java.lang.String):0 -> t
    2:2:boolean onItemClicked(int,int,java.lang.String):0 -> t
    3:3:boolean launchSuggestion(int,int,java.lang.String):0:0 -> t
    3:3:boolean onItemClicked(int,int,java.lang.String):0 -> t
    4:4:java.lang.String androidx.appcompat.widget.SuggestionsAdapter.getColumnString(android.database.Cursor,java.lang.String):0:0 -> t
    4:4:android.content.Intent createIntentFromSuggestion(android.database.Cursor,int,java.lang.String):0 -> t
    4:4:boolean launchSuggestion(int,int,java.lang.String):0 -> t
    4:4:boolean onItemClicked(int,int,java.lang.String):0 -> t
    5:5:android.content.Intent createIntentFromSuggestion(android.database.Cursor,int,java.lang.String):0:0 -> t
    5:5:boolean launchSuggestion(int,int,java.lang.String):0 -> t
    5:5:boolean onItemClicked(int,int,java.lang.String):0 -> t
    6:6:java.lang.String androidx.appcompat.widget.SuggestionsAdapter.getColumnString(android.database.Cursor,java.lang.String):0:0 -> t
    6:6:android.content.Intent createIntentFromSuggestion(android.database.Cursor,int,java.lang.String):0 -> t
    6:6:boolean launchSuggestion(int,int,java.lang.String):0 -> t
    6:6:boolean onItemClicked(int,int,java.lang.String):0 -> t
    7:7:android.content.Intent createIntentFromSuggestion(android.database.Cursor,int,java.lang.String):0:0 -> t
    7:7:boolean launchSuggestion(int,int,java.lang.String):0 -> t
    7:7:boolean onItemClicked(int,int,java.lang.String):0 -> t
    8:8:java.lang.String androidx.appcompat.widget.SuggestionsAdapter.getColumnString(android.database.Cursor,java.lang.String):0:0 -> t
    8:8:android.content.Intent createIntentFromSuggestion(android.database.Cursor,int,java.lang.String):0 -> t
    8:8:boolean launchSuggestion(int,int,java.lang.String):0 -> t
    8:8:boolean onItemClicked(int,int,java.lang.String):0 -> t
    9:9:android.content.Intent createIntentFromSuggestion(android.database.Cursor,int,java.lang.String):0:0 -> t
    9:9:boolean launchSuggestion(int,int,java.lang.String):0 -> t
    9:9:boolean onItemClicked(int,int,java.lang.String):0 -> t
    10:10:java.lang.String androidx.appcompat.widget.SuggestionsAdapter.getColumnString(android.database.Cursor,java.lang.String):0:0 -> t
    10:10:android.content.Intent createIntentFromSuggestion(android.database.Cursor,int,java.lang.String):0 -> t
    10:10:boolean launchSuggestion(int,int,java.lang.String):0 -> t
    10:10:boolean onItemClicked(int,int,java.lang.String):0 -> t
    11:11:android.content.Intent createIntentFromSuggestion(android.database.Cursor,int,java.lang.String):0:0 -> t
    11:11:boolean launchSuggestion(int,int,java.lang.String):0 -> t
    11:11:boolean onItemClicked(int,int,java.lang.String):0 -> t
    12:12:void launchIntent(android.content.Intent):0:0 -> t
    12:12:boolean launchSuggestion(int,int,java.lang.String):0 -> t
    12:12:boolean onItemClicked(int,int,java.lang.String):0 -> t
    13:13:boolean onItemClicked(int,int,java.lang.String):0:0 -> t
    14:14:void dismissSuggestions():0:0 -> t
    14:14:boolean onItemClicked(int,int,java.lang.String):0 -> t
    1:1:void rewriteQueryFromSuggestion(int):0:0 -> u
    1:1:boolean onItemSelected(int):0 -> u
    2:2:android.database.Cursor androidx.cursoradapter.widget.CursorAdapter.getCursor():0:0 -> u
    2:2:void rewriteQueryFromSuggestion(int):0 -> u
    2:2:boolean onItemSelected(int):0 -> u
    3:3:void rewriteQueryFromSuggestion(int):0:0 -> u
    3:3:boolean onItemSelected(int):0 -> u
    void onQueryRefine(java.lang.CharSequence) -> v
    void onSearchClicked() -> w
    1:1:void dismissSuggestions():0:0 -> x
    1:1:void onSubmitQuery():0 -> x
    1:1:void androidx.appcompat.widget.SearchView$SearchAutoComplete.ensureImeVisible():0:0 -> y
    1:1:boolean onSuggestionsKey(android.view.View,int,android.view.KeyEvent):0 -> y
    2:2:boolean onSuggestionsKey(android.view.View,int,android.view.KeyEvent):0:0 -> y
    void updateCloseButton() -> z
androidx.appcompat.widget.SearchView$1 -> androidx.appcompat.widget.SearchView$b:
    androidx.appcompat.widget.SearchView this$0 -> a
androidx.appcompat.widget.SearchView$10 -> androidx.appcompat.widget.SearchView$a:
    androidx.appcompat.widget.SearchView this$0 -> a
    1:1:void androidx.appcompat.widget.SearchView.onTextChanged(java.lang.CharSequence):0:0 -> onTextChanged
    1:1:void onTextChanged(java.lang.CharSequence,int,int,int):0 -> onTextChanged
androidx.appcompat.widget.SearchView$2 -> androidx.appcompat.widget.SearchView$c:
    androidx.appcompat.widget.SearchView this$0 -> a
androidx.appcompat.widget.SearchView$3 -> androidx.appcompat.widget.SearchView$d:
    androidx.appcompat.widget.SearchView this$0 -> a
androidx.appcompat.widget.SearchView$4 -> androidx.appcompat.widget.SearchView$e:
    androidx.appcompat.widget.SearchView this$0 -> a
    1:1:void androidx.appcompat.widget.SearchView.adjustDropDownSizeAndPosition():0:0 -> onLayoutChange
    1:1:void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int):0 -> onLayoutChange
androidx.appcompat.widget.SearchView$5 -> androidx.appcompat.widget.SearchView$f:
    androidx.appcompat.widget.SearchView this$0 -> a
    1:1:void androidx.appcompat.widget.SearchView.onVoiceClicked():0:0 -> onClick
    1:1:void onClick(android.view.View):0 -> onClick
    2:2:android.content.Intent androidx.appcompat.widget.SearchView.createVoiceWebSearchIntent(android.content.Intent,android.app.SearchableInfo):0:0 -> onClick
    2:2:void androidx.appcompat.widget.SearchView.onVoiceClicked():0 -> onClick
    2:2:void onClick(android.view.View):0 -> onClick
    3:3:void androidx.appcompat.widget.SearchView.onVoiceClicked():0:0 -> onClick
    3:3:void onClick(android.view.View):0 -> onClick
    4:4:void onClick(android.view.View):0:0 -> onClick
    5:5:void androidx.appcompat.widget.SearchView.forceSuggestionQuery():0:0 -> onClick
    5:5:void onClick(android.view.View):0 -> onClick
androidx.appcompat.widget.SearchView$6 -> androidx.appcompat.widget.SearchView$g:
    androidx.appcompat.widget.SearchView this$0 -> a
    1:1:boolean androidx.appcompat.widget.SearchView$SearchAutoComplete.isEmpty():0:0 -> onKey
    1:1:boolean onKey(android.view.View,int,android.view.KeyEvent):0 -> onKey
    2:2:boolean onKey(android.view.View,int,android.view.KeyEvent):0:0 -> onKey
androidx.appcompat.widget.SearchView$7 -> androidx.appcompat.widget.SearchView$h:
    androidx.appcompat.widget.SearchView this$0 -> a
androidx.appcompat.widget.SearchView$8 -> androidx.appcompat.widget.SearchView$i:
    androidx.appcompat.widget.SearchView this$0 -> a
androidx.appcompat.widget.SearchView$9 -> androidx.appcompat.widget.SearchView$j:
    androidx.appcompat.widget.SearchView this$0 -> a
androidx.appcompat.widget.SearchView$OnCloseListener -> androidx.appcompat.widget.SearchView$k:
    boolean onClose() -> a
androidx.appcompat.widget.SearchView$OnQueryTextListener -> androidx.appcompat.widget.SearchView$l:
    boolean onQueryTextSubmit(java.lang.String) -> a
    boolean onQueryTextChange(java.lang.String) -> b
androidx.appcompat.widget.SearchView$OnSuggestionListener -> androidx.appcompat.widget.SearchView$m:
    boolean onSuggestionSelect(int) -> a
    boolean onSuggestionClick(int) -> b
androidx.appcompat.widget.SearchView$SavedState -> androidx.appcompat.widget.SearchView$n:
    boolean isIconified -> c
    1:1:void androidx.customview.view.AbsSavedState.writeToParcel(android.os.Parcel,int):0:0 -> writeToParcel
    1:1:void writeToParcel(android.os.Parcel,int):0 -> writeToParcel
    2:2:void writeToParcel(android.os.Parcel,int):0:0 -> writeToParcel
androidx.appcompat.widget.SearchView$SavedState$1 -> androidx.appcompat.widget.SearchView$n$a:
    1:1:androidx.appcompat.widget.SearchView$SavedState createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    1:1:java.lang.Object createFromParcel(android.os.Parcel):0 -> createFromParcel
    2:2:androidx.appcompat.widget.SearchView$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader):0:0 -> createFromParcel
    2:2:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader):0 -> createFromParcel
    1:1:androidx.appcompat.widget.SearchView$SavedState[] newArray(int):0:0 -> newArray
    1:1:java.lang.Object[] newArray(int):0 -> newArray
androidx.appcompat.widget.SearchView$SearchAutoComplete -> androidx.appcompat.widget.SearchView$SearchAutoComplete:
    java.lang.Runnable mRunShowSoftInputIfNecessary -> g
    boolean mHasPendingShowSoftInputRequest -> f
    int mThreshold -> d
    androidx.appcompat.widget.SearchView mSearchView -> e
    1:1:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    1:1:boolean androidx.appcompat.widget.SearchView.isIconified():0:0 -> onFocusChanged
    1:1:void androidx.appcompat.widget.SearchView.onTextFocusChanged():0 -> onFocusChanged
    1:1:void onFocusChanged(boolean,int,android.graphics.Rect):0 -> onFocusChanged
    2:2:void androidx.appcompat.widget.SearchView.onTextFocusChanged():0:0 -> onFocusChanged
    2:2:void onFocusChanged(boolean,int,android.graphics.Rect):0 -> onFocusChanged
    3:3:void androidx.appcompat.widget.SearchView.postUpdateFocusedState():0:0 -> onFocusChanged
    3:3:void androidx.appcompat.widget.SearchView.onTextFocusChanged():0 -> onFocusChanged
    3:3:void onFocusChanged(boolean,int,android.graphics.Rect):0 -> onFocusChanged
    4:4:void androidx.appcompat.widget.SearchView.onTextFocusChanged():0:0 -> onFocusChanged
    4:4:void onFocusChanged(boolean,int,android.graphics.Rect):0 -> onFocusChanged
    5:5:void androidx.appcompat.widget.SearchView.forceSuggestionQuery():0:0 -> onFocusChanged
    5:5:void androidx.appcompat.widget.SearchView.onTextFocusChanged():0 -> onFocusChanged
    5:5:void onFocusChanged(boolean,int,android.graphics.Rect):0 -> onFocusChanged
    1:1:boolean androidx.appcompat.widget.SearchView.isLandscapeMode(android.content.Context):0:0 -> onWindowFocusChanged
    1:1:void onWindowFocusChanged(boolean):0 -> onWindowFocusChanged
    2:2:void ensureImeVisible():0:0 -> onWindowFocusChanged
    2:2:void onWindowFocusChanged(boolean):0 -> onWindowFocusChanged
androidx.appcompat.widget.SearchView$SearchAutoComplete$1 -> androidx.appcompat.widget.SearchView$SearchAutoComplete$a:
    androidx.appcompat.widget.SearchView$SearchAutoComplete this$0 -> a
    1:1:void androidx.appcompat.widget.SearchView$SearchAutoComplete.showSoftInputIfNecessary():0:0 -> run
    1:1:void run():0 -> run
androidx.appcompat.widget.SearchView$UpdatableTouchDelegate -> androidx.appcompat.widget.SearchView$o:
    android.view.View mDelegateView -> a
    boolean mDelegateTargeted -> f
    int mSlop -> e
    android.graphics.Rect mActualBounds -> c
    android.graphics.Rect mSlopBounds -> d
    android.graphics.Rect mTargetBounds -> b
    void setBounds(android.graphics.Rect,android.graphics.Rect) -> a
androidx.appcompat.widget.SuggestionsAdapter -> a.b.h.t0:
    android.content.res.ColorStateList mUrlColor -> r
    java.util.WeakHashMap mOutsideDrawablesCache -> o
    int mFlagsCol -> x
    int $r8$clinit -> y
    androidx.appcompat.widget.SearchView mSearchView -> l
    android.content.Context mProviderContext -> n
    int mIconName1Col -> v
    android.app.SearchableInfo mSearchable -> m
    int mIconName2Col -> w
    int mText2Col -> t
    int mText2UrlCol -> u
    int mText1Col -> s
    int mCommitIconResId -> p
    int mQueryRefinement -> q
    1:1:void setViewText(android.widget.TextView,java.lang.CharSequence):0:0 -> a
    1:1:void bindView(android.view.View,android.content.Context,android.database.Cursor):0 -> a
    2:2:void bindView(android.view.View,android.content.Context,android.database.Cursor):0:0 -> a
    3:3:java.lang.CharSequence formatUrl(java.lang.CharSequence):0:0 -> a
    3:3:void bindView(android.view.View,android.content.Context,android.database.Cursor):0 -> a
    4:4:void bindView(android.view.View,android.content.Context,android.database.Cursor):0:0 -> a
    5:5:void setViewText(android.widget.TextView,java.lang.CharSequence):0:0 -> a
    5:5:void bindView(android.view.View,android.content.Context,android.database.Cursor):0 -> a
    6:6:void bindView(android.view.View,android.content.Context,android.database.Cursor):0:0 -> a
    7:7:android.graphics.drawable.Drawable getIcon1(android.database.Cursor):0:0 -> a
    7:7:void bindView(android.view.View,android.content.Context,android.database.Cursor):0 -> a
    8:8:android.graphics.drawable.Drawable getDefaultIcon1():0:0 -> a
    8:8:android.graphics.drawable.Drawable getIcon1(android.database.Cursor):0 -> a
    8:8:void bindView(android.view.View,android.content.Context,android.database.Cursor):0 -> a
    9:9:android.graphics.drawable.Drawable getActivityIconWithCache(android.content.ComponentName):0:0 -> a
    9:9:android.graphics.drawable.Drawable getDefaultIcon1():0 -> a
    9:9:android.graphics.drawable.Drawable getIcon1(android.database.Cursor):0 -> a
    9:9:void bindView(android.view.View,android.content.Context,android.database.Cursor):0 -> a
    10:10:android.graphics.drawable.Drawable getActivityIcon(android.content.ComponentName):0:0 -> a
    10:10:android.graphics.drawable.Drawable getActivityIconWithCache(android.content.ComponentName):0 -> a
    10:10:android.graphics.drawable.Drawable getDefaultIcon1():0 -> a
    10:10:android.graphics.drawable.Drawable getIcon1(android.database.Cursor):0 -> a
    10:10:void bindView(android.view.View,android.content.Context,android.database.Cursor):0 -> a
    11:11:android.graphics.drawable.Drawable getActivityIconWithCache(android.content.ComponentName):0:0 -> a
    11:11:android.graphics.drawable.Drawable getDefaultIcon1():0 -> a
    11:11:android.graphics.drawable.Drawable getIcon1(android.database.Cursor):0 -> a
    11:11:void bindView(android.view.View,android.content.Context,android.database.Cursor):0 -> a
    12:12:android.graphics.drawable.Drawable getDefaultIcon1():0:0 -> a
    12:12:android.graphics.drawable.Drawable getIcon1(android.database.Cursor):0 -> a
    12:12:void bindView(android.view.View,android.content.Context,android.database.Cursor):0 -> a
    13:13:void setViewDrawable(android.widget.ImageView,android.graphics.drawable.Drawable,int):0:0 -> a
    13:13:void bindView(android.view.View,android.content.Context,android.database.Cursor):0 -> a
    14:14:void bindView(android.view.View,android.content.Context,android.database.Cursor):0:0 -> a
    15:15:android.graphics.drawable.Drawable getIcon2(android.database.Cursor):0:0 -> a
    15:15:void bindView(android.view.View,android.content.Context,android.database.Cursor):0 -> a
    16:16:void setViewDrawable(android.widget.ImageView,android.graphics.drawable.Drawable,int):0:0 -> a
    16:16:void bindView(android.view.View,android.content.Context,android.database.Cursor):0 -> a
    17:17:void bindView(android.view.View,android.content.Context,android.database.Cursor):0:0 -> a
    void changeCursor(android.database.Cursor) -> b
    1:1:java.lang.String getColumnString(android.database.Cursor,java.lang.String):0:0 -> c
    1:1:java.lang.CharSequence convertToString(android.database.Cursor):0 -> c
    2:2:java.lang.CharSequence convertToString(android.database.Cursor):0:0 -> c
    3:3:java.lang.String getColumnString(android.database.Cursor,java.lang.String):0:0 -> c
    3:3:java.lang.CharSequence convertToString(android.database.Cursor):0 -> c
    4:4:java.lang.CharSequence convertToString(android.database.Cursor):0:0 -> c
    5:5:java.lang.String getColumnString(android.database.Cursor,java.lang.String):0:0 -> c
    5:5:java.lang.CharSequence convertToString(android.database.Cursor):0 -> c
    1:1:android.view.View androidx.cursoradapter.widget.ResourceCursorAdapter.newView(android.content.Context,android.database.Cursor,android.view.ViewGroup):0:0 -> d
    1:1:android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup):0 -> d
    2:2:android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup):0:0 -> d
    android.graphics.drawable.Drawable getDrawableFromResourceUri(android.net.Uri) -> e
    1:1:android.graphics.drawable.Drawable checkIconCache(java.lang.String):0:0 -> f
    1:1:android.graphics.drawable.Drawable getDrawableFromResourceValue(java.lang.String):0 -> f
    2:2:android.graphics.drawable.Drawable getDrawableFromResourceValue(java.lang.String):0:0 -> f
    3:3:android.graphics.drawable.Drawable androidx.core.content.ContextCompat.getDrawable(android.content.Context,int):0:0 -> f
    3:3:android.graphics.drawable.Drawable getDrawableFromResourceValue(java.lang.String):0 -> f
    4:4:void storeInIconCache(java.lang.String,android.graphics.drawable.Drawable):0:0 -> f
    4:4:android.graphics.drawable.Drawable getDrawableFromResourceValue(java.lang.String):0 -> f
    5:5:android.graphics.drawable.Drawable getDrawableFromResourceValue(java.lang.String):0:0 -> f
    6:6:android.graphics.drawable.Drawable checkIconCache(java.lang.String):0:0 -> f
    6:6:android.graphics.drawable.Drawable getDrawableFromResourceValue(java.lang.String):0 -> f
    7:7:android.graphics.drawable.Drawable getDrawableFromResourceValue(java.lang.String):0:0 -> f
    8:8:android.graphics.drawable.Drawable getDrawable(android.net.Uri):0:0 -> f
    8:8:android.graphics.drawable.Drawable getDrawableFromResourceValue(java.lang.String):0 -> f
    9:9:void storeInIconCache(java.lang.String,android.graphics.drawable.Drawable):0:0 -> f
    9:9:android.graphics.drawable.Drawable getDrawableFromResourceValue(java.lang.String):0 -> f
    android.database.Cursor getSearchManagerSuggestions(android.app.SearchableInfo,java.lang.String,int) -> g
    1:1:android.view.View androidx.cursoradapter.widget.ResourceCursorAdapter.newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup):0:0 -> getDropDownView
    1:1:android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup):0 -> getDropDownView
    2:2:android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup):0:0 -> getDropDownView
    1:1:android.database.Cursor androidx.cursoradapter.widget.CursorAdapter.getCursor():0:0 -> getView
    1:1:android.view.View getView(int,android.view.View,android.view.ViewGroup):0 -> getView
    2:2:android.view.View getView(int,android.view.View,android.view.ViewGroup):0:0 -> getView
    java.lang.String getStringOrNull(android.database.Cursor,int) -> h
    void updateSpinnerState(android.database.Cursor) -> i
    1:1:android.database.Cursor androidx.cursoradapter.widget.CursorAdapter.getCursor():0:0 -> notifyDataSetChanged
    1:1:void notifyDataSetChanged():0 -> notifyDataSetChanged
    2:2:void notifyDataSetChanged():0:0 -> notifyDataSetChanged
    1:1:android.database.Cursor androidx.cursoradapter.widget.CursorAdapter.getCursor():0:0 -> notifyDataSetInvalidated
    1:1:void notifyDataSetInvalidated():0 -> notifyDataSetInvalidated
    2:2:void notifyDataSetInvalidated():0:0 -> notifyDataSetInvalidated
androidx.appcompat.widget.SuggestionsAdapter$ChildViewCache -> a.b.h.t0$a:
    android.widget.TextView mText1 -> a
    android.widget.TextView mText2 -> b
    android.widget.ImageView mIcon2 -> d
    android.widget.ImageView mIconRefine -> e
    android.widget.ImageView mIcon1 -> c
androidx.appcompat.widget.SwitchCompat -> androidx.appcompat.widget.SwitchCompat:
    int mSwitchMinWidth -> l
    boolean mHasTrackTint -> i
    int mSwitchBottom -> E
    boolean mShowText -> q
    android.animation.ObjectAnimator mPositionAnimator -> K
    int mSwitchTop -> C
    android.graphics.drawable.Drawable mThumbDrawable -> a
    int mThumbWidth -> A
    android.text.method.TransformationMethod mSwitchTransformationMethod -> J
    android.graphics.Rect mTempRect -> M
    java.lang.CharSequence mTextOn -> o
    float mTouchY -> u
    int mSwitchWidth -> y
    int[] CHECKED_STATE_SET -> O
    android.content.res.ColorStateList mTrackTintList -> g
    int mMinFlingVelocity -> w
    android.view.VelocityTracker mVelocityTracker -> v
    android.text.Layout mOffLayout -> I
    int mTouchSlop -> s
    boolean mHasThumbTint -> d
    boolean mSplitTrack -> n
    android.graphics.drawable.Drawable mTrackDrawable -> f
    int mSwitchPadding -> m
    boolean mHasTrackTintMode -> j
    int mThumbTextPadding -> k
    int mSwitchRight -> D
    android.graphics.PorterDuff$Mode mThumbTintMode -> c
    int mSwitchLeft -> B
    android.text.TextPaint mTextPaint -> F
    android.content.res.ColorStateList mThumbTintList -> b
    java.lang.CharSequence mTextOff -> p
    float mThumbPosition -> x
    int mSwitchHeight -> z
    android.graphics.PorterDuff$Mode mTrackTintMode -> h
    boolean mHasThumbTintMode -> e
    float mTouchX -> t
    android.util.Property THUMB_POS -> N
    android.content.res.ColorStateList mTextColors -> G
    int mTouchMode -> r
    android.text.Layout mOnLayout -> H
    androidx.appcompat.widget.AppCompatTextHelper mTextHelper -> L
    1:1:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    2:2:androidx.appcompat.widget.TintTypedArray androidx.appcompat.widget.TintTypedArray.obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int):0:0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    3:3:void androidx.core.view.ViewCompat.saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int):0:0 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    4:4:void androidx.core.view.ViewCompat$Api29Impl.saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int):0:0 -> <init>
    4:4:void androidx.core.view.ViewCompat.saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int):0 -> <init>
    4:4:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    4:4:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    5:5:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    5:5:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    6:6:void setSwitchTextAppearance(android.content.Context,int):0:0 -> <init>
    6:6:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    6:6:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    7:7:androidx.appcompat.widget.TintTypedArray androidx.appcompat.widget.TintTypedArray.obtainStyledAttributes(android.content.Context,int,int[]):0:0 -> <init>
    7:7:void setSwitchTextAppearance(android.content.Context,int):0 -> <init>
    7:7:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    7:7:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    8:8:android.content.res.ColorStateList androidx.appcompat.widget.TintTypedArray.getColorStateList(int):0:0 -> <init>
    8:8:void setSwitchTextAppearance(android.content.Context,int):0 -> <init>
    8:8:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    8:8:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    9:9:android.content.res.ColorStateList androidx.appcompat.content.res.AppCompatResources.getColorStateList(android.content.Context,int):0:0 -> <init>
    9:9:android.content.res.ColorStateList androidx.appcompat.widget.TintTypedArray.getColorStateList(int):0 -> <init>
    9:9:void setSwitchTextAppearance(android.content.Context,int):0 -> <init>
    9:9:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    9:9:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    10:10:android.content.res.ColorStateList androidx.appcompat.widget.TintTypedArray.getColorStateList(int):0:0 -> <init>
    10:10:void setSwitchTextAppearance(android.content.Context,int):0 -> <init>
    10:10:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    10:10:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    11:11:void setSwitchTextAppearance(android.content.Context,int):0:0 -> <init>
    11:11:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    11:11:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    12:12:int androidx.appcompat.widget.TintTypedArray.getDimensionPixelSize(int,int):0:0 -> <init>
    12:12:void setSwitchTextAppearance(android.content.Context,int):0 -> <init>
    12:12:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    12:12:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    13:13:void setSwitchTextAppearance(android.content.Context,int):0:0 -> <init>
    13:13:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    13:13:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    14:14:int androidx.appcompat.widget.TintTypedArray.getInt(int,int):0:0 -> <init>
    14:14:void setSwitchTextAppearance(android.content.Context,int):0 -> <init>
    14:14:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    14:14:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    15:15:void setSwitchTypefaceByIndex(int,int):0:0 -> <init>
    15:15:void setSwitchTextAppearance(android.content.Context,int):0 -> <init>
    15:15:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    15:15:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    16:16:void setSwitchTypeface(android.graphics.Typeface,int):0:0 -> <init>
    16:16:void setSwitchTypefaceByIndex(int,int):0 -> <init>
    16:16:void setSwitchTextAppearance(android.content.Context,int):0 -> <init>
    16:16:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    16:16:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    17:17:boolean androidx.appcompat.widget.TintTypedArray.getBoolean(int,boolean):0:0 -> <init>
    17:17:void setSwitchTextAppearance(android.content.Context,int):0 -> <init>
    17:17:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    17:17:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    18:18:void setSwitchTextAppearance(android.content.Context,int):0:0 -> <init>
    18:18:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    18:18:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    19:19:void androidx.appcompat.widget.TintTypedArray.recycle():0:0 -> <init>
    19:19:void setSwitchTextAppearance(android.content.Context,int):0 -> <init>
    19:19:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    19:19:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    20:20:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    20:20:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    21:21:void androidx.appcompat.widget.TintTypedArray.recycle():0:0 -> <init>
    21:21:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    21:21:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    22:22:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    22:22:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    1:1:void androidx.core.graphics.drawable.DrawableCompat.setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList):0:0 -> a
    1:1:void applyThumbTint():0 -> a
    2:2:void applyThumbTint():0:0 -> a
    3:3:void androidx.core.graphics.drawable.DrawableCompat.setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode):0:0 -> a
    3:3:void applyThumbTint():0 -> a
    4:4:void applyThumbTint():0:0 -> a
    1:1:void androidx.core.graphics.drawable.DrawableCompat.setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList):0:0 -> b
    1:1:void applyTrackTint():0 -> b
    2:2:void applyTrackTint():0:0 -> b
    3:3:void androidx.core.graphics.drawable.DrawableCompat.setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode):0:0 -> b
    3:3:void applyTrackTint():0 -> b
    4:4:void applyTrackTint():0:0 -> b
    android.text.Layout makeLayout(java.lang.CharSequence) -> c
    1:1:void androidx.core.graphics.drawable.DrawableCompat.setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int):0:0 -> draw
    1:1:void draw(android.graphics.Canvas):0 -> draw
    2:2:void draw(android.graphics.Canvas):0:0 -> draw
    1:1:void androidx.core.graphics.drawable.DrawableCompat.setHotspot(android.graphics.drawable.Drawable,float,float):0:0 -> drawableHotspotChanged
    1:1:void drawableHotspotChanged(float,float):0 -> drawableHotspotChanged
    2:2:void drawableHotspotChanged(float,float):0:0 -> drawableHotspotChanged
    3:3:void androidx.core.graphics.drawable.DrawableCompat.setHotspot(android.graphics.drawable.Drawable,float,float):0:0 -> drawableHotspotChanged
    3:3:void drawableHotspotChanged(float,float):0 -> drawableHotspotChanged
    1:1:void stopDrag(android.view.MotionEvent):0:0 -> onTouchEvent
    1:1:boolean onTouchEvent(android.view.MotionEvent):0 -> onTouchEvent
    2:2:void cancelSuperTouch(android.view.MotionEvent):0:0 -> onTouchEvent
    2:2:void stopDrag(android.view.MotionEvent):0 -> onTouchEvent
    2:2:boolean onTouchEvent(android.view.MotionEvent):0 -> onTouchEvent
    3:3:boolean onTouchEvent(android.view.MotionEvent):0:0 -> onTouchEvent
    4:4:boolean hitThumb(float,float):0:0 -> onTouchEvent
    4:4:boolean onTouchEvent(android.view.MotionEvent):0 -> onTouchEvent
    5:5:boolean onTouchEvent(android.view.MotionEvent):0:0 -> onTouchEvent
    1:1:void setOnStateDescriptionOnRAndAbove():0:0 -> setChecked
    1:1:void setChecked(boolean):0 -> setChecked
    2:2:void setOffStateDescriptionOnRAndAbove():0:0 -> setChecked
    2:2:void setChecked(boolean):0 -> setChecked
    3:3:void setChecked(boolean):0:0 -> setChecked
    4:4:boolean androidx.core.view.ViewCompat.isLaidOut(android.view.View):0:0 -> setChecked
    4:4:void setChecked(boolean):0 -> setChecked
    5:5:void animateThumbToCheckedState(boolean):0:0 -> setChecked
    5:5:void setChecked(boolean):0 -> setChecked
    6:6:void cancelPositionAnimator():0:0 -> setChecked
    6:6:void setChecked(boolean):0 -> setChecked
    7:7:void setChecked(boolean):0:0 -> setChecked
    1:1:void setOffStateDescriptionOnRAndAbove():0:0 -> setTextOff
    1:1:void setTextOff(java.lang.CharSequence):0 -> setTextOff
    1:1:void setOnStateDescriptionOnRAndAbove():0:0 -> setTextOn
    1:1:void setTextOn(java.lang.CharSequence):0 -> setTextOn
androidx.appcompat.widget.SwitchCompat$1 -> androidx.appcompat.widget.SwitchCompat$a:
    1:1:java.lang.Float get(androidx.appcompat.widget.SwitchCompat):0:0 -> get
    1:1:java.lang.Object get(java.lang.Object):0 -> get
    1:1:void set(androidx.appcompat.widget.SwitchCompat,java.lang.Float):0:0 -> set
    1:1:void set(java.lang.Object,java.lang.Object):0 -> set
androidx.appcompat.widget.ThemeUtils -> a.b.h.u0:
    int[] EMPTY_STATE_SET -> f
    int[] TEMP_ARRAY -> g
    java.lang.ThreadLocal TL_TYPED_VALUE -> a
    int[] DISABLED_STATE_SET -> b
    int[] FOCUSED_STATE_SET -> c
    int[] PRESSED_STATE_SET -> d
    int[] CHECKED_STATE_SET -> e
    void checkAppCompatTheme(android.view.View,android.content.Context) -> a
    1:1:android.util.TypedValue getTypedValue():0:0 -> b
    1:1:int getDisabledThemeAttrColor(android.content.Context,int):0 -> b
    2:2:int getDisabledThemeAttrColor(android.content.Context,int):0:0 -> b
    3:3:int getThemeAttrColor(android.content.Context,int,float):0:0 -> b
    3:3:int getDisabledThemeAttrColor(android.content.Context,int):0 -> b
    4:4:int androidx.core.graphics.ColorUtils.setAlphaComponent(int,int):0:0 -> b
    4:4:int getThemeAttrColor(android.content.Context,int,float):0 -> b
    4:4:int getDisabledThemeAttrColor(android.content.Context,int):0 -> b
    1:1:androidx.appcompat.widget.TintTypedArray androidx.appcompat.widget.TintTypedArray.obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[]):0:0 -> c
    1:1:int getThemeAttrColor(android.content.Context,int):0 -> c
    2:2:int androidx.appcompat.widget.TintTypedArray.getColor(int,int):0:0 -> c
    2:2:int getThemeAttrColor(android.content.Context,int):0 -> c
    3:3:void androidx.appcompat.widget.TintTypedArray.recycle():0:0 -> c
    3:3:int getThemeAttrColor(android.content.Context,int):0 -> c
    4:4:int getThemeAttrColor(android.content.Context,int):0:0 -> c
    1:1:androidx.appcompat.widget.TintTypedArray androidx.appcompat.widget.TintTypedArray.obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[]):0:0 -> d
    1:1:android.content.res.ColorStateList getThemeAttrColorStateList(android.content.Context,int):0 -> d
    2:2:android.content.res.ColorStateList androidx.appcompat.widget.TintTypedArray.getColorStateList(int):0:0 -> d
    2:2:android.content.res.ColorStateList getThemeAttrColorStateList(android.content.Context,int):0 -> d
    3:3:android.content.res.ColorStateList androidx.appcompat.content.res.AppCompatResources.getColorStateList(android.content.Context,int):0:0 -> d
    3:3:android.content.res.ColorStateList androidx.appcompat.widget.TintTypedArray.getColorStateList(int):0 -> d
    3:3:android.content.res.ColorStateList getThemeAttrColorStateList(android.content.Context,int):0 -> d
    4:4:android.content.res.ColorStateList androidx.appcompat.widget.TintTypedArray.getColorStateList(int):0:0 -> d
    4:4:android.content.res.ColorStateList getThemeAttrColorStateList(android.content.Context,int):0 -> d
    5:5:void androidx.appcompat.widget.TintTypedArray.recycle():0:0 -> d
    5:5:android.content.res.ColorStateList getThemeAttrColorStateList(android.content.Context,int):0 -> d
    6:6:android.content.res.ColorStateList getThemeAttrColorStateList(android.content.Context,int):0:0 -> d
androidx.appcompat.widget.ThemedSpinnerAdapter -> a.b.h.v0:
androidx.appcompat.widget.TintContextWrapper -> a.b.h.w0:
    java.lang.Object CACHE_LOCK -> a
    1:1:boolean shouldWrap(android.content.Context):0:0 -> a
    1:1:android.content.Context wrap(android.content.Context):0 -> a
androidx.appcompat.widget.TintInfo -> a.b.h.x0:
    android.content.res.ColorStateList mTintList -> a
    android.graphics.PorterDuff$Mode mTintMode -> b
    boolean mHasTintMode -> c
    boolean mHasTintList -> d
androidx.appcompat.widget.TintResources -> a.b.h.y0:
androidx.appcompat.widget.TintTypedArray -> a.b.h.z0:
    android.content.Context mContext -> a
    android.content.res.TypedArray mWrapped -> b
    android.util.TypedValue mTypedValue -> c
    boolean getBoolean(int,boolean) -> a
    1:1:android.content.res.ColorStateList androidx.appcompat.content.res.AppCompatResources.getColorStateList(android.content.Context,int):0:0 -> b
    1:1:android.content.res.ColorStateList getColorStateList(int):0 -> b
    2:2:android.content.res.ColorStateList getColorStateList(int):0:0 -> b
    int getDimensionPixelOffset(int,int) -> c
    int getDimensionPixelSize(int,int) -> d
    android.graphics.drawable.Drawable getDrawable(int) -> e
    1:1:android.graphics.drawable.Drawable androidx.appcompat.widget.AppCompatDrawableManager.getDrawable(android.content.Context,int,boolean):0:0 -> f
    1:1:android.graphics.drawable.Drawable getDrawableIfKnown(int):0 -> f
    1:1:android.graphics.Typeface androidx.core.content.res.ResourcesCompat.getFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback):0:0 -> g
    1:1:android.graphics.Typeface getFont(int,int,androidx.core.content.res.ResourcesCompat$FontCallback):0 -> g
    2:2:android.graphics.Typeface androidx.core.content.res.ResourcesCompat.loadFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean,boolean):0:0 -> g
    2:2:android.graphics.Typeface androidx.core.content.res.ResourcesCompat.getFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback):0 -> g
    2:2:android.graphics.Typeface getFont(int,int,androidx.core.content.res.ResourcesCompat$FontCallback):0 -> g
    3:3:android.graphics.Typeface androidx.core.content.res.ResourcesCompat.loadFont(android.content.Context,android.content.res.Resources,android.util.TypedValue,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean,boolean):0:0 -> g
    3:3:android.graphics.Typeface androidx.core.content.res.ResourcesCompat.loadFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean,boolean):0 -> g
    3:3:android.graphics.Typeface androidx.core.content.res.ResourcesCompat.getFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback):0 -> g
    3:3:android.graphics.Typeface getFont(int,int,androidx.core.content.res.ResourcesCompat$FontCallback):0 -> g
    4:4:android.graphics.Typeface androidx.core.graphics.TypefaceCompat.findFromCache(android.content.res.Resources,int,int):0:0 -> g
    4:4:android.graphics.Typeface androidx.core.content.res.ResourcesCompat.loadFont(android.content.Context,android.content.res.Resources,android.util.TypedValue,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean,boolean):0 -> g
    4:4:android.graphics.Typeface androidx.core.content.res.ResourcesCompat.loadFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean,boolean):0 -> g
    4:4:android.graphics.Typeface androidx.core.content.res.ResourcesCompat.getFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback):0 -> g
    4:4:android.graphics.Typeface getFont(int,int,androidx.core.content.res.ResourcesCompat$FontCallback):0 -> g
    5:5:android.graphics.Typeface androidx.core.content.res.ResourcesCompat.loadFont(android.content.Context,android.content.res.Resources,android.util.TypedValue,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean,boolean):0:0 -> g
    5:5:android.graphics.Typeface androidx.core.content.res.ResourcesCompat.loadFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean,boolean):0 -> g
    5:5:android.graphics.Typeface androidx.core.content.res.ResourcesCompat.getFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback):0 -> g
    5:5:android.graphics.Typeface getFont(int,int,androidx.core.content.res.ResourcesCompat$FontCallback):0 -> g
    int getInt(int,int) -> h
    int getLayoutDimension(int,int) -> i
    int getResourceId(int,int) -> j
    java.lang.String getString(int) -> k
    java.lang.CharSequence getText(int) -> l
    boolean hasValue(int) -> m
    androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[]) -> n
    androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int) -> o
androidx.appcompat.widget.Toolbar -> androidx.appcompat.widget.Toolbar:
    int mButtonGravity -> n
    boolean mCollapsible -> N
    int mTitleTextAppearance -> l
    androidx.appcompat.view.menu.MenuBuilder$Callback mMenuBuilderCallback -> M
    android.content.res.ColorStateList mTitleTextColor -> z
    java.util.ArrayList mTempViews -> D
    android.widget.ImageView mLogoView -> e
    androidx.appcompat.widget.ActionMenuPresenter mOuterActionMenuPresenter -> J
    android.view.View mExpandedActionView -> i
    androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener mMenuViewItemClickListener -> H
    android.widget.TextView mTitleTextView -> b
    androidx.appcompat.widget.ActionMenuView mMenuView -> a
    android.widget.ImageButton mCollapseButtonView -> h
    int mGravity -> w
    androidx.appcompat.widget.Toolbar$OnMenuItemClickListener mOnMenuItemClickListener -> G
    int mContentInsetStartWithNavigation -> u
    android.widget.ImageButton mNavButtonView -> d
    int mTitleMarginBottom -> s
    java.lang.CharSequence mSubtitleText -> y
    boolean mEatingHover -> C
    int mTitleMarginEnd -> q
    int mMaxButtonHeight -> o
    android.graphics.drawable.Drawable mCollapseIcon -> f
    int mSubtitleTextAppearance -> m
    int mPopupTheme -> k
    androidx.appcompat.widget.ToolbarWidgetWrapper mWrapper -> I
    java.util.ArrayList mHiddenViews -> E
    java.lang.CharSequence mCollapseDescription -> g
    android.content.Context mPopupContext -> j
    androidx.appcompat.view.menu.MenuPresenter$Callback mActionMenuPresenterCallback -> L
    int[] mTempMargins -> F
    android.content.res.ColorStateList mSubtitleTextColor -> A
    android.widget.TextView mSubtitleTextView -> c
    androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter mExpandedMenuPresenter -> K
    androidx.appcompat.widget.RtlSpacingHelper mContentInsets -> t
    int mContentInsetEndWithActions -> v
    int mTitleMarginTop -> r
    java.lang.CharSequence mTitleText -> x
    boolean mEatingTouch -> B
    int mTitleMarginStart -> p
    java.lang.Runnable mShowOverflowMenuRunnable -> O
    1:1:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    2:2:android.content.res.TypedArray androidx.appcompat.widget.TintTypedArray.getWrappedTypeArray():0:0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    3:3:void androidx.core.view.ViewCompat.saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int):0:0 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    4:4:void androidx.core.view.ViewCompat$Api29Impl.saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int):0:0 -> <init>
    4:4:void androidx.core.view.ViewCompat.saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int):0 -> <init>
    4:4:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    4:4:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    5:5:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    5:5:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    6:6:int androidx.appcompat.widget.TintTypedArray.getInteger(int,int):0:0 -> <init>
    6:6:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    6:6:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    7:7:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    7:7:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    8:8:int androidx.appcompat.widget.TintTypedArray.getInteger(int,int):0:0 -> <init>
    8:8:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    8:8:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    9:9:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    9:9:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    10:10:void androidx.appcompat.widget.RtlSpacingHelper.setAbsolute(int,int):0:0 -> <init>
    10:10:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    10:10:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    11:11:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    11:11:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    12:12:void inflateMenu(int):0:0 -> <init>
    12:12:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    12:12:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    13:13:void androidx.appcompat.widget.TintTypedArray.recycle():0:0 -> <init>
    13:13:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    13:13:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    1:1:int androidx.core.view.ViewCompat.getLayoutDirection(android.view.View):0:0 -> a
    1:1:void addCustomViewsWithGravity(java.util.List,int):0 -> a
    2:2:void addCustomViewsWithGravity(java.util.List,int):0:0 -> a
    3:3:int androidx.core.view.ViewCompat.getLayoutDirection(android.view.View):0:0 -> a
    3:3:void addCustomViewsWithGravity(java.util.List,int):0 -> a
    4:4:int androidx.core.view.GravityCompat.getAbsoluteGravity(int,int):0:0 -> a
    4:4:void addCustomViewsWithGravity(java.util.List,int):0 -> a
    5:5:void addCustomViewsWithGravity(java.util.List,int):0:0 -> a
    void addSystemView(android.view.View,boolean) -> b
    void ensureCollapseButtonView() -> c
    void ensureContentInsets() -> d
    1:1:androidx.appcompat.view.menu.MenuBuilder androidx.appcompat.widget.ActionMenuView.peekMenu():0:0 -> e
    1:1:void ensureMenu():0 -> e
    2:2:void ensureMenu():0:0 -> e
    1:1:void androidx.appcompat.widget.ActionMenuView.<init>(android.content.Context):0:0 -> f
    1:1:void ensureMenuView():0 -> f
    2:2:void ensureMenuView():0:0 -> f
    3:3:void androidx.appcompat.widget.ActionMenuView.setMenuCallbacks(androidx.appcompat.view.menu.MenuPresenter$Callback,androidx.appcompat.view.menu.MenuBuilder$Callback):0:0 -> f
    3:3:void ensureMenuView():0 -> f
    4:4:void ensureMenuView():0:0 -> f
    void ensureNavButtonView() -> g
    1:1:androidx.appcompat.widget.Toolbar$LayoutParams generateLayoutParams(android.util.AttributeSet):0:0 -> generateLayoutParams
    1:1:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet):0 -> generateLayoutParams
    1:1:int androidx.appcompat.widget.RtlSpacingHelper.getEnd():0:0 -> getContentInsetEnd
    1:1:int getContentInsetEnd():0 -> getContentInsetEnd
    1:1:int androidx.appcompat.widget.RtlSpacingHelper.getLeft():0:0 -> getContentInsetLeft
    1:1:int getContentInsetLeft():0 -> getContentInsetLeft
    1:1:int androidx.appcompat.widget.RtlSpacingHelper.getRight():0:0 -> getContentInsetRight
    1:1:int getContentInsetRight():0 -> getContentInsetRight
    1:1:int androidx.appcompat.widget.RtlSpacingHelper.getStart():0:0 -> getContentInsetStart
    1:1:int getContentInsetStart():0 -> getContentInsetStart
    1:1:androidx.appcompat.view.menu.MenuBuilder androidx.appcompat.widget.ActionMenuView.peekMenu():0:0 -> getCurrentContentInsetEnd
    1:1:int getCurrentContentInsetEnd():0 -> getCurrentContentInsetEnd
    2:2:int getCurrentContentInsetEnd():0:0 -> getCurrentContentInsetEnd
    1:1:int androidx.core.view.ViewCompat.getLayoutDirection(android.view.View):0:0 -> getCurrentContentInsetLeft
    1:1:int getCurrentContentInsetLeft():0 -> getCurrentContentInsetLeft
    2:2:int getCurrentContentInsetLeft():0:0 -> getCurrentContentInsetLeft
    1:1:int androidx.core.view.ViewCompat.getLayoutDirection(android.view.View):0:0 -> getCurrentContentInsetRight
    1:1:int getCurrentContentInsetRight():0 -> getCurrentContentInsetRight
    2:2:int getCurrentContentInsetRight():0:0 -> getCurrentContentInsetRight
    androidx.appcompat.widget.Toolbar$LayoutParams generateDefaultLayoutParams() -> h
    androidx.appcompat.widget.Toolbar$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> i
    1:1:int androidx.core.view.ViewCompat.getLayoutDirection(android.view.View):0:0 -> j
    1:1:int getChildHorizontalGravity(int):0 -> j
    2:2:int androidx.core.view.GravityCompat.getAbsoluteGravity(int,int):0:0 -> j
    2:2:int getChildHorizontalGravity(int):0 -> j
    1:1:int getChildVerticalGravity(int):0:0 -> k
    1:1:int getChildTop(android.view.View,int):0 -> k
    2:2:int getChildTop(android.view.View,int):0:0 -> k
    1:1:int androidx.core.view.MarginLayoutParamsCompat.getMarginStart(android.view.ViewGroup$MarginLayoutParams):0:0 -> l
    1:1:int getHorizontalMargins(android.view.View):0 -> l
    2:2:int androidx.core.view.MarginLayoutParamsCompat.getMarginEnd(android.view.ViewGroup$MarginLayoutParams):0:0 -> l
    2:2:int getHorizontalMargins(android.view.View):0 -> l
    int getVerticalMargins(android.view.View) -> m
    boolean isChildOrHidden(android.view.View) -> n
    1:1:boolean androidx.appcompat.widget.ActionMenuView.isOverflowMenuShowing():0:0 -> o
    1:1:boolean isOverflowMenuShowing():0 -> o
    1:1:int androidx.core.view.ViewCompat.getLayoutDirection(android.view.View):0:0 -> onLayout
    1:1:void onLayout(boolean,int,int,int,int):0 -> onLayout
    2:2:void onLayout(boolean,int,int,int,int):0:0 -> onLayout
    3:3:int androidx.core.view.ViewCompat.getMinimumHeight(android.view.View):0:0 -> onLayout
    3:3:void onLayout(boolean,int,int,int,int):0 -> onLayout
    4:4:void onLayout(boolean,int,int,int,int):0:0 -> onLayout
    5:5:int getViewListMeasuredWidth(java.util.List,int[]):0:0 -> onLayout
    5:5:void onLayout(boolean,int,int,int,int):0 -> onLayout
    6:6:void onLayout(boolean,int,int,int,int):0:0 -> onLayout
    1:1:boolean shouldCollapse():0:0 -> onMeasure
    1:1:void onMeasure(int,int):0 -> onMeasure
    2:2:void onMeasure(int,int):0:0 -> onMeasure
    1:1:android.os.Parcelable androidx.customview.view.AbsSavedState.getSuperState():0:0 -> onRestoreInstanceState
    1:1:void onRestoreInstanceState(android.os.Parcelable):0 -> onRestoreInstanceState
    2:2:void onRestoreInstanceState(android.os.Parcelable):0:0 -> onRestoreInstanceState
    3:3:androidx.appcompat.view.menu.MenuBuilder androidx.appcompat.widget.ActionMenuView.peekMenu():0:0 -> onRestoreInstanceState
    3:3:void onRestoreInstanceState(android.os.Parcelable):0 -> onRestoreInstanceState
    4:4:void onRestoreInstanceState(android.os.Parcelable):0:0 -> onRestoreInstanceState
    5:5:void postShowOverflowMenu():0:0 -> onRestoreInstanceState
    5:5:void onRestoreInstanceState(android.os.Parcelable):0 -> onRestoreInstanceState
    1:1:void androidx.appcompat.widget.RtlSpacingHelper.setDirection(boolean):0:0 -> onRtlPropertiesChanged
    1:1:void onRtlPropertiesChanged(int):0 -> onRtlPropertiesChanged
    1:1:int androidx.appcompat.view.menu.MenuItemImpl.getItemId():0:0 -> onSaveInstanceState
    1:1:android.os.Parcelable onSaveInstanceState():0 -> onSaveInstanceState
    2:2:android.os.Parcelable onSaveInstanceState():0:0 -> onSaveInstanceState
    int layoutChildLeft(android.view.View,int,int[],int) -> p
    int layoutChildRight(android.view.View,int,int[],int) -> q
    int measureChildCollapseMargins(android.view.View,int,int,int,int,int[]) -> r
    void measureChildConstrained(android.view.View,int,int,int,int,int) -> s
    1:1:void ensureLogoView():0:0 -> setLogo
    1:1:void setLogo(android.graphics.drawable.Drawable):0 -> setLogo
    2:2:void androidx.appcompat.widget.AppCompatImageView.<init>(android.content.Context,android.util.AttributeSet):0:0 -> setLogo
    2:2:void androidx.appcompat.widget.AppCompatImageView.<init>(android.content.Context):0 -> setLogo
    2:2:void ensureLogoView():0 -> setLogo
    2:2:void setLogo(android.graphics.drawable.Drawable):0 -> setLogo
    3:3:void ensureLogoView():0:0 -> setLogo
    3:3:void setLogo(android.graphics.drawable.Drawable):0 -> setLogo
    4:4:void setLogo(android.graphics.drawable.Drawable):0:0 -> setLogo
    1:1:void ensureLogoView():0:0 -> setLogoDescription
    1:1:void setLogoDescription(java.lang.CharSequence):0 -> setLogoDescription
    2:2:void androidx.appcompat.widget.AppCompatImageView.<init>(android.content.Context,android.util.AttributeSet):0:0 -> setLogoDescription
    2:2:void androidx.appcompat.widget.AppCompatImageView.<init>(android.content.Context):0 -> setLogoDescription
    2:2:void ensureLogoView():0 -> setLogoDescription
    2:2:void setLogoDescription(java.lang.CharSequence):0 -> setLogoDescription
    3:3:void ensureLogoView():0:0 -> setLogoDescription
    3:3:void setLogoDescription(java.lang.CharSequence):0 -> setLogoDescription
    4:4:void setLogoDescription(java.lang.CharSequence):0:0 -> setLogoDescription
    1:1:void androidx.appcompat.widget.AppCompatTextView.<init>(android.content.Context):0:0 -> setSubtitle
    1:1:void setSubtitle(java.lang.CharSequence):0 -> setSubtitle
    2:2:void setSubtitle(java.lang.CharSequence):0:0 -> setSubtitle
    1:1:void androidx.appcompat.widget.AppCompatTextView.<init>(android.content.Context):0:0 -> setTitle
    1:1:void setTitle(java.lang.CharSequence):0 -> setTitle
    2:2:void setTitle(java.lang.CharSequence):0:0 -> setTitle
    boolean shouldLayout(android.view.View) -> t
    1:1:boolean androidx.appcompat.widget.ActionMenuView.showOverflowMenu():0:0 -> u
    1:1:boolean showOverflowMenu():0 -> u
androidx.appcompat.widget.Toolbar$1 -> androidx.appcompat.widget.Toolbar$a:
    androidx.appcompat.widget.Toolbar this$0 -> a
androidx.appcompat.widget.Toolbar$2 -> androidx.appcompat.widget.Toolbar$b:
    androidx.appcompat.widget.Toolbar this$0 -> a
androidx.appcompat.widget.Toolbar$3 -> androidx.appcompat.widget.Toolbar$c:
    androidx.appcompat.widget.Toolbar this$0 -> a
    1:1:void androidx.appcompat.widget.Toolbar.collapseActionView():0:0 -> onClick
    1:1:void onClick(android.view.View):0 -> onClick
androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter -> androidx.appcompat.widget.Toolbar$d:
    androidx.appcompat.view.menu.MenuBuilder mMenu -> a
    androidx.appcompat.widget.Toolbar this$0 -> c
    androidx.appcompat.view.menu.MenuItemImpl mCurrentExpandedItem -> b
    void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> b
    1:1:void androidx.appcompat.widget.Toolbar.removeChildrenForExpandedActionView():0:0 -> c
    1:1:boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl):0 -> c
    2:2:boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl):0:0 -> c
    3:3:void androidx.appcompat.view.menu.MenuItemImpl.setActionViewExpanded(boolean):0:0 -> c
    3:3:boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl):0 -> c
    4:4:boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl):0:0 -> c
    boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> f
    boolean flagActionItems() -> g
    void updateMenuView(boolean) -> h
    void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> j
    1:1:void androidx.appcompat.widget.Toolbar.addChildrenForExpandedActionView():0:0 -> k
    1:1:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl):0 -> k
    2:2:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl):0:0 -> k
    3:3:void androidx.appcompat.view.menu.MenuItemImpl.setActionViewExpanded(boolean):0:0 -> k
    3:3:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl):0 -> k
androidx.appcompat.widget.Toolbar$LayoutParams -> androidx.appcompat.widget.Toolbar$e:
    int mViewType -> b
    1:1:void copyMarginsFromCompat(android.view.ViewGroup$MarginLayoutParams):0:0 -> <init>
    1:1:void <init>(android.view.ViewGroup$MarginLayoutParams):0 -> <init>
androidx.appcompat.widget.Toolbar$OnMenuItemClickListener -> androidx.appcompat.widget.Toolbar$f:
androidx.appcompat.widget.Toolbar$SavedState -> androidx.appcompat.widget.Toolbar$g:
    int expandedMenuItemId -> c
    boolean isOverflowOpen -> d
    1:1:void androidx.customview.view.AbsSavedState.writeToParcel(android.os.Parcel,int):0:0 -> writeToParcel
    1:1:void writeToParcel(android.os.Parcel,int):0 -> writeToParcel
    2:2:void writeToParcel(android.os.Parcel,int):0:0 -> writeToParcel
androidx.appcompat.widget.Toolbar$SavedState$1 -> androidx.appcompat.widget.Toolbar$g$a:
    1:1:androidx.appcompat.widget.Toolbar$SavedState createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    1:1:java.lang.Object createFromParcel(android.os.Parcel):0 -> createFromParcel
    2:2:androidx.appcompat.widget.Toolbar$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader):0:0 -> createFromParcel
    2:2:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader):0 -> createFromParcel
    1:1:androidx.appcompat.widget.Toolbar$SavedState[] newArray(int):0:0 -> newArray
    1:1:java.lang.Object[] newArray(int):0 -> newArray
androidx.appcompat.widget.ToolbarWidgetWrapper -> a.b.h.b1:
    boolean mMenuPrepared -> m
    int mDefaultNavigationContentDescription -> o
    android.graphics.drawable.Drawable mIcon -> e
    android.graphics.drawable.Drawable mLogo -> f
    android.view.Window$Callback mWindowCallback -> l
    android.graphics.drawable.Drawable mNavIcon -> g
    androidx.appcompat.widget.ActionMenuPresenter mActionMenuPresenter -> n
    int mDisplayOpts -> b
    java.lang.CharSequence mTitle -> i
    java.lang.CharSequence mSubtitle -> j
    java.lang.CharSequence mHomeDescription -> k
    androidx.appcompat.widget.Toolbar mToolbar -> a
    android.view.View mTabView -> c
    boolean mTitleSet -> h
    android.view.View mCustomView -> d
    android.graphics.drawable.Drawable mDefaultNavigationIcon -> p
    1:1:void <init>(androidx.appcompat.widget.Toolbar,boolean,int,int):0:0 -> <init>
    1:1:void <init>(androidx.appcompat.widget.Toolbar,boolean):0 -> <init>
    2:2:void setTitle(java.lang.CharSequence):0:0 -> <init>
    2:2:void <init>(androidx.appcompat.widget.Toolbar,boolean,int,int):0 -> <init>
    2:2:void <init>(androidx.appcompat.widget.Toolbar,boolean):0 -> <init>
    3:3:void setTitleInt(java.lang.CharSequence):0:0 -> <init>
    3:3:void setTitle(java.lang.CharSequence):0 -> <init>
    3:3:void <init>(androidx.appcompat.widget.Toolbar,boolean,int,int):0 -> <init>
    3:3:void <init>(androidx.appcompat.widget.Toolbar,boolean):0 -> <init>
    4:4:void <init>(androidx.appcompat.widget.Toolbar,boolean,int,int):0:0 -> <init>
    4:4:void <init>(androidx.appcompat.widget.Toolbar,boolean):0 -> <init>
    5:5:void setSubtitle(java.lang.CharSequence):0:0 -> <init>
    5:5:void <init>(androidx.appcompat.widget.Toolbar,boolean,int,int):0 -> <init>
    5:5:void <init>(androidx.appcompat.widget.Toolbar,boolean):0 -> <init>
    6:6:void <init>(androidx.appcompat.widget.Toolbar,boolean,int,int):0:0 -> <init>
    6:6:void <init>(androidx.appcompat.widget.Toolbar,boolean):0 -> <init>
    7:7:void setLogo(android.graphics.drawable.Drawable):0:0 -> <init>
    7:7:void <init>(androidx.appcompat.widget.Toolbar,boolean,int,int):0 -> <init>
    7:7:void <init>(androidx.appcompat.widget.Toolbar,boolean):0 -> <init>
    8:8:void <init>(androidx.appcompat.widget.Toolbar,boolean,int,int):0:0 -> <init>
    8:8:void <init>(androidx.appcompat.widget.Toolbar,boolean):0 -> <init>
    9:9:void setIcon(android.graphics.drawable.Drawable):0:0 -> <init>
    9:9:void <init>(androidx.appcompat.widget.Toolbar,boolean,int,int):0 -> <init>
    9:9:void <init>(androidx.appcompat.widget.Toolbar,boolean):0 -> <init>
    10:10:void <init>(androidx.appcompat.widget.Toolbar,boolean,int,int):0:0 -> <init>
    10:10:void <init>(androidx.appcompat.widget.Toolbar,boolean):0 -> <init>
    11:11:void setNavigationIcon(android.graphics.drawable.Drawable):0:0 -> <init>
    11:11:void <init>(androidx.appcompat.widget.Toolbar,boolean,int,int):0 -> <init>
    11:11:void <init>(androidx.appcompat.widget.Toolbar,boolean):0 -> <init>
    12:12:void <init>(androidx.appcompat.widget.Toolbar,boolean,int,int):0:0 -> <init>
    12:12:void <init>(androidx.appcompat.widget.Toolbar,boolean):0 -> <init>
    13:13:void setCustomView(android.view.View):0:0 -> <init>
    13:13:void <init>(androidx.appcompat.widget.Toolbar,boolean,int,int):0 -> <init>
    13:13:void <init>(androidx.appcompat.widget.Toolbar,boolean):0 -> <init>
    14:14:void <init>(androidx.appcompat.widget.Toolbar,boolean,int,int):0:0 -> <init>
    14:14:void <init>(androidx.appcompat.widget.Toolbar,boolean):0 -> <init>
    15:15:void androidx.appcompat.widget.Toolbar.setContentInsetsRelative(int,int):0:0 -> <init>
    15:15:void <init>(androidx.appcompat.widget.Toolbar,boolean,int,int):0 -> <init>
    15:15:void <init>(androidx.appcompat.widget.Toolbar,boolean):0 -> <init>
    16:16:void <init>(androidx.appcompat.widget.Toolbar,boolean,int,int):0:0 -> <init>
    16:16:void <init>(androidx.appcompat.widget.Toolbar,boolean):0 -> <init>
    17:17:void androidx.appcompat.widget.Toolbar.setTitleTextAppearance(android.content.Context,int):0:0 -> <init>
    17:17:void <init>(androidx.appcompat.widget.Toolbar,boolean,int,int):0 -> <init>
    17:17:void <init>(androidx.appcompat.widget.Toolbar,boolean):0 -> <init>
    18:18:void <init>(androidx.appcompat.widget.Toolbar,boolean,int,int):0:0 -> <init>
    18:18:void <init>(androidx.appcompat.widget.Toolbar,boolean):0 -> <init>
    19:19:void androidx.appcompat.widget.Toolbar.setSubtitleTextAppearance(android.content.Context,int):0:0 -> <init>
    19:19:void <init>(androidx.appcompat.widget.Toolbar,boolean,int,int):0 -> <init>
    19:19:void <init>(androidx.appcompat.widget.Toolbar,boolean):0 -> <init>
    20:20:void <init>(androidx.appcompat.widget.Toolbar,boolean,int,int):0:0 -> <init>
    20:20:void <init>(androidx.appcompat.widget.Toolbar,boolean):0 -> <init>
    21:21:int detectDisplayOptions():0:0 -> <init>
    21:21:void <init>(androidx.appcompat.widget.Toolbar,boolean,int,int):0 -> <init>
    21:21:void <init>(androidx.appcompat.widget.Toolbar,boolean):0 -> <init>
    22:22:void <init>(androidx.appcompat.widget.Toolbar,boolean,int,int):0:0 -> <init>
    22:22:void <init>(androidx.appcompat.widget.Toolbar,boolean):0 -> <init>
    23:23:void androidx.appcompat.widget.TintTypedArray.recycle():0:0 -> <init>
    23:23:void <init>(androidx.appcompat.widget.Toolbar,boolean,int,int):0 -> <init>
    23:23:void <init>(androidx.appcompat.widget.Toolbar,boolean):0 -> <init>
    24:24:void setDefaultNavigationContentDescription(int):0:0 -> <init>
    24:24:void <init>(androidx.appcompat.widget.Toolbar,boolean,int,int):0 -> <init>
    24:24:void <init>(androidx.appcompat.widget.Toolbar,boolean):0 -> <init>
    25:25:void setNavigationContentDescription(int):0:0 -> <init>
    25:25:void setDefaultNavigationContentDescription(int):0 -> <init>
    25:25:void <init>(androidx.appcompat.widget.Toolbar,boolean,int,int):0 -> <init>
    25:25:void <init>(androidx.appcompat.widget.Toolbar,boolean):0 -> <init>
    26:26:void setNavigationContentDescription(java.lang.CharSequence):0:0 -> <init>
    26:26:void setNavigationContentDescription(int):0 -> <init>
    26:26:void setDefaultNavigationContentDescription(int):0 -> <init>
    26:26:void <init>(androidx.appcompat.widget.Toolbar,boolean,int,int):0 -> <init>
    26:26:void <init>(androidx.appcompat.widget.Toolbar,boolean):0 -> <init>
    27:27:void <init>(androidx.appcompat.widget.Toolbar,boolean,int,int):0:0 -> <init>
    27:27:void <init>(androidx.appcompat.widget.Toolbar,boolean):0 -> <init>
    void updateToolbarLogo() -> A
    boolean showOverflowMenu() -> a
    1:1:void androidx.appcompat.view.menu.BaseMenuPresenter.setId(int):0:0 -> b
    1:1:void setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback):0 -> b
    2:2:void setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback):0:0 -> b
    3:3:void androidx.appcompat.view.menu.BaseMenuPresenter.setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback):0:0 -> b
    3:3:void setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback):0 -> b
    4:4:void setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback):0:0 -> b
    5:5:void androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter):0:0 -> b
    5:5:void setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback):0 -> b
    6:6:androidx.appcompat.view.menu.MenuBuilder androidx.appcompat.widget.ActionMenuView.peekMenu():0:0 -> b
    6:6:void androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter):0 -> b
    6:6:void setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback):0 -> b
    7:7:void androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter):0:0 -> b
    7:7:void setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback):0 -> b
    8:8:void androidx.appcompat.widget.ActionMenuPresenter.setExpandedActionViewsExclusive(boolean):0:0 -> b
    8:8:void androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter):0 -> b
    8:8:void setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback):0 -> b
    9:9:void androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter):0:0 -> b
    9:9:void setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback):0 -> b
    10:10:void androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter.initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder):0:0 -> b
    10:10:void androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter):0 -> b
    10:10:void setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback):0 -> b
    11:11:void androidx.appcompat.widget.Toolbar.setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter):0:0 -> b
    11:11:void setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback):0 -> b
    1:1:boolean androidx.appcompat.widget.Toolbar.isOverflowMenuShowPending():0:0 -> c
    1:1:boolean isOverflowMenuShowPending():0 -> c
    2:2:boolean androidx.appcompat.widget.ActionMenuView.isOverflowMenuShowPending():0:0 -> c
    2:2:boolean androidx.appcompat.widget.Toolbar.isOverflowMenuShowPending():0 -> c
    2:2:boolean isOverflowMenuShowPending():0 -> c
    3:3:boolean androidx.appcompat.widget.ActionMenuPresenter.isOverflowMenuShowPending():0:0 -> c
    3:3:boolean androidx.appcompat.widget.ActionMenuView.isOverflowMenuShowPending():0 -> c
    3:3:boolean androidx.appcompat.widget.Toolbar.isOverflowMenuShowPending():0 -> c
    3:3:boolean isOverflowMenuShowPending():0 -> c
    1:1:void androidx.appcompat.widget.Toolbar.collapseActionView():0:0 -> collapseActionView
    1:1:void collapseActionView():0 -> collapseActionView
    void setMenuPrepared() -> d
    boolean isOverflowMenuShowing() -> e
    1:1:boolean androidx.appcompat.widget.Toolbar.canShowOverflowMenu():0:0 -> f
    1:1:boolean canShowOverflowMenu():0 -> f
    2:2:boolean androidx.appcompat.widget.ActionMenuView.isOverflowReserved():0:0 -> f
    2:2:boolean androidx.appcompat.widget.Toolbar.canShowOverflowMenu():0 -> f
    2:2:boolean canShowOverflowMenu():0 -> f
    1:1:boolean androidx.appcompat.widget.Toolbar.hideOverflowMenu():0:0 -> g
    1:1:boolean hideOverflowMenu():0 -> g
    2:2:boolean androidx.appcompat.widget.ActionMenuView.hideOverflowMenu():0:0 -> g
    2:2:boolean androidx.appcompat.widget.Toolbar.hideOverflowMenu():0 -> g
    2:2:boolean hideOverflowMenu():0 -> g
    1:1:void androidx.appcompat.widget.Toolbar.dismissPopupMenus():0:0 -> h
    1:1:void dismissPopupMenus():0 -> h
    2:2:void androidx.appcompat.widget.ActionMenuView.dismissPopupMenus():0:0 -> h
    2:2:void androidx.appcompat.widget.Toolbar.dismissPopupMenus():0 -> h
    2:2:void dismissPopupMenus():0 -> h
    1:1:void androidx.appcompat.widget.Toolbar.setMenuCallbacks(androidx.appcompat.view.menu.MenuPresenter$Callback,androidx.appcompat.view.menu.MenuBuilder$Callback):0:0 -> i
    1:1:void setMenuCallbacks(androidx.appcompat.view.menu.MenuPresenter$Callback,androidx.appcompat.view.menu.MenuBuilder$Callback):0 -> i
    2:2:void androidx.appcompat.widget.ActionMenuView.setMenuCallbacks(androidx.appcompat.view.menu.MenuPresenter$Callback,androidx.appcompat.view.menu.MenuBuilder$Callback):0:0 -> i
    2:2:void androidx.appcompat.widget.Toolbar.setMenuCallbacks(androidx.appcompat.view.menu.MenuPresenter$Callback,androidx.appcompat.view.menu.MenuBuilder$Callback):0 -> i
    2:2:void setMenuCallbacks(androidx.appcompat.view.menu.MenuPresenter$Callback,androidx.appcompat.view.menu.MenuBuilder$Callback):0 -> i
    1:1:androidx.core.view.ViewPropertyAnimatorCompat androidx.core.view.ViewPropertyAnimatorCompat.setListener(androidx.core.view.ViewPropertyAnimatorListener):0:0 -> j
    1:1:androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long):0 -> j
    int getDisplayOptions() -> k
    void setVisibility(int) -> l
    void initProgress() -> m
    android.view.Menu getMenu() -> n
    1:1:boolean androidx.appcompat.widget.Toolbar.hasExpandedActionView():0:0 -> o
    1:1:boolean hasExpandedActionView():0 -> o
    1:1:void setLogo(android.graphics.drawable.Drawable):0:0 -> p
    1:1:void setLogo(int):0 -> p
    void setEmbeddedTabView(androidx.appcompat.widget.ScrollingTabContainerView) -> q
    android.view.ViewGroup getViewGroup() -> r
    void setHomeButtonEnabled(boolean) -> s
    1:1:void setIcon(android.graphics.drawable.Drawable):0:0 -> setIcon
    1:1:void setIcon(int):0 -> setIcon
    1:1:void setTitleInt(java.lang.CharSequence):0:0 -> setWindowTitle
    1:1:void setWindowTitle(java.lang.CharSequence):0 -> setWindowTitle
    void initIndeterminateProgress() -> t
    void setCollapsible(boolean) -> u
    android.content.Context getContext() -> v
    void setDisplayOptions(int) -> w
    int getNavigationMode() -> x
    void updateHomeAccessibility() -> y
    void updateNavigationIcon() -> z
androidx.appcompat.widget.ToolbarWidgetWrapper$1 -> a.b.h.a1:
    androidx.appcompat.view.menu.ActionMenuItem mNavItem -> a
    androidx.appcompat.widget.ToolbarWidgetWrapper this$0 -> b
androidx.appcompat.widget.ToolbarWidgetWrapper$2 -> a.b.h.b1$a:
    androidx.appcompat.widget.ToolbarWidgetWrapper this$0 -> c
    boolean mCanceled -> a
    int val$visibility -> b
    void onAnimationEnd(android.view.View) -> a
    void onAnimationStart(android.view.View) -> b
    void onAnimationCancel(android.view.View) -> c
androidx.appcompat.widget.VectorEnabledTintResources -> a.b.h.c1:
    int $r8$clinit -> a
androidx.appcompat.widget.ViewStubCompat -> androidx.appcompat.widget.ViewStubCompat:
    android.view.LayoutInflater mInflater -> d
    java.lang.ref.WeakReference mInflatedViewRef -> c
    int mInflatedId -> b
    int mLayoutResource -> a
    androidx.appcompat.widget.ViewStubCompat$OnInflateListener mInflateListener -> e
    1:1:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    android.view.View inflate() -> a
androidx.appcompat.widget.ViewStubCompat$OnInflateListener -> androidx.appcompat.widget.ViewStubCompat$a:
    void onInflate(androidx.appcompat.widget.ViewStubCompat,android.view.View) -> a
androidx.appcompat.widget.ViewUtils -> a.b.h.d1:
    java.lang.reflect.Method sComputeFitSystemWindowsMethod -> a
    void computeFitSystemWindows(android.view.View,android.graphics.Rect,android.graphics.Rect) -> a
    1:1:int androidx.core.view.ViewCompat.getLayoutDirection(android.view.View):0:0 -> b
    1:1:boolean isLayoutRtl(android.view.View):0 -> b
androidx.appcompat.widget.WithHint -> a.b.h.e1:
    java.lang.CharSequence getHint() -> a
androidx.arch.core.executor.ArchTaskExecutor -> a.c.a.a.a:
    androidx.arch.core.executor.ArchTaskExecutor sInstance -> c
    androidx.arch.core.executor.TaskExecutor mDefaultTaskExecutor -> b
    androidx.arch.core.executor.TaskExecutor mDelegate -> a
    boolean isMainThread() -> a
    androidx.arch.core.executor.ArchTaskExecutor getInstance() -> b
androidx.arch.core.executor.DefaultTaskExecutor -> a.c.a.a.b:
    java.lang.Object mLock -> a
    java.util.concurrent.ExecutorService mDiskIO -> b
    boolean isMainThread() -> a
androidx.arch.core.executor.DefaultTaskExecutor$1 -> a.c.a.a.b$a:
    java.util.concurrent.atomic.AtomicInteger mThreadId -> a
androidx.arch.core.executor.TaskExecutor -> a.c.a.a.c:
    boolean isMainThread() -> a
androidx.arch.core.internal.FastSafeIterableMap -> a.c.a.b.a:
    java.util.HashMap mHashMap -> e
    androidx.arch.core.internal.SafeIterableMap$Entry get(java.lang.Object) -> a
    1:1:androidx.arch.core.internal.SafeIterableMap$Entry get(java.lang.Object):0:0 -> d
    1:1:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object):0 -> d
    2:2:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object):0:0 -> d
    java.lang.Object remove(java.lang.Object) -> e
androidx.arch.core.internal.SafeIterableMap -> a.c.a.b.b:
    androidx.arch.core.internal.SafeIterableMap$Entry mStart -> a
    androidx.arch.core.internal.SafeIterableMap$Entry mEnd -> b
    int mSize -> d
    java.util.WeakHashMap mIterators -> c
    androidx.arch.core.internal.SafeIterableMap$Entry get(java.lang.Object) -> a
    androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions iteratorWithAdditions() -> b
    androidx.arch.core.internal.SafeIterableMap$Entry put(java.lang.Object,java.lang.Object) -> c
    java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> d
    java.lang.Object remove(java.lang.Object) -> e
    1:1:int size():0:0 -> equals
    1:1:boolean equals(java.lang.Object):0 -> equals
    2:2:boolean equals(java.lang.Object):0:0 -> equals
androidx.arch.core.internal.SafeIterableMap$AscendingIterator -> a.c.a.b.b$a:
    androidx.arch.core.internal.SafeIterableMap$Entry backward(androidx.arch.core.internal.SafeIterableMap$Entry) -> b
    androidx.arch.core.internal.SafeIterableMap$Entry forward(androidx.arch.core.internal.SafeIterableMap$Entry) -> c
androidx.arch.core.internal.SafeIterableMap$DescendingIterator -> a.c.a.b.b$b:
    androidx.arch.core.internal.SafeIterableMap$Entry backward(androidx.arch.core.internal.SafeIterableMap$Entry) -> b
    androidx.arch.core.internal.SafeIterableMap$Entry forward(androidx.arch.core.internal.SafeIterableMap$Entry) -> c
androidx.arch.core.internal.SafeIterableMap$Entry -> a.c.a.b.b$c:
    androidx.arch.core.internal.SafeIterableMap$Entry mNext -> c
    androidx.arch.core.internal.SafeIterableMap$Entry mPrevious -> d
    java.lang.Object mValue -> b
    java.lang.Object mKey -> a
androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions -> a.c.a.b.b$d:
    androidx.arch.core.internal.SafeIterableMap$Entry mCurrent -> a
    androidx.arch.core.internal.SafeIterableMap this$0 -> c
    boolean mBeforeStart -> b
    void supportRemove(androidx.arch.core.internal.SafeIterableMap$Entry) -> a
    1:1:java.util.Map$Entry next():0:0 -> next
    1:1:java.lang.Object next():0 -> next
androidx.arch.core.internal.SafeIterableMap$ListIterator -> a.c.a.b.b$e:
    androidx.arch.core.internal.SafeIterableMap$Entry mExpectedEnd -> a
    androidx.arch.core.internal.SafeIterableMap$Entry mNext -> b
    1:1:androidx.arch.core.internal.SafeIterableMap$Entry nextNode():0:0 -> a
    1:1:void supportRemove(androidx.arch.core.internal.SafeIterableMap$Entry):0 -> a
    2:2:void supportRemove(androidx.arch.core.internal.SafeIterableMap$Entry):0:0 -> a
    androidx.arch.core.internal.SafeIterableMap$Entry backward(androidx.arch.core.internal.SafeIterableMap$Entry) -> b
    androidx.arch.core.internal.SafeIterableMap$Entry forward(androidx.arch.core.internal.SafeIterableMap$Entry) -> c
    1:1:java.util.Map$Entry next():0:0 -> next
    1:1:java.lang.Object next():0 -> next
    2:2:androidx.arch.core.internal.SafeIterableMap$Entry nextNode():0:0 -> next
    2:2:java.util.Map$Entry next():0 -> next
    2:2:java.lang.Object next():0 -> next
    3:3:java.util.Map$Entry next():0:0 -> next
    3:3:java.lang.Object next():0 -> next
androidx.arch.core.internal.SafeIterableMap$SupportRemove -> a.c.a.b.b$f:
    void supportRemove(androidx.arch.core.internal.SafeIterableMap$Entry) -> a
androidx.arch.core.util.Function -> a.c.a.c.a:
    java.lang.Object apply(java.lang.Object) -> a
androidx.collection.ArrayMap -> a.d.a:
    androidx.collection.MapCollections mCollections -> h
    1:1:java.util.Set androidx.collection.MapCollections.getEntrySet():0:0 -> entrySet
    1:1:java.util.Set entrySet():0 -> entrySet
    androidx.collection.MapCollections getCollection() -> k
    1:1:java.util.Set androidx.collection.MapCollections.getKeySet():0:0 -> keySet
    1:1:java.util.Set keySet():0 -> keySet
    1:1:void androidx.collection.SimpleArrayMap.ensureCapacity(int):0:0 -> putAll
    1:1:void putAll(java.util.Map):0 -> putAll
    2:2:void putAll(java.util.Map):0:0 -> putAll
    3:3:void androidx.collection.SimpleArrayMap.ensureCapacity(int):0:0 -> putAll
    3:3:void putAll(java.util.Map):0 -> putAll
    1:1:java.util.Collection androidx.collection.MapCollections.getValues():0:0 -> values
    1:1:java.util.Collection values():0 -> values
androidx.collection.ArrayMap$1 -> a.d.a$a:
    androidx.collection.ArrayMap this$0 -> d
    void colClear() -> a
    java.lang.Object colGetEntry(int,int) -> b
    java.util.Map colGetMap() -> c
    int colGetSize() -> d
    int colIndexOfKey(java.lang.Object) -> e
    int colIndexOfValue(java.lang.Object) -> f
    void colPut(java.lang.Object,java.lang.Object) -> g
    void colRemoveAt(int) -> h
    1:1:java.lang.Object androidx.collection.SimpleArrayMap.setValueAt(int,java.lang.Object):0:0 -> i
    1:1:java.lang.Object colSetValue(int,java.lang.Object):0 -> i
androidx.collection.ArraySet -> a.d.c:
    java.lang.Object[] mArray -> b
    int sTwiceBaseCacheSize -> j
    int sBaseCacheSize -> h
    int[] INT -> e
    int[] mHashes -> a
    java.lang.Object[] sTwiceBaseCache -> i
    int mSize -> c
    java.lang.Object[] OBJECT -> f
    androidx.collection.MapCollections mCollections -> d
    java.lang.Object[] sBaseCache -> g
    1:1:void <init>(int):0:0 -> <init>
    1:1:void <init>():0 -> <init>
    void allocArrays(int) -> a
    1:1:void ensureCapacity(int):0:0 -> addAll
    1:1:boolean addAll(java.util.Collection):0 -> addAll
    2:2:boolean addAll(java.util.Collection):0:0 -> addAll
    void freeArrays(int[],java.lang.Object[],int) -> b
    int indexOf(java.lang.Object) -> c
    int indexOf(java.lang.Object,int) -> d
    int indexOfNull() -> e
    1:1:int size():0:0 -> equals
    1:1:boolean equals(java.lang.Object):0 -> equals
    2:2:boolean equals(java.lang.Object):0:0 -> equals
    3:3:java.lang.Object valueAt(int):0:0 -> equals
    3:3:boolean equals(java.lang.Object):0 -> equals
    4:4:boolean equals(java.lang.Object):0:0 -> equals
    java.lang.Object removeAt(int) -> f
    1:1:androidx.collection.MapCollections getCollection():0:0 -> iterator
    1:1:java.util.Iterator iterator():0 -> iterator
    2:2:java.util.Set androidx.collection.MapCollections.getKeySet():0:0 -> iterator
    2:2:java.util.Iterator iterator():0 -> iterator
    3:3:java.util.Iterator iterator():0:0 -> iterator
    1:1:java.lang.Object valueAt(int):0:0 -> toString
    1:1:java.lang.String toString():0 -> toString
    2:2:java.lang.String toString():0:0 -> toString
androidx.collection.ArraySet$1 -> a.d.b:
    androidx.collection.ArraySet this$0 -> d
    void colClear() -> a
    java.lang.Object colGetEntry(int,int) -> b
    java.util.Map colGetMap() -> c
    int colGetSize() -> d
    int colIndexOfKey(java.lang.Object) -> e
    int colIndexOfValue(java.lang.Object) -> f
    void colPut(java.lang.Object,java.lang.Object) -> g
    void colRemoveAt(int) -> h
    java.lang.Object colSetValue(int,java.lang.Object) -> i
androidx.collection.ContainerHelpers -> a.d.d:
    java.lang.Object[] EMPTY_OBJECTS -> c
    long[] EMPTY_LONGS -> b
    int[] EMPTY_INTS -> a
    int binarySearch(int[],int,int) -> a
    int binarySearch(long[],int,long) -> b
    boolean equal(java.lang.Object,java.lang.Object) -> c
    int idealByteArraySize(int) -> d
    int idealIntArraySize(int) -> e
    int idealLongArraySize(int) -> f
androidx.collection.LongSparseArray -> a.d.e:
    java.lang.Object[] mValues -> c
    java.lang.Object DELETED -> e
    long[] mKeys -> b
    int mSize -> d
    boolean mGarbage -> a
    1:1:void <init>(int):0:0 -> <init>
    1:1:void <init>():0 -> <init>
    void clear() -> a
    androidx.collection.LongSparseArray clone() -> b
    void gc() -> c
    java.lang.Object get(long,java.lang.Object) -> d
    void put(long,java.lang.Object) -> e
    1:1:int size():0:0 -> toString
    1:1:java.lang.String toString():0 -> toString
    2:2:java.lang.String toString():0:0 -> toString
    3:3:long keyAt(int):0:0 -> toString
    3:3:java.lang.String toString():0 -> toString
    4:4:java.lang.String toString():0:0 -> toString
    5:5:java.lang.Object valueAt(int):0:0 -> toString
    5:5:java.lang.String toString():0 -> toString
    6:6:java.lang.String toString():0:0 -> toString
androidx.collection.LruCache -> a.d.f:
    java.util.LinkedHashMap map -> a
    int hitCount -> f
    int missCount -> g
    int putCount -> d
    int evictionCount -> e
    int size -> b
    int maxSize -> c
    java.lang.Object get(java.lang.Object) -> a
    java.lang.Object put(java.lang.Object,java.lang.Object) -> b
    void trimToSize(int) -> c
androidx.collection.MapCollections -> a.d.g:
    androidx.collection.MapCollections$KeySet mKeySet -> b
    androidx.collection.MapCollections$ValuesCollection mValues -> c
    androidx.collection.MapCollections$EntrySet mEntrySet -> a
    void colClear() -> a
    java.lang.Object colGetEntry(int,int) -> b
    java.util.Map colGetMap() -> c
    int colGetSize() -> d
    int colIndexOfKey(java.lang.Object) -> e
    int colIndexOfValue(java.lang.Object) -> f
    void colPut(java.lang.Object,java.lang.Object) -> g
    void colRemoveAt(int) -> h
    java.lang.Object colSetValue(int,java.lang.Object) -> i
    boolean equalsSetHelper(java.util.Set,java.lang.Object) -> j
    boolean retainAllHelper(java.util.Map,java.util.Collection) -> k
    java.lang.Object[] toArrayHelper(int) -> l
    java.lang.Object[] toArrayHelper(java.lang.Object[],int) -> m
androidx.collection.MapCollections$ArrayIterator -> a.d.g$a:
    androidx.collection.MapCollections this$0 -> e
    int mSize -> b
    int mIndex -> c
    int mOffset -> a
    boolean mCanRemove -> d
androidx.collection.MapCollections$EntrySet -> a.d.g$b:
    androidx.collection.MapCollections this$0 -> a
    1:1:boolean add(java.util.Map$Entry):0:0 -> add
    1:1:boolean add(java.lang.Object):0 -> add
androidx.collection.MapCollections$KeySet -> a.d.g$c:
    androidx.collection.MapCollections this$0 -> a
    1:1:boolean androidx.collection.MapCollections.containsAllHelper(java.util.Map,java.util.Collection):0:0 -> containsAll
    1:1:boolean containsAll(java.util.Collection):0 -> containsAll
    1:1:boolean androidx.collection.MapCollections.removeAllHelper(java.util.Map,java.util.Collection):0:0 -> removeAll
    1:1:boolean removeAll(java.util.Collection):0 -> removeAll
androidx.collection.MapCollections$MapIterator -> a.d.g$d:
    int mIndex -> b
    boolean mEntryValid -> c
    androidx.collection.MapCollections this$0 -> d
    int mEnd -> a
    1:1:java.util.Map$Entry next():0:0 -> next
    1:1:java.lang.Object next():0 -> next
androidx.collection.MapCollections$ValuesCollection -> a.d.g$e:
    androidx.collection.MapCollections this$0 -> a
androidx.collection.SimpleArrayMap -> a.d.h:
    java.lang.Object[] mBaseCache -> d
    java.lang.Object[] mArray -> b
    int mTwiceBaseCacheSize -> g
    int mBaseCacheSize -> e
    int[] mHashes -> a
    int mSize -> c
    java.lang.Object[] mTwiceBaseCache -> f
    void allocArrays(int) -> a
    void freeArrays(int[],java.lang.Object[],int) -> b
    1:1:int binarySearchHashes(int[],int,int):0:0 -> c
    1:1:int indexOf(java.lang.Object,int):0 -> c
    2:2:int indexOf(java.lang.Object,int):0:0 -> c
    3:3:int binarySearchHashes(int[],int,int):0:0 -> c
    3:3:int indexOf(java.lang.Object,int):0 -> c
    int indexOfKey(java.lang.Object) -> d
    1:1:int binarySearchHashes(int[],int,int):0:0 -> e
    1:1:int indexOfNull():0 -> e
    2:2:int indexOfNull():0:0 -> e
    3:3:int binarySearchHashes(int[],int,int):0:0 -> e
    3:3:int indexOfNull():0 -> e
    1:1:int size():0:0 -> equals
    1:1:boolean equals(java.lang.Object):0 -> equals
    2:2:boolean equals(java.lang.Object):0:0 -> equals
    3:3:int size():0:0 -> equals
    3:3:boolean equals(java.lang.Object):0 -> equals
    4:4:boolean equals(java.lang.Object):0:0 -> equals
    int indexOfValue(java.lang.Object) -> f
    java.lang.Object keyAt(int) -> g
    java.lang.Object removeAt(int) -> h
    java.lang.Object setValueAt(int,java.lang.Object) -> i
    java.lang.Object valueAt(int) -> j
    1:1:java.lang.Object get(java.lang.Object):0:0 -> putIfAbsent
    1:1:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object):0 -> putIfAbsent
    2:2:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object):0:0 -> putIfAbsent
androidx.collection.SparseArrayCompat -> a.d.i:
    java.lang.Object[] mValues -> b
    java.lang.Object DELETED -> d
    int[] mKeys -> a
    int mSize -> c
    1:1:void <init>(int):0:0 -> <init>
    1:1:void <init>():0 -> <init>
    void append(int,java.lang.Object) -> a
    androidx.collection.SparseArrayCompat clone() -> b
    java.lang.Object get(int,java.lang.Object) -> c
    void put(int,java.lang.Object) -> d
    int size() -> e
    java.lang.Object valueAt(int) -> f
    1:1:int keyAt(int):0:0 -> toString
    1:1:java.lang.String toString():0 -> toString
    2:2:java.lang.String toString():0:0 -> toString
androidx.core.R$styleable -> a.e.a:
    int[] FontFamily -> b
    int[] FontFamilyFont -> c
    int[] GradientColor -> d
    int[] GradientColorItem -> e
    int[] ColorStateListItem -> a
androidx.core.app.ActivityCompat -> a.e.b.a:
    int $r8$clinit -> b
androidx.core.app.ActivityCompat$RequestPermissionsRequestCodeValidator -> a.e.b.a$a:
androidx.core.app.ActivityOptionsCompat -> a.e.b.b:
androidx.core.app.AppOpsManagerCompat -> a.e.b.c:
    void androidx.core.util.DebugUtils.buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> a
    int androidx.core.util.Preconditions.checkArgumentNonnegative(int) -> b
    java.lang.Object androidx.core.util.Preconditions.checkNotNull(java.lang.Object,java.lang.Object) -> c
    1:1:int androidx.core.content.PermissionChecker.checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String):0:0 -> d
    1:1:int androidx.core.content.PermissionChecker.checkSelfPermission(android.content.Context,java.lang.String):0 -> d
    2:2:java.lang.String permissionToOp(java.lang.String):0:0 -> d
    2:2:int androidx.core.content.PermissionChecker.checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String):0 -> d
    2:2:int androidx.core.content.PermissionChecker.checkSelfPermission(android.content.Context,java.lang.String):0 -> d
    3:3:int androidx.core.content.PermissionChecker.checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String):0:0 -> d
    3:3:int androidx.core.content.PermissionChecker.checkSelfPermission(android.content.Context,java.lang.String):0 -> d
    4:4:int noteProxyOpNoThrow(android.content.Context,java.lang.String,java.lang.String):0:0 -> d
    4:4:int androidx.core.content.PermissionChecker.checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String):0 -> d
    4:4:int androidx.core.content.PermissionChecker.checkSelfPermission(android.content.Context,java.lang.String):0 -> d
    1:1:java.lang.String androidx.core.app.NavUtils.getParentActivityName(android.app.Activity):0:0 -> e
    1:1:android.content.Intent androidx.core.app.NavUtils.getParentActivityIntent(android.app.Activity):0 -> e
    2:2:android.content.Intent androidx.core.app.NavUtils.getParentActivityIntent(android.app.Activity):0:0 -> e
    3:3:java.lang.String androidx.core.app.NavUtils.getParentActivityName(android.app.Activity):0:0 -> e
    3:3:android.content.Intent androidx.core.app.NavUtils.getParentActivityIntent(android.app.Activity):0 -> e
    android.content.Intent androidx.core.app.NavUtils.getParentActivityIntent(android.content.Context,android.content.ComponentName) -> f
    java.lang.String androidx.core.app.NavUtils.getParentActivityName(android.content.Context,android.content.ComponentName) -> g
    1:1:int androidx.fragment.app.FragmentAnim.getNextAnim(androidx.fragment.app.Fragment,boolean,boolean):0:0 -> h
    1:1:androidx.fragment.app.FragmentAnim$AnimationOrAnimator androidx.fragment.app.FragmentAnim.loadAnimation(android.content.Context,androidx.fragment.app.Fragment,boolean,boolean):0 -> h
    2:2:androidx.fragment.app.FragmentAnim$AnimationOrAnimator androidx.fragment.app.FragmentAnim.loadAnimation(android.content.Context,androidx.fragment.app.Fragment,boolean,boolean):0:0 -> h
    boolean androidx.core.view.ViewParentCompat.onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean) -> i
    boolean androidx.core.view.ViewParentCompat.onNestedPreFling(android.view.ViewParent,android.view.View,float,float) -> j
    void androidx.core.view.ViewParentCompat.onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[],int) -> k
    void androidx.core.view.ViewParentCompat.onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int,int,int[]) -> l
    1:1:androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry androidx.core.content.res.FontResourcesParserCompat.readFamilies(org.xmlpull.v1.XmlPullParser,android.content.res.Resources):0:0 -> m
    1:1:androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry androidx.core.content.res.FontResourcesParserCompat.parse(org.xmlpull.v1.XmlPullParser,android.content.res.Resources):0 -> m
    2:2:androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry androidx.core.content.res.FontResourcesParserCompat.readFamily(org.xmlpull.v1.XmlPullParser,android.content.res.Resources):0:0 -> m
    2:2:androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry androidx.core.content.res.FontResourcesParserCompat.readFamilies(org.xmlpull.v1.XmlPullParser,android.content.res.Resources):0 -> m
    2:2:androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry androidx.core.content.res.FontResourcesParserCompat.parse(org.xmlpull.v1.XmlPullParser,android.content.res.Resources):0 -> m
    3:3:androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry androidx.core.content.res.FontResourcesParserCompat.readFont(org.xmlpull.v1.XmlPullParser,android.content.res.Resources):0:0 -> m
    3:3:androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry androidx.core.content.res.FontResourcesParserCompat.readFamily(org.xmlpull.v1.XmlPullParser,android.content.res.Resources):0 -> m
    3:3:androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry androidx.core.content.res.FontResourcesParserCompat.readFamilies(org.xmlpull.v1.XmlPullParser,android.content.res.Resources):0 -> m
    3:3:androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry androidx.core.content.res.FontResourcesParserCompat.parse(org.xmlpull.v1.XmlPullParser,android.content.res.Resources):0 -> m
    4:4:androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry androidx.core.content.res.FontResourcesParserCompat.readFamily(org.xmlpull.v1.XmlPullParser,android.content.res.Resources):0:0 -> m
    4:4:androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry androidx.core.content.res.FontResourcesParserCompat.readFamilies(org.xmlpull.v1.XmlPullParser,android.content.res.Resources):0 -> m
    4:4:androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry androidx.core.content.res.FontResourcesParserCompat.parse(org.xmlpull.v1.XmlPullParser,android.content.res.Resources):0 -> m
    5:5:androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry androidx.core.content.res.FontResourcesParserCompat.readFamilies(org.xmlpull.v1.XmlPullParser,android.content.res.Resources):0:0 -> m
    5:5:androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry androidx.core.content.res.FontResourcesParserCompat.parse(org.xmlpull.v1.XmlPullParser,android.content.res.Resources):0 -> m
    6:6:androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry androidx.core.content.res.FontResourcesParserCompat.parse(org.xmlpull.v1.XmlPullParser,android.content.res.Resources):0:0 -> m
    1:1:int androidx.core.content.res.FontResourcesParserCompat.getType(android.content.res.TypedArray,int):0:0 -> n
    1:1:java.util.List androidx.core.content.res.FontResourcesParserCompat.readCerts(android.content.res.Resources,int):0 -> n
    2:2:java.util.List androidx.core.content.res.FontResourcesParserCompat.readCerts(android.content.res.Resources,int):0:0 -> n
    void androidx.core.widget.TextViewCompat.setLastBaselineToBottomHeight(android.widget.TextView,int) -> o
    void androidx.core.widget.TextViewCompat.setLineHeight(android.widget.TextView,int) -> p
    void androidx.core.content.res.FontResourcesParserCompat.skip(org.xmlpull.v1.XmlPullParser) -> q
    java.util.List androidx.core.content.res.FontResourcesParserCompat.toByteArrayList(java.lang.String[]) -> r
androidx.core.app.ComponentActivity -> a.e.b.d:
    1:1:boolean androidx.core.view.KeyEventDispatcher.dispatchBeforeHierarchy(android.view.View,android.view.KeyEvent):0:0 -> dispatchKeyEvent
    1:1:boolean dispatchKeyEvent(android.view.KeyEvent):0 -> dispatchKeyEvent
    2:2:boolean androidx.core.view.KeyEventDispatcher.dispatchKeyEvent(androidx.core.view.KeyEventDispatcher$Component,android.view.View,android.view.Window$Callback,android.view.KeyEvent):0:0 -> dispatchKeyEvent
    2:2:boolean dispatchKeyEvent(android.view.KeyEvent):0 -> dispatchKeyEvent
    1:1:boolean androidx.core.view.KeyEventDispatcher.dispatchBeforeHierarchy(android.view.View,android.view.KeyEvent):0:0 -> dispatchKeyShortcutEvent
    1:1:boolean dispatchKeyShortcutEvent(android.view.KeyEvent):0 -> dispatchKeyShortcutEvent
    2:2:boolean dispatchKeyShortcutEvent(android.view.KeyEvent):0:0 -> dispatchKeyShortcutEvent
    1:1:java.lang.Object androidx.collection.SimpleArrayMap.get(java.lang.Object):0:0 -> getExtraData
    1:1:androidx.core.app.ComponentActivity$ExtraData getExtraData(java.lang.Class):0 -> getExtraData
    2:2:androidx.core.app.ComponentActivity$ExtraData getExtraData(java.lang.Class):0:0 -> getExtraData
    1:1:void androidx.lifecycle.LifecycleRegistry.markState(androidx.lifecycle.Lifecycle$State):0:0 -> onSaveInstanceState
    1:1:void onSaveInstanceState(android.os.Bundle):0 -> onSaveInstanceState
    2:2:void androidx.lifecycle.LifecycleRegistry.setCurrentState(androidx.lifecycle.Lifecycle$State):0:0 -> onSaveInstanceState
    2:2:void androidx.lifecycle.LifecycleRegistry.markState(androidx.lifecycle.Lifecycle$State):0 -> onSaveInstanceState
    2:2:void onSaveInstanceState(android.os.Bundle):0 -> onSaveInstanceState
    3:3:void onSaveInstanceState(android.os.Bundle):0:0 -> onSaveInstanceState
androidx.core.app.ComponentActivity$ExtraData -> a.e.b.d$a:
androidx.core.app.CoreComponentFactory -> androidx.core.app.CoreComponentFactory:
    java.lang.Object checkCompatWrapper(java.lang.Object) -> a
androidx.core.app.CoreComponentFactory$CompatWrapped -> androidx.core.app.CoreComponentFactory$a:
    java.lang.Object getWrapper() -> a
androidx.core.app.RemoteActionCompat -> androidx.core.app.RemoteActionCompat:
    androidx.core.graphics.drawable.IconCompat mIcon -> a
    java.lang.CharSequence mTitle -> b
    java.lang.CharSequence mContentDescription -> c
    boolean mEnabled -> e
    boolean mShouldShowIcon -> f
    android.app.PendingIntent mActionIntent -> d
androidx.core.app.RemoteActionCompatParcelizer -> androidx.core.app.RemoteActionCompatParcelizer:
    1:1:androidx.versionedparcelable.VersionedParcelable androidx.versionedparcelable.VersionedParcel.readVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int):0:0 -> read
    1:1:androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel):0 -> read
    2:2:androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel):0:0 -> read
    3:3:java.lang.CharSequence androidx.versionedparcelable.VersionedParcel.readCharSequence(java.lang.CharSequence,int):0:0 -> read
    3:3:androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel):0 -> read
    4:4:androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel):0:0 -> read
    5:5:java.lang.CharSequence androidx.versionedparcelable.VersionedParcel.readCharSequence(java.lang.CharSequence,int):0:0 -> read
    5:5:androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel):0 -> read
    6:6:androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel):0:0 -> read
    7:7:boolean androidx.versionedparcelable.VersionedParcel.readBoolean(boolean,int):0:0 -> read
    7:7:androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel):0 -> read
    8:8:androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel):0:0 -> read
    9:9:boolean androidx.versionedparcelable.VersionedParcel.readBoolean(boolean,int):0:0 -> read
    9:9:androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel):0 -> read
    10:10:androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel):0:0 -> read
    1:1:void androidx.versionedparcelable.VersionedParcel.setSerializationFlags(boolean,boolean):0:0 -> write
    1:1:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    2:2:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel):0:0 -> write
    3:3:void androidx.versionedparcelable.VersionedParcel.writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int):0:0 -> write
    3:3:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    4:4:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel):0:0 -> write
    5:5:void androidx.versionedparcelable.VersionedParcel.writeCharSequence(java.lang.CharSequence,int):0:0 -> write
    5:5:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    6:6:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel):0:0 -> write
    7:7:void androidx.versionedparcelable.VersionedParcel.writeCharSequence(java.lang.CharSequence,int):0:0 -> write
    7:7:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    8:8:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel):0:0 -> write
    9:9:void androidx.versionedparcelable.VersionedParcel.writeParcelable(android.os.Parcelable,int):0:0 -> write
    9:9:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    10:10:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel):0:0 -> write
    11:11:void androidx.versionedparcelable.VersionedParcel.writeBoolean(boolean,int):0:0 -> write
    11:11:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    12:12:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel):0:0 -> write
    13:13:void androidx.versionedparcelable.VersionedParcel.writeBoolean(boolean,int):0:0 -> write
    13:13:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
androidx.core.app.SharedElementCallback -> a.e.b.e:
androidx.core.app.TaskStackBuilder -> a.e.b.f:
    android.content.Context mSourceContext -> b
    java.util.ArrayList mIntents -> a
androidx.core.app.TaskStackBuilder$SupportParentable -> a.e.b.f$a:
androidx.core.content.ContextCompat -> a.e.c.a:
    java.lang.Object sLock -> a
    int checkSelfPermission(android.content.Context,java.lang.String) -> a
androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry -> a.e.c.b.a:
androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry -> a.e.c.b.b:
    androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry[] mEntries -> a
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry -> a.e.c.b.c:
    int mResourceId -> f
    java.lang.String mFileName -> a
    int mTtcIndex -> e
    int mWeight -> b
    boolean mItalic -> c
    java.lang.String mVariationSettings -> d
androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry -> a.e.c.b.d:
    androidx.core.provider.FontRequest mRequest -> a
    int mTimeoutMs -> b
    int mStrategy -> c
    java.lang.String mSystemFontFamilyName -> d
androidx.core.content.res.ResourcesCompat$FontCallback -> a.e.c.b.e:
    void callbackFailAsync(int,android.os.Handler) -> a
    void callbackSuccessAsync(android.graphics.Typeface,android.os.Handler) -> b
    android.os.Handler getHandler(android.os.Handler) -> c
    void onFontRetrieved(android.graphics.Typeface) -> d
androidx.core.content.res.ResourcesCompat$FontCallback$1 -> a.e.c.b.e$a:
    android.graphics.Typeface val$typeface -> a
    androidx.core.content.res.ResourcesCompat$FontCallback this$0 -> b
androidx.core.content.res.ResourcesCompat$FontCallback$2 -> a.e.c.b.e$b:
    androidx.core.content.res.ResourcesCompat$FontCallback this$0 -> b
    int val$reason -> a
    1:1:void androidx.appcompat.widget.AppCompatTextHelper$1.onFontRetrievalFailed(int):0:0 -> run
    1:1:void run():0 -> run
androidx.core.content.res.ResourcesCompat$ThemeCompat -> a.e.c.b.f:
    int androidx.core.content.res.TypedArrayUtils.getAttr(android.content.Context,int,int) -> a
    boolean androidx.core.content.res.TypedArrayUtils.getBoolean(android.content.res.TypedArray,int,int,boolean) -> b
    int androidx.core.content.res.TypedArrayUtils.getResourceId(android.content.res.TypedArray,int,int,int) -> c
    java.lang.String androidx.core.content.res.TypedArrayUtils.getString(android.content.res.TypedArray,int,int) -> d
    java.lang.CharSequence[] androidx.core.content.res.TypedArrayUtils.getTextArray(android.content.res.TypedArray,int,int) -> e
androidx.core.graphics.ColorUtils -> a.e.d.a:
    int $r8$clinit -> a
    1:1:int compositeAlpha(int,int):0:0 -> a
    1:1:int compositeColors(int,int):0 -> a
    2:2:int compositeColors(int,int):0:0 -> a
    int compositeComponent(int,int,int,int,int) -> b
androidx.core.graphics.Insets -> a.e.d.b:
    int bottom -> d
    int top -> b
    int right -> c
    androidx.core.graphics.Insets NONE -> e
    int left -> a
    androidx.core.graphics.Insets of(int,int,int,int) -> a
    android.graphics.Insets toPlatformInsets() -> b
androidx.core.graphics.TypefaceCompat -> a.e.d.c:
    androidx.core.graphics.TypefaceCompatBaseImpl sTypefaceCompatImpl -> a
    androidx.collection.LruCache sTypefaceCache -> b
    1:1:java.lang.String androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry.getSystemFontFamilyName():0:0 -> a
    1:1:android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean):0 -> a
    2:2:android.graphics.Typeface getSystemFontFamily(java.lang.String):0:0 -> a
    2:2:android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean):0 -> a
    3:3:android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean):0:0 -> a
    4:4:int androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry.getFetchStrategy():0:0 -> a
    4:4:android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean):0 -> a
    5:5:int androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry.getTimeout():0:0 -> a
    5:5:android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean):0 -> a
    6:6:android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean):0:0 -> a
    7:7:androidx.core.provider.FontRequest androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry.getRequest():0:0 -> a
    7:7:android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean):0 -> a
    8:8:android.graphics.Typeface androidx.core.provider.FontsContractCompat.requestFont(android.content.Context,androidx.core.provider.FontRequest,int,boolean,int,android.os.Handler,androidx.core.provider.FontsContractCompat$FontRequestCallback):0:0 -> a
    8:8:android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean):0 -> a
    9:9:android.graphics.Typeface androidx.core.provider.FontRequestWorker.requestFontSync(android.content.Context,androidx.core.provider.FontRequest,androidx.core.provider.CallbackWithHandler,int,int):0:0 -> a
    9:9:android.graphics.Typeface androidx.core.provider.FontsContractCompat.requestFont(android.content.Context,androidx.core.provider.FontRequest,int,boolean,int,android.os.Handler,androidx.core.provider.FontsContractCompat$FontRequestCallback):0 -> a
    9:9:android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean):0 -> a
    10:10:java.lang.String androidx.core.provider.FontRequestWorker.createCacheId(androidx.core.provider.FontRequest,int):0:0 -> a
    10:10:android.graphics.Typeface androidx.core.provider.FontRequestWorker.requestFontSync(android.content.Context,androidx.core.provider.FontRequest,androidx.core.provider.CallbackWithHandler,int,int):0 -> a
    10:10:android.graphics.Typeface androidx.core.provider.FontsContractCompat.requestFont(android.content.Context,androidx.core.provider.FontRequest,int,boolean,int,android.os.Handler,androidx.core.provider.FontsContractCompat$FontRequestCallback):0 -> a
    10:10:android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean):0 -> a
    11:11:java.lang.String androidx.core.provider.FontRequest.getId():0:0 -> a
    11:11:java.lang.String androidx.core.provider.FontRequestWorker.createCacheId(androidx.core.provider.FontRequest,int):0 -> a
    11:11:android.graphics.Typeface androidx.core.provider.FontRequestWorker.requestFontSync(android.content.Context,androidx.core.provider.FontRequest,androidx.core.provider.CallbackWithHandler,int,int):0 -> a
    11:11:android.graphics.Typeface androidx.core.provider.FontsContractCompat.requestFont(android.content.Context,androidx.core.provider.FontRequest,int,boolean,int,android.os.Handler,androidx.core.provider.FontsContractCompat$FontRequestCallback):0 -> a
    11:11:android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean):0 -> a
    12:12:java.lang.String androidx.core.provider.FontRequestWorker.createCacheId(androidx.core.provider.FontRequest,int):0:0 -> a
    12:12:android.graphics.Typeface androidx.core.provider.FontRequestWorker.requestFontSync(android.content.Context,androidx.core.provider.FontRequest,androidx.core.provider.CallbackWithHandler,int,int):0 -> a
    12:12:android.graphics.Typeface androidx.core.provider.FontsContractCompat.requestFont(android.content.Context,androidx.core.provider.FontRequest,int,boolean,int,android.os.Handler,androidx.core.provider.FontsContractCompat$FontRequestCallback):0 -> a
    12:12:android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean):0 -> a
    13:13:android.graphics.Typeface androidx.core.provider.FontRequestWorker.requestFontSync(android.content.Context,androidx.core.provider.FontRequest,androidx.core.provider.CallbackWithHandler,int,int):0:0 -> a
    13:13:android.graphics.Typeface androidx.core.provider.FontsContractCompat.requestFont(android.content.Context,androidx.core.provider.FontRequest,int,boolean,int,android.os.Handler,androidx.core.provider.FontsContractCompat$FontRequestCallback):0 -> a
    13:13:android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean):0 -> a
    14:14:void androidx.core.provider.CallbackWithHandler.onTypefaceRetrieved(android.graphics.Typeface):0:0 -> a
    14:14:void androidx.core.provider.CallbackWithHandler.onTypefaceResult(androidx.core.provider.FontRequestWorker$TypefaceResult):0 -> a
    14:14:android.graphics.Typeface androidx.core.provider.FontRequestWorker.requestFontSync(android.content.Context,androidx.core.provider.FontRequest,androidx.core.provider.CallbackWithHandler,int,int):0 -> a
    14:14:android.graphics.Typeface androidx.core.provider.FontsContractCompat.requestFont(android.content.Context,androidx.core.provider.FontRequest,int,boolean,int,android.os.Handler,androidx.core.provider.FontsContractCompat$FontRequestCallback):0 -> a
    14:14:android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean):0 -> a
    15:15:android.graphics.Typeface androidx.core.provider.FontRequestWorker.requestFontSync(android.content.Context,androidx.core.provider.FontRequest,androidx.core.provider.CallbackWithHandler,int,int):0:0 -> a
    15:15:android.graphics.Typeface androidx.core.provider.FontsContractCompat.requestFont(android.content.Context,androidx.core.provider.FontRequest,int,boolean,int,android.os.Handler,androidx.core.provider.FontsContractCompat$FontRequestCallback):0 -> a
    15:15:android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean):0 -> a
    16:16:java.lang.Object androidx.core.provider.RequestExecutor.submit(java.util.concurrent.ExecutorService,java.util.concurrent.Callable,int):0:0 -> a
    16:16:android.graphics.Typeface androidx.core.provider.FontRequestWorker.requestFontSync(android.content.Context,androidx.core.provider.FontRequest,androidx.core.provider.CallbackWithHandler,int,int):0 -> a
    16:16:android.graphics.Typeface androidx.core.provider.FontsContractCompat.requestFont(android.content.Context,androidx.core.provider.FontRequest,int,boolean,int,android.os.Handler,androidx.core.provider.FontsContractCompat$FontRequestCallback):0 -> a
    16:16:android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean):0 -> a
    17:17:android.graphics.Typeface androidx.core.provider.FontRequestWorker.requestFontSync(android.content.Context,androidx.core.provider.FontRequest,androidx.core.provider.CallbackWithHandler,int,int):0:0 -> a
    17:17:android.graphics.Typeface androidx.core.provider.FontsContractCompat.requestFont(android.content.Context,androidx.core.provider.FontRequest,int,boolean,int,android.os.Handler,androidx.core.provider.FontsContractCompat$FontRequestCallback):0 -> a
    17:17:android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean):0 -> a
    18:18:java.lang.Object androidx.core.provider.RequestExecutor.submit(java.util.concurrent.ExecutorService,java.util.concurrent.Callable,int):0:0 -> a
    18:18:android.graphics.Typeface androidx.core.provider.FontRequestWorker.requestFontSync(android.content.Context,androidx.core.provider.FontRequest,androidx.core.provider.CallbackWithHandler,int,int):0 -> a
    18:18:android.graphics.Typeface androidx.core.provider.FontsContractCompat.requestFont(android.content.Context,androidx.core.provider.FontRequest,int,boolean,int,android.os.Handler,androidx.core.provider.FontsContractCompat$FontRequestCallback):0 -> a
    18:18:android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean):0 -> a
    19:19:void androidx.core.provider.CallbackWithHandler.onTypefaceRequestFailed(int):0:0 -> a
    19:19:void androidx.core.provider.CallbackWithHandler.onTypefaceResult(androidx.core.provider.FontRequestWorker$TypefaceResult):0 -> a
    19:19:android.graphics.Typeface androidx.core.provider.FontRequestWorker.requestFontSync(android.content.Context,androidx.core.provider.FontRequest,androidx.core.provider.CallbackWithHandler,int,int):0 -> a
    19:19:android.graphics.Typeface androidx.core.provider.FontsContractCompat.requestFont(android.content.Context,androidx.core.provider.FontRequest,int,boolean,int,android.os.Handler,androidx.core.provider.FontsContractCompat$FontRequestCallback):0 -> a
    19:19:android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean):0 -> a
    20:20:android.graphics.Typeface androidx.core.provider.FontRequestWorker.requestFontAsync(android.content.Context,androidx.core.provider.FontRequest,int,java.util.concurrent.Executor,androidx.core.provider.CallbackWithHandler):0:0 -> a
    20:20:android.graphics.Typeface androidx.core.provider.FontsContractCompat.requestFont(android.content.Context,androidx.core.provider.FontRequest,int,boolean,int,android.os.Handler,androidx.core.provider.FontsContractCompat$FontRequestCallback):0 -> a
    20:20:android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean):0 -> a
    21:21:java.lang.String androidx.core.provider.FontRequestWorker.createCacheId(androidx.core.provider.FontRequest,int):0:0 -> a
    21:21:android.graphics.Typeface androidx.core.provider.FontRequestWorker.requestFontAsync(android.content.Context,androidx.core.provider.FontRequest,int,java.util.concurrent.Executor,androidx.core.provider.CallbackWithHandler):0 -> a
    21:21:android.graphics.Typeface androidx.core.provider.FontsContractCompat.requestFont(android.content.Context,androidx.core.provider.FontRequest,int,boolean,int,android.os.Handler,androidx.core.provider.FontsContractCompat$FontRequestCallback):0 -> a
    21:21:android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean):0 -> a
    22:22:java.lang.String androidx.core.provider.FontRequest.getId():0:0 -> a
    22:22:java.lang.String androidx.core.provider.FontRequestWorker.createCacheId(androidx.core.provider.FontRequest,int):0 -> a
    22:22:android.graphics.Typeface androidx.core.provider.FontRequestWorker.requestFontAsync(android.content.Context,androidx.core.provider.FontRequest,int,java.util.concurrent.Executor,androidx.core.provider.CallbackWithHandler):0 -> a
    22:22:android.graphics.Typeface androidx.core.provider.FontsContractCompat.requestFont(android.content.Context,androidx.core.provider.FontRequest,int,boolean,int,android.os.Handler,androidx.core.provider.FontsContractCompat$FontRequestCallback):0 -> a
    22:22:android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean):0 -> a
    23:23:java.lang.String androidx.core.provider.FontRequestWorker.createCacheId(androidx.core.provider.FontRequest,int):0:0 -> a
    23:23:android.graphics.Typeface androidx.core.provider.FontRequestWorker.requestFontAsync(android.content.Context,androidx.core.provider.FontRequest,int,java.util.concurrent.Executor,androidx.core.provider.CallbackWithHandler):0 -> a
    23:23:android.graphics.Typeface androidx.core.provider.FontsContractCompat.requestFont(android.content.Context,androidx.core.provider.FontRequest,int,boolean,int,android.os.Handler,androidx.core.provider.FontsContractCompat$FontRequestCallback):0 -> a
    23:23:android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean):0 -> a
    24:24:android.graphics.Typeface androidx.core.provider.FontRequestWorker.requestFontAsync(android.content.Context,androidx.core.provider.FontRequest,int,java.util.concurrent.Executor,androidx.core.provider.CallbackWithHandler):0:0 -> a
    24:24:android.graphics.Typeface androidx.core.provider.FontsContractCompat.requestFont(android.content.Context,androidx.core.provider.FontRequest,int,boolean,int,android.os.Handler,androidx.core.provider.FontsContractCompat$FontRequestCallback):0 -> a
    24:24:android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean):0 -> a
    25:25:void androidx.core.provider.CallbackWithHandler.onTypefaceRetrieved(android.graphics.Typeface):0:0 -> a
    25:25:void androidx.core.provider.CallbackWithHandler.onTypefaceResult(androidx.core.provider.FontRequestWorker$TypefaceResult):0 -> a
    25:25:android.graphics.Typeface androidx.core.provider.FontRequestWorker.requestFontAsync(android.content.Context,androidx.core.provider.FontRequest,int,java.util.concurrent.Executor,androidx.core.provider.CallbackWithHandler):0 -> a
    25:25:android.graphics.Typeface androidx.core.provider.FontsContractCompat.requestFont(android.content.Context,androidx.core.provider.FontRequest,int,boolean,int,android.os.Handler,androidx.core.provider.FontsContractCompat$FontRequestCallback):0 -> a
    25:25:android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean):0 -> a
    26:26:android.graphics.Typeface androidx.core.provider.FontRequestWorker.requestFontAsync(android.content.Context,androidx.core.provider.FontRequest,int,java.util.concurrent.Executor,androidx.core.provider.CallbackWithHandler):0:0 -> a
    26:26:android.graphics.Typeface androidx.core.provider.FontsContractCompat.requestFont(android.content.Context,androidx.core.provider.FontRequest,int,boolean,int,android.os.Handler,androidx.core.provider.FontsContractCompat$FontRequestCallback):0 -> a
    26:26:android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean):0 -> a
    27:27:java.lang.Object androidx.collection.SimpleArrayMap.get(java.lang.Object):0:0 -> a
    27:27:android.graphics.Typeface androidx.core.provider.FontRequestWorker.requestFontAsync(android.content.Context,androidx.core.provider.FontRequest,int,java.util.concurrent.Executor,androidx.core.provider.CallbackWithHandler):0 -> a
    27:27:android.graphics.Typeface androidx.core.provider.FontsContractCompat.requestFont(android.content.Context,androidx.core.provider.FontRequest,int,boolean,int,android.os.Handler,androidx.core.provider.FontsContractCompat$FontRequestCallback):0 -> a
    27:27:android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean):0 -> a
    28:28:android.graphics.Typeface androidx.core.provider.FontRequestWorker.requestFontAsync(android.content.Context,androidx.core.provider.FontRequest,int,java.util.concurrent.Executor,androidx.core.provider.CallbackWithHandler):0:0 -> a
    28:28:android.graphics.Typeface androidx.core.provider.FontsContractCompat.requestFont(android.content.Context,androidx.core.provider.FontRequest,int,boolean,int,android.os.Handler,androidx.core.provider.FontsContractCompat$FontRequestCallback):0 -> a
    28:28:android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean):0 -> a
    29:29:android.os.Handler androidx.core.provider.CalleeHandler.create():0:0 -> a
    29:29:void androidx.core.provider.RequestExecutor.execute(java.util.concurrent.Executor,java.util.concurrent.Callable,androidx.core.util.Consumer):0 -> a
    29:29:android.graphics.Typeface androidx.core.provider.FontRequestWorker.requestFontAsync(android.content.Context,androidx.core.provider.FontRequest,int,java.util.concurrent.Executor,androidx.core.provider.CallbackWithHandler):0 -> a
    29:29:android.graphics.Typeface androidx.core.provider.FontsContractCompat.requestFont(android.content.Context,androidx.core.provider.FontRequest,int,boolean,int,android.os.Handler,androidx.core.provider.FontsContractCompat$FontRequestCallback):0 -> a
    29:29:android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean):0 -> a
    30:30:void androidx.core.provider.RequestExecutor.execute(java.util.concurrent.Executor,java.util.concurrent.Callable,androidx.core.util.Consumer):0:0 -> a
    30:30:android.graphics.Typeface androidx.core.provider.FontRequestWorker.requestFontAsync(android.content.Context,androidx.core.provider.FontRequest,int,java.util.concurrent.Executor,androidx.core.provider.CallbackWithHandler):0 -> a
    30:30:android.graphics.Typeface androidx.core.provider.FontsContractCompat.requestFont(android.content.Context,androidx.core.provider.FontRequest,int,boolean,int,android.os.Handler,androidx.core.provider.FontsContractCompat$FontRequestCallback):0 -> a
    30:30:android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean):0 -> a
    31:31:android.graphics.Typeface androidx.core.provider.FontRequestWorker.requestFontAsync(android.content.Context,androidx.core.provider.FontRequest,int,java.util.concurrent.Executor,androidx.core.provider.CallbackWithHandler):0:0 -> a
    31:31:android.graphics.Typeface androidx.core.provider.FontsContractCompat.requestFont(android.content.Context,androidx.core.provider.FontRequest,int,boolean,int,android.os.Handler,androidx.core.provider.FontsContractCompat$FontRequestCallback):0 -> a
    31:31:android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean):0 -> a
    32:32:android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean):0:0 -> a
    android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int) -> b
    java.lang.String createResourceUid(android.content.res.Resources,int,int) -> c
androidx.core.graphics.TypefaceCompat$ResourcesCallbackAdapter -> a.e.d.c$a:
    androidx.core.content.res.ResourcesCompat$FontCallback mFontCallback -> a
androidx.core.graphics.TypefaceCompatApi29Impl -> a.e.d.d:
    1:1:androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry[] androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry.getEntries():0:0 -> a
    1:1:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int):0 -> a
    2:2:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int):0:0 -> a
    3:3:int androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry.getResourceId():0:0 -> a
    3:3:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int):0 -> a
    4:4:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int):0:0 -> a
    5:5:int androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry.getWeight():0:0 -> a
    5:5:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int):0 -> a
    6:6:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int):0:0 -> a
    7:7:boolean androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry.isItalic():0:0 -> a
    7:7:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int):0 -> a
    8:8:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int):0:0 -> a
    9:9:int androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry.getTtcIndex():0:0 -> a
    9:9:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int):0 -> a
    10:10:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int):0:0 -> a
    11:11:java.lang.String androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry.getVariationSettings():0:0 -> a
    11:11:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int):0 -> a
    12:12:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int):0:0 -> a
    1:1:android.net.Uri androidx.core.provider.FontsContractCompat$FontInfo.getUri():0:0 -> b
    1:1:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int):0 -> b
    2:2:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int):0:0 -> b
    3:3:int androidx.core.provider.FontsContractCompat$FontInfo.getWeight():0:0 -> b
    3:3:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int):0 -> b
    4:4:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int):0:0 -> b
    5:5:boolean androidx.core.provider.FontsContractCompat$FontInfo.isItalic():0:0 -> b
    5:5:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int):0 -> b
    6:6:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int):0:0 -> b
    7:7:int androidx.core.provider.FontsContractCompat$FontInfo.getTtcIndex():0:0 -> b
    7:7:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int):0 -> b
    8:8:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int):0:0 -> b
    android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int) -> c
androidx.core.graphics.TypefaceCompatBaseImpl -> a.e.d.e:
    java.util.concurrent.ConcurrentHashMap mFontFamilies -> a
    android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int) -> a
    android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int) -> b
    android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int) -> c
androidx.core.graphics.drawable.IconCompat -> androidx.core.graphics.drawable.IconCompat:
    java.lang.String mTintModeStr -> i
    android.graphics.PorterDuff$Mode DEFAULT_TINT_MODE -> k
    java.lang.String mString1 -> j
    android.graphics.PorterDuff$Mode mTintMode -> h
    android.os.Parcelable mParcelable -> d
    java.lang.Object mObj1 -> b
    int mInt2 -> f
    android.content.res.ColorStateList mTintList -> g
    int mInt1 -> e
    byte[] mData -> c
    int mType -> a
    1:1:int getResId():0:0 -> toString
    1:1:java.lang.String toString():0 -> toString
    2:2:int getResId(android.graphics.drawable.Icon):0:0 -> toString
    2:2:int getResId():0 -> toString
    2:2:java.lang.String toString():0 -> toString
    3:3:int getResId():0:0 -> toString
    3:3:java.lang.String toString():0 -> toString
    4:4:java.lang.String toString():0:0 -> toString
    5:5:int getResId():0:0 -> toString
    5:5:java.lang.String toString():0 -> toString
    6:6:java.lang.String toString():0:0 -> toString
androidx.core.graphics.drawable.IconCompatParcelizer -> androidx.core.graphics.drawable.IconCompatParcelizer:
    1:1:byte[] androidx.versionedparcelable.VersionedParcel.readByteArray(byte[],int):0:0 -> read
    1:1:androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel):0 -> read
    2:2:androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel):0:0 -> read
    3:3:java.lang.String androidx.versionedparcelable.VersionedParcel.readString(java.lang.String,int):0:0 -> read
    3:3:androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel):0 -> read
    4:4:androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel):0:0 -> read
    5:5:java.lang.String androidx.versionedparcelable.VersionedParcel.readString(java.lang.String,int):0:0 -> read
    5:5:androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel):0 -> read
    6:6:androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel):0:0 -> read
    7:7:void androidx.core.graphics.drawable.IconCompat.onPostParceling():0:0 -> read
    7:7:androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel):0 -> read
    1:1:void androidx.versionedparcelable.VersionedParcel.setSerializationFlags(boolean,boolean):0:0 -> write
    1:1:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    2:2:void androidx.core.graphics.drawable.IconCompat.onPreParceling(boolean):0:0 -> write
    2:2:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    3:3:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0:0 -> write
    4:4:void androidx.versionedparcelable.VersionedParcel.writeInt(int,int):0:0 -> write
    4:4:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    5:5:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0:0 -> write
    6:6:void androidx.versionedparcelable.VersionedParcel.writeByteArray(byte[],int):0:0 -> write
    6:6:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    7:7:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0:0 -> write
    8:8:void androidx.versionedparcelable.VersionedParcel.writeParcelable(android.os.Parcelable,int):0:0 -> write
    8:8:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    9:9:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0:0 -> write
    10:10:void androidx.versionedparcelable.VersionedParcel.writeInt(int,int):0:0 -> write
    10:10:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    11:11:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0:0 -> write
    12:12:void androidx.versionedparcelable.VersionedParcel.writeInt(int,int):0:0 -> write
    12:12:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    13:13:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0:0 -> write
    14:14:void androidx.versionedparcelable.VersionedParcel.writeParcelable(android.os.Parcelable,int):0:0 -> write
    14:14:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    15:15:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0:0 -> write
    16:16:void androidx.versionedparcelable.VersionedParcel.writeString(java.lang.String,int):0:0 -> write
    16:16:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    17:17:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0:0 -> write
    18:18:void androidx.versionedparcelable.VersionedParcel.writeString(java.lang.String,int):0:0 -> write
    18:18:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
androidx.core.graphics.drawable.WrappedDrawable -> a.e.d.f.a:
    android.graphics.drawable.Drawable getWrappedDrawable() -> a
    void setWrappedDrawable(android.graphics.drawable.Drawable) -> b
androidx.core.internal.view.SupportMenu -> a.e.e.a.a:
androidx.core.internal.view.SupportMenuItem -> a.e.e.a.b:
    androidx.core.view.ActionProvider getSupportActionProvider() -> a
    androidx.core.internal.view.SupportMenuItem setSupportActionProvider(androidx.core.view.ActionProvider) -> b
androidx.core.internal.view.SupportSubMenu -> a.e.e.a.c:
androidx.core.os.CancellationSignal -> a.e.f.a:
    boolean mIsCanceled -> a
    androidx.core.os.CancellationSignal$OnCancelListener mOnCancelListener -> b
    boolean mCancelInProgress -> c
    void cancel() -> a
    1:1:void waitForCancelFinishedLocked():0:0 -> b
    1:1:void setOnCancelListener(androidx.core.os.CancellationSignal$OnCancelListener):0 -> b
    2:2:void setOnCancelListener(androidx.core.os.CancellationSignal$OnCancelListener):0:0 -> b
androidx.core.os.CancellationSignal$OnCancelListener -> a.e.f.a$a:
    void onCancel() -> a
androidx.core.provider.CallbackWithHandler -> a.e.g.c:
    androidx.core.provider.FontsContractCompat$FontRequestCallback mCallback -> a
    android.os.Handler mCallbackHandler -> b
    1:1:boolean androidx.core.provider.FontRequestWorker$TypefaceResult.isSuccess():0:0 -> a
    1:1:void onTypefaceResult(androidx.core.provider.FontRequestWorker$TypefaceResult):0 -> a
    2:2:void onTypefaceResult(androidx.core.provider.FontRequestWorker$TypefaceResult):0:0 -> a
    3:3:void onTypefaceRetrieved(android.graphics.Typeface):0:0 -> a
    3:3:void onTypefaceResult(androidx.core.provider.FontRequestWorker$TypefaceResult):0 -> a
    4:4:void onTypefaceRequestFailed(int):0:0 -> a
    4:4:void onTypefaceResult(androidx.core.provider.FontRequestWorker$TypefaceResult):0 -> a
androidx.core.provider.CallbackWithHandler$1 -> a.e.g.a:
    androidx.core.provider.FontsContractCompat$FontRequestCallback val$callback -> a
    android.graphics.Typeface val$typeface -> b
    1:1:void androidx.core.graphics.TypefaceCompat$ResourcesCallbackAdapter.onTypefaceRetrieved(android.graphics.Typeface):0:0 -> run
    1:1:void run():0 -> run
androidx.core.provider.CallbackWithHandler$2 -> a.e.g.b:
    androidx.core.provider.FontsContractCompat$FontRequestCallback val$callback -> a
    int val$reason -> b
    1:1:void androidx.core.graphics.TypefaceCompat$ResourcesCallbackAdapter.onTypefaceRequestFailed(int):0:0 -> run
    1:1:void run():0 -> run
androidx.core.provider.FontProvider -> a.e.g.d:
    java.util.Comparator sByteArrayComparator -> a
    1:1:java.lang.String androidx.core.provider.FontRequest.getProviderAuthority():0:0 -> a
    1:1:android.content.pm.ProviderInfo getProvider(android.content.pm.PackageManager,androidx.core.provider.FontRequest,android.content.res.Resources):0 -> a
    1:1:androidx.core.provider.FontsContractCompat$FontFamilyResult getFontFamilyResult(android.content.Context,androidx.core.provider.FontRequest,android.os.CancellationSignal):0 -> a
    2:2:android.content.pm.ProviderInfo getProvider(android.content.pm.PackageManager,androidx.core.provider.FontRequest,android.content.res.Resources):0:0 -> a
    2:2:androidx.core.provider.FontsContractCompat$FontFamilyResult getFontFamilyResult(android.content.Context,androidx.core.provider.FontRequest,android.os.CancellationSignal):0 -> a
    3:3:java.lang.String androidx.core.provider.FontRequest.getProviderPackage():0:0 -> a
    3:3:android.content.pm.ProviderInfo getProvider(android.content.pm.PackageManager,androidx.core.provider.FontRequest,android.content.res.Resources):0 -> a
    3:3:androidx.core.provider.FontsContractCompat$FontFamilyResult getFontFamilyResult(android.content.Context,androidx.core.provider.FontRequest,android.os.CancellationSignal):0 -> a
    4:4:android.content.pm.ProviderInfo getProvider(android.content.pm.PackageManager,androidx.core.provider.FontRequest,android.content.res.Resources):0:0 -> a
    4:4:androidx.core.provider.FontsContractCompat$FontFamilyResult getFontFamilyResult(android.content.Context,androidx.core.provider.FontRequest,android.os.CancellationSignal):0 -> a
    5:5:java.util.List convertToByteArrayList(android.content.pm.Signature[]):0:0 -> a
    5:5:android.content.pm.ProviderInfo getProvider(android.content.pm.PackageManager,androidx.core.provider.FontRequest,android.content.res.Resources):0 -> a
    5:5:androidx.core.provider.FontsContractCompat$FontFamilyResult getFontFamilyResult(android.content.Context,androidx.core.provider.FontRequest,android.os.CancellationSignal):0 -> a
    6:6:android.content.pm.ProviderInfo getProvider(android.content.pm.PackageManager,androidx.core.provider.FontRequest,android.content.res.Resources):0:0 -> a
    6:6:androidx.core.provider.FontsContractCompat$FontFamilyResult getFontFamilyResult(android.content.Context,androidx.core.provider.FontRequest,android.os.CancellationSignal):0 -> a
    7:7:java.util.List androidx.core.provider.FontRequest.getCertificates():0:0 -> a
    7:7:java.util.List getCertificates(androidx.core.provider.FontRequest,android.content.res.Resources):0 -> a
    7:7:android.content.pm.ProviderInfo getProvider(android.content.pm.PackageManager,androidx.core.provider.FontRequest,android.content.res.Resources):0 -> a
    7:7:androidx.core.provider.FontsContractCompat$FontFamilyResult getFontFamilyResult(android.content.Context,androidx.core.provider.FontRequest,android.os.CancellationSignal):0 -> a
    8:8:java.util.List getCertificates(androidx.core.provider.FontRequest,android.content.res.Resources):0:0 -> a
    8:8:android.content.pm.ProviderInfo getProvider(android.content.pm.PackageManager,androidx.core.provider.FontRequest,android.content.res.Resources):0 -> a
    8:8:androidx.core.provider.FontsContractCompat$FontFamilyResult getFontFamilyResult(android.content.Context,androidx.core.provider.FontRequest,android.os.CancellationSignal):0 -> a
    9:9:android.content.pm.ProviderInfo getProvider(android.content.pm.PackageManager,androidx.core.provider.FontRequest,android.content.res.Resources):0:0 -> a
    9:9:androidx.core.provider.FontsContractCompat$FontFamilyResult getFontFamilyResult(android.content.Context,androidx.core.provider.FontRequest,android.os.CancellationSignal):0 -> a
    10:10:boolean equalsByteArrayList(java.util.List,java.util.List):0:0 -> a
    10:10:android.content.pm.ProviderInfo getProvider(android.content.pm.PackageManager,androidx.core.provider.FontRequest,android.content.res.Resources):0 -> a
    10:10:androidx.core.provider.FontsContractCompat$FontFamilyResult getFontFamilyResult(android.content.Context,androidx.core.provider.FontRequest,android.os.CancellationSignal):0 -> a
    11:11:androidx.core.provider.FontsContractCompat$FontFamilyResult androidx.core.provider.FontsContractCompat$FontFamilyResult.create(int,androidx.core.provider.FontsContractCompat$FontInfo[]):0:0 -> a
    11:11:androidx.core.provider.FontsContractCompat$FontFamilyResult getFontFamilyResult(android.content.Context,androidx.core.provider.FontRequest,android.os.CancellationSignal):0 -> a
    12:12:androidx.core.provider.FontsContractCompat$FontFamilyResult getFontFamilyResult(android.content.Context,androidx.core.provider.FontRequest,android.os.CancellationSignal):0:0 -> a
    13:13:androidx.core.provider.FontsContractCompat$FontInfo[] query(android.content.Context,androidx.core.provider.FontRequest,java.lang.String,android.os.CancellationSignal):0:0 -> a
    13:13:androidx.core.provider.FontsContractCompat$FontFamilyResult getFontFamilyResult(android.content.Context,androidx.core.provider.FontRequest,android.os.CancellationSignal):0 -> a
    14:14:java.lang.String androidx.core.provider.FontRequest.getQuery():0:0 -> a
    14:14:androidx.core.provider.FontsContractCompat$FontInfo[] query(android.content.Context,androidx.core.provider.FontRequest,java.lang.String,android.os.CancellationSignal):0 -> a
    14:14:androidx.core.provider.FontsContractCompat$FontFamilyResult getFontFamilyResult(android.content.Context,androidx.core.provider.FontRequest,android.os.CancellationSignal):0 -> a
    15:15:androidx.core.provider.FontsContractCompat$FontInfo[] query(android.content.Context,androidx.core.provider.FontRequest,java.lang.String,android.os.CancellationSignal):0:0 -> a
    15:15:androidx.core.provider.FontsContractCompat$FontFamilyResult getFontFamilyResult(android.content.Context,androidx.core.provider.FontRequest,android.os.CancellationSignal):0 -> a
    16:16:androidx.core.provider.FontsContractCompat$FontInfo androidx.core.provider.FontsContractCompat$FontInfo.create(android.net.Uri,int,int,boolean,int):0:0 -> a
    16:16:androidx.core.provider.FontsContractCompat$FontInfo[] query(android.content.Context,androidx.core.provider.FontRequest,java.lang.String,android.os.CancellationSignal):0 -> a
    16:16:androidx.core.provider.FontsContractCompat$FontFamilyResult getFontFamilyResult(android.content.Context,androidx.core.provider.FontRequest,android.os.CancellationSignal):0 -> a
    17:17:androidx.core.provider.FontsContractCompat$FontInfo[] query(android.content.Context,androidx.core.provider.FontRequest,java.lang.String,android.os.CancellationSignal):0:0 -> a
    17:17:androidx.core.provider.FontsContractCompat$FontFamilyResult getFontFamilyResult(android.content.Context,androidx.core.provider.FontRequest,android.os.CancellationSignal):0 -> a
    18:18:androidx.core.provider.FontsContractCompat$FontFamilyResult androidx.core.provider.FontsContractCompat$FontFamilyResult.create(int,androidx.core.provider.FontsContractCompat$FontInfo[]):0:0 -> a
    18:18:androidx.core.provider.FontsContractCompat$FontFamilyResult getFontFamilyResult(android.content.Context,androidx.core.provider.FontRequest,android.os.CancellationSignal):0 -> a
    19:19:androidx.core.provider.FontsContractCompat$FontInfo[] query(android.content.Context,androidx.core.provider.FontRequest,java.lang.String,android.os.CancellationSignal):0:0 -> a
    19:19:androidx.core.provider.FontsContractCompat$FontFamilyResult getFontFamilyResult(android.content.Context,androidx.core.provider.FontRequest,android.os.CancellationSignal):0 -> a
    20:20:android.content.pm.ProviderInfo getProvider(android.content.pm.PackageManager,androidx.core.provider.FontRequest,android.content.res.Resources):0:0 -> a
    20:20:androidx.core.provider.FontsContractCompat$FontFamilyResult getFontFamilyResult(android.content.Context,androidx.core.provider.FontRequest,android.os.CancellationSignal):0 -> a
    21:21:java.lang.String androidx.core.provider.FontRequest.getProviderPackage():0:0 -> a
    21:21:android.content.pm.ProviderInfo getProvider(android.content.pm.PackageManager,androidx.core.provider.FontRequest,android.content.res.Resources):0 -> a
    21:21:androidx.core.provider.FontsContractCompat$FontFamilyResult getFontFamilyResult(android.content.Context,androidx.core.provider.FontRequest,android.os.CancellationSignal):0 -> a
    22:22:android.content.pm.ProviderInfo getProvider(android.content.pm.PackageManager,androidx.core.provider.FontRequest,android.content.res.Resources):0:0 -> a
    22:22:androidx.core.provider.FontsContractCompat$FontFamilyResult getFontFamilyResult(android.content.Context,androidx.core.provider.FontRequest,android.os.CancellationSignal):0 -> a
androidx.core.provider.FontProvider$1 -> a.e.g.d$a:
    1:1:int compare(byte[],byte[]):0:0 -> compare
    1:1:int compare(java.lang.Object,java.lang.Object):0 -> compare
androidx.core.provider.FontRequest -> a.e.g.e:
    java.util.List mCertificates -> d
    java.lang.String mProviderAuthority -> a
    java.lang.String mQuery -> c
    java.lang.String mProviderPackage -> b
    java.lang.String mIdentifier -> e
    1:1:void <init>(java.lang.String,java.lang.String,java.lang.String,java.util.List):0:0 -> <init>
    2:2:java.lang.Object androidx.core.util.Preconditions.checkNotNull(java.lang.Object):0:0 -> <init>
    2:2:void <init>(java.lang.String,java.lang.String,java.lang.String,java.util.List):0 -> <init>
    3:3:void <init>(java.lang.String,java.lang.String,java.lang.String,java.util.List):0:0 -> <init>
    4:4:java.lang.String createIdentifier(java.lang.String,java.lang.String,java.lang.String):0:0 -> <init>
    4:4:void <init>(java.lang.String,java.lang.String,java.lang.String,java.util.List):0 -> <init>
    5:5:void <init>(java.lang.String,java.lang.String,java.lang.String,java.util.List):0:0 -> <init>
androidx.core.provider.FontRequestWorker -> a.e.g.j:
    androidx.collection.SimpleArrayMap PENDING_REPLIES -> d
    androidx.collection.LruCache sTypefaceCache -> a
    java.lang.Object LOCK -> c
    java.util.concurrent.ExecutorService DEFAULT_EXECUTOR_SERVICE -> b
    1:1:java.util.concurrent.ThreadPoolExecutor androidx.core.provider.RequestExecutor.createDefaultExecutor(java.lang.String,int,int):0:0 -> <clinit>
    1:1:void <clinit>():0 -> <clinit>
    2:2:void <clinit>():0:0 -> <clinit>
    1:1:int androidx.core.provider.FontsContractCompat$FontFamilyResult.getStatusCode():0:0 -> a
    1:1:int getFontFamilyResultStatus(androidx.core.provider.FontsContractCompat$FontFamilyResult):0 -> a
    1:1:androidx.core.provider.FontRequestWorker$TypefaceResult getFontSync(java.lang.String,android.content.Context,androidx.core.provider.FontRequest,int):0 -> a
    2:2:androidx.core.provider.FontsContractCompat$FontInfo[] androidx.core.provider.FontsContractCompat$FontFamilyResult.getFonts():0:0 -> a
    2:2:int getFontFamilyResultStatus(androidx.core.provider.FontsContractCompat$FontFamilyResult):0 -> a
    2:2:androidx.core.provider.FontRequestWorker$TypefaceResult getFontSync(java.lang.String,android.content.Context,androidx.core.provider.FontRequest,int):0 -> a
    3:3:int getFontFamilyResultStatus(androidx.core.provider.FontsContractCompat$FontFamilyResult):0:0 -> a
    3:3:androidx.core.provider.FontRequestWorker$TypefaceResult getFontSync(java.lang.String,android.content.Context,androidx.core.provider.FontRequest,int):0 -> a
    4:4:int androidx.core.provider.FontsContractCompat$FontInfo.getResultCode():0:0 -> a
    4:4:int getFontFamilyResultStatus(androidx.core.provider.FontsContractCompat$FontFamilyResult):0 -> a
    4:4:androidx.core.provider.FontRequestWorker$TypefaceResult getFontSync(java.lang.String,android.content.Context,androidx.core.provider.FontRequest,int):0 -> a
    5:5:androidx.core.provider.FontRequestWorker$TypefaceResult getFontSync(java.lang.String,android.content.Context,androidx.core.provider.FontRequest,int):0:0 -> a
    6:6:androidx.core.provider.FontsContractCompat$FontInfo[] androidx.core.provider.FontsContractCompat$FontFamilyResult.getFonts():0:0 -> a
    6:6:androidx.core.provider.FontRequestWorker$TypefaceResult getFontSync(java.lang.String,android.content.Context,androidx.core.provider.FontRequest,int):0 -> a
    7:7:android.graphics.Typeface androidx.core.graphics.TypefaceCompat.createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int):0:0 -> a
    7:7:androidx.core.provider.FontRequestWorker$TypefaceResult getFontSync(java.lang.String,android.content.Context,androidx.core.provider.FontRequest,int):0 -> a
    8:8:androidx.core.provider.FontRequestWorker$TypefaceResult getFontSync(java.lang.String,android.content.Context,androidx.core.provider.FontRequest,int):0:0 -> a
androidx.core.provider.FontRequestWorker$1 -> a.e.g.f:
    android.content.Context val$context -> b
    java.lang.String val$id -> a
    int val$style -> d
    androidx.core.provider.FontRequest val$request -> c
    1:1:androidx.core.provider.FontRequestWorker$TypefaceResult call():0:0 -> call
    1:1:java.lang.Object call():0 -> call
androidx.core.provider.FontRequestWorker$2 -> a.e.g.g:
    androidx.core.provider.CallbackWithHandler val$callback -> a
    1:1:void accept(androidx.core.provider.FontRequestWorker$TypefaceResult):0:0 -> a
    1:1:void accept(java.lang.Object):0 -> a
androidx.core.provider.FontRequestWorker$3 -> a.e.g.h:
    android.content.Context val$context -> b
    java.lang.String val$id -> a
    int val$style -> d
    androidx.core.provider.FontRequest val$request -> c
    1:1:androidx.core.provider.FontRequestWorker$TypefaceResult call():0:0 -> call
    1:1:java.lang.Object call():0 -> call
androidx.core.provider.FontRequestWorker$4 -> a.e.g.i:
    java.lang.String val$id -> a
    void accept(java.lang.Object) -> a
    void accept(androidx.core.provider.FontRequestWorker$TypefaceResult) -> b
androidx.core.provider.FontRequestWorker$TypefaceResult -> a.e.g.j$a:
    android.graphics.Typeface mTypeface -> a
    int mResult -> b
androidx.core.provider.FontsContractCompat$FontFamilyResult -> a.e.g.k:
    int mStatusCode -> a
    androidx.core.provider.FontsContractCompat$FontInfo[] mFonts -> b
androidx.core.provider.FontsContractCompat$FontInfo -> a.e.g.l:
    int mResultCode -> e
    int mTtcIndex -> b
    int mWeight -> c
    android.net.Uri mUri -> a
    boolean mItalic -> d
    1:1:java.lang.Object androidx.core.util.Preconditions.checkNotNull(java.lang.Object):0:0 -> <init>
    1:1:void <init>(android.net.Uri,int,int,boolean,int):0 -> <init>
    2:2:void <init>(android.net.Uri,int,int,boolean,int):0:0 -> <init>
androidx.core.provider.FontsContractCompat$FontRequestCallback -> a.e.g.m:
androidx.core.provider.RequestExecutor$DefaultThreadFactory -> a.e.g.n:
    java.lang.String mThreadName -> a
    int mPriority -> b
androidx.core.provider.RequestExecutor$DefaultThreadFactory$ProcessPriorityThread -> a.e.g.n$a:
    int mPriority -> a
androidx.core.provider.RequestExecutor$ReplyRunnable -> a.e.g.o:
    android.os.Handler mHandler -> c
    java.util.concurrent.Callable mCallable -> a
    androidx.core.util.Consumer mConsumer -> b
androidx.core.provider.RequestExecutor$ReplyRunnable$1 -> a.e.g.o$a:
    java.lang.Object val$result -> b
    androidx.core.util.Consumer val$consumer -> a
androidx.core.text.PrecomputedTextCompat -> a.e.h.a:
androidx.core.text.PrecomputedTextCompat$Params -> a.e.h.a$a:
    android.text.TextPaint mPaint -> a
    int mHyphenationFrequency -> d
    android.text.TextDirectionHeuristic mTextDir -> b
    int mBreakStrategy -> c
    1:1:int getBreakStrategy():0:0 -> a
    1:1:boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params):0 -> a
    2:2:boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params):0:0 -> a
    3:3:int getHyphenationFrequency():0:0 -> a
    3:3:boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params):0 -> a
    4:4:boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params):0:0 -> a
    5:5:android.text.TextPaint getTextPaint():0:0 -> a
    5:5:boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params):0 -> a
    6:6:boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params):0:0 -> a
    7:7:android.text.TextPaint getTextPaint():0:0 -> a
    7:7:boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params):0 -> a
    8:8:boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params):0:0 -> a
    9:9:android.text.TextPaint getTextPaint():0:0 -> a
    9:9:boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params):0 -> a
    10:10:boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params):0:0 -> a
    11:11:android.text.TextPaint getTextPaint():0:0 -> a
    11:11:boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params):0 -> a
    12:12:boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params):0:0 -> a
    13:13:android.text.TextPaint getTextPaint():0:0 -> a
    13:13:boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params):0 -> a
    14:14:boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params):0:0 -> a
    15:15:android.text.TextPaint getTextPaint():0:0 -> a
    15:15:boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params):0 -> a
    16:16:boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params):0:0 -> a
    17:17:android.text.TextPaint getTextPaint():0:0 -> a
    17:17:boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params):0 -> a
    18:18:boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params):0:0 -> a
    19:19:android.text.TextPaint getTextPaint():0:0 -> a
    19:19:boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params):0 -> a
    20:20:boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params):0:0 -> a
    21:21:android.text.TextPaint getTextPaint():0:0 -> a
    21:21:boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params):0 -> a
    22:22:boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params):0:0 -> a
    1:1:android.text.TextDirectionHeuristic getTextDirection():0:0 -> equals
    1:1:boolean equals(java.lang.Object):0 -> equals
    1:1:int androidx.core.util.ObjectsCompat.hash(java.lang.Object[]):0:0 -> hashCode
    1:1:int hashCode():0 -> hashCode
androidx.core.util.Consumer -> a.e.i.a:
    void accept(java.lang.Object) -> a
androidx.core.util.Pools$SimplePool -> a.e.i.b:
    java.lang.Object[] mPool -> a
    int mPoolSize -> b
    java.lang.Object acquire() -> a
    1:1:boolean isInPool(java.lang.Object):0:0 -> b
    1:1:boolean release(java.lang.Object):0 -> b
    2:2:boolean release(java.lang.Object):0:0 -> b
androidx.core.view.AccessibilityDelegateCompat -> a.e.j.a:
    android.view.View$AccessibilityDelegate mOriginalDelegate -> a
    android.view.View$AccessibilityDelegate mBridge -> b
    android.view.View$AccessibilityDelegate DEFAULT_DELEGATE -> c
    1:1:void <init>(android.view.View$AccessibilityDelegate):0:0 -> <init>
    1:1:void <init>():0 -> <init>
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    androidx.core.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> b
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    1:1:android.view.accessibility.AccessibilityNodeInfo androidx.core.view.accessibility.AccessibilityNodeInfoCompat.unwrap():0:0 -> d
    1:1:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0 -> d
    2:2:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0:0 -> d
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> e
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> f
    1:1:java.util.List getActionList(android.view.View):0:0 -> g
    1:1:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle):0 -> g
    2:2:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle):0:0 -> g
    3:3:int androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat.getId():0:0 -> g
    3:3:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle):0 -> g
    4:4:boolean androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat.perform(android.view.View,android.os.Bundle):0:0 -> g
    4:4:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle):0 -> g
    5:5:void androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments.setBundle(android.os.Bundle):0:0 -> g
    5:5:boolean androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat.perform(android.view.View,android.os.Bundle):0 -> g
    5:5:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle):0 -> g
    6:6:boolean androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat.perform(android.view.View,android.os.Bundle):0:0 -> g
    6:6:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle):0 -> g
    7:7:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle):0:0 -> g
    8:8:boolean performClickableSpanAction(int,android.view.View):0:0 -> g
    8:8:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle):0 -> g
    9:9:boolean isSpanStillValid(android.text.style.ClickableSpan,android.view.View):0:0 -> g
    9:9:boolean performClickableSpanAction(int,android.view.View):0 -> g
    9:9:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle):0 -> g
    10:10:boolean performClickableSpanAction(int,android.view.View):0:0 -> g
    10:10:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle):0 -> g
    void sendAccessibilityEvent(android.view.View,int) -> h
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> i
androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter -> a.e.j.a$a:
    androidx.core.view.AccessibilityDelegateCompat mCompat -> a
    1:1:java.lang.Object androidx.core.view.accessibility.AccessibilityNodeProviderCompat.getProvider():0:0 -> getAccessibilityNodeProvider
    1:1:android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View):0 -> getAccessibilityNodeProvider
    2:2:android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View):0:0 -> getAccessibilityNodeProvider
    1:1:androidx.core.view.accessibility.AccessibilityNodeInfoCompat androidx.core.view.accessibility.AccessibilityNodeInfoCompat.wrap(android.view.accessibility.AccessibilityNodeInfo):0:0 -> onInitializeAccessibilityNodeInfo
    1:1:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo):0 -> onInitializeAccessibilityNodeInfo
    2:2:boolean androidx.core.view.ViewCompat.isScreenReaderFocusable(android.view.View):0:0 -> onInitializeAccessibilityNodeInfo
    2:2:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo):0 -> onInitializeAccessibilityNodeInfo
    3:3:androidx.core.view.ViewCompat$AccessibilityViewProperty androidx.core.view.ViewCompat.screenReaderFocusableProperty():0:0 -> onInitializeAccessibilityNodeInfo
    3:3:boolean androidx.core.view.ViewCompat.isScreenReaderFocusable(android.view.View):0 -> onInitializeAccessibilityNodeInfo
    3:3:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo):0 -> onInitializeAccessibilityNodeInfo
    4:4:boolean androidx.core.view.ViewCompat.isScreenReaderFocusable(android.view.View):0:0 -> onInitializeAccessibilityNodeInfo
    4:4:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo):0 -> onInitializeAccessibilityNodeInfo
    5:5:void androidx.core.view.accessibility.AccessibilityNodeInfoCompat.setScreenReaderFocusable(boolean):0:0 -> onInitializeAccessibilityNodeInfo
    5:5:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo):0 -> onInitializeAccessibilityNodeInfo
    6:6:androidx.core.view.ViewCompat$AccessibilityViewProperty androidx.core.view.ViewCompat.accessibilityHeadingProperty():0:0 -> onInitializeAccessibilityNodeInfo
    6:6:boolean androidx.core.view.ViewCompat.isAccessibilityHeading(android.view.View):0 -> onInitializeAccessibilityNodeInfo
    6:6:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo):0 -> onInitializeAccessibilityNodeInfo
    7:7:boolean androidx.core.view.ViewCompat.isAccessibilityHeading(android.view.View):0:0 -> onInitializeAccessibilityNodeInfo
    7:7:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo):0 -> onInitializeAccessibilityNodeInfo
    8:8:void androidx.core.view.accessibility.AccessibilityNodeInfoCompat.setHeading(boolean):0:0 -> onInitializeAccessibilityNodeInfo
    8:8:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo):0 -> onInitializeAccessibilityNodeInfo
    9:9:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo):0:0 -> onInitializeAccessibilityNodeInfo
    10:10:void androidx.core.view.accessibility.AccessibilityNodeInfoCompat.setPaneTitle(java.lang.CharSequence):0:0 -> onInitializeAccessibilityNodeInfo
    10:10:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo):0 -> onInitializeAccessibilityNodeInfo
    11:11:androidx.core.view.ViewCompat$AccessibilityViewProperty androidx.core.view.ViewCompat.stateDescriptionProperty():0:0 -> onInitializeAccessibilityNodeInfo
    11:11:java.lang.CharSequence androidx.core.view.ViewCompat.getStateDescription(android.view.View):0 -> onInitializeAccessibilityNodeInfo
    11:11:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo):0 -> onInitializeAccessibilityNodeInfo
    12:12:java.lang.CharSequence androidx.core.view.ViewCompat.getStateDescription(android.view.View):0:0 -> onInitializeAccessibilityNodeInfo
    12:12:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo):0 -> onInitializeAccessibilityNodeInfo
    13:13:void androidx.core.view.accessibility.AccessibilityNodeInfoCompat.setStateDescription(java.lang.CharSequence):0:0 -> onInitializeAccessibilityNodeInfo
    13:13:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo):0 -> onInitializeAccessibilityNodeInfo
    14:14:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo):0:0 -> onInitializeAccessibilityNodeInfo
    15:15:java.util.List androidx.core.view.AccessibilityDelegateCompat.getActionList(android.view.View):0:0 -> onInitializeAccessibilityNodeInfo
    15:15:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo):0 -> onInitializeAccessibilityNodeInfo
    16:16:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo):0:0 -> onInitializeAccessibilityNodeInfo
androidx.core.view.ActionProvider -> a.e.j.b:
    androidx.core.view.ActionProvider$VisibilityListener mVisibilityListener -> a
    boolean hasSubMenu() -> a
    boolean isVisible() -> b
    android.view.View onCreateActionView() -> c
    android.view.View onCreateActionView(android.view.MenuItem) -> d
    boolean onPerformDefaultAction() -> e
    void onPrepareSubMenu(android.view.SubMenu) -> f
    boolean overridesItemVisibility() -> g
    void setVisibilityListener(androidx.core.view.ActionProvider$VisibilityListener) -> h
androidx.core.view.ActionProvider$VisibilityListener -> a.e.j.b$a:
androidx.core.view.ContentInfoCompat -> a.e.j.c:
    android.content.ClipData mClip -> a
    android.os.Bundle mExtras -> e
    int mSource -> b
    android.net.Uri mLinkUri -> d
    int mFlags -> c
    1:1:java.lang.Object androidx.core.util.Preconditions.checkNotNull(java.lang.Object):0:0 -> <init>
    1:1:void <init>(androidx.core.view.ContentInfoCompat$Builder):0 -> <init>
    2:2:void <init>(androidx.core.view.ContentInfoCompat$Builder):0:0 -> <init>
    3:3:int androidx.core.util.Preconditions.checkArgumentInRange(int,int,int,java.lang.String):0:0 -> <init>
    3:3:void <init>(androidx.core.view.ContentInfoCompat$Builder):0 -> <init>
    4:4:void <init>(androidx.core.view.ContentInfoCompat$Builder):0:0 -> <init>
    5:5:int androidx.core.util.Preconditions.checkFlagsArgument(int,int):0:0 -> <init>
    5:5:void <init>(androidx.core.view.ContentInfoCompat$Builder):0 -> <init>
    6:6:int androidx.core.util.Preconditions.checkArgumentInRange(int,int,int,java.lang.String):0:0 -> <init>
    6:6:void <init>(androidx.core.view.ContentInfoCompat$Builder):0 -> <init>
    1:1:java.lang.String sourceToString(int):0:0 -> toString
    1:1:java.lang.String toString():0 -> toString
    2:2:java.lang.String toString():0:0 -> toString
    3:3:java.lang.String flagsToString(int):0:0 -> toString
    3:3:java.lang.String toString():0 -> toString
    4:4:java.lang.String toString():0:0 -> toString
androidx.core.view.ContentInfoCompat$Builder -> a.e.j.c$a:
    android.content.ClipData mClip -> a
    android.os.Bundle mExtras -> e
    int mSource -> b
    android.net.Uri mLinkUri -> d
    int mFlags -> c
androidx.core.view.DisplayCutoutCompat -> a.e.j.d:
    java.lang.Object mDisplayCutout -> a
    1:1:boolean androidx.core.util.ObjectsCompat.equals(java.lang.Object,java.lang.Object):0:0 -> equals
    1:1:boolean equals(java.lang.Object):0 -> equals
androidx.core.view.GestureDetectorCompat -> a.e.j.e:
    androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImpl mImpl -> a
    1:1:void <init>(android.content.Context,android.view.GestureDetector$OnGestureListener,android.os.Handler):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.view.GestureDetector$OnGestureListener):0 -> <init>
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImpl -> a.e.j.e$a:
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr2 -> a.e.j.e$b:
    android.view.GestureDetector mDetector -> a
androidx.core.view.KeyEventDispatcher$Component -> a.e.j.f:
androidx.core.view.NestedScrollingChildHelper -> a.e.j.g:
    android.view.ViewParent mNestedScrollingParentTouch -> a
    int[] mTempNestedScrollConsumed -> e
    android.view.View mView -> c
    android.view.ViewParent mNestedScrollingParentNonTouch -> b
    boolean mIsNestedScrollingEnabled -> d
    1:1:boolean isNestedScrollingEnabled():0:0 -> a
    1:1:boolean dispatchNestedFling(float,float,boolean):0 -> a
    2:2:boolean dispatchNestedFling(float,float,boolean):0:0 -> a
    1:1:boolean isNestedScrollingEnabled():0:0 -> b
    1:1:boolean dispatchNestedPreFling(float,float):0 -> b
    2:2:boolean dispatchNestedPreFling(float,float):0:0 -> b
    1:1:boolean isNestedScrollingEnabled():0:0 -> c
    1:1:boolean dispatchNestedPreScroll(int,int,int[],int[],int):0 -> c
    2:2:boolean dispatchNestedPreScroll(int,int,int[],int[],int):0:0 -> c
    3:3:int[] getTempNestedScrollConsumed():0:0 -> c
    3:3:boolean dispatchNestedPreScroll(int,int,int[],int[],int):0 -> c
    4:4:boolean dispatchNestedPreScroll(int,int,int[],int[],int):0:0 -> c
    boolean dispatchNestedScroll(int,int,int,int,int[]) -> d
    1:1:boolean isNestedScrollingEnabled():0:0 -> e
    1:1:boolean dispatchNestedScrollInternal(int,int,int,int,int[],int,int[]):0 -> e
    2:2:boolean dispatchNestedScrollInternal(int,int,int,int,int[],int,int[]):0:0 -> e
    3:3:int[] getTempNestedScrollConsumed():0:0 -> e
    3:3:boolean dispatchNestedScrollInternal(int,int,int,int,int[],int,int[]):0 -> e
    4:4:boolean dispatchNestedScrollInternal(int,int,int,int,int[],int,int[]):0:0 -> e
    android.view.ViewParent getNestedScrollingParentForType(int) -> f
    boolean hasNestedScrollingParent(int) -> g
    1:1:boolean hasNestedScrollingParent(int):0:0 -> h
    1:1:boolean startNestedScroll(int,int):0 -> h
    2:2:boolean isNestedScrollingEnabled():0:0 -> h
    2:2:boolean startNestedScroll(int,int):0 -> h
    3:3:boolean startNestedScroll(int,int):0:0 -> h
    4:4:boolean androidx.core.view.ViewParentCompat.onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int):0:0 -> h
    4:4:boolean startNestedScroll(int,int):0 -> h
    5:5:void setNestedScrollingParentForType(int,android.view.ViewParent):0:0 -> h
    5:5:boolean startNestedScroll(int,int):0 -> h
    6:6:boolean startNestedScroll(int,int):0:0 -> h
    7:7:void androidx.core.view.ViewParentCompat.onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int,int):0:0 -> h
    7:7:boolean startNestedScroll(int,int):0 -> h
    8:8:boolean startNestedScroll(int,int):0:0 -> h
    1:1:void androidx.core.view.ViewParentCompat.onStopNestedScroll(android.view.ViewParent,android.view.View,int):0:0 -> i
    1:1:void stopNestedScroll(int):0 -> i
    2:2:void setNestedScrollingParentForType(int,android.view.ViewParent):0:0 -> i
    2:2:void stopNestedScroll(int):0 -> i
androidx.core.view.NestedScrollingParent2 -> a.e.j.h:
    void onNestedScrollAccepted(android.view.View,android.view.View,int,int) -> i
    void onNestedScroll(android.view.View,int,int,int,int,int) -> l
    void onStopNestedScroll(android.view.View,int) -> m
    void onNestedPreScroll(android.view.View,int,int,int[],int) -> n
    boolean onStartNestedScroll(android.view.View,android.view.View,int,int) -> o
androidx.core.view.NestedScrollingParent3 -> a.e.j.i:
    void onNestedScroll(android.view.View,int,int,int,int,int,int[]) -> k
androidx.core.view.NestedScrollingParentHelper -> a.e.j.j:
    int mNestedScrollAxesNonTouch -> b
    int mNestedScrollAxesTouch -> a
androidx.core.view.OnApplyWindowInsetsListener -> a.e.j.k:
androidx.core.view.OnReceiveContentListener -> a.e.j.l:
    androidx.core.view.ContentInfoCompat onReceiveContent(android.view.View,androidx.core.view.ContentInfoCompat) -> a
androidx.core.view.OnReceiveContentViewBehavior -> a.e.j.m:
    androidx.core.view.ContentInfoCompat onReceiveContent(androidx.core.view.ContentInfoCompat) -> a
androidx.core.view.OneShotPreDrawListener -> a.e.j.n:
    java.lang.Runnable mRunnable -> c
    android.view.View mView -> a
    android.view.ViewTreeObserver mViewTreeObserver -> b
    androidx.core.view.OneShotPreDrawListener add(android.view.View,java.lang.Runnable) -> a
    void removeListener() -> b
androidx.core.view.ViewCompat -> a.e.j.o:
    androidx.core.view.OnReceiveContentViewBehavior NO_OP_ON_RECEIVE_CONTENT_VIEW_BEHAVIOR -> c
    java.util.WeakHashMap sViewPropertyAnimatorMap -> a
    boolean sAccessibilityDelegateCheckFailed -> b
    1:1:void androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager.<init>():0:0 -> <clinit>
    1:1:void <clinit>():0 -> <clinit>
    androidx.core.view.ViewPropertyAnimatorCompat animate(android.view.View) -> a
    androidx.core.view.WindowInsetsCompat dispatchApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> b
    1:1:android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View):0:0 -> c
    1:1:androidx.core.view.AccessibilityDelegateCompat getAccessibilityDelegate(android.view.View):0 -> c
    2:2:androidx.core.view.AccessibilityDelegateCompat getAccessibilityDelegate(android.view.View):0:0 -> c
    1:1:androidx.core.view.ViewCompat$AccessibilityViewProperty paneTitleProperty():0:0 -> d
    1:1:java.lang.CharSequence getAccessibilityPaneTitle(android.view.View):0 -> d
    2:2:java.lang.CharSequence getAccessibilityPaneTitle(android.view.View):0:0 -> d
    1:1:androidx.core.view.WindowInsetsCompat androidx.core.view.ViewCompat$Api23Impl.getRootWindowInsets(android.view.View):0:0 -> e
    1:1:androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View):0 -> e
    2:2:void androidx.core.view.WindowInsetsCompat.setRootWindowInsets(androidx.core.view.WindowInsetsCompat):0:0 -> e
    2:2:androidx.core.view.WindowInsetsCompat androidx.core.view.ViewCompat$Api23Impl.getRootWindowInsets(android.view.View):0 -> e
    2:2:androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View):0 -> e
    3:3:androidx.core.view.WindowInsetsCompat androidx.core.view.ViewCompat$Api23Impl.getRootWindowInsets(android.view.View):0:0 -> e
    3:3:androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View):0 -> e
    4:4:void androidx.core.view.WindowInsetsCompat.copyRootViewBounds(android.view.View):0:0 -> e
    4:4:androidx.core.view.WindowInsetsCompat androidx.core.view.ViewCompat$Api23Impl.getRootWindowInsets(android.view.View):0 -> e
    4:4:androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View):0 -> e
    1:1:int getAccessibilityLiveRegion(android.view.View):0:0 -> f
    1:1:void notifyViewAccessibilityStateChangedIfNeeded(android.view.View,int):0 -> f
    2:2:void notifyViewAccessibilityStateChangedIfNeeded(android.view.View,int):0:0 -> f
    3:3:int getImportantForAccessibility(android.view.View):0:0 -> f
    3:3:void setViewImportanceForAccessibilityIfNeeded(android.view.View):0 -> f
    3:3:void notifyViewAccessibilityStateChangedIfNeeded(android.view.View,int):0 -> f
    4:4:void setImportantForAccessibility(android.view.View,int):0:0 -> f
    4:4:void setViewImportanceForAccessibilityIfNeeded(android.view.View):0 -> f
    4:4:void notifyViewAccessibilityStateChangedIfNeeded(android.view.View,int):0 -> f
    5:5:void setViewImportanceForAccessibilityIfNeeded(android.view.View):0:0 -> f
    5:5:void notifyViewAccessibilityStateChangedIfNeeded(android.view.View,int):0 -> f
    6:6:int getImportantForAccessibility(android.view.View):0:0 -> f
    6:6:void setViewImportanceForAccessibilityIfNeeded(android.view.View):0 -> f
    6:6:void notifyViewAccessibilityStateChangedIfNeeded(android.view.View,int):0 -> f
    7:7:void setImportantForAccessibility(android.view.View,int):0:0 -> f
    7:7:void setViewImportanceForAccessibilityIfNeeded(android.view.View):0 -> f
    7:7:void notifyViewAccessibilityStateChangedIfNeeded(android.view.View,int):0 -> f
    8:8:void setViewImportanceForAccessibilityIfNeeded(android.view.View):0:0 -> f
    8:8:void notifyViewAccessibilityStateChangedIfNeeded(android.view.View,int):0 -> f
    9:9:void notifyViewAccessibilityStateChangedIfNeeded(android.view.View,int):0:0 -> f
    androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> g
    1:1:androidx.core.view.OnReceiveContentViewBehavior getFallback(android.view.View):0:0 -> h
    1:1:androidx.core.view.ContentInfoCompat performReceiveContent(android.view.View,androidx.core.view.ContentInfoCompat):0 -> h
    2:2:androidx.core.view.ContentInfoCompat performReceiveContent(android.view.View,androidx.core.view.ContentInfoCompat):0:0 -> h
    3:3:androidx.core.view.OnReceiveContentViewBehavior getFallback(android.view.View):0:0 -> h
    3:3:androidx.core.view.ContentInfoCompat performReceiveContent(android.view.View,androidx.core.view.ContentInfoCompat):0 -> h
    4:4:androidx.core.view.ContentInfoCompat performReceiveContent(android.view.View,androidx.core.view.ContentInfoCompat):0:0 -> h
    1:1:android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View):0:0 -> i
    1:1:void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat):0 -> i
    2:2:void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat):0:0 -> i
    3:3:android.view.View$AccessibilityDelegate androidx.core.view.AccessibilityDelegateCompat.getBridge():0:0 -> i
    3:3:void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat):0 -> i
    4:4:void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat):0:0 -> i
    1:1:androidx.core.view.ViewCompat$AccessibilityViewProperty stateDescriptionProperty():0:0 -> j
    1:1:void setStateDescription(android.view.View,java.lang.CharSequence):0 -> j
    2:2:void androidx.core.view.ViewCompat$4.frameworkSet(android.view.View,java.lang.CharSequence):0:0 -> j
    2:2:void androidx.core.view.ViewCompat$4.frameworkSet(android.view.View,java.lang.Object):0 -> j
    2:2:void androidx.core.view.ViewCompat$AccessibilityViewProperty.set(android.view.View,java.lang.Object):0 -> j
    2:2:void setStateDescription(android.view.View,java.lang.CharSequence):0 -> j
    3:3:void androidx.core.view.ViewCompat$AccessibilityViewProperty.set(android.view.View,java.lang.Object):0:0 -> j
    3:3:void setStateDescription(android.view.View,java.lang.CharSequence):0 -> j
    4:4:androidx.core.view.AccessibilityDelegateCompat getOrCreateAccessibilityDelegateCompat(android.view.View):0:0 -> j
    4:4:void androidx.core.view.ViewCompat$AccessibilityViewProperty.set(android.view.View,java.lang.Object):0 -> j
    4:4:void setStateDescription(android.view.View,java.lang.CharSequence):0 -> j
    5:5:void androidx.core.view.ViewCompat$AccessibilityViewProperty.set(android.view.View,java.lang.Object):0:0 -> j
    5:5:void setStateDescription(android.view.View,java.lang.CharSequence):0 -> j
androidx.core.view.ViewCompat$1 -> a.e.j.o$a:
    androidx.core.view.ContentInfoCompat onReceiveContent(androidx.core.view.ContentInfoCompat) -> a
androidx.core.view.ViewCompat$2 -> a.e.j.p:
    1:1:java.lang.Boolean frameworkGet(android.view.View):0:0 -> a
    1:1:java.lang.Object frameworkGet(android.view.View):0 -> a
androidx.core.view.ViewCompat$3 -> a.e.j.q:
    1:1:java.lang.CharSequence frameworkGet(android.view.View):0:0 -> a
    1:1:java.lang.Object frameworkGet(android.view.View):0 -> a
androidx.core.view.ViewCompat$4 -> a.e.j.r:
    1:1:java.lang.CharSequence frameworkGet(android.view.View):0:0 -> a
    1:1:java.lang.Object frameworkGet(android.view.View):0 -> a
    1:1:boolean shouldUpdate(java.lang.CharSequence,java.lang.CharSequence):0:0 -> c
    1:1:boolean shouldUpdate(java.lang.Object,java.lang.Object):0 -> c
androidx.core.view.ViewCompat$5 -> a.e.j.s:
    1:1:java.lang.Boolean frameworkGet(android.view.View):0:0 -> a
    1:1:java.lang.Object frameworkGet(android.view.View):0 -> a
androidx.core.view.ViewCompat$AccessibilityViewProperty -> a.e.j.o$b:
    int mContentChangeType -> d
    java.lang.Class mType -> b
    int mFrameworkMinimumSdk -> c
    int mTagKey -> a
    1:1:void <init>(int,java.lang.Class,int,int):0:0 -> <init>
    1:1:void <init>(int,java.lang.Class,int):0 -> <init>
    java.lang.Object frameworkGet(android.view.View) -> a
    1:1:boolean frameworkAvailable():0:0 -> b
    1:1:java.lang.Object get(android.view.View):0 -> b
    2:2:java.lang.Object get(android.view.View):0:0 -> b
androidx.core.view.ViewCompat$Api21Impl$1 -> a.e.j.t:
    androidx.core.view.OnApplyWindowInsetsListener val$listener -> c
    android.view.View val$v -> b
    androidx.core.view.WindowInsetsCompat mLastInsets -> a
androidx.core.view.ViewPropertyAnimatorCompat -> a.e.j.u:
    java.lang.ref.WeakReference mView -> a
    int mOldLayerType -> b
    androidx.core.view.ViewPropertyAnimatorCompat alpha(float) -> a
    void cancel() -> b
    androidx.core.view.ViewPropertyAnimatorCompat setDuration(long) -> c
    androidx.core.view.ViewPropertyAnimatorCompat setListener(androidx.core.view.ViewPropertyAnimatorListener) -> d
    void setListenerInternal(android.view.View,androidx.core.view.ViewPropertyAnimatorListener) -> e
    androidx.core.view.ViewPropertyAnimatorCompat setUpdateListener(androidx.core.view.ViewPropertyAnimatorUpdateListener) -> f
    androidx.core.view.ViewPropertyAnimatorCompat translationY(float) -> g
androidx.core.view.ViewPropertyAnimatorCompat$1 -> a.e.j.u$a:
    androidx.core.view.ViewPropertyAnimatorListener val$listener -> a
    android.view.View val$view -> b
androidx.core.view.ViewPropertyAnimatorCompat$2 -> a.e.j.u$b:
    androidx.core.view.ViewPropertyAnimatorUpdateListener val$listener -> a
    android.view.View val$view -> b
    1:1:void androidx.appcompat.app.WindowDecorActionBar$3.onAnimationUpdate(android.view.View):0:0 -> onAnimationUpdate
    1:1:void onAnimationUpdate(android.animation.ValueAnimator):0 -> onAnimationUpdate
androidx.core.view.ViewPropertyAnimatorListener -> a.e.j.v:
    void onAnimationEnd(android.view.View) -> a
    void onAnimationStart(android.view.View) -> b
    void onAnimationCancel(android.view.View) -> c
androidx.core.view.ViewPropertyAnimatorListenerAdapter -> a.e.j.w:
    void onAnimationStart(android.view.View) -> b
    void onAnimationCancel(android.view.View) -> c
androidx.core.view.ViewPropertyAnimatorUpdateListener -> a.e.j.x:
androidx.core.view.WindowInsetsCompat -> a.e.j.y:
    androidx.core.view.WindowInsetsCompat$Impl mImpl -> a
    androidx.core.view.WindowInsetsCompat CONSUMED -> b
    int getSystemWindowInsetBottom() -> a
    int getSystemWindowInsetLeft() -> b
    int getSystemWindowInsetRight() -> c
    int getSystemWindowInsetTop() -> d
    androidx.core.graphics.Insets insetInsets(androidx.core.graphics.Insets,int,int,int,int) -> e
    1:1:boolean androidx.core.util.ObjectsCompat.equals(java.lang.Object,java.lang.Object):0:0 -> equals
    1:1:boolean equals(java.lang.Object):0 -> equals
    android.view.WindowInsets toWindowInsets() -> f
    androidx.core.view.WindowInsetsCompat toWindowInsetsCompat(android.view.WindowInsets) -> g
    1:1:java.lang.Object androidx.core.util.Preconditions.checkNotNull(java.lang.Object):0:0 -> h
    1:1:androidx.core.view.WindowInsetsCompat toWindowInsetsCompat(android.view.WindowInsets,android.view.View):0 -> h
    2:2:androidx.core.view.WindowInsetsCompat toWindowInsetsCompat(android.view.WindowInsets,android.view.View):0:0 -> h
    3:3:void setRootWindowInsets(androidx.core.view.WindowInsetsCompat):0:0 -> h
    3:3:androidx.core.view.WindowInsetsCompat toWindowInsetsCompat(android.view.WindowInsets,android.view.View):0 -> h
    4:4:androidx.core.view.WindowInsetsCompat toWindowInsetsCompat(android.view.WindowInsets,android.view.View):0:0 -> h
    5:5:void copyRootViewBounds(android.view.View):0:0 -> h
    5:5:androidx.core.view.WindowInsetsCompat toWindowInsetsCompat(android.view.WindowInsets,android.view.View):0 -> h
androidx.core.view.WindowInsetsCompat$BuilderImpl -> a.e.j.y$c:
    androidx.core.view.WindowInsetsCompat mInsets -> a
    1:1:void <init>(androidx.core.view.WindowInsetsCompat):0:0 -> <init>
    1:1:void <init>():0 -> <init>
    androidx.core.view.WindowInsetsCompat build() -> a
androidx.core.view.WindowInsetsCompat$BuilderImpl29 -> a.e.j.y$a:
    android.view.WindowInsets$Builder mPlatBuilder -> b
    1:1:void androidx.core.view.WindowInsetsCompat.setOverriddenInsets(androidx.core.graphics.Insets[]):0:0 -> a
    1:1:androidx.core.view.WindowInsetsCompat build():0 -> a
androidx.core.view.WindowInsetsCompat$BuilderImpl30 -> a.e.j.y$b:
androidx.core.view.WindowInsetsCompat$Impl -> a.e.j.y$i:
    androidx.core.view.WindowInsetsCompat CONSUMED -> b
    androidx.core.view.WindowInsetsCompat mHost -> a
    1:1:void androidx.core.view.WindowInsetsCompat$Builder.<init>():0:0 -> <clinit>
    1:1:void <clinit>():0 -> <clinit>
    2:2:androidx.core.view.WindowInsetsCompat androidx.core.view.WindowInsetsCompat$Builder.build():0:0 -> <clinit>
    2:2:void <clinit>():0 -> <clinit>
    3:3:androidx.core.view.WindowInsetsCompat androidx.core.view.WindowInsetsCompat.consumeDisplayCutout():0:0 -> <clinit>
    3:3:void <clinit>():0 -> <clinit>
    4:4:androidx.core.view.WindowInsetsCompat androidx.core.view.WindowInsetsCompat.consumeStableInsets():0:0 -> <clinit>
    4:4:void <clinit>():0 -> <clinit>
    5:5:androidx.core.view.WindowInsetsCompat androidx.core.view.WindowInsetsCompat.consumeSystemWindowInsets():0:0 -> <clinit>
    5:5:void <clinit>():0 -> <clinit>
    6:6:void <clinit>():0:0 -> <clinit>
    androidx.core.view.WindowInsetsCompat consumeDisplayCutout() -> a
    androidx.core.view.WindowInsetsCompat consumeStableInsets() -> b
    androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets() -> c
    void copyRootViewBounds(android.view.View) -> d
    androidx.core.view.DisplayCutoutCompat getDisplayCutout() -> e
    1:1:boolean androidx.core.util.ObjectsCompat.equals(java.lang.Object,java.lang.Object):0:0 -> equals
    1:1:boolean equals(java.lang.Object):0 -> equals
    2:2:boolean equals(java.lang.Object):0:0 -> equals
    3:3:boolean androidx.core.util.ObjectsCompat.equals(java.lang.Object,java.lang.Object):0:0 -> equals
    3:3:boolean equals(java.lang.Object):0 -> equals
    4:4:boolean equals(java.lang.Object):0:0 -> equals
    5:5:boolean androidx.core.util.ObjectsCompat.equals(java.lang.Object,java.lang.Object):0:0 -> equals
    5:5:boolean equals(java.lang.Object):0 -> equals
    androidx.core.graphics.Insets getStableInsets() -> f
    androidx.core.graphics.Insets getSystemWindowInsets() -> g
    androidx.core.view.WindowInsetsCompat inset(int,int,int,int) -> h
    1:1:int androidx.core.util.ObjectsCompat.hash(java.lang.Object[]):0:0 -> hashCode
    1:1:int hashCode():0 -> hashCode
    boolean isConsumed() -> i
    boolean isRound() -> j
    void setOverriddenInsets(androidx.core.graphics.Insets[]) -> k
    void setRootWindowInsets(androidx.core.view.WindowInsetsCompat) -> l
androidx.core.view.WindowInsetsCompat$Impl20 -> a.e.j.y$d:
    android.view.WindowInsets mPlatformInsets -> c
    androidx.core.view.WindowInsetsCompat mRootWindowInsets -> e
    androidx.core.graphics.Insets mRootViewVisibleInsets -> f
    androidx.core.graphics.Insets mSystemWindowInsets -> d
    1:1:androidx.core.graphics.Insets getVisibleInsets(android.view.View):0:0 -> d
    1:1:void copyRootViewBounds(android.view.View):0 -> d
    androidx.core.graphics.Insets getSystemWindowInsets() -> g
    1:1:void androidx.core.view.WindowInsetsCompat$BuilderImpl.<init>():0:0 -> h
    1:1:void androidx.core.view.WindowInsetsCompat$BuilderImpl29.<init>(androidx.core.view.WindowInsetsCompat):0 -> h
    1:1:void androidx.core.view.WindowInsetsCompat$BuilderImpl30.<init>(androidx.core.view.WindowInsetsCompat):0 -> h
    1:1:void androidx.core.view.WindowInsetsCompat$Builder.<init>(androidx.core.view.WindowInsetsCompat):0 -> h
    1:1:androidx.core.view.WindowInsetsCompat inset(int,int,int,int):0 -> h
    2:2:void androidx.core.view.WindowInsetsCompat$BuilderImpl29.<init>(androidx.core.view.WindowInsetsCompat):0:0 -> h
    2:2:void androidx.core.view.WindowInsetsCompat$BuilderImpl30.<init>(androidx.core.view.WindowInsetsCompat):0 -> h
    2:2:void androidx.core.view.WindowInsetsCompat$Builder.<init>(androidx.core.view.WindowInsetsCompat):0 -> h
    2:2:androidx.core.view.WindowInsetsCompat inset(int,int,int,int):0 -> h
    3:3:androidx.core.view.WindowInsetsCompat inset(int,int,int,int):0:0 -> h
    4:4:void androidx.core.view.WindowInsetsCompat$BuilderImpl29.setSystemWindowInsets(androidx.core.graphics.Insets):0:0 -> h
    4:4:androidx.core.view.WindowInsetsCompat$Builder androidx.core.view.WindowInsetsCompat$Builder.setSystemWindowInsets(androidx.core.graphics.Insets):0 -> h
    4:4:androidx.core.view.WindowInsetsCompat inset(int,int,int,int):0 -> h
    5:5:androidx.core.view.WindowInsetsCompat inset(int,int,int,int):0:0 -> h
    6:6:void androidx.core.view.WindowInsetsCompat$BuilderImpl29.setStableInsets(androidx.core.graphics.Insets):0:0 -> h
    6:6:androidx.core.view.WindowInsetsCompat$Builder androidx.core.view.WindowInsetsCompat$Builder.setStableInsets(androidx.core.graphics.Insets):0 -> h
    6:6:androidx.core.view.WindowInsetsCompat inset(int,int,int,int):0 -> h
    7:7:androidx.core.view.WindowInsetsCompat androidx.core.view.WindowInsetsCompat$BuilderImpl29.build():0:0 -> h
    7:7:androidx.core.view.WindowInsetsCompat androidx.core.view.WindowInsetsCompat$Builder.build():0 -> h
    7:7:androidx.core.view.WindowInsetsCompat inset(int,int,int,int):0 -> h
    8:8:void androidx.core.view.WindowInsetsCompat.setOverriddenInsets(androidx.core.graphics.Insets[]):0:0 -> h
    8:8:androidx.core.view.WindowInsetsCompat androidx.core.view.WindowInsetsCompat$BuilderImpl29.build():0 -> h
    8:8:androidx.core.view.WindowInsetsCompat androidx.core.view.WindowInsetsCompat$Builder.build():0 -> h
    8:8:androidx.core.view.WindowInsetsCompat inset(int,int,int,int):0 -> h
    boolean isRound() -> j
    void setOverriddenInsets(androidx.core.graphics.Insets[]) -> k
    void setRootWindowInsets(androidx.core.view.WindowInsetsCompat) -> l
androidx.core.view.WindowInsetsCompat$Impl21 -> a.e.j.y$e:
    androidx.core.graphics.Insets mStableInsets -> g
    androidx.core.view.WindowInsetsCompat consumeStableInsets() -> b
    androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets() -> c
    androidx.core.graphics.Insets getStableInsets() -> f
    boolean isConsumed() -> i
androidx.core.view.WindowInsetsCompat$Impl28 -> a.e.j.y$f:
    androidx.core.view.WindowInsetsCompat consumeDisplayCutout() -> a
    1:1:androidx.core.view.DisplayCutoutCompat androidx.core.view.DisplayCutoutCompat.wrap(java.lang.Object):0:0 -> e
    1:1:androidx.core.view.DisplayCutoutCompat getDisplayCutout():0 -> e
androidx.core.view.WindowInsetsCompat$Impl29 -> a.e.j.y$g:
    androidx.core.view.WindowInsetsCompat inset(int,int,int,int) -> h
androidx.core.view.WindowInsetsCompat$Impl30 -> a.e.j.y$h:
    androidx.core.view.WindowInsetsCompat CONSUMED -> h
    void copyRootViewBounds(android.view.View) -> d
androidx.core.view.accessibility.AccessibilityClickableSpanCompat -> a.e.j.z.a:
    androidx.core.view.accessibility.AccessibilityNodeInfoCompat mNodeInfoCompat -> b
    int mClickableSpanActionId -> c
    int mOriginalClickableSpanId -> a
    1:1:boolean androidx.core.view.accessibility.AccessibilityNodeInfoCompat.performAction(int,android.os.Bundle):0:0 -> onClick
    1:1:void onClick(android.view.View):0 -> onClick
androidx.core.view.accessibility.AccessibilityNodeInfoCompat -> a.e.j.z.b:
    android.view.accessibility.AccessibilityNodeInfo mInfo -> a
    void addAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat) -> a
    java.util.List extrasIntList(java.lang.String) -> b
    java.lang.String getActionSymbolicName(int) -> c
    android.text.style.ClickableSpan[] getClickableSpans(java.lang.CharSequence) -> d
    android.os.Bundle getExtras() -> e
    void setCollectionItemInfo(java.lang.Object) -> f
    1:1:void getBoundsInParent(android.graphics.Rect):0:0 -> toString
    1:1:java.lang.String toString():0 -> toString
    2:2:java.lang.String toString():0:0 -> toString
    3:3:void getBoundsInScreen(android.graphics.Rect):0:0 -> toString
    3:3:java.lang.String toString():0 -> toString
    4:4:java.lang.String toString():0:0 -> toString
    5:5:java.lang.CharSequence getPackageName():0:0 -> toString
    5:5:java.lang.String toString():0 -> toString
    6:6:java.lang.String toString():0:0 -> toString
    7:7:java.lang.CharSequence getClassName():0:0 -> toString
    7:7:java.lang.String toString():0 -> toString
    8:8:java.lang.String toString():0:0 -> toString
    9:9:boolean hasSpans():0:0 -> toString
    9:9:java.lang.CharSequence getText():0 -> toString
    9:9:java.lang.String toString():0 -> toString
    10:10:java.lang.CharSequence getText():0:0 -> toString
    10:10:java.lang.String toString():0 -> toString
    11:11:java.lang.String toString():0:0 -> toString
    12:12:java.lang.CharSequence getContentDescription():0:0 -> toString
    12:12:java.lang.String toString():0 -> toString
    13:13:java.lang.String toString():0:0 -> toString
    14:14:java.lang.String getViewIdResourceName():0:0 -> toString
    14:14:java.lang.String toString():0 -> toString
    15:15:java.lang.String toString():0:0 -> toString
    16:16:boolean isCheckable():0:0 -> toString
    16:16:java.lang.String toString():0 -> toString
    17:17:java.lang.String toString():0:0 -> toString
    18:18:boolean isChecked():0:0 -> toString
    18:18:java.lang.String toString():0 -> toString
    19:19:java.lang.String toString():0:0 -> toString
    20:20:boolean isFocusable():0:0 -> toString
    20:20:java.lang.String toString():0 -> toString
    21:21:java.lang.String toString():0:0 -> toString
    22:22:boolean isFocused():0:0 -> toString
    22:22:java.lang.String toString():0 -> toString
    23:23:java.lang.String toString():0:0 -> toString
    24:24:boolean isSelected():0:0 -> toString
    24:24:java.lang.String toString():0 -> toString
    25:25:java.lang.String toString():0:0 -> toString
    26:26:boolean isClickable():0:0 -> toString
    26:26:java.lang.String toString():0 -> toString
    27:27:java.lang.String toString():0:0 -> toString
    28:28:boolean isLongClickable():0:0 -> toString
    28:28:java.lang.String toString():0 -> toString
    29:29:java.lang.String toString():0:0 -> toString
    30:30:boolean isEnabled():0:0 -> toString
    30:30:java.lang.String toString():0 -> toString
    31:31:java.lang.String toString():0:0 -> toString
    32:32:boolean isPassword():0:0 -> toString
    32:32:java.lang.String toString():0 -> toString
    33:33:java.lang.String toString():0:0 -> toString
    34:34:boolean isScrollable():0:0 -> toString
    34:34:java.lang.String toString():0 -> toString
    35:35:java.lang.String toString():0:0 -> toString
    36:36:java.util.List getActionList():0:0 -> toString
    36:36:java.lang.String toString():0 -> toString
    37:37:void androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat.<init>(java.lang.Object):0:0 -> toString
    37:37:java.util.List getActionList():0 -> toString
    37:37:java.lang.String toString():0 -> toString
    38:38:java.util.List getActionList():0:0 -> toString
    38:38:java.lang.String toString():0 -> toString
    39:39:java.lang.String toString():0:0 -> toString
    40:40:int androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat.getId():0:0 -> toString
    40:40:java.lang.String toString():0 -> toString
    41:41:java.lang.String toString():0:0 -> toString
    42:42:java.lang.CharSequence androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat.getLabel():0:0 -> toString
    42:42:java.lang.String toString():0 -> toString
    43:43:java.lang.String toString():0:0 -> toString
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat -> a.e.j.z.b$a:
    androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_UP -> f
    androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_DOWN -> g
    androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_FORWARD -> d
    androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_BACKWARD -> e
    androidx.core.view.accessibility.AccessibilityViewCommand mCommand -> c
    java.lang.Object mAction -> a
    java.lang.Class mViewCommandArgumentClass -> b
    1:1:void <init>(java.lang.Object,int,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand,java.lang.Class):0:0 -> <clinit>
    1:1:void <init>(int,java.lang.CharSequence):0 -> <clinit>
    1:1:void <clinit>():0 -> <clinit>
    2:2:void <init>(java.lang.Object,int,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand,java.lang.Class):0:0 -> <clinit>
    2:2:void <init>(int,java.lang.CharSequence,java.lang.Class):0 -> <clinit>
    2:2:void <clinit>():0 -> <clinit>
    3:3:void <clinit>():0:0 -> <clinit>
    4:4:void <init>(java.lang.Object,int,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand,java.lang.Class):0:0 -> <clinit>
    4:4:void <init>(int,java.lang.CharSequence):0 -> <clinit>
    4:4:void <clinit>():0 -> <clinit>
    5:5:void <init>(java.lang.Object,int,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand,java.lang.Class):0:0 -> <clinit>
    5:5:void <init>(int,java.lang.CharSequence,java.lang.Class):0 -> <clinit>
    5:5:void <clinit>():0 -> <clinit>
    6:6:void <init>(java.lang.Object,int,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand,java.lang.Class):0:0 -> <clinit>
    6:6:void <init>(int,java.lang.CharSequence):0 -> <clinit>
    6:6:void <clinit>():0 -> <clinit>
    7:7:void <init>(java.lang.Object,int,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand,java.lang.Class):0:0 -> <clinit>
    7:7:void <init>(int,java.lang.CharSequence,java.lang.Class):0 -> <clinit>
    7:7:void <clinit>():0 -> <clinit>
    8:8:void <clinit>():0:0 -> <clinit>
    9:9:void <init>(java.lang.Object,int,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand,java.lang.Class):0:0 -> <clinit>
    9:9:void <clinit>():0 -> <clinit>
    10:10:void <clinit>():0:0 -> <clinit>
    11:11:void <init>(java.lang.Object,int,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand,java.lang.Class):0:0 -> <clinit>
    11:11:void <clinit>():0 -> <clinit>
    12:12:void <clinit>():0:0 -> <clinit>
    13:13:void <init>(java.lang.Object,int,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand,java.lang.Class):0:0 -> <clinit>
    13:13:void <clinit>():0 -> <clinit>
    14:14:void <clinit>():0:0 -> <clinit>
    15:15:void <init>(java.lang.Object,int,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand,java.lang.Class):0:0 -> <clinit>
    15:15:void <clinit>():0 -> <clinit>
    16:16:void <clinit>():0:0 -> <clinit>
    17:17:void <init>(java.lang.Object,int,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand,java.lang.Class):0:0 -> <clinit>
    17:17:void <clinit>():0 -> <clinit>
    18:18:void <clinit>():0:0 -> <clinit>
    19:19:void <init>(java.lang.Object,int,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand,java.lang.Class):0:0 -> <clinit>
    19:19:void <clinit>():0 -> <clinit>
    20:20:void <clinit>():0:0 -> <clinit>
    21:21:void <init>(java.lang.Object,int,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand,java.lang.Class):0:0 -> <clinit>
    21:21:void <clinit>():0 -> <clinit>
    22:22:void <clinit>():0:0 -> <clinit>
    23:23:void <init>(java.lang.Object,int,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand,java.lang.Class):0:0 -> <clinit>
    23:23:void <clinit>():0 -> <clinit>
    24:24:void <clinit>():0:0 -> <clinit>
    25:25:void <init>(java.lang.Object,int,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand,java.lang.Class):0:0 -> <clinit>
    25:25:void <clinit>():0 -> <clinit>
    26:26:void <clinit>():0:0 -> <clinit>
    27:27:void <init>(java.lang.Object,int,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand,java.lang.Class):0:0 -> <clinit>
    27:27:void <clinit>():0 -> <clinit>
    28:28:void <clinit>():0:0 -> <clinit>
    29:29:void <init>(java.lang.Object,int,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand,java.lang.Class):0:0 -> <clinit>
    29:29:void <clinit>():0 -> <clinit>
    30:30:void <clinit>():0:0 -> <clinit>
    31:31:void <init>(java.lang.Object,int,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand,java.lang.Class):0:0 -> <clinit>
    31:31:void <clinit>():0 -> <clinit>
    32:32:void <clinit>():0:0 -> <clinit>
    33:33:void <init>(java.lang.Object,int,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand,java.lang.Class):0:0 -> <clinit>
    33:33:void <clinit>():0 -> <clinit>
    34:34:void <clinit>():0:0 -> <clinit>
    35:35:void <init>(java.lang.Object,int,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand,java.lang.Class):0:0 -> <clinit>
    35:35:void <clinit>():0 -> <clinit>
    36:36:void <clinit>():0:0 -> <clinit>
    37:37:void <init>(java.lang.Object,int,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand,java.lang.Class):0:0 -> <clinit>
    37:37:void <clinit>():0 -> <clinit>
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat -> a.e.j.z.b$b:
    java.lang.Object mInfo -> a
    androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat obtain(int,int,int,int,boolean,boolean) -> a
androidx.core.view.accessibility.AccessibilityNodeProviderCompat -> a.e.j.z.c:
    java.lang.Object mProvider -> a
androidx.core.view.accessibility.AccessibilityViewCommand -> a.e.j.z.d:
    boolean perform(android.view.View,androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments) -> a
androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments -> a.e.j.z.d$a:
androidx.core.view.inputmethod.InputConnectionCompat$1 -> a.e.j.a0.a:
    androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener val$listener -> a
    1:1:androidx.core.view.inputmethod.InputContentInfoCompat androidx.core.view.inputmethod.InputContentInfoCompat.wrap(java.lang.Object):0:0 -> commitContent
    1:1:boolean commitContent(android.view.inputmethod.InputContentInfo,int,android.os.Bundle):0 -> commitContent
    2:2:boolean commitContent(android.view.inputmethod.InputContentInfo,int,android.os.Bundle):0:0 -> commitContent
androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener -> a.e.j.a0.b:
androidx.core.view.inputmethod.InputContentInfoCompat -> a.e.j.a0.c:
    androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatImpl mImpl -> a
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl -> a.e.j.a0.c$a:
    android.view.inputmethod.InputContentInfo mObject -> a
    java.lang.Object getInputContentInfo() -> a
    void requestPermission() -> b
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatImpl -> a.e.j.a0.c$b:
androidx.core.widget.AutoScrollHelper -> a.e.k.a:
    boolean mNeedsReset -> m
    boolean mNeedsCancel -> n
    float[] mMaximumVelocity -> k
    boolean mAnimating -> o
    boolean mEnabled -> p
    float[] mRelativeVelocity -> i
    float[] mMinimumVelocity -> j
    int mActivationDelay -> h
    android.view.animation.Interpolator mEdgeInterpolator -> b
    boolean mAlreadyDelayed -> l
    float[] mRelativeEdges -> e
    float[] mMaximumEdges -> f
    int mEdgeType -> g
    java.lang.Runnable mRunnable -> d
    android.view.View mTarget -> c
    androidx.core.widget.AutoScrollHelper$ClampedScroller mScroller -> a
    int DEFAULT_ACTIVATION_DELAY -> q
    1:1:androidx.core.widget.AutoScrollHelper setMaximumVelocity(float,float):0:0 -> <init>
    1:1:void <init>(android.view.View):0 -> <init>
    2:2:androidx.core.widget.AutoScrollHelper setMinimumVelocity(float,float):0:0 -> <init>
    2:2:void <init>(android.view.View):0 -> <init>
    3:3:androidx.core.widget.AutoScrollHelper setEdgeType(int):0:0 -> <init>
    3:3:void <init>(android.view.View):0 -> <init>
    4:4:androidx.core.widget.AutoScrollHelper setMaximumEdges(float,float):0:0 -> <init>
    4:4:void <init>(android.view.View):0 -> <init>
    5:5:androidx.core.widget.AutoScrollHelper setRelativeEdges(float,float):0:0 -> <init>
    5:5:void <init>(android.view.View):0 -> <init>
    6:6:androidx.core.widget.AutoScrollHelper setRelativeVelocity(float,float):0:0 -> <init>
    6:6:void <init>(android.view.View):0 -> <init>
    7:7:void <init>(android.view.View):0:0 -> <init>
    8:8:androidx.core.widget.AutoScrollHelper setActivationDelay(int):0:0 -> <init>
    8:8:void <init>(android.view.View):0 -> <init>
    9:9:void androidx.core.widget.AutoScrollHelper$ClampedScroller.setRampUpDuration(int):0:0 -> <init>
    9:9:androidx.core.widget.AutoScrollHelper setRampUpDuration(int):0 -> <init>
    9:9:void <init>(android.view.View):0 -> <init>
    10:10:void androidx.core.widget.AutoScrollHelper$ClampedScroller.setRampDownDuration(int):0:0 -> <init>
    10:10:androidx.core.widget.AutoScrollHelper setRampDownDuration(int):0 -> <init>
    10:10:void <init>(android.view.View):0 -> <init>
    1:1:float getEdgeValue(float,float,float,float):0:0 -> a
    1:1:float computeTargetVelocity(int,float,float,float):0 -> a
    2:2:float computeTargetVelocity(int,float,float,float):0:0 -> a
    float constrain(float,float,float) -> b
    float constrainEdgeValue(float,float) -> c
    1:1:void androidx.core.widget.AutoScrollHelper$ClampedScroller.requestStop():0:0 -> d
    1:1:void requestStop():0 -> d
    1:1:int androidx.core.widget.AutoScrollHelper$ClampedScroller.getVerticalDirection():0:0 -> e
    1:1:boolean shouldAnimate():0 -> e
    2:2:int androidx.core.widget.AutoScrollHelper$ClampedScroller.getHorizontalDirection():0:0 -> e
    2:2:boolean shouldAnimate():0 -> e
    3:3:boolean shouldAnimate():0:0 -> e
    4:4:boolean androidx.core.widget.ListViewAutoScrollHelper.canTargetScrollVertically(int):0:0 -> e
    4:4:boolean shouldAnimate():0 -> e
    1:1:void androidx.core.widget.AutoScrollHelper$ClampedScroller.setTargetVelocity(float,float):0:0 -> onTouch
    1:1:boolean onTouch(android.view.View,android.view.MotionEvent):0 -> onTouch
    2:2:boolean onTouch(android.view.View,android.view.MotionEvent):0:0 -> onTouch
    3:3:void startAnimating():0:0 -> onTouch
    3:3:boolean onTouch(android.view.View,android.view.MotionEvent):0 -> onTouch
    4:4:void androidx.core.view.ViewCompat.postOnAnimationDelayed(android.view.View,java.lang.Runnable,long):0:0 -> onTouch
    4:4:void startAnimating():0 -> onTouch
    4:4:boolean onTouch(android.view.View,android.view.MotionEvent):0 -> onTouch
    5:5:void startAnimating():0:0 -> onTouch
    5:5:boolean onTouch(android.view.View,android.view.MotionEvent):0 -> onTouch
androidx.core.widget.AutoScrollHelper$ClampedScroller -> a.e.k.a$a:
    long mStopTime -> i
    float mStopValue -> j
    long mDeltaTime -> f
    long mStartTime -> e
    int mEffectiveRampDown -> k
    int mDeltaY -> h
    float mTargetVelocityY -> d
    float mTargetVelocityX -> c
    int mDeltaX -> g
    int mRampDownDuration -> b
    int mRampUpDuration -> a
    float getValueAt(long) -> a
androidx.core.widget.AutoScrollHelper$ScrollAnimationRunnable -> a.e.k.a$b:
    androidx.core.widget.AutoScrollHelper this$0 -> a
    1:1:void androidx.core.widget.AutoScrollHelper$ClampedScroller.start():0:0 -> run
    1:1:void run():0 -> run
    2:2:void run():0:0 -> run
    3:3:boolean androidx.core.widget.AutoScrollHelper$ClampedScroller.isFinished():0:0 -> run
    3:3:void run():0 -> run
    4:4:void run():0:0 -> run
    5:5:void androidx.core.widget.AutoScrollHelper.cancelTargetTouch():0:0 -> run
    5:5:void run():0 -> run
    6:6:void androidx.core.widget.AutoScrollHelper$ClampedScroller.computeScrollDelta():0:0 -> run
    6:6:void run():0 -> run
    7:7:void run():0:0 -> run
    8:8:void androidx.core.widget.ListViewAutoScrollHelper.scrollTargetBy(int,int):0:0 -> run
    8:8:void run():0 -> run
    9:9:void androidx.core.widget.ListViewCompat.scrollListBy(android.widget.ListView,int):0:0 -> run
    9:9:void androidx.core.widget.ListViewAutoScrollHelper.scrollTargetBy(int,int):0 -> run
    9:9:void run():0 -> run
    10:10:void run():0:0 -> run
    11:11:void androidx.core.view.ViewCompat.postOnAnimation(android.view.View,java.lang.Runnable):0:0 -> run
    11:11:void run():0 -> run
    12:12:void androidx.core.widget.AutoScrollHelper$ClampedScroller.computeScrollDelta():0:0 -> run
    12:12:void run():0 -> run
    13:13:void run():0:0 -> run
androidx.core.widget.ListViewAutoScrollHelper -> a.e.k.b:
    android.widget.ListView mTarget -> r
androidx.core.widget.NestedScrollView -> androidx.core.widget.NestedScrollView:
    boolean mSmoothScrollingEnabled -> m
    int mTouchSlop -> n
    androidx.core.widget.NestedScrollView$OnScrollChangeListener mOnScrollChangeListener -> z
    int[] mScrollConsumed -> s
    android.view.VelocityTracker mVelocityTracker -> k
    int mLastMotionY -> f
    androidx.core.widget.NestedScrollView$SavedState mSavedState -> v
    long mLastScroll -> a
    android.view.View mChildToScrollTo -> i
    float mVerticalScrollFactor -> y
    android.widget.EdgeEffect mEdgeGlowBottom -> e
    androidx.core.view.NestedScrollingParentHelper mParentHelper -> w
    boolean mIsLaidOut -> h
    int mLastScrollerY -> u
    androidx.core.view.NestedScrollingChildHelper mChildHelper -> x
    int mActivePointerId -> q
    int mMinimumVelocity -> o
    int[] mScrollOffset -> r
    boolean mIsBeingDragged -> j
    boolean mFillViewport -> l
    androidx.core.widget.NestedScrollView$AccessibilityDelegate ACCESSIBILITY_DELEGATE -> A
    android.graphics.Rect mTempRect -> b
    android.widget.OverScroller mScroller -> c
    int[] SCROLLVIEW_STYLEABLE -> B
    android.widget.EdgeEffect mEdgeGlowTop -> d
    boolean mIsLayoutDirty -> g
    int mNestedYOffset -> t
    int mMaximumVelocity -> p
    1:1:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    2:2:void initScrollView():0:0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    void scrollToChild(android.view.View) -> A
    void smoothScrollBy(int,int,int,boolean) -> B
    boolean startNestedScroll(int,int) -> C
    void stopNestedScroll(int) -> D
    1:1:void stopNestedScroll(int):0:0 -> a
    1:1:void abortAnimatedScroll():0 -> a
    1:1:boolean isOffScreen(android.view.View):0:0 -> b
    1:1:boolean arrowScroll(int):0 -> b
    2:2:boolean arrowScroll(int):0:0 -> b
    int clamp(int,int,int) -> c
    1:1:void dispatchNestedScroll(int,int,int,int,int[],int,int[]):0:0 -> computeScroll
    1:1:void computeScroll():0 -> computeScroll
    2:2:void androidx.core.view.NestedScrollingChildHelper.dispatchNestedScroll(int,int,int,int,int[],int,int[]):0:0 -> computeScroll
    2:2:void dispatchNestedScroll(int,int,int,int,int[],int,int[]):0 -> computeScroll
    2:2:void computeScroll():0 -> computeScroll
    3:3:void computeScroll():0:0 -> computeScroll
    4:4:void androidx.core.view.ViewCompat.postInvalidateOnAnimation(android.view.View):0:0 -> computeScroll
    4:4:void computeScroll():0 -> computeScroll
    5:5:void stopNestedScroll(int):0:0 -> computeScroll
    5:5:void computeScroll():0 -> computeScroll
    int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect) -> d
    1:1:void androidx.core.view.ViewCompat.postInvalidateOnAnimation(android.view.View):0:0 -> draw
    1:1:void draw(android.graphics.Canvas):0 -> draw
    2:2:void draw(android.graphics.Canvas):0:0 -> draw
    3:3:void androidx.core.view.ViewCompat.postInvalidateOnAnimation(android.view.View):0:0 -> draw
    3:3:void draw(android.graphics.Canvas):0 -> draw
    4:4:void draw(android.graphics.Canvas):0:0 -> draw
    boolean dispatchNestedPreScroll(int,int,int[],int[],int) -> e
    1:1:void smoothScrollBy(int,int):0:0 -> f
    1:1:void doScrollY(int):0 -> f
    2:2:void doScrollY(int):0:0 -> f
    1:1:void stopNestedScroll(int):0:0 -> g
    1:1:void endDrag():0 -> g
    2:2:void endDrag():0:0 -> g
    1:1:int androidx.core.view.NestedScrollingParentHelper.getNestedScrollAxes():0:0 -> getNestedScrollAxes
    1:1:int getNestedScrollAxes():0 -> getNestedScrollAxes
    void ensureGlows() -> h
    1:1:void androidx.core.view.NestedScrollingParentHelper.onNestedScrollAccepted(android.view.View,android.view.View,int,int):0:0 -> i
    1:1:void onNestedScrollAccepted(android.view.View,android.view.View,int,int):0 -> i
    2:2:void onNestedScrollAccepted(android.view.View,android.view.View,int,int):0:0 -> i
    1:1:boolean androidx.core.view.NestedScrollingChildHelper.isNestedScrollingEnabled():0:0 -> isNestedScrollingEnabled
    1:1:boolean isNestedScrollingEnabled():0 -> isNestedScrollingEnabled
    1:1:boolean canScroll():0:0 -> j
    1:1:boolean executeKeyEvent(android.view.KeyEvent):0 -> j
    2:2:boolean executeKeyEvent(android.view.KeyEvent):0:0 -> j
    3:3:boolean pageScroll(int):0:0 -> j
    3:3:boolean executeKeyEvent(android.view.KeyEvent):0 -> j
    4:4:boolean executeKeyEvent(android.view.KeyEvent):0:0 -> j
    void onNestedScroll(android.view.View,int,int,int,int,int,int[]) -> k
    void onNestedScroll(android.view.View,int,int,int,int,int) -> l
    1:1:void androidx.core.view.NestedScrollingParentHelper.onStopNestedScroll(android.view.View,int):0:0 -> m
    1:1:void onStopNestedScroll(android.view.View,int):0 -> m
    2:2:void onStopNestedScroll(android.view.View,int):0:0 -> m
    void onNestedPreScroll(android.view.View,int,int,int[],int) -> n
    boolean onStartNestedScroll(android.view.View,android.view.View,int,int) -> o
    1:1:void initVelocityTrackerIfNotExists():0:0 -> onInterceptTouchEvent
    1:1:boolean onInterceptTouchEvent(android.view.MotionEvent):0 -> onInterceptTouchEvent
    2:2:boolean onInterceptTouchEvent(android.view.MotionEvent):0:0 -> onInterceptTouchEvent
    3:3:void androidx.core.view.ViewCompat.postInvalidateOnAnimation(android.view.View):0:0 -> onInterceptTouchEvent
    3:3:boolean onInterceptTouchEvent(android.view.MotionEvent):0 -> onInterceptTouchEvent
    4:4:void stopNestedScroll(int):0:0 -> onInterceptTouchEvent
    4:4:boolean onInterceptTouchEvent(android.view.MotionEvent):0 -> onInterceptTouchEvent
    5:5:boolean onInterceptTouchEvent(android.view.MotionEvent):0:0 -> onInterceptTouchEvent
    6:6:boolean inChild(int,int):0:0 -> onInterceptTouchEvent
    6:6:boolean onInterceptTouchEvent(android.view.MotionEvent):0 -> onInterceptTouchEvent
    7:7:boolean onInterceptTouchEvent(android.view.MotionEvent):0:0 -> onInterceptTouchEvent
    8:8:void initOrResetVelocityTracker():0:0 -> onInterceptTouchEvent
    8:8:boolean onInterceptTouchEvent(android.view.MotionEvent):0 -> onInterceptTouchEvent
    9:9:boolean onInterceptTouchEvent(android.view.MotionEvent):0:0 -> onInterceptTouchEvent
    1:1:void onNestedPreScroll(android.view.View,int,int,int[],int):0:0 -> onNestedPreScroll
    1:1:void onNestedPreScroll(android.view.View,int,int,int[]):0 -> onNestedPreScroll
    1:1:void onNestedScrollAccepted(android.view.View,android.view.View,int,int):0:0 -> onNestedScrollAccepted
    1:1:void onNestedScrollAccepted(android.view.View,android.view.View,int):0 -> onNestedScrollAccepted
    2:2:void androidx.core.view.NestedScrollingParentHelper.onNestedScrollAccepted(android.view.View,android.view.View,int,int):0:0 -> onNestedScrollAccepted
    2:2:void onNestedScrollAccepted(android.view.View,android.view.View,int,int):0 -> onNestedScrollAccepted
    2:2:void onNestedScrollAccepted(android.view.View,android.view.View,int):0 -> onNestedScrollAccepted
    3:3:void onNestedScrollAccepted(android.view.View,android.view.View,int,int):0:0 -> onNestedScrollAccepted
    3:3:void onNestedScrollAccepted(android.view.View,android.view.View,int):0 -> onNestedScrollAccepted
    1:1:boolean isOffScreen(android.view.View):0:0 -> onRequestFocusInDescendants
    1:1:boolean onRequestFocusInDescendants(int,android.graphics.Rect):0 -> onRequestFocusInDescendants
    2:2:boolean onRequestFocusInDescendants(int,android.graphics.Rect):0:0 -> onRequestFocusInDescendants
    1:1:void androidx.appcompat.app.AlertController$2.onScrollChange(androidx.core.widget.NestedScrollView,int,int,int,int):0:0 -> onScrollChanged
    1:1:void onScrollChanged(int,int,int,int):0 -> onScrollChanged
    1:1:void onStopNestedScroll(android.view.View,int):0:0 -> onStopNestedScroll
    1:1:void onStopNestedScroll(android.view.View):0 -> onStopNestedScroll
    2:2:void androidx.core.view.NestedScrollingParentHelper.onStopNestedScroll(android.view.View,int):0:0 -> onStopNestedScroll
    2:2:void onStopNestedScroll(android.view.View,int):0 -> onStopNestedScroll
    2:2:void onStopNestedScroll(android.view.View):0 -> onStopNestedScroll
    3:3:void onStopNestedScroll(android.view.View,int):0:0 -> onStopNestedScroll
    3:3:void onStopNestedScroll(android.view.View):0 -> onStopNestedScroll
    1:1:void initVelocityTrackerIfNotExists():0:0 -> onTouchEvent
    1:1:boolean onTouchEvent(android.view.MotionEvent):0 -> onTouchEvent
    2:2:boolean onTouchEvent(android.view.MotionEvent):0:0 -> onTouchEvent
    3:3:void dispatchNestedScroll(int,int,int,int,int[],int,int[]):0:0 -> onTouchEvent
    3:3:boolean onTouchEvent(android.view.MotionEvent):0 -> onTouchEvent
    4:4:void androidx.core.view.NestedScrollingChildHelper.dispatchNestedScroll(int,int,int,int,int[],int,int[]):0:0 -> onTouchEvent
    4:4:void dispatchNestedScroll(int,int,int,int,int[],int,int[]):0 -> onTouchEvent
    4:4:boolean onTouchEvent(android.view.MotionEvent):0 -> onTouchEvent
    5:5:boolean onTouchEvent(android.view.MotionEvent):0:0 -> onTouchEvent
    6:6:void androidx.core.widget.EdgeEffectCompat.onPull(android.widget.EdgeEffect,float,float):0:0 -> onTouchEvent
    6:6:boolean onTouchEvent(android.view.MotionEvent):0 -> onTouchEvent
    7:7:boolean onTouchEvent(android.view.MotionEvent):0:0 -> onTouchEvent
    8:8:void androidx.core.widget.EdgeEffectCompat.onPull(android.widget.EdgeEffect,float,float):0:0 -> onTouchEvent
    8:8:boolean onTouchEvent(android.view.MotionEvent):0 -> onTouchEvent
    9:9:boolean onTouchEvent(android.view.MotionEvent):0:0 -> onTouchEvent
    10:10:void androidx.core.view.ViewCompat.postInvalidateOnAnimation(android.view.View):0:0 -> onTouchEvent
    10:10:boolean onTouchEvent(android.view.MotionEvent):0 -> onTouchEvent
    11:11:boolean onTouchEvent(android.view.MotionEvent):0:0 -> onTouchEvent
    12:12:void androidx.core.view.ViewCompat.postInvalidateOnAnimation(android.view.View):0:0 -> onTouchEvent
    12:12:boolean onTouchEvent(android.view.MotionEvent):0 -> onTouchEvent
    13:13:boolean onTouchEvent(android.view.MotionEvent):0:0 -> onTouchEvent
    void fling(int) -> p
    boolean fullScroll(int) -> q
    1:1:boolean androidx.core.view.NestedScrollingChildHelper.hasNestedScrollingParent(int):0:0 -> r
    1:1:boolean hasNestedScrollingParent(int):0 -> r
    1:1:boolean scrollToChildRect(android.graphics.Rect,boolean):0:0 -> requestChildRectangleOnScreen
    1:1:boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean):0 -> requestChildRectangleOnScreen
    2:2:void smoothScrollBy(int,int):0:0 -> requestChildRectangleOnScreen
    2:2:boolean scrollToChildRect(android.graphics.Rect,boolean):0 -> requestChildRectangleOnScreen
    2:2:boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean):0 -> requestChildRectangleOnScreen
    boolean isViewDescendantOf(android.view.View,android.view.View) -> s
    1:1:void androidx.core.view.NestedScrollingChildHelper.setNestedScrollingEnabled(boolean):0:0 -> setNestedScrollingEnabled
    1:1:void setNestedScrollingEnabled(boolean):0 -> setNestedScrollingEnabled
    2:2:void androidx.core.view.ViewCompat.stopNestedScroll(android.view.View):0:0 -> setNestedScrollingEnabled
    2:2:void androidx.core.view.NestedScrollingChildHelper.setNestedScrollingEnabled(boolean):0 -> setNestedScrollingEnabled
    2:2:void setNestedScrollingEnabled(boolean):0 -> setNestedScrollingEnabled
    3:3:void androidx.core.view.NestedScrollingChildHelper.setNestedScrollingEnabled(boolean):0:0 -> setNestedScrollingEnabled
    3:3:void setNestedScrollingEnabled(boolean):0 -> setNestedScrollingEnabled
    1:1:boolean startNestedScroll(int,int):0:0 -> startNestedScroll
    1:1:boolean startNestedScroll(int):0 -> startNestedScroll
    1:1:void stopNestedScroll(int):0:0 -> stopNestedScroll
    1:1:void stopNestedScroll():0 -> stopNestedScroll
    boolean isWithinDeltaOfScreen(android.view.View,int,int) -> t
    1:1:void androidx.core.view.NestedScrollingChildHelper.dispatchNestedScroll(int,int,int,int,int[],int,int[]):0:0 -> u
    1:1:void onNestedScrollInternal(int,int,int[]):0 -> u
    void onSecondaryPointerUp(android.view.MotionEvent) -> v
    boolean overScrollByCompat(int,int,int,int,int,int,int,int,boolean) -> w
    void recycleVelocityTracker() -> x
    1:1:void stopNestedScroll(int):0:0 -> y
    1:1:void runAnimatedScroll(boolean):0 -> y
    2:2:void runAnimatedScroll(boolean):0:0 -> y
    3:3:void androidx.core.view.ViewCompat.postInvalidateOnAnimation(android.view.View):0:0 -> y
    3:3:void runAnimatedScroll(boolean):0 -> y
    1:1:android.view.View findFocusableViewInBounds(boolean,int,int):0:0 -> z
    1:1:boolean scrollAndFocus(int,int,int):0 -> z
    2:2:boolean scrollAndFocus(int,int,int):0:0 -> z
androidx.core.widget.NestedScrollView$AccessibilityDelegate -> androidx.core.widget.NestedScrollView$a:
    1:1:void androidx.core.view.AccessibilityDelegateCompat.onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent):0:0 -> c
    1:1:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent):0 -> c
    2:2:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent):0:0 -> c
    3:3:void androidx.core.view.accessibility.AccessibilityRecordCompat.setMaxScrollX(android.view.accessibility.AccessibilityRecord,int):0:0 -> c
    3:3:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent):0 -> c
    4:4:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent):0:0 -> c
    5:5:void androidx.core.view.accessibility.AccessibilityRecordCompat.setMaxScrollY(android.view.accessibility.AccessibilityRecord,int):0:0 -> c
    5:5:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent):0 -> c
    1:1:void androidx.core.view.AccessibilityDelegateCompat.onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0:0 -> d
    1:1:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0 -> d
    2:2:android.view.accessibility.AccessibilityNodeInfo androidx.core.view.accessibility.AccessibilityNodeInfoCompat.unwrap():0:0 -> d
    2:2:void androidx.core.view.AccessibilityDelegateCompat.onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0 -> d
    2:2:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0 -> d
    3:3:void androidx.core.view.AccessibilityDelegateCompat.onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0:0 -> d
    3:3:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0 -> d
    4:4:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0:0 -> d
    5:5:void androidx.core.view.accessibility.AccessibilityNodeInfoCompat.setClassName(java.lang.CharSequence):0:0 -> d
    5:5:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0 -> d
    6:6:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0:0 -> d
    7:7:void androidx.core.view.accessibility.AccessibilityNodeInfoCompat.setScrollable(boolean):0:0 -> d
    7:7:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0 -> d
    8:8:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0:0 -> d
    1:1:void androidx.core.widget.NestedScrollView.smoothScrollTo(int,int,int,boolean):0:0 -> g
    1:1:void androidx.core.widget.NestedScrollView.smoothScrollTo(int,int,boolean):0 -> g
    1:1:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle):0 -> g
    2:2:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle):0:0 -> g
androidx.core.widget.NestedScrollView$OnScrollChangeListener -> androidx.core.widget.NestedScrollView$b:
androidx.core.widget.NestedScrollView$SavedState -> androidx.core.widget.NestedScrollView$c:
    int scrollPosition -> a
androidx.core.widget.NestedScrollView$SavedState$1 -> androidx.core.widget.NestedScrollView$c$a:
    1:1:androidx.core.widget.NestedScrollView$SavedState createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    1:1:java.lang.Object createFromParcel(android.os.Parcel):0 -> createFromParcel
    1:1:androidx.core.widget.NestedScrollView$SavedState[] newArray(int):0:0 -> newArray
    1:1:java.lang.Object[] newArray(int):0 -> newArray
androidx.core.widget.TextViewOnReceiveContentListener -> a.e.k.c:
    1:1:int androidx.core.view.ContentInfoCompat.getSource():0:0 -> a
    1:1:androidx.core.view.ContentInfoCompat onReceiveContent(android.view.View,androidx.core.view.ContentInfoCompat):0 -> a
    2:2:androidx.core.view.ContentInfoCompat onReceiveContent(android.view.View,androidx.core.view.ContentInfoCompat):0:0 -> a
    3:3:android.content.ClipData androidx.core.view.ContentInfoCompat.getClip():0:0 -> a
    3:3:void onReceiveForDragAndDrop(android.widget.TextView,androidx.core.view.ContentInfoCompat):0 -> a
    3:3:androidx.core.view.ContentInfoCompat onReceiveContent(android.view.View,androidx.core.view.ContentInfoCompat):0 -> a
    4:4:void onReceiveForDragAndDrop(android.widget.TextView,androidx.core.view.ContentInfoCompat):0:0 -> a
    4:4:androidx.core.view.ContentInfoCompat onReceiveContent(android.view.View,androidx.core.view.ContentInfoCompat):0 -> a
    5:5:int androidx.core.view.ContentInfoCompat.getFlags():0:0 -> a
    5:5:void onReceiveForDragAndDrop(android.widget.TextView,androidx.core.view.ContentInfoCompat):0 -> a
    5:5:androidx.core.view.ContentInfoCompat onReceiveContent(android.view.View,androidx.core.view.ContentInfoCompat):0 -> a
    6:6:java.lang.CharSequence coerceToText(android.content.ClipData,android.content.Context,int):0:0 -> a
    6:6:void onReceiveForDragAndDrop(android.widget.TextView,androidx.core.view.ContentInfoCompat):0 -> a
    6:6:androidx.core.view.ContentInfoCompat onReceiveContent(android.view.View,androidx.core.view.ContentInfoCompat):0 -> a
    7:7:void onReceiveForDragAndDrop(android.widget.TextView,androidx.core.view.ContentInfoCompat):0:0 -> a
    7:7:androidx.core.view.ContentInfoCompat onReceiveContent(android.view.View,androidx.core.view.ContentInfoCompat):0 -> a
    8:8:android.content.ClipData androidx.core.view.ContentInfoCompat.getClip():0:0 -> a
    8:8:androidx.core.view.ContentInfoCompat onReceiveContent(android.view.View,androidx.core.view.ContentInfoCompat):0 -> a
    9:9:int androidx.core.view.ContentInfoCompat.getFlags():0:0 -> a
    9:9:androidx.core.view.ContentInfoCompat onReceiveContent(android.view.View,androidx.core.view.ContentInfoCompat):0 -> a
    10:10:androidx.core.view.ContentInfoCompat onReceiveContent(android.view.View,androidx.core.view.ContentInfoCompat):0:0 -> a
    1:1:java.lang.CharSequence androidx.core.widget.TextViewOnReceiveContentListener$Api16Impl.coerce(android.content.Context,android.content.ClipData$Item,int):0:0 -> b
    1:1:java.lang.CharSequence coerceToText(android.content.Context,android.content.ClipData$Item,int):0 -> b
    void replaceSelection(android.text.Editable,java.lang.CharSequence) -> c
androidx.cursoradapter.widget.CursorAdapter -> a.f.a.a:
    android.database.Cursor mCursor -> c
    androidx.cursoradapter.widget.CursorFilter mCursorFilter -> h
    androidx.cursoradapter.widget.CursorAdapter$ChangeObserver mChangeObserver -> f
    android.database.DataSetObserver mDataSetObserver -> g
    int mRowIDColumn -> e
    boolean mDataValid -> a
    boolean mAutoRequery -> b
    android.content.Context mContext -> d
    1:1:void init(android.content.Context,android.database.Cursor,int):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.database.Cursor,boolean):0 -> <init>
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> a
    1:1:android.database.Cursor swapCursor(android.database.Cursor):0:0 -> b
    1:1:void changeCursor(android.database.Cursor):0 -> b
    2:2:void changeCursor(android.database.Cursor):0:0 -> b
    java.lang.CharSequence convertToString(android.database.Cursor) -> c
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> d
    1:1:android.view.View androidx.cursoradapter.widget.ResourceCursorAdapter.newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup):0:0 -> getDropDownView
    1:1:android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup):0 -> getDropDownView
    2:2:android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup):0:0 -> getDropDownView
androidx.cursoradapter.widget.CursorAdapter$ChangeObserver -> a.f.a.a$a:
    androidx.cursoradapter.widget.CursorAdapter this$0 -> a
    1:1:void androidx.cursoradapter.widget.CursorAdapter.onContentChanged():0:0 -> onChange
    1:1:void onChange(boolean):0 -> onChange
androidx.cursoradapter.widget.CursorAdapter$MyDataSetObserver -> a.f.a.a$b:
    androidx.cursoradapter.widget.CursorAdapter this$0 -> a
androidx.cursoradapter.widget.CursorFilter -> a.f.a.b:
    androidx.cursoradapter.widget.CursorFilter$CursorFilterClient mClient -> a
    1:1:android.database.Cursor androidx.appcompat.widget.SuggestionsAdapter.runQueryOnBackgroundThread(java.lang.CharSequence):0:0 -> performFiltering
    1:1:android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence):0 -> performFiltering
    2:2:android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence):0:0 -> performFiltering
    1:1:android.database.Cursor androidx.cursoradapter.widget.CursorAdapter.getCursor():0:0 -> publishResults
    1:1:void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults):0 -> publishResults
    2:2:void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults):0:0 -> publishResults
androidx.cursoradapter.widget.CursorFilter$CursorFilterClient -> a.f.a.b$a:
androidx.cursoradapter.widget.ResourceCursorAdapter -> a.f.a.c:
    int mDropDownLayout -> j
    int mLayout -> i
    android.view.LayoutInflater mInflater -> k
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> d
androidx.customview.view.AbsSavedState -> a.g.a.a:
    android.os.Parcelable mSuperState -> a
    androidx.customview.view.AbsSavedState EMPTY_STATE -> b
    1:1:void <init>():0:0 -> <init>
    1:1:void <init>(androidx.customview.view.AbsSavedState$1):0 -> <init>
androidx.customview.view.AbsSavedState$1 -> a.g.a.a$a:
androidx.customview.view.AbsSavedState$2 -> a.g.a.a$b:
    1:1:androidx.customview.view.AbsSavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader):0:0 -> createFromParcel
    1:1:androidx.customview.view.AbsSavedState createFromParcel(android.os.Parcel):0 -> createFromParcel
    1:1:java.lang.Object createFromParcel(android.os.Parcel):0 -> createFromParcel
    2:2:androidx.customview.view.AbsSavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader):0:0 -> createFromParcel
    2:2:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader):0 -> createFromParcel
    1:1:androidx.customview.view.AbsSavedState[] newArray(int):0:0 -> newArray
    1:1:java.lang.Object[] newArray(int):0 -> newArray
androidx.fragment.R$styleable -> a.h.a:
    int[] FragmentContainerView -> b
    int[] Fragment -> a
androidx.fragment.app.BackStackRecord -> a.h.b.a:
    androidx.fragment.app.FragmentManager mManager -> q
    boolean mCommitted -> r
    int mIndex -> s
    1:1:androidx.fragment.app.FragmentHostCallback androidx.fragment.app.FragmentManager.getHost():0:0 -> <init>
    1:1:void <init>(androidx.fragment.app.FragmentManager):0 -> <init>
    2:2:android.content.Context androidx.fragment.app.FragmentHostCallback.getContext():0:0 -> <init>
    2:2:void <init>(androidx.fragment.app.FragmentManager):0 -> <init>
    3:3:void <init>(androidx.fragment.app.FragmentManager):0:0 -> <init>
    1:1:void androidx.fragment.app.FragmentManager.addBackStackState(androidx.fragment.app.BackStackRecord):0:0 -> a
    1:1:boolean generateOps(java.util.ArrayList,java.util.ArrayList):0 -> a
    int commit() -> c
    1:1:void androidx.fragment.app.FragmentTransaction.doAddOp(int,androidx.fragment.app.Fragment,java.lang.String,int):0:0 -> d
    1:1:void doAddOp(int,androidx.fragment.app.Fragment,java.lang.String,int):0 -> d
    2:2:void doAddOp(int,androidx.fragment.app.Fragment,java.lang.String,int):0:0 -> d
    3:3:void androidx.fragment.app.FragmentTransaction.doAddOp(int,androidx.fragment.app.Fragment,java.lang.String,int):0:0 -> d
    3:3:void doAddOp(int,androidx.fragment.app.Fragment,java.lang.String,int):0 -> d
    void bumpBackStackNesting(int) -> f
    1:1:void dump(java.lang.String,java.io.PrintWriter):0:0 -> g
    1:1:int commitInternal(boolean):0 -> g
    2:2:int commitInternal(boolean):0:0 -> g
    3:3:int androidx.fragment.app.FragmentManager.allocBackStackIndex():0:0 -> g
    3:3:int commitInternal(boolean):0 -> g
    4:4:int commitInternal(boolean):0:0 -> g
    void dump(java.lang.String,java.io.PrintWriter,boolean) -> h
    void executeOps() -> i
    void executePopOps(boolean) -> j
    boolean interactsWith(int) -> k
    boolean interactsWith(java.util.ArrayList,int,int) -> l
androidx.fragment.app.BackStackState -> a.h.b.b:
    java.lang.String mName -> f
    boolean mReorderingAllowed -> n
    int mBreadCrumbShortTitleRes -> j
    int mBreadCrumbTitleRes -> h
    int mIndex -> g
    int[] mOps -> a
    int mTransition -> e
    java.util.ArrayList mFragmentWhos -> b
    java.lang.CharSequence mBreadCrumbTitleText -> i
    java.lang.CharSequence mBreadCrumbShortTitleText -> k
    java.util.ArrayList mSharedElementTargetNames -> m
    java.util.ArrayList mSharedElementSourceNames -> l
    int[] mOldMaxLifecycleStates -> c
    int[] mCurrentMaxLifecycleStates -> d
androidx.fragment.app.BackStackState$1 -> a.h.b.b$a:
    1:1:androidx.fragment.app.BackStackState createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    1:1:java.lang.Object createFromParcel(android.os.Parcel):0 -> createFromParcel
    1:1:androidx.fragment.app.BackStackState[] newArray(int):0:0 -> newArray
    1:1:java.lang.Object[] newArray(int):0 -> newArray
androidx.fragment.app.DefaultSpecialEffectsController -> a.h.b.c:
    1:1:androidx.fragment.app.Fragment androidx.fragment.app.SpecialEffectsController$Operation.getFragment():0:0 -> b
    1:1:void executeOperations(java.util.List,boolean):0 -> b
    2:2:void executeOperations(java.util.List,boolean):0:0 -> b
    3:3:androidx.fragment.app.SpecialEffectsController$Operation$State androidx.fragment.app.SpecialEffectsController$Operation.getFinalState():0:0 -> b
    3:3:void executeOperations(java.util.List,boolean):0 -> b
    4:4:void executeOperations(java.util.List,boolean):0:0 -> b
    5:5:void androidx.fragment.app.SpecialEffectsController$Operation.markStartedSpecialEffect(androidx.core.os.CancellationSignal):0:0 -> b
    5:5:void executeOperations(java.util.List,boolean):0 -> b
    6:6:void executeOperations(java.util.List,boolean):0:0 -> b
    7:7:void androidx.fragment.app.SpecialEffectsController$Operation.markStartedSpecialEffect(androidx.core.os.CancellationSignal):0:0 -> b
    7:7:void executeOperations(java.util.List,boolean):0 -> b
    8:8:void executeOperations(java.util.List,boolean):0:0 -> b
    9:9:void androidx.fragment.app.SpecialEffectsController$Operation.addCompletionListener(java.lang.Runnable):0:0 -> b
    9:9:void executeOperations(java.util.List,boolean):0 -> b
    10:10:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0:0 -> b
    10:10:void executeOperations(java.util.List,boolean):0 -> b
    11:11:androidx.fragment.app.FragmentTransitionImpl androidx.fragment.app.DefaultSpecialEffectsController$TransitionInfo.getHandlingImpl():0:0 -> b
    11:11:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    11:11:void executeOperations(java.util.List,boolean):0 -> b
    12:12:androidx.fragment.app.SpecialEffectsController$Operation androidx.fragment.app.DefaultSpecialEffectsController$SpecialEffectsInfo.getOperation():0:0 -> b
    12:12:androidx.fragment.app.FragmentTransitionImpl androidx.fragment.app.DefaultSpecialEffectsController$TransitionInfo.getHandlingImpl():0 -> b
    12:12:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    12:12:void executeOperations(java.util.List,boolean):0 -> b
    13:13:androidx.fragment.app.Fragment androidx.fragment.app.SpecialEffectsController$Operation.getFragment():0:0 -> b
    13:13:androidx.fragment.app.FragmentTransitionImpl androidx.fragment.app.DefaultSpecialEffectsController$TransitionInfo.getHandlingImpl():0 -> b
    13:13:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    13:13:void executeOperations(java.util.List,boolean):0 -> b
    14:14:androidx.fragment.app.FragmentTransitionImpl androidx.fragment.app.DefaultSpecialEffectsController$TransitionInfo.getHandlingImpl():0:0 -> b
    14:14:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    14:14:void executeOperations(java.util.List,boolean):0 -> b
    15:15:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0:0 -> b
    15:15:void executeOperations(java.util.List,boolean):0 -> b
    16:16:androidx.fragment.app.SpecialEffectsController$Operation androidx.fragment.app.DefaultSpecialEffectsController$SpecialEffectsInfo.getOperation():0:0 -> b
    16:16:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    16:16:void executeOperations(java.util.List,boolean):0 -> b
    17:17:androidx.fragment.app.Fragment androidx.fragment.app.SpecialEffectsController$Operation.getFragment():0:0 -> b
    17:17:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    17:17:void executeOperations(java.util.List,boolean):0 -> b
    18:18:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0:0 -> b
    18:18:void executeOperations(java.util.List,boolean):0 -> b
    19:19:java.lang.Object androidx.fragment.app.DefaultSpecialEffectsController$TransitionInfo.getTransition():0:0 -> b
    19:19:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    19:19:void executeOperations(java.util.List,boolean):0 -> b
    20:20:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0:0 -> b
    20:20:void executeOperations(java.util.List,boolean):0 -> b
    21:21:androidx.fragment.app.SpecialEffectsController$Operation androidx.fragment.app.DefaultSpecialEffectsController$SpecialEffectsInfo.getOperation():0:0 -> b
    21:21:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    21:21:void executeOperations(java.util.List,boolean):0 -> b
    22:22:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0:0 -> b
    22:22:void executeOperations(java.util.List,boolean):0 -> b
    23:23:android.view.ViewGroup androidx.fragment.app.SpecialEffectsController.getContainer():0:0 -> b
    23:23:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    23:23:void executeOperations(java.util.List,boolean):0 -> b
    24:24:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0:0 -> b
    24:24:void executeOperations(java.util.List,boolean):0 -> b
    25:25:boolean androidx.fragment.app.DefaultSpecialEffectsController$TransitionInfo.hasSharedElementTransition():0:0 -> b
    25:25:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    25:25:void executeOperations(java.util.List,boolean):0 -> b
    26:26:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0:0 -> b
    26:26:void executeOperations(java.util.List,boolean):0 -> b
    27:27:androidx.fragment.app.Fragment androidx.fragment.app.SpecialEffectsController$Operation.getFragment():0:0 -> b
    27:27:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    27:27:void executeOperations(java.util.List,boolean):0 -> b
    28:28:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0:0 -> b
    28:28:void executeOperations(java.util.List,boolean):0 -> b
    29:29:androidx.fragment.app.Fragment androidx.fragment.app.SpecialEffectsController$Operation.getFragment():0:0 -> b
    29:29:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    29:29:void executeOperations(java.util.List,boolean):0 -> b
    30:30:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0:0 -> b
    30:30:void executeOperations(java.util.List,boolean):0 -> b
    31:31:androidx.fragment.app.Fragment androidx.fragment.app.SpecialEffectsController$Operation.getFragment():0:0 -> b
    31:31:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    31:31:void executeOperations(java.util.List,boolean):0 -> b
    32:32:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0:0 -> b
    32:32:void executeOperations(java.util.List,boolean):0 -> b
    33:33:androidx.fragment.app.Fragment androidx.fragment.app.SpecialEffectsController$Operation.getFragment():0:0 -> b
    33:33:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    33:33:void executeOperations(java.util.List,boolean):0 -> b
    34:34:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0:0 -> b
    34:34:void executeOperations(java.util.List,boolean):0 -> b
    35:35:androidx.fragment.app.Fragment androidx.fragment.app.SpecialEffectsController$Operation.getFragment():0:0 -> b
    35:35:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    35:35:void executeOperations(java.util.List,boolean):0 -> b
    36:36:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0:0 -> b
    36:36:void executeOperations(java.util.List,boolean):0 -> b
    37:37:androidx.fragment.app.Fragment androidx.fragment.app.SpecialEffectsController$Operation.getFragment():0:0 -> b
    37:37:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    37:37:void executeOperations(java.util.List,boolean):0 -> b
    38:38:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0:0 -> b
    38:38:void executeOperations(java.util.List,boolean):0 -> b
    39:39:androidx.fragment.app.Fragment androidx.fragment.app.SpecialEffectsController$Operation.getFragment():0:0 -> b
    39:39:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    39:39:void executeOperations(java.util.List,boolean):0 -> b
    40:40:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0:0 -> b
    40:40:void executeOperations(java.util.List,boolean):0 -> b
    41:41:androidx.fragment.app.Fragment androidx.fragment.app.SpecialEffectsController$Operation.getFragment():0:0 -> b
    41:41:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    41:41:void executeOperations(java.util.List,boolean):0 -> b
    42:42:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0:0 -> b
    42:42:void executeOperations(java.util.List,boolean):0 -> b
    43:43:androidx.fragment.app.Fragment androidx.fragment.app.SpecialEffectsController$Operation.getFragment():0:0 -> b
    43:43:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    43:43:void executeOperations(java.util.List,boolean):0 -> b
    44:44:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0:0 -> b
    44:44:void executeOperations(java.util.List,boolean):0 -> b
    45:45:boolean androidx.collection.ArrayMap.retainAll(java.util.Collection):0:0 -> b
    45:45:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    45:45:void executeOperations(java.util.List,boolean):0 -> b
    46:46:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0:0 -> b
    46:46:void executeOperations(java.util.List,boolean):0 -> b
    47:47:boolean androidx.collection.ArrayMap.retainAll(java.util.Collection):0:0 -> b
    47:47:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    47:47:void executeOperations(java.util.List,boolean):0 -> b
    48:48:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0:0 -> b
    48:48:void executeOperations(java.util.List,boolean):0 -> b
    49:49:androidx.fragment.app.Fragment androidx.fragment.app.SpecialEffectsController$Operation.getFragment():0:0 -> b
    49:49:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    49:49:void executeOperations(java.util.List,boolean):0 -> b
    50:50:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0:0 -> b
    50:50:void executeOperations(java.util.List,boolean):0 -> b
    51:51:boolean androidx.collection.ArrayMap.retainAll(java.util.Collection):0:0 -> b
    51:51:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    51:51:void executeOperations(java.util.List,boolean):0 -> b
    52:52:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0:0 -> b
    52:52:void executeOperations(java.util.List,boolean):0 -> b
    53:53:boolean androidx.collection.ArrayMap.retainAll(java.util.Collection):0:0 -> b
    53:53:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    53:53:void executeOperations(java.util.List,boolean):0 -> b
    54:54:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0:0 -> b
    54:54:void executeOperations(java.util.List,boolean):0 -> b
    55:55:androidx.fragment.app.Fragment androidx.fragment.app.SpecialEffectsController$Operation.getFragment():0:0 -> b
    55:55:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    55:55:void executeOperations(java.util.List,boolean):0 -> b
    56:56:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0:0 -> b
    56:56:void executeOperations(java.util.List,boolean):0 -> b
    57:57:android.view.ViewGroup androidx.fragment.app.SpecialEffectsController.getContainer():0:0 -> b
    57:57:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    57:57:void executeOperations(java.util.List,boolean):0 -> b
    58:58:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0:0 -> b
    58:58:void executeOperations(java.util.List,boolean):0 -> b
    59:59:android.view.ViewGroup androidx.fragment.app.SpecialEffectsController.getContainer():0:0 -> b
    59:59:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    59:59:void executeOperations(java.util.List,boolean):0 -> b
    60:60:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0:0 -> b
    60:60:void executeOperations(java.util.List,boolean):0 -> b
    61:61:androidx.fragment.app.SpecialEffectsController$Operation androidx.fragment.app.DefaultSpecialEffectsController$SpecialEffectsInfo.getOperation():0:0 -> b
    61:61:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    61:61:void executeOperations(java.util.List,boolean):0 -> b
    62:62:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0:0 -> b
    62:62:void executeOperations(java.util.List,boolean):0 -> b
    63:63:java.lang.Object androidx.fragment.app.DefaultSpecialEffectsController$TransitionInfo.getTransition():0:0 -> b
    63:63:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    63:63:void executeOperations(java.util.List,boolean):0 -> b
    64:64:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0:0 -> b
    64:64:void executeOperations(java.util.List,boolean):0 -> b
    65:65:androidx.fragment.app.SpecialEffectsController$Operation androidx.fragment.app.DefaultSpecialEffectsController$SpecialEffectsInfo.getOperation():0:0 -> b
    65:65:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    65:65:void executeOperations(java.util.List,boolean):0 -> b
    66:66:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0:0 -> b
    66:66:void executeOperations(java.util.List,boolean):0 -> b
    67:67:androidx.fragment.app.Fragment androidx.fragment.app.SpecialEffectsController$Operation.getFragment():0:0 -> b
    67:67:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    67:67:void executeOperations(java.util.List,boolean):0 -> b
    68:68:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0:0 -> b
    68:68:void executeOperations(java.util.List,boolean):0 -> b
    69:69:androidx.fragment.app.SpecialEffectsController$Operation$State androidx.fragment.app.SpecialEffectsController$Operation.getFinalState():0:0 -> b
    69:69:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    69:69:void executeOperations(java.util.List,boolean):0 -> b
    70:70:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0:0 -> b
    70:70:void executeOperations(java.util.List,boolean):0 -> b
    71:71:androidx.fragment.app.Fragment androidx.fragment.app.SpecialEffectsController$Operation.getFragment():0:0 -> b
    71:71:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    71:71:void executeOperations(java.util.List,boolean):0 -> b
    72:72:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0:0 -> b
    72:72:void executeOperations(java.util.List,boolean):0 -> b
    73:73:androidx.fragment.app.Fragment androidx.fragment.app.SpecialEffectsController$Operation.getFragment():0:0 -> b
    73:73:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    73:73:void executeOperations(java.util.List,boolean):0 -> b
    74:74:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0:0 -> b
    74:74:void executeOperations(java.util.List,boolean):0 -> b
    75:75:android.view.ViewGroup androidx.fragment.app.SpecialEffectsController.getContainer():0:0 -> b
    75:75:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    75:75:void executeOperations(java.util.List,boolean):0 -> b
    76:76:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0:0 -> b
    76:76:void executeOperations(java.util.List,boolean):0 -> b
    77:77:androidx.fragment.app.SpecialEffectsController$Operation$State androidx.fragment.app.SpecialEffectsController$Operation.getFinalState():0:0 -> b
    77:77:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    77:77:void executeOperations(java.util.List,boolean):0 -> b
    78:78:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0:0 -> b
    78:78:void executeOperations(java.util.List,boolean):0 -> b
    79:79:boolean androidx.fragment.app.DefaultSpecialEffectsController$TransitionInfo.isOverlapAllowed():0:0 -> b
    79:79:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    79:79:void executeOperations(java.util.List,boolean):0 -> b
    80:80:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0:0 -> b
    80:80:void executeOperations(java.util.List,boolean):0 -> b
    81:81:java.lang.Object androidx.fragment.app.DefaultSpecialEffectsController$TransitionInfo.getTransition():0:0 -> b
    81:81:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    81:81:void executeOperations(java.util.List,boolean):0 -> b
    82:82:androidx.fragment.app.SpecialEffectsController$Operation androidx.fragment.app.DefaultSpecialEffectsController$SpecialEffectsInfo.getOperation():0:0 -> b
    82:82:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    82:82:void executeOperations(java.util.List,boolean):0 -> b
    83:83:android.view.ViewGroup androidx.fragment.app.SpecialEffectsController.getContainer():0:0 -> b
    83:83:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    83:83:void executeOperations(java.util.List,boolean):0 -> b
    84:84:boolean androidx.core.view.ViewCompat.isLaidOut(android.view.View):0:0 -> b
    84:84:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    84:84:void executeOperations(java.util.List,boolean):0 -> b
    85:85:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0:0 -> b
    85:85:void executeOperations(java.util.List,boolean):0 -> b
    86:86:android.view.ViewGroup androidx.fragment.app.SpecialEffectsController.getContainer():0:0 -> b
    86:86:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    86:86:void executeOperations(java.util.List,boolean):0 -> b
    87:87:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0:0 -> b
    87:87:void executeOperations(java.util.List,boolean):0 -> b
    88:88:androidx.fragment.app.SpecialEffectsController$Operation androidx.fragment.app.DefaultSpecialEffectsController$SpecialEffectsInfo.getOperation():0:0 -> b
    88:88:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    88:88:void executeOperations(java.util.List,boolean):0 -> b
    89:89:androidx.fragment.app.Fragment androidx.fragment.app.SpecialEffectsController$Operation.getFragment():0:0 -> b
    89:89:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    89:89:void executeOperations(java.util.List,boolean):0 -> b
    90:90:androidx.core.os.CancellationSignal androidx.fragment.app.DefaultSpecialEffectsController$SpecialEffectsInfo.getSignal():0:0 -> b
    90:90:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    90:90:void executeOperations(java.util.List,boolean):0 -> b
    91:91:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0:0 -> b
    91:91:void executeOperations(java.util.List,boolean):0 -> b
    92:92:android.view.ViewGroup androidx.fragment.app.SpecialEffectsController.getContainer():0:0 -> b
    92:92:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    92:92:void executeOperations(java.util.List,boolean):0 -> b
    93:93:boolean androidx.core.view.ViewCompat.isLaidOut(android.view.View):0:0 -> b
    93:93:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    93:93:void executeOperations(java.util.List,boolean):0 -> b
    94:94:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0:0 -> b
    94:94:void executeOperations(java.util.List,boolean):0 -> b
    95:95:android.view.ViewGroup androidx.fragment.app.SpecialEffectsController.getContainer():0:0 -> b
    95:95:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    95:95:void executeOperations(java.util.List,boolean):0 -> b
    96:96:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0:0 -> b
    96:96:void executeOperations(java.util.List,boolean):0 -> b
    97:97:android.view.ViewGroup androidx.fragment.app.SpecialEffectsController.getContainer():0:0 -> b
    97:97:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    97:97:void executeOperations(java.util.List,boolean):0 -> b
    98:98:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0:0 -> b
    98:98:void executeOperations(java.util.List,boolean):0 -> b
    99:99:void executeOperations(java.util.List,boolean):0:0 -> b
    100:100:android.view.ViewGroup androidx.fragment.app.SpecialEffectsController.getContainer():0:0 -> b
    100:100:void startAnimations(java.util.List,java.util.List,boolean,java.util.Map):0 -> b
    100:100:void executeOperations(java.util.List,boolean):0 -> b
    101:101:void startAnimations(java.util.List,java.util.List,boolean,java.util.Map):0:0 -> b
    101:101:void executeOperations(java.util.List,boolean):0 -> b
    102:102:androidx.fragment.app.SpecialEffectsController$Operation androidx.fragment.app.DefaultSpecialEffectsController$SpecialEffectsInfo.getOperation():0:0 -> b
    102:102:void startAnimations(java.util.List,java.util.List,boolean,java.util.Map):0 -> b
    102:102:void executeOperations(java.util.List,boolean):0 -> b
    103:103:androidx.fragment.app.Fragment androidx.fragment.app.SpecialEffectsController$Operation.getFragment():0:0 -> b
    103:103:void startAnimations(java.util.List,java.util.List,boolean,java.util.Map):0 -> b
    103:103:void executeOperations(java.util.List,boolean):0 -> b
    104:104:void startAnimations(java.util.List,java.util.List,boolean,java.util.Map):0:0 -> b
    104:104:void executeOperations(java.util.List,boolean):0 -> b
    105:105:androidx.fragment.app.SpecialEffectsController$Operation$State androidx.fragment.app.SpecialEffectsController$Operation.getFinalState():0:0 -> b
    105:105:void startAnimations(java.util.List,java.util.List,boolean,java.util.Map):0 -> b
    105:105:void executeOperations(java.util.List,boolean):0 -> b
    106:106:void startAnimations(java.util.List,java.util.List,boolean,java.util.Map):0:0 -> b
    106:106:void executeOperations(java.util.List,boolean):0 -> b
    107:107:androidx.core.os.CancellationSignal androidx.fragment.app.DefaultSpecialEffectsController$SpecialEffectsInfo.getSignal():0:0 -> b
    107:107:void startAnimations(java.util.List,java.util.List,boolean,java.util.Map):0 -> b
    107:107:void executeOperations(java.util.List,boolean):0 -> b
    108:108:void startAnimations(java.util.List,java.util.List,boolean,java.util.Map):0:0 -> b
    108:108:void executeOperations(java.util.List,boolean):0 -> b
    109:109:androidx.fragment.app.SpecialEffectsController$Operation androidx.fragment.app.DefaultSpecialEffectsController$SpecialEffectsInfo.getOperation():0:0 -> b
    109:109:void startAnimations(java.util.List,java.util.List,boolean,java.util.Map):0 -> b
    109:109:void executeOperations(java.util.List,boolean):0 -> b
    110:110:androidx.fragment.app.Fragment androidx.fragment.app.SpecialEffectsController$Operation.getFragment():0:0 -> b
    110:110:void startAnimations(java.util.List,java.util.List,boolean,java.util.Map):0 -> b
    110:110:void executeOperations(java.util.List,boolean):0 -> b
    111:111:void startAnimations(java.util.List,java.util.List,boolean,java.util.Map):0:0 -> b
    111:111:void executeOperations(java.util.List,boolean):0 -> b
    112:112:java.lang.Object androidx.core.util.Preconditions.checkNotNull(java.lang.Object):0:0 -> b
    112:112:void startAnimations(java.util.List,java.util.List,boolean,java.util.Map):0 -> b
    112:112:void executeOperations(java.util.List,boolean):0 -> b
    113:113:void startAnimations(java.util.List,java.util.List,boolean,java.util.Map):0:0 -> b
    113:113:void executeOperations(java.util.List,boolean):0 -> b
    114:114:java.lang.Object androidx.core.util.Preconditions.checkNotNull(java.lang.Object):0:0 -> b
    114:114:void startAnimations(java.util.List,java.util.List,boolean,java.util.Map):0 -> b
    114:114:void executeOperations(java.util.List,boolean):0 -> b
    115:115:androidx.fragment.app.SpecialEffectsController$Operation$State androidx.fragment.app.SpecialEffectsController$Operation.getFinalState():0:0 -> b
    115:115:void startAnimations(java.util.List,java.util.List,boolean,java.util.Map):0 -> b
    115:115:void executeOperations(java.util.List,boolean):0 -> b
    116:116:void startAnimations(java.util.List,java.util.List,boolean,java.util.Map):0:0 -> b
    116:116:void executeOperations(java.util.List,boolean):0 -> b
    117:117:androidx.core.os.CancellationSignal androidx.fragment.app.DefaultSpecialEffectsController$SpecialEffectsInfo.getSignal():0:0 -> b
    117:117:void startAnimations(java.util.List,java.util.List,boolean,java.util.Map):0 -> b
    117:117:void executeOperations(java.util.List,boolean):0 -> b
    118:118:void startAnimations(java.util.List,java.util.List,boolean,java.util.Map):0:0 -> b
    118:118:void executeOperations(java.util.List,boolean):0 -> b
    119:119:void executeOperations(java.util.List,boolean):0:0 -> b
    120:120:androidx.fragment.app.Fragment androidx.fragment.app.SpecialEffectsController$Operation.getFragment():0:0 -> b
    120:120:void applyContainerChanges(androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    120:120:void executeOperations(java.util.List,boolean):0 -> b
    121:121:void applyContainerChanges(androidx.fragment.app.SpecialEffectsController$Operation):0:0 -> b
    121:121:void executeOperations(java.util.List,boolean):0 -> b
    122:122:androidx.fragment.app.SpecialEffectsController$Operation$State androidx.fragment.app.SpecialEffectsController$Operation.getFinalState():0:0 -> b
    122:122:void applyContainerChanges(androidx.fragment.app.SpecialEffectsController$Operation):0 -> b
    122:122:void executeOperations(java.util.List,boolean):0 -> b
    123:123:void applyContainerChanges(androidx.fragment.app.SpecialEffectsController$Operation):0:0 -> b
    123:123:void executeOperations(java.util.List,boolean):0 -> b
    124:124:void executeOperations(java.util.List,boolean):0:0 -> b
    1:1:boolean androidx.core.view.ViewGroupCompat.isTransitionGroup(android.view.ViewGroup):0:0 -> j
    1:1:void captureTransitioningViews(java.util.ArrayList,android.view.View):0 -> j
    2:2:void captureTransitioningViews(java.util.ArrayList,android.view.View):0:0 -> j
    1:1:java.lang.String androidx.core.view.ViewCompat.getTransitionName(android.view.View):0:0 -> k
    1:1:void findNamedViews(java.util.Map,android.view.View):0 -> k
    2:2:void findNamedViews(java.util.Map,android.view.View):0:0 -> k
    1:1:java.lang.String androidx.core.view.ViewCompat.getTransitionName(android.view.View):0:0 -> l
    1:1:void retainMatchingViews(androidx.collection.ArrayMap,java.util.Collection):0 -> l
    2:2:void retainMatchingViews(androidx.collection.ArrayMap,java.util.Collection):0:0 -> l
androidx.fragment.app.DefaultSpecialEffectsController$1 -> a.h.b.c$a:
    java.util.List val$awaitingContainerChanges -> a
    androidx.fragment.app.SpecialEffectsController$Operation val$operation -> b
    androidx.fragment.app.DefaultSpecialEffectsController this$0 -> c
    1:1:void androidx.fragment.app.DefaultSpecialEffectsController.applyContainerChanges(androidx.fragment.app.SpecialEffectsController$Operation):0:0 -> run
    1:1:void run():0 -> run
    2:2:androidx.fragment.app.Fragment androidx.fragment.app.SpecialEffectsController$Operation.getFragment():0:0 -> run
    2:2:void androidx.fragment.app.DefaultSpecialEffectsController.applyContainerChanges(androidx.fragment.app.SpecialEffectsController$Operation):0 -> run
    2:2:void run():0 -> run
    3:3:void androidx.fragment.app.DefaultSpecialEffectsController.applyContainerChanges(androidx.fragment.app.SpecialEffectsController$Operation):0:0 -> run
    3:3:void run():0 -> run
    4:4:androidx.fragment.app.SpecialEffectsController$Operation$State androidx.fragment.app.SpecialEffectsController$Operation.getFinalState():0:0 -> run
    4:4:void androidx.fragment.app.DefaultSpecialEffectsController.applyContainerChanges(androidx.fragment.app.SpecialEffectsController$Operation):0 -> run
    4:4:void run():0 -> run
    5:5:void androidx.fragment.app.DefaultSpecialEffectsController.applyContainerChanges(androidx.fragment.app.SpecialEffectsController$Operation):0:0 -> run
    5:5:void run():0 -> run
androidx.fragment.app.DefaultSpecialEffectsController$2 -> a.h.b.d:
    androidx.fragment.app.SpecialEffectsController$Operation val$operation -> d
    android.view.ViewGroup val$container -> a
    androidx.fragment.app.DefaultSpecialEffectsController$AnimationInfo val$animationInfo -> e
    android.view.View val$viewToAnimate -> b
    boolean val$isHideOperation -> c
    1:1:androidx.fragment.app.SpecialEffectsController$Operation$State androidx.fragment.app.SpecialEffectsController$Operation.getFinalState():0:0 -> onAnimationEnd
    1:1:void onAnimationEnd(android.animation.Animator):0 -> onAnimationEnd
    2:2:void onAnimationEnd(android.animation.Animator):0:0 -> onAnimationEnd
androidx.fragment.app.DefaultSpecialEffectsController$3 -> a.h.b.e:
    android.animation.Animator val$animator -> a
    void onCancel() -> a
androidx.fragment.app.DefaultSpecialEffectsController$4 -> a.h.b.f:
    android.view.ViewGroup val$container -> a
    androidx.fragment.app.DefaultSpecialEffectsController$AnimationInfo val$animationInfo -> c
    android.view.View val$viewToAnimate -> b
androidx.fragment.app.DefaultSpecialEffectsController$4$1 -> a.h.b.f$a:
    androidx.fragment.app.DefaultSpecialEffectsController$4 this$1 -> a
androidx.fragment.app.DefaultSpecialEffectsController$5 -> a.h.b.g:
    android.view.ViewGroup val$container -> b
    androidx.fragment.app.DefaultSpecialEffectsController$AnimationInfo val$animationInfo -> c
    android.view.View val$viewToAnimate -> a
    void onCancel() -> a
androidx.fragment.app.DefaultSpecialEffectsController$6 -> a.h.b.h:
    androidx.fragment.app.SpecialEffectsController$Operation val$firstOut -> b
    androidx.fragment.app.SpecialEffectsController$Operation val$lastIn -> a
    androidx.collection.ArrayMap val$lastInViews -> d
    boolean val$isPop -> c
    1:1:androidx.fragment.app.Fragment androidx.fragment.app.SpecialEffectsController$Operation.getFragment():0:0 -> run
    1:1:void run():0 -> run
    2:2:void run():0:0 -> run
    3:3:androidx.fragment.app.Fragment androidx.fragment.app.SpecialEffectsController$Operation.getFragment():0:0 -> run
    3:3:void run():0 -> run
    4:4:void run():0:0 -> run
androidx.fragment.app.DefaultSpecialEffectsController$7 -> a.h.b.i:
    androidx.fragment.app.FragmentTransitionImpl val$impl -> a
    android.view.View val$lastInEpicenterView -> b
    android.graphics.Rect val$lastInEpicenterRect -> c
androidx.fragment.app.DefaultSpecialEffectsController$8 -> a.h.b.j:
    java.util.ArrayList val$transitioningViews -> a
androidx.fragment.app.DefaultSpecialEffectsController$9 -> a.h.b.k:
    androidx.fragment.app.DefaultSpecialEffectsController$TransitionInfo val$transitionInfo -> a
androidx.fragment.app.DefaultSpecialEffectsController$AnimationInfo -> a.h.b.c$b:
    androidx.fragment.app.FragmentAnim$AnimationOrAnimator mAnimation -> e
    boolean mIsPop -> c
    boolean mLoadedAnim -> d
    1:1:androidx.fragment.app.SpecialEffectsController$Operation androidx.fragment.app.DefaultSpecialEffectsController$SpecialEffectsInfo.getOperation():0:0 -> c
    1:1:androidx.fragment.app.FragmentAnim$AnimationOrAnimator getAnimation(android.content.Context):0 -> c
    2:2:androidx.fragment.app.Fragment androidx.fragment.app.SpecialEffectsController$Operation.getFragment():0:0 -> c
    2:2:androidx.fragment.app.FragmentAnim$AnimationOrAnimator getAnimation(android.content.Context):0 -> c
    3:3:androidx.fragment.app.SpecialEffectsController$Operation$State androidx.fragment.app.SpecialEffectsController$Operation.getFinalState():0:0 -> c
    3:3:androidx.fragment.app.FragmentAnim$AnimationOrAnimator getAnimation(android.content.Context):0 -> c
    4:4:androidx.fragment.app.FragmentAnim$AnimationOrAnimator getAnimation(android.content.Context):0:0 -> c
androidx.fragment.app.DefaultSpecialEffectsController$SpecialEffectsInfo -> a.h.b.c$c:
    androidx.core.os.CancellationSignal mSignal -> b
    androidx.fragment.app.SpecialEffectsController$Operation mOperation -> a
    1:1:void androidx.fragment.app.SpecialEffectsController$Operation.completeSpecialEffect(androidx.core.os.CancellationSignal):0:0 -> a
    1:1:void completeSpecialEffect():0 -> a
    1:1:androidx.fragment.app.Fragment androidx.fragment.app.SpecialEffectsController$Operation.getFragment():0:0 -> b
    1:1:boolean isVisibilityUnchanged():0 -> b
    2:2:boolean isVisibilityUnchanged():0:0 -> b
    3:3:androidx.fragment.app.SpecialEffectsController$Operation$State androidx.fragment.app.SpecialEffectsController$Operation.getFinalState():0:0 -> b
    3:3:boolean isVisibilityUnchanged():0 -> b
    4:4:boolean isVisibilityUnchanged():0:0 -> b
androidx.fragment.app.DefaultSpecialEffectsController$TransitionInfo -> a.h.b.c$d:
    java.lang.Object mSharedElementTransition -> e
    java.lang.Object mTransition -> c
    boolean mOverlapAllowed -> d
    1:1:androidx.fragment.app.SpecialEffectsController$Operation$State androidx.fragment.app.SpecialEffectsController$Operation.getFinalState():0:0 -> <init>
    1:1:void <init>(androidx.fragment.app.SpecialEffectsController$Operation,androidx.core.os.CancellationSignal,boolean,boolean):0 -> <init>
    2:2:void <init>(androidx.fragment.app.SpecialEffectsController$Operation,androidx.core.os.CancellationSignal,boolean,boolean):0:0 -> <init>
    3:3:androidx.fragment.app.Fragment androidx.fragment.app.SpecialEffectsController$Operation.getFragment():0:0 -> <init>
    3:3:void <init>(androidx.fragment.app.SpecialEffectsController$Operation,androidx.core.os.CancellationSignal,boolean,boolean):0 -> <init>
    4:4:void <init>(androidx.fragment.app.SpecialEffectsController$Operation,androidx.core.os.CancellationSignal,boolean,boolean):0:0 -> <init>
    5:5:androidx.fragment.app.Fragment androidx.fragment.app.SpecialEffectsController$Operation.getFragment():0:0 -> <init>
    5:5:void <init>(androidx.fragment.app.SpecialEffectsController$Operation,androidx.core.os.CancellationSignal,boolean,boolean):0 -> <init>
    6:6:void <init>(androidx.fragment.app.SpecialEffectsController$Operation,androidx.core.os.CancellationSignal,boolean,boolean):0:0 -> <init>
    7:7:androidx.fragment.app.Fragment androidx.fragment.app.SpecialEffectsController$Operation.getFragment():0:0 -> <init>
    7:7:void <init>(androidx.fragment.app.SpecialEffectsController$Operation,androidx.core.os.CancellationSignal,boolean,boolean):0 -> <init>
    8:8:void <init>(androidx.fragment.app.SpecialEffectsController$Operation,androidx.core.os.CancellationSignal,boolean,boolean):0:0 -> <init>
    9:9:androidx.fragment.app.Fragment androidx.fragment.app.SpecialEffectsController$Operation.getFragment():0:0 -> <init>
    9:9:void <init>(androidx.fragment.app.SpecialEffectsController$Operation,androidx.core.os.CancellationSignal,boolean,boolean):0 -> <init>
    10:10:void <init>(androidx.fragment.app.SpecialEffectsController$Operation,androidx.core.os.CancellationSignal,boolean,boolean):0:0 -> <init>
    11:11:androidx.fragment.app.Fragment androidx.fragment.app.SpecialEffectsController$Operation.getFragment():0:0 -> <init>
    11:11:void <init>(androidx.fragment.app.SpecialEffectsController$Operation,androidx.core.os.CancellationSignal,boolean,boolean):0 -> <init>
    12:12:void <init>(androidx.fragment.app.SpecialEffectsController$Operation,androidx.core.os.CancellationSignal,boolean,boolean):0:0 -> <init>
    13:13:androidx.fragment.app.Fragment androidx.fragment.app.SpecialEffectsController$Operation.getFragment():0:0 -> <init>
    13:13:void <init>(androidx.fragment.app.SpecialEffectsController$Operation,androidx.core.os.CancellationSignal,boolean,boolean):0 -> <init>
    14:14:void <init>(androidx.fragment.app.SpecialEffectsController$Operation,androidx.core.os.CancellationSignal,boolean,boolean):0:0 -> <init>
    15:15:androidx.fragment.app.Fragment androidx.fragment.app.SpecialEffectsController$Operation.getFragment():0:0 -> <init>
    15:15:void <init>(androidx.fragment.app.SpecialEffectsController$Operation,androidx.core.os.CancellationSignal,boolean,boolean):0 -> <init>
    16:16:void <init>(androidx.fragment.app.SpecialEffectsController$Operation,androidx.core.os.CancellationSignal,boolean,boolean):0:0 -> <init>
    17:17:androidx.fragment.app.Fragment androidx.fragment.app.SpecialEffectsController$Operation.getFragment():0:0 -> <init>
    17:17:void <init>(androidx.fragment.app.SpecialEffectsController$Operation,androidx.core.os.CancellationSignal,boolean,boolean):0 -> <init>
    18:18:void <init>(androidx.fragment.app.SpecialEffectsController$Operation,androidx.core.os.CancellationSignal,boolean,boolean):0:0 -> <init>
    1:1:boolean androidx.fragment.app.FragmentTransitionCompat21.canHandle(java.lang.Object):0:0 -> c
    1:1:androidx.fragment.app.FragmentTransitionImpl getHandlingImpl(java.lang.Object):0 -> c
    2:2:androidx.fragment.app.FragmentTransitionImpl getHandlingImpl(java.lang.Object):0:0 -> c
    3:3:androidx.fragment.app.SpecialEffectsController$Operation androidx.fragment.app.DefaultSpecialEffectsController$SpecialEffectsInfo.getOperation():0:0 -> c
    3:3:androidx.fragment.app.FragmentTransitionImpl getHandlingImpl(java.lang.Object):0 -> c
    4:4:androidx.fragment.app.Fragment androidx.fragment.app.SpecialEffectsController$Operation.getFragment():0:0 -> c
    4:4:androidx.fragment.app.FragmentTransitionImpl getHandlingImpl(java.lang.Object):0 -> c
    5:5:androidx.fragment.app.FragmentTransitionImpl getHandlingImpl(java.lang.Object):0:0 -> c
androidx.fragment.app.DialogFragment -> a.h.b.l:
    boolean mViewDestroyed -> m
    boolean mDismissed -> n
    boolean mShownByMe -> o
    boolean mDialogCreated -> p
    boolean mCreatingDialog -> j
    int mBackStackId -> i
    int mTheme -> f
    int mStyle -> e
    android.content.DialogInterface$OnDismissListener mOnDismissListener -> d
    java.lang.Runnable mDismissRunnable -> b
    android.content.DialogInterface$OnCancelListener mOnCancelListener -> c
    android.os.Handler mHandler -> a
    android.app.Dialog mDialog -> l
    androidx.lifecycle.Observer mObserver -> k
    boolean mCancelable -> g
    boolean mShowsDialog -> h
    1:1:int getTheme():0:0 -> a
    1:1:android.app.Dialog onCreateDialog(android.os.Bundle):0 -> a
    2:2:android.app.Dialog onCreateDialog(android.os.Bundle):0:0 -> a
    1:1:void androidx.lifecycle.LiveData.observeForever(androidx.lifecycle.Observer):0:0 -> onAttach
    1:1:void onAttach(android.content.Context):0 -> onAttach
    2:2:void onAttach(android.content.Context):0:0 -> onAttach
    3:3:void androidx.lifecycle.LiveData.observeForever(androidx.lifecycle.Observer):0:0 -> onAttach
    3:3:void onAttach(android.content.Context):0 -> onAttach
    1:1:void dismissInternal(boolean,boolean):0:0 -> onDismiss
    1:1:void onDismiss(android.content.DialogInterface):0 -> onDismiss
    2:2:void androidx.fragment.app.FragmentManager.popBackStack(int,int):0:0 -> onDismiss
    2:2:void dismissInternal(boolean,boolean):0 -> onDismiss
    2:2:void onDismiss(android.content.DialogInterface):0 -> onDismiss
    3:3:void dismissInternal(boolean,boolean):0:0 -> onDismiss
    3:3:void onDismiss(android.content.DialogInterface):0 -> onDismiss
    4:4:void androidx.fragment.app.FragmentManager.popBackStack(int,int):0:0 -> onDismiss
    4:4:void dismissInternal(boolean,boolean):0 -> onDismiss
    4:4:void onDismiss(android.content.DialogInterface):0 -> onDismiss
    5:5:void dismissInternal(boolean,boolean):0:0 -> onDismiss
    5:5:void onDismiss(android.content.DialogInterface):0 -> onDismiss
    6:6:androidx.fragment.app.FragmentTransaction androidx.fragment.app.FragmentManager.beginTransaction():0:0 -> onDismiss
    6:6:void dismissInternal(boolean,boolean):0 -> onDismiss
    6:6:void onDismiss(android.content.DialogInterface):0 -> onDismiss
    7:7:androidx.fragment.app.FragmentTransaction androidx.fragment.app.BackStackRecord.remove(androidx.fragment.app.Fragment):0:0 -> onDismiss
    7:7:void dismissInternal(boolean,boolean):0 -> onDismiss
    7:7:void onDismiss(android.content.DialogInterface):0 -> onDismiss
    8:8:androidx.fragment.app.FragmentTransaction androidx.fragment.app.FragmentTransaction.remove(androidx.fragment.app.Fragment):0:0 -> onDismiss
    8:8:androidx.fragment.app.FragmentTransaction androidx.fragment.app.BackStackRecord.remove(androidx.fragment.app.Fragment):0 -> onDismiss
    8:8:void dismissInternal(boolean,boolean):0 -> onDismiss
    8:8:void onDismiss(android.content.DialogInterface):0 -> onDismiss
    9:9:int androidx.fragment.app.BackStackRecord.commitAllowingStateLoss():0:0 -> onDismiss
    9:9:void dismissInternal(boolean,boolean):0 -> onDismiss
    9:9:void onDismiss(android.content.DialogInterface):0 -> onDismiss
    1:1:void prepareDialog(android.os.Bundle):0:0 -> onGetLayoutInflater
    1:1:android.view.LayoutInflater onGetLayoutInflater(android.os.Bundle):0 -> onGetLayoutInflater
    2:2:void setupDialog(android.app.Dialog,int):0:0 -> onGetLayoutInflater
    2:2:void prepareDialog(android.os.Bundle):0 -> onGetLayoutInflater
    2:2:android.view.LayoutInflater onGetLayoutInflater(android.os.Bundle):0 -> onGetLayoutInflater
    3:3:void prepareDialog(android.os.Bundle):0:0 -> onGetLayoutInflater
    3:3:android.view.LayoutInflater onGetLayoutInflater(android.os.Bundle):0 -> onGetLayoutInflater
    4:4:android.view.LayoutInflater onGetLayoutInflater(android.os.Bundle):0:0 -> onGetLayoutInflater
    1:1:void androidx.lifecycle.ViewTreeLifecycleOwner.set(android.view.View,androidx.lifecycle.LifecycleOwner):0:0 -> onStart
    1:1:void onStart():0 -> onStart
    2:2:void androidx.lifecycle.ViewTreeViewModelStoreOwner.set(android.view.View,androidx.lifecycle.ViewModelStoreOwner):0:0 -> onStart
    2:2:void onStart():0 -> onStart
    3:3:void androidx.savedstate.ViewTreeSavedStateRegistryOwner.set(android.view.View,androidx.savedstate.SavedStateRegistryOwner):0:0 -> onStart
    3:3:void onStart():0 -> onStart
androidx.fragment.app.DialogFragment$1 -> a.h.b.l$a:
    androidx.fragment.app.DialogFragment this$0 -> a
    1:1:android.content.DialogInterface$OnDismissListener androidx.fragment.app.DialogFragment.access$100(androidx.fragment.app.DialogFragment):0:0 -> run
    1:1:void run():0 -> run
    2:2:android.app.Dialog androidx.fragment.app.DialogFragment.access$000(androidx.fragment.app.DialogFragment):0:0 -> run
    2:2:void run():0 -> run
    3:3:void run():0:0 -> run
androidx.fragment.app.DialogFragment$2 -> a.h.b.l$b:
    androidx.fragment.app.DialogFragment this$0 -> a
    1:1:android.app.Dialog androidx.fragment.app.DialogFragment.access$000(androidx.fragment.app.DialogFragment):0:0 -> onCancel
    1:1:void onCancel(android.content.DialogInterface):0 -> onCancel
    2:2:void onCancel(android.content.DialogInterface):0:0 -> onCancel
androidx.fragment.app.DialogFragment$3 -> a.h.b.l$c:
    androidx.fragment.app.DialogFragment this$0 -> a
    1:1:android.app.Dialog androidx.fragment.app.DialogFragment.access$000(androidx.fragment.app.DialogFragment):0:0 -> onDismiss
    1:1:void onDismiss(android.content.DialogInterface):0 -> onDismiss
    2:2:void onDismiss(android.content.DialogInterface):0:0 -> onDismiss
androidx.fragment.app.DialogFragment$4 -> a.h.b.l$d:
    androidx.fragment.app.DialogFragment this$0 -> a
androidx.fragment.app.DialogFragment$5 -> a.h.b.l$e:
    androidx.fragment.app.FragmentContainer val$fragmentContainer -> a
    androidx.fragment.app.DialogFragment this$0 -> b
    1:1:android.view.View androidx.fragment.app.DialogFragment.onFindViewById(int):0:0 -> b
    1:1:android.view.View onFindViewById(int):0 -> b
    1:1:boolean androidx.fragment.app.DialogFragment.onHasView():0:0 -> c
    1:1:boolean onHasView():0 -> c
androidx.fragment.app.Fragment -> androidx.fragment.app.Fragment:
    1:1:void androidx.fragment.app.FragmentManager$StartEnterTransitionListener.onStartEnterTransition():0:0 -> callStartTransitionListener
    1:1:void callStartTransitionListener(boolean):0 -> callStartTransitionListener
    2:2:void callStartTransitionListener(boolean):0:0 -> callStartTransitionListener
    3:3:android.os.Handler androidx.fragment.app.FragmentHostCallback.getHandler():0:0 -> callStartTransitionListener
    3:3:void callStartTransitionListener(boolean):0 -> callStartTransitionListener
    4:4:void callStartTransitionListener(boolean):0:0 -> callStartTransitionListener
    1:1:androidx.fragment.app.Fragment androidx.fragment.app.FragmentManager.findFragmentByWho(java.lang.String):0:0 -> findFragmentByWho
    1:1:androidx.fragment.app.Fragment findFragmentByWho(java.lang.String):0 -> findFragmentByWho
    1:1:android.app.Activity androidx.fragment.app.FragmentHostCallback.getActivity():0:0 -> getActivity
    1:1:androidx.fragment.app.FragmentActivity getActivity():0 -> getActivity
    2:2:androidx.fragment.app.FragmentActivity getActivity():0:0 -> getActivity
    1:1:android.content.Context androidx.fragment.app.FragmentHostCallback.getContext():0:0 -> getContext
    1:1:android.content.Context getContext():0 -> getContext
    1:1:android.view.LayoutInflater$Factory2 androidx.fragment.app.FragmentManager.getLayoutInflaterFactory():0:0 -> getLayoutInflater
    1:1:android.view.LayoutInflater getLayoutInflater(android.os.Bundle):0 -> getLayoutInflater
    2:2:void androidx.core.view.LayoutInflaterCompat.setFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2):0:0 -> getLayoutInflater
    2:2:android.view.LayoutInflater getLayoutInflater(android.os.Bundle):0 -> getLayoutInflater
    3:3:android.view.LayoutInflater getLayoutInflater(android.os.Bundle):0:0 -> getLayoutInflater
    1:1:androidx.savedstate.SavedStateRegistry androidx.savedstate.SavedStateRegistryController.getSavedStateRegistry():0:0 -> getSavedStateRegistry
    1:1:androidx.savedstate.SavedStateRegistry getSavedStateRegistry():0 -> getSavedStateRegistry
    1:1:androidx.lifecycle.ViewModelStore androidx.fragment.app.FragmentManager.getViewModelStore(androidx.fragment.app.Fragment):0:0 -> getViewModelStore
    1:1:androidx.lifecycle.ViewModelStore getViewModelStore():0 -> getViewModelStore
    2:2:androidx.lifecycle.ViewModelStore androidx.fragment.app.FragmentManagerViewModel.getViewModelStore(androidx.fragment.app.Fragment):0:0 -> getViewModelStore
    2:2:androidx.lifecycle.ViewModelStore androidx.fragment.app.FragmentManager.getViewModelStore(androidx.fragment.app.Fragment):0 -> getViewModelStore
    2:2:androidx.lifecycle.ViewModelStore getViewModelStore():0 -> getViewModelStore
    3:3:androidx.lifecycle.ViewModelStore getViewModelStore():0:0 -> getViewModelStore
    1:1:androidx.savedstate.SavedStateRegistryController androidx.savedstate.SavedStateRegistryController.create(androidx.savedstate.SavedStateRegistryOwner):0:0 -> initLifecycle
    1:1:void initLifecycle():0 -> initLifecycle
    2:2:void initLifecycle():0:0 -> initLifecycle
    1:1:android.app.Activity androidx.fragment.app.FragmentHostCallback.getActivity():0:0 -> onAttach
    1:1:void onAttach(android.content.Context):0 -> onAttach
    2:2:void onAttach(android.content.Context):0:0 -> onAttach
    1:1:boolean androidx.fragment.app.FragmentManager.isStateAtLeast(int):0:0 -> onCreate
    1:1:void onCreate(android.os.Bundle):0 -> onCreate
    2:2:void onCreate(android.os.Bundle):0:0 -> onCreate
    1:1:android.app.Activity androidx.fragment.app.FragmentHostCallback.getActivity():0:0 -> onInflate
    1:1:void onInflate(android.content.Context,android.util.AttributeSet,android.os.Bundle):0 -> onInflate
    2:2:void onInflate(android.content.Context,android.util.AttributeSet,android.os.Bundle):0:0 -> onInflate
    1:1:void androidx.fragment.app.FragmentManager.dispatchActivityCreated():0:0 -> performActivityCreated
    1:1:void performActivityCreated(android.os.Bundle):0 -> performActivityCreated
    2:2:void androidx.fragment.app.FragmentManagerViewModel.setIsStateSaved(boolean):0:0 -> performActivityCreated
    2:2:void androidx.fragment.app.FragmentManager.dispatchActivityCreated():0 -> performActivityCreated
    2:2:void performActivityCreated(android.os.Bundle):0 -> performActivityCreated
    3:3:void androidx.fragment.app.FragmentManager.dispatchActivityCreated():0:0 -> performActivityCreated
    3:3:void performActivityCreated(android.os.Bundle):0 -> performActivityCreated
    4:4:void performActivityCreated(android.os.Bundle):0:0 -> performActivityCreated
    1:1:android.content.Context androidx.fragment.app.FragmentHostCallback.getContext():0:0 -> performAttach
    1:1:void performAttach():0 -> performAttach
    2:2:void performAttach():0:0 -> performAttach
    3:3:void androidx.fragment.app.FragmentManager.dispatchOnAttachFragment(androidx.fragment.app.Fragment):0:0 -> performAttach
    3:3:void performAttach():0 -> performAttach
    4:4:void performAttach():0:0 -> performAttach
    5:5:void androidx.fragment.app.FragmentManager.dispatchAttach():0:0 -> performAttach
    5:5:void performAttach():0 -> performAttach
    6:6:void androidx.fragment.app.FragmentManagerViewModel.setIsStateSaved(boolean):0:0 -> performAttach
    6:6:void androidx.fragment.app.FragmentManager.dispatchAttach():0 -> performAttach
    6:6:void performAttach():0 -> performAttach
    7:7:void androidx.fragment.app.FragmentManager.dispatchAttach():0:0 -> performAttach
    7:7:void performAttach():0 -> performAttach
    8:8:void performAttach():0:0 -> performAttach
    1:1:void androidx.lifecycle.ViewTreeLifecycleOwner.set(android.view.View,androidx.lifecycle.LifecycleOwner):0:0 -> performCreateView
    1:1:void performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle):0 -> performCreateView
    2:2:void performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle):0:0 -> performCreateView
    3:3:void androidx.lifecycle.ViewTreeViewModelStoreOwner.set(android.view.View,androidx.lifecycle.ViewModelStoreOwner):0:0 -> performCreateView
    3:3:void performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle):0 -> performCreateView
    4:4:void performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle):0:0 -> performCreateView
    5:5:void androidx.savedstate.ViewTreeSavedStateRegistryOwner.set(android.view.View,androidx.savedstate.SavedStateRegistryOwner):0:0 -> performCreateView
    5:5:void performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle):0 -> performCreateView
    6:6:void performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle):0:0 -> performCreateView
    7:7:boolean androidx.fragment.app.FragmentViewLifecycleOwner.isInitialized():0:0 -> performCreateView
    7:7:void performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle):0 -> performCreateView
    8:8:void performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle):0:0 -> performCreateView
    1:1:void androidx.fragment.app.FragmentManager.dispatchDestroyView():0:0 -> performDestroyView
    1:1:void performDestroyView():0 -> performDestroyView
    2:2:void performDestroyView():0:0 -> performDestroyView
    3:3:androidx.lifecycle.Lifecycle androidx.fragment.app.FragmentViewLifecycleOwner.getLifecycle():0:0 -> performDestroyView
    3:3:void performDestroyView():0 -> performDestroyView
    4:4:androidx.lifecycle.Lifecycle$State androidx.lifecycle.LifecycleRegistry.getCurrentState():0:0 -> performDestroyView
    4:4:void performDestroyView():0 -> performDestroyView
    5:5:void performDestroyView():0:0 -> performDestroyView
    6:6:boolean androidx.lifecycle.Lifecycle$State.isAtLeast(androidx.lifecycle.Lifecycle$State):0:0 -> performDestroyView
    6:6:void performDestroyView():0 -> performDestroyView
    7:7:void performDestroyView():0:0 -> performDestroyView
    8:8:void androidx.loader.app.LoaderManagerImpl.markForRedelivery():0:0 -> performDestroyView
    8:8:void performDestroyView():0 -> performDestroyView
    9:9:void androidx.loader.app.LoaderManagerImpl$LoaderViewModel.markForRedelivery():0:0 -> performDestroyView
    9:9:void androidx.loader.app.LoaderManagerImpl.markForRedelivery():0 -> performDestroyView
    9:9:void performDestroyView():0 -> performDestroyView
    10:10:void androidx.loader.app.LoaderManagerImpl$LoaderInfo.markForRedelivery():0:0 -> performDestroyView
    10:10:void androidx.loader.app.LoaderManagerImpl$LoaderViewModel.markForRedelivery():0 -> performDestroyView
    10:10:void androidx.loader.app.LoaderManagerImpl.markForRedelivery():0 -> performDestroyView
    10:10:void performDestroyView():0 -> performDestroyView
    11:11:void performDestroyView():0:0 -> performDestroyView
    1:1:boolean androidx.fragment.app.FragmentManager.isDestroyed():0:0 -> performDetach
    1:1:void performDetach():0 -> performDetach
    2:2:void performDetach():0:0 -> performDetach
    1:1:void androidx.fragment.app.FragmentManager.dispatchPause():0:0 -> performPause
    1:1:void performPause():0 -> performPause
    2:2:void performPause():0:0 -> performPause
    1:1:void androidx.fragment.app.FragmentManager.dispatchPrimaryNavigationFragmentChanged():0:0 -> performPrimaryNavigationFragmentChanged
    1:1:void performPrimaryNavigationFragmentChanged():0 -> performPrimaryNavigationFragmentChanged
    1:1:void androidx.fragment.app.FragmentManager.dispatchResume():0:0 -> performResume
    1:1:void performResume():0 -> performResume
    2:2:void androidx.fragment.app.FragmentManagerViewModel.setIsStateSaved(boolean):0:0 -> performResume
    2:2:void androidx.fragment.app.FragmentManager.dispatchResume():0 -> performResume
    2:2:void performResume():0 -> performResume
    3:3:void androidx.fragment.app.FragmentManager.dispatchResume():0:0 -> performResume
    3:3:void performResume():0 -> performResume
    4:4:void performResume():0:0 -> performResume
    1:1:void androidx.fragment.app.FragmentManager.dispatchStart():0:0 -> performStart
    1:1:void performStart():0 -> performStart
    2:2:void androidx.fragment.app.FragmentManagerViewModel.setIsStateSaved(boolean):0:0 -> performStart
    2:2:void androidx.fragment.app.FragmentManager.dispatchStart():0 -> performStart
    2:2:void performStart():0 -> performStart
    3:3:void androidx.fragment.app.FragmentManager.dispatchStart():0:0 -> performStart
    3:3:void performStart():0 -> performStart
    4:4:void performStart():0:0 -> performStart
    1:1:void androidx.fragment.app.FragmentManager.dispatchStop():0:0 -> performStop
    1:1:void performStop():0 -> performStop
    2:2:void androidx.fragment.app.FragmentManagerViewModel.setIsStateSaved(boolean):0:0 -> performStop
    2:2:void androidx.fragment.app.FragmentManager.dispatchStop():0 -> performStop
    2:2:void performStop():0 -> performStop
    3:3:void androidx.fragment.app.FragmentManager.dispatchStop():0:0 -> performStop
    3:3:void performStop():0 -> performStop
    4:4:void performStop():0:0 -> performStop
    1:1:void androidx.fragment.app.FragmentManager.dispatchViewCreated():0:0 -> performViewCreated
    1:1:void performViewCreated():0 -> performViewCreated
    1:1:androidx.fragment.app.FragmentHostCallback androidx.fragment.app.FragmentManager.getHost():0:0 -> postponeEnterTransition
    1:1:void postponeEnterTransition(long,java.util.concurrent.TimeUnit):0 -> postponeEnterTransition
    2:2:android.os.Handler androidx.fragment.app.FragmentHostCallback.getHandler():0:0 -> postponeEnterTransition
    2:2:void postponeEnterTransition(long,java.util.concurrent.TimeUnit):0 -> postponeEnterTransition
    3:3:void postponeEnterTransition(long,java.util.concurrent.TimeUnit):0:0 -> postponeEnterTransition
    1:1:void androidx.fragment.app.FragmentManager.launchRequestPermissions(androidx.fragment.app.Fragment,java.lang.String[],int):0:0 -> requestPermissions
    1:1:void requestPermissions(java.lang.String[],int):0 -> requestPermissions
    2:2:void androidx.activity.result.ActivityResultLauncher.launch(java.lang.Object):0:0 -> requestPermissions
    2:2:void androidx.fragment.app.FragmentManager.launchRequestPermissions(androidx.fragment.app.Fragment,java.lang.String[],int):0 -> requestPermissions
    2:2:void requestPermissions(java.lang.String[],int):0 -> requestPermissions
    3:3:void androidx.fragment.app.FragmentManager.launchRequestPermissions(androidx.fragment.app.Fragment,java.lang.String[],int):0:0 -> requestPermissions
    3:3:void requestPermissions(java.lang.String[],int):0 -> requestPermissions
    4:4:void androidx.fragment.app.FragmentHostCallback.onRequestPermissionsFromFragment(androidx.fragment.app.Fragment,java.lang.String[],int):0:0 -> requestPermissions
    4:4:void androidx.fragment.app.FragmentManager.launchRequestPermissions(androidx.fragment.app.Fragment,java.lang.String[],int):0 -> requestPermissions
    4:4:void requestPermissions(java.lang.String[],int):0 -> requestPermissions
    5:5:void requestPermissions(java.lang.String[],int):0:0 -> requestPermissions
    1:1:void androidx.fragment.app.FragmentViewLifecycleOwner.performRestore(android.os.Bundle):0:0 -> restoreViewState
    1:1:void restoreViewState(android.os.Bundle):0 -> restoreViewState
    2:2:void restoreViewState(android.os.Bundle):0:0 -> restoreViewState
    1:1:void androidx.fragment.app.FragmentManager$StartEnterTransitionListener.startListening():0:0 -> setOnStartEnterTransitionListener
    1:1:void setOnStartEnterTransitionListener(androidx.fragment.app.Fragment$OnStartEnterTransitionListener):0 -> setOnStartEnterTransitionListener
    1:1:void androidx.fragment.app.FragmentManager.addRetainedFragment(androidx.fragment.app.Fragment):0:0 -> setRetainInstance
    1:1:void setRetainInstance(boolean):0 -> setRetainInstance
    2:2:void androidx.fragment.app.FragmentManager.removeRetainedFragment(androidx.fragment.app.Fragment):0:0 -> setRetainInstance
    2:2:void setRetainInstance(boolean):0 -> setRetainInstance
    3:3:void setRetainInstance(boolean):0:0 -> setRetainInstance
    1:1:void androidx.fragment.app.FragmentHostCallback.onStartActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle):0:0 -> startActivity
    1:1:void startActivity(android.content.Intent,android.os.Bundle):0 -> startActivity
    2:2:void androidx.core.content.ContextCompat.startActivity(android.content.Context,android.content.Intent,android.os.Bundle):0:0 -> startActivity
    2:2:void androidx.fragment.app.FragmentHostCallback.onStartActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle):0 -> startActivity
    2:2:void startActivity(android.content.Intent,android.os.Bundle):0 -> startActivity
    3:3:void startActivity(android.content.Intent,android.os.Bundle):0:0 -> startActivity
    1:1:void androidx.fragment.app.FragmentManager.launchStartActivityForResult(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle):0:0 -> startActivityForResult
    1:1:void startActivityForResult(android.content.Intent,int,android.os.Bundle):0 -> startActivityForResult
    2:2:void androidx.activity.result.ActivityResultLauncher.launch(java.lang.Object):0:0 -> startActivityForResult
    2:2:void androidx.fragment.app.FragmentManager.launchStartActivityForResult(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle):0 -> startActivityForResult
    2:2:void startActivityForResult(android.content.Intent,int,android.os.Bundle):0 -> startActivityForResult
    3:3:void androidx.fragment.app.FragmentManager.launchStartActivityForResult(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle):0:0 -> startActivityForResult
    3:3:void startActivityForResult(android.content.Intent,int,android.os.Bundle):0 -> startActivityForResult
    4:4:void androidx.fragment.app.FragmentHostCallback.onStartActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle):0:0 -> startActivityForResult
    4:4:void androidx.fragment.app.FragmentManager.launchStartActivityForResult(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle):0 -> startActivityForResult
    4:4:void startActivityForResult(android.content.Intent,int,android.os.Bundle):0 -> startActivityForResult
    5:5:void androidx.core.content.ContextCompat.startActivity(android.content.Context,android.content.Intent,android.os.Bundle):0:0 -> startActivityForResult
    5:5:void androidx.fragment.app.FragmentHostCallback.onStartActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle):0 -> startActivityForResult
    5:5:void androidx.fragment.app.FragmentManager.launchStartActivityForResult(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle):0 -> startActivityForResult
    5:5:void startActivityForResult(android.content.Intent,int,android.os.Bundle):0 -> startActivityForResult
    6:6:void androidx.fragment.app.FragmentHostCallback.onStartActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle):0:0 -> startActivityForResult
    6:6:void androidx.fragment.app.FragmentManager.launchStartActivityForResult(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle):0 -> startActivityForResult
    6:6:void startActivityForResult(android.content.Intent,int,android.os.Bundle):0 -> startActivityForResult
    7:7:void startActivityForResult(android.content.Intent,int,android.os.Bundle):0:0 -> startActivityForResult
    1:1:void androidx.fragment.app.FragmentManager.launchStartIntentSenderForResult(androidx.fragment.app.Fragment,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle):0:0 -> startIntentSenderForResult
    1:1:void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle):0 -> startIntentSenderForResult
    2:2:androidx.activity.result.IntentSenderRequest androidx.activity.result.IntentSenderRequest$Builder.build():0:0 -> startIntentSenderForResult
    2:2:void androidx.fragment.app.FragmentManager.launchStartIntentSenderForResult(androidx.fragment.app.Fragment,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle):0 -> startIntentSenderForResult
    2:2:void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle):0 -> startIntentSenderForResult
    3:3:void androidx.fragment.app.FragmentManager.launchStartIntentSenderForResult(androidx.fragment.app.Fragment,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle):0:0 -> startIntentSenderForResult
    3:3:void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle):0 -> startIntentSenderForResult
    4:4:void androidx.activity.result.ActivityResultLauncher.launch(java.lang.Object):0:0 -> startIntentSenderForResult
    4:4:void androidx.fragment.app.FragmentManager.launchStartIntentSenderForResult(androidx.fragment.app.Fragment,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle):0 -> startIntentSenderForResult
    4:4:void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle):0 -> startIntentSenderForResult
    5:5:void androidx.fragment.app.FragmentManager.launchStartIntentSenderForResult(androidx.fragment.app.Fragment,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle):0:0 -> startIntentSenderForResult
    5:5:void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle):0 -> startIntentSenderForResult
    6:6:void androidx.fragment.app.FragmentHostCallback.onStartIntentSenderFromFragment(androidx.fragment.app.Fragment,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle):0:0 -> startIntentSenderForResult
    6:6:void androidx.fragment.app.FragmentManager.launchStartIntentSenderForResult(androidx.fragment.app.Fragment,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle):0 -> startIntentSenderForResult
    6:6:void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle):0 -> startIntentSenderForResult
    7:7:void androidx.core.app.ActivityCompat.startIntentSenderForResult(android.app.Activity,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle):0:0 -> startIntentSenderForResult
    7:7:void androidx.fragment.app.FragmentHostCallback.onStartIntentSenderFromFragment(androidx.fragment.app.Fragment,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle):0 -> startIntentSenderForResult
    7:7:void androidx.fragment.app.FragmentManager.launchStartIntentSenderForResult(androidx.fragment.app.Fragment,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle):0 -> startIntentSenderForResult
    7:7:void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle):0 -> startIntentSenderForResult
    8:8:void androidx.fragment.app.FragmentHostCallback.onStartIntentSenderFromFragment(androidx.fragment.app.Fragment,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle):0:0 -> startIntentSenderForResult
    8:8:void androidx.fragment.app.FragmentManager.launchStartIntentSenderForResult(androidx.fragment.app.Fragment,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle):0 -> startIntentSenderForResult
    8:8:void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle):0 -> startIntentSenderForResult
    9:9:void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle):0:0 -> startIntentSenderForResult
    1:1:android.os.Handler androidx.fragment.app.FragmentHostCallback.getHandler():0:0 -> startPostponedEnterTransition
    1:1:void startPostponedEnterTransition():0 -> startPostponedEnterTransition
    2:2:void startPostponedEnterTransition():0:0 -> startPostponedEnterTransition
    3:3:android.os.Handler androidx.fragment.app.FragmentHostCallback.getHandler():0:0 -> startPostponedEnterTransition
    3:3:void startPostponedEnterTransition():0 -> startPostponedEnterTransition
    4:4:void startPostponedEnterTransition():0:0 -> startPostponedEnterTransition
androidx.fragment.app.Fragment$1 -> androidx.fragment.app.Fragment$a:
    androidx.fragment.app.Fragment this$0 -> a
androidx.fragment.app.Fragment$2 -> androidx.fragment.app.Fragment$b:
    androidx.fragment.app.Fragment this$0 -> a
androidx.fragment.app.Fragment$3 -> androidx.fragment.app.Fragment$c:
    androidx.fragment.app.SpecialEffectsController val$controller -> a
androidx.fragment.app.Fragment$4 -> androidx.fragment.app.Fragment$d:
    androidx.fragment.app.Fragment this$0 -> a
    android.view.View onFindViewById(int) -> b
    boolean onHasView() -> c
androidx.fragment.app.Fragment$5 -> androidx.fragment.app.Fragment$5:
    androidx.fragment.app.Fragment this$0 -> a
    void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> g
androidx.fragment.app.Fragment$6 -> androidx.fragment.app.Fragment$e:
    androidx.fragment.app.Fragment this$0 -> a
    1:1:androidx.activity.result.ActivityResultRegistry apply(java.lang.Void):0:0 -> a
    1:1:java.lang.Object apply(java.lang.Object):0 -> a
androidx.fragment.app.Fragment$7 -> androidx.fragment.app.Fragment$f:
    androidx.activity.result.ActivityResultRegistry val$registry -> a
    1:1:androidx.activity.result.ActivityResultRegistry apply(java.lang.Void):0:0 -> a
    1:1:java.lang.Object apply(java.lang.Object):0 -> a
androidx.fragment.app.Fragment$8 -> androidx.fragment.app.Fragment$g:
    androidx.arch.core.util.Function val$registryProvider -> a
    androidx.activity.result.ActivityResultCallback val$callback -> d
    java.util.concurrent.atomic.AtomicReference val$ref -> b
    androidx.activity.result.contract.ActivityResultContract val$contract -> c
    androidx.fragment.app.Fragment this$0 -> e
    void onPreAttached() -> a
androidx.fragment.app.Fragment$9 -> androidx.fragment.app.Fragment$h:
    java.util.concurrent.atomic.AtomicReference val$ref -> a
    void launch(java.lang.Object,androidx.core.app.ActivityOptionsCompat) -> a
    void unregister() -> b
androidx.fragment.app.Fragment$AnimationInfo -> androidx.fragment.app.Fragment$i:
    java.lang.Object mEnterTransition -> k
    int mNextTransition -> h
    int mPopEnterAnim -> f
    boolean mEnterTransitionPostponed -> u
    int mPopExitAnim -> g
    int mEnterAnim -> d
    java.lang.Object mSharedElementReturnTransition -> p
    boolean mIsHideReplaced -> w
    int mExitAnim -> e
    java.lang.Object mReenterTransition -> n
    java.lang.Object mSharedElementEnterTransition -> o
    android.view.View mFocusedView -> t
    java.lang.Object mReturnTransition -> l
    java.lang.Boolean mAllowReturnTransitionOverlap -> q
    java.lang.Object mExitTransition -> m
    java.lang.Boolean mAllowEnterTransitionOverlap -> r
    android.animation.Animator mAnimator -> b
    java.util.ArrayList mSharedElementTargetNames -> j
    java.util.ArrayList mSharedElementSourceNames -> i
    android.view.View mAnimatingAway -> a
    float mPostOnViewCreatedAlpha -> s
    boolean mIsPop -> c
    androidx.fragment.app.Fragment$OnStartEnterTransitionListener mStartEnterTransitionListener -> v
androidx.fragment.app.Fragment$InstantiationException -> androidx.fragment.app.Fragment$j:
androidx.fragment.app.Fragment$OnPreAttachedListener -> androidx.fragment.app.Fragment$k:
    1:1:void <init>():0:0 -> <init>
    1:1:void <init>(androidx.fragment.app.Fragment$1):0 -> <init>
    void onPreAttached() -> a
androidx.fragment.app.Fragment$OnStartEnterTransitionListener -> androidx.fragment.app.Fragment$l:
androidx.fragment.app.Fragment$SavedState -> androidx.fragment.app.Fragment$m:
    android.os.Bundle mState -> a
androidx.fragment.app.Fragment$SavedState$1 -> androidx.fragment.app.Fragment$m$a:
    1:1:androidx.fragment.app.Fragment$SavedState createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    1:1:java.lang.Object createFromParcel(android.os.Parcel):0 -> createFromParcel
    2:2:androidx.fragment.app.Fragment$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader):0:0 -> createFromParcel
    2:2:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader):0 -> createFromParcel
    1:1:androidx.fragment.app.Fragment$SavedState[] newArray(int):0:0 -> newArray
    1:1:java.lang.Object[] newArray(int):0 -> newArray
androidx.fragment.app.FragmentActivity -> a.h.b.m:
    1:1:androidx.fragment.app.FragmentController androidx.fragment.app.FragmentController.createController(androidx.fragment.app.FragmentHostCallback):0:0 -> <init>
    1:1:void <init>():0 -> <init>
    2:2:void <init>():0:0 -> <init>
    3:3:androidx.fragment.app.FragmentController androidx.fragment.app.FragmentController.createController(androidx.fragment.app.FragmentHostCallback):0:0 -> <init>
    3:3:void <init>(int):0 -> <init>
    4:4:void <init>(int):0:0 -> <init>
    1:1:android.view.View androidx.fragment.app.FragmentController.onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0:0 -> dispatchFragmentsOnCreateView
    1:1:android.view.View dispatchFragmentsOnCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0 -> dispatchFragmentsOnCreateView
    2:2:android.view.LayoutInflater$Factory2 androidx.fragment.app.FragmentManager.getLayoutInflaterFactory():0:0 -> dispatchFragmentsOnCreateView
    2:2:android.view.View androidx.fragment.app.FragmentController.onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0 -> dispatchFragmentsOnCreateView
    2:2:android.view.View dispatchFragmentsOnCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0 -> dispatchFragmentsOnCreateView
    3:3:android.view.View androidx.fragment.app.FragmentController.onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0:0 -> dispatchFragmentsOnCreateView
    3:3:android.view.View dispatchFragmentsOnCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0 -> dispatchFragmentsOnCreateView
    1:1:androidx.fragment.app.FragmentManager androidx.fragment.app.FragmentController.getSupportFragmentManager():0:0 -> dump
    1:1:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]):0 -> dump
    2:2:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]):0:0 -> dump
    1:1:androidx.fragment.app.FragmentManager androidx.fragment.app.FragmentController.getSupportFragmentManager():0:0 -> getSupportFragmentManager
    1:1:androidx.fragment.app.FragmentManager getSupportFragmentManager():0 -> getSupportFragmentManager
    1:1:java.util.List androidx.fragment.app.FragmentManager.getFragments():0:0 -> markState
    1:1:boolean markState(androidx.fragment.app.FragmentManager,androidx.lifecycle.Lifecycle$State):0 -> markState
    2:2:boolean markState(androidx.fragment.app.FragmentManager,androidx.lifecycle.Lifecycle$State):0:0 -> markState
    3:3:androidx.lifecycle.Lifecycle androidx.fragment.app.FragmentViewLifecycleOwner.getLifecycle():0:0 -> markState
    3:3:boolean markState(androidx.fragment.app.FragmentManager,androidx.lifecycle.Lifecycle$State):0 -> markState
    4:4:androidx.lifecycle.Lifecycle$State androidx.lifecycle.LifecycleRegistry.getCurrentState():0:0 -> markState
    4:4:boolean markState(androidx.fragment.app.FragmentManager,androidx.lifecycle.Lifecycle$State):0 -> markState
    5:5:boolean androidx.lifecycle.Lifecycle$State.isAtLeast(androidx.lifecycle.Lifecycle$State):0:0 -> markState
    5:5:boolean markState(androidx.fragment.app.FragmentManager,androidx.lifecycle.Lifecycle$State):0 -> markState
    6:6:boolean markState(androidx.fragment.app.FragmentManager,androidx.lifecycle.Lifecycle$State):0:0 -> markState
    7:7:void androidx.fragment.app.FragmentViewLifecycleOwner.setCurrentState(androidx.lifecycle.Lifecycle$State):0:0 -> markState
    7:7:boolean markState(androidx.fragment.app.FragmentManager,androidx.lifecycle.Lifecycle$State):0 -> markState
    8:8:void androidx.lifecycle.LifecycleRegistry.setCurrentState(androidx.lifecycle.Lifecycle$State):0:0 -> markState
    8:8:void androidx.fragment.app.FragmentViewLifecycleOwner.setCurrentState(androidx.lifecycle.Lifecycle$State):0 -> markState
    8:8:boolean markState(androidx.fragment.app.FragmentManager,androidx.lifecycle.Lifecycle$State):0 -> markState
    9:9:boolean markState(androidx.fragment.app.FragmentManager,androidx.lifecycle.Lifecycle$State):0:0 -> markState
    10:10:androidx.lifecycle.Lifecycle$State androidx.lifecycle.LifecycleRegistry.getCurrentState():0:0 -> markState
    10:10:boolean markState(androidx.fragment.app.FragmentManager,androidx.lifecycle.Lifecycle$State):0 -> markState
    11:11:boolean androidx.lifecycle.Lifecycle$State.isAtLeast(androidx.lifecycle.Lifecycle$State):0:0 -> markState
    11:11:boolean markState(androidx.fragment.app.FragmentManager,androidx.lifecycle.Lifecycle$State):0 -> markState
    12:12:boolean markState(androidx.fragment.app.FragmentManager,androidx.lifecycle.Lifecycle$State):0:0 -> markState
    13:13:void androidx.lifecycle.LifecycleRegistry.setCurrentState(androidx.lifecycle.Lifecycle$State):0:0 -> markState
    13:13:boolean markState(androidx.fragment.app.FragmentManager,androidx.lifecycle.Lifecycle$State):0 -> markState
    1:1:void androidx.fragment.app.FragmentController.dispatchConfigurationChanged(android.content.res.Configuration):0:0 -> onConfigurationChanged
    1:1:void onConfigurationChanged(android.content.res.Configuration):0 -> onConfigurationChanged
    1:1:void androidx.fragment.app.FragmentController.dispatchCreate():0:0 -> onCreate
    1:1:void onCreate(android.os.Bundle):0 -> onCreate
    1:1:boolean androidx.fragment.app.FragmentController.dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater):0:0 -> onCreatePanelMenu
    1:1:boolean onCreatePanelMenu(int,android.view.Menu):0 -> onCreatePanelMenu
    2:2:boolean onCreatePanelMenu(int,android.view.Menu):0:0 -> onCreatePanelMenu
    1:1:void androidx.fragment.app.FragmentController.dispatchDestroy():0:0 -> onDestroy
    1:1:void onDestroy():0 -> onDestroy
    2:2:void onDestroy():0:0 -> onDestroy
    1:1:void androidx.fragment.app.FragmentController.dispatchLowMemory():0:0 -> onLowMemory
    1:1:void onLowMemory():0 -> onLowMemory
    1:1:boolean androidx.fragment.app.FragmentController.dispatchContextItemSelected(android.view.MenuItem):0:0 -> onMenuItemSelected
    1:1:boolean onMenuItemSelected(int,android.view.MenuItem):0 -> onMenuItemSelected
    2:2:boolean onMenuItemSelected(int,android.view.MenuItem):0:0 -> onMenuItemSelected
    3:3:boolean androidx.fragment.app.FragmentController.dispatchOptionsItemSelected(android.view.MenuItem):0:0 -> onMenuItemSelected
    3:3:boolean onMenuItemSelected(int,android.view.MenuItem):0 -> onMenuItemSelected
    1:1:void androidx.fragment.app.FragmentController.dispatchMultiWindowModeChanged(boolean):0:0 -> onMultiWindowModeChanged
    1:1:void onMultiWindowModeChanged(boolean):0 -> onMultiWindowModeChanged
    1:1:void androidx.fragment.app.FragmentController.dispatchOptionsMenuClosed(android.view.Menu):0:0 -> onPanelClosed
    1:1:void onPanelClosed(int,android.view.Menu):0 -> onPanelClosed
    2:2:void onPanelClosed(int,android.view.Menu):0:0 -> onPanelClosed
    1:1:void androidx.fragment.app.FragmentController.dispatchPause():0:0 -> onPause
    1:1:void onPause():0 -> onPause
    2:2:void androidx.fragment.app.FragmentManager.dispatchPause():0:0 -> onPause
    2:2:void androidx.fragment.app.FragmentController.dispatchPause():0 -> onPause
    2:2:void onPause():0 -> onPause
    3:3:void onPause():0:0 -> onPause
    1:1:void androidx.fragment.app.FragmentController.dispatchPictureInPictureModeChanged(boolean):0:0 -> onPictureInPictureModeChanged
    1:1:void onPictureInPictureModeChanged(boolean):0 -> onPictureInPictureModeChanged
    1:1:boolean androidx.fragment.app.FragmentController.dispatchPrepareOptionsMenu(android.view.Menu):0:0 -> onPreparePanel
    1:1:boolean onPreparePanel(int,android.view.View,android.view.Menu):0 -> onPreparePanel
    2:2:boolean onPreparePanel(int,android.view.View,android.view.Menu):0:0 -> onPreparePanel
    1:1:boolean androidx.fragment.app.FragmentController.execPendingActions():0:0 -> onResume
    1:1:void onResume():0 -> onResume
    1:1:void androidx.fragment.app.FragmentController.dispatchResume():0:0 -> onResumeFragments
    1:1:void onResumeFragments():0 -> onResumeFragments
    2:2:void androidx.fragment.app.FragmentManager.dispatchResume():0:0 -> onResumeFragments
    2:2:void androidx.fragment.app.FragmentController.dispatchResume():0 -> onResumeFragments
    2:2:void onResumeFragments():0 -> onResumeFragments
    3:3:void androidx.fragment.app.FragmentManagerViewModel.setIsStateSaved(boolean):0:0 -> onResumeFragments
    3:3:void androidx.fragment.app.FragmentManager.dispatchResume():0 -> onResumeFragments
    3:3:void androidx.fragment.app.FragmentController.dispatchResume():0 -> onResumeFragments
    3:3:void onResumeFragments():0 -> onResumeFragments
    4:4:void androidx.fragment.app.FragmentManager.dispatchResume():0:0 -> onResumeFragments
    4:4:void androidx.fragment.app.FragmentController.dispatchResume():0 -> onResumeFragments
    4:4:void onResumeFragments():0 -> onResumeFragments
    1:1:void androidx.fragment.app.FragmentController.dispatchActivityCreated():0:0 -> onStart
    1:1:void onStart():0 -> onStart
    2:2:void androidx.fragment.app.FragmentManager.dispatchActivityCreated():0:0 -> onStart
    2:2:void androidx.fragment.app.FragmentController.dispatchActivityCreated():0 -> onStart
    2:2:void onStart():0 -> onStart
    3:3:void androidx.fragment.app.FragmentManagerViewModel.setIsStateSaved(boolean):0:0 -> onStart
    3:3:void androidx.fragment.app.FragmentManager.dispatchActivityCreated():0 -> onStart
    3:3:void androidx.fragment.app.FragmentController.dispatchActivityCreated():0 -> onStart
    3:3:void onStart():0 -> onStart
    4:4:void androidx.fragment.app.FragmentManager.dispatchActivityCreated():0:0 -> onStart
    4:4:void androidx.fragment.app.FragmentController.dispatchActivityCreated():0 -> onStart
    4:4:void onStart():0 -> onStart
    5:5:void onStart():0:0 -> onStart
    6:6:boolean androidx.fragment.app.FragmentController.execPendingActions():0:0 -> onStart
    6:6:void onStart():0 -> onStart
    7:7:void onStart():0:0 -> onStart
    8:8:void androidx.fragment.app.FragmentController.dispatchStart():0:0 -> onStart
    8:8:void onStart():0 -> onStart
    9:9:void androidx.fragment.app.FragmentManager.dispatchStart():0:0 -> onStart
    9:9:void androidx.fragment.app.FragmentController.dispatchStart():0 -> onStart
    9:9:void onStart():0 -> onStart
    10:10:void androidx.fragment.app.FragmentManagerViewModel.setIsStateSaved(boolean):0:0 -> onStart
    10:10:void androidx.fragment.app.FragmentManager.dispatchStart():0 -> onStart
    10:10:void androidx.fragment.app.FragmentController.dispatchStart():0 -> onStart
    10:10:void onStart():0 -> onStart
    11:11:void androidx.fragment.app.FragmentManager.dispatchStart():0:0 -> onStart
    11:11:void androidx.fragment.app.FragmentController.dispatchStart():0 -> onStart
    11:11:void onStart():0 -> onStart
    1:1:void androidx.fragment.app.FragmentController.dispatchStop():0:0 -> onStop
    1:1:void onStop():0 -> onStop
    2:2:void androidx.fragment.app.FragmentManager.dispatchStop():0:0 -> onStop
    2:2:void androidx.fragment.app.FragmentController.dispatchStop():0 -> onStop
    2:2:void onStop():0 -> onStop
    3:3:void androidx.fragment.app.FragmentManagerViewModel.setIsStateSaved(boolean):0:0 -> onStop
    3:3:void androidx.fragment.app.FragmentManager.dispatchStop():0 -> onStop
    3:3:void androidx.fragment.app.FragmentController.dispatchStop():0 -> onStop
    3:3:void onStop():0 -> onStop
    4:4:void androidx.fragment.app.FragmentManager.dispatchStop():0:0 -> onStop
    4:4:void androidx.fragment.app.FragmentController.dispatchStop():0 -> onStop
    4:4:void onStop():0 -> onStop
    5:5:void onStop():0:0 -> onStop
    1:1:void androidx.core.app.ActivityCompat.setEnterSharedElementCallback(android.app.Activity,androidx.core.app.SharedElementCallback):0:0 -> setEnterSharedElementCallback
    1:1:void setEnterSharedElementCallback(androidx.core.app.SharedElementCallback):0 -> setEnterSharedElementCallback
    1:1:void androidx.core.app.ActivityCompat.setExitSharedElementCallback(android.app.Activity,androidx.core.app.SharedElementCallback):0:0 -> setExitSharedElementCallback
    1:1:void setExitSharedElementCallback(androidx.core.app.SharedElementCallback):0 -> setExitSharedElementCallback
    1:1:void androidx.core.app.ActivityCompat.startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle):0:0 -> startActivityFromFragment
    1:1:void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle):0 -> startActivityFromFragment
    2:2:void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle):0:0 -> startActivityFromFragment
    1:1:void androidx.core.app.ActivityCompat.startIntentSenderForResult(android.app.Activity,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle):0:0 -> startIntentSenderFromFragment
    1:1:void startIntentSenderFromFragment(androidx.fragment.app.Fragment,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle):0 -> startIntentSenderFromFragment
    2:2:void startIntentSenderFromFragment(androidx.fragment.app.Fragment,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle):0:0 -> startIntentSenderFromFragment
    1:1:void androidx.core.app.ActivityCompat.finishAfterTransition(android.app.Activity):0:0 -> supportFinishAfterTransition
    1:1:void supportFinishAfterTransition():0 -> supportFinishAfterTransition
    1:1:void androidx.core.app.ActivityCompat.postponeEnterTransition(android.app.Activity):0:0 -> supportPostponeEnterTransition
    1:1:void supportPostponeEnterTransition():0 -> supportPostponeEnterTransition
    1:1:void androidx.core.app.ActivityCompat.startPostponedEnterTransition(android.app.Activity):0:0 -> supportStartPostponedEnterTransition
    1:1:void supportStartPostponedEnterTransition():0 -> supportStartPostponedEnterTransition
androidx.fragment.app.FragmentActivity$1 -> a.h.b.m$a:
    androidx.fragment.app.FragmentActivity this$0 -> a
    1:1:android.os.Parcelable androidx.fragment.app.FragmentController.saveAllState():0:0 -> a
    1:1:android.os.Bundle saveState():0 -> a
    2:2:android.os.Bundle saveState():0:0 -> a
androidx.fragment.app.FragmentActivity$2 -> a.h.b.m$b:
    androidx.fragment.app.FragmentActivity this$0 -> a
    1:1:void androidx.fragment.app.FragmentController.attachHost(androidx.fragment.app.Fragment):0:0 -> a
    1:1:void onContextAvailable(android.content.Context):0 -> a
    2:2:void onContextAvailable(android.content.Context):0:0 -> a
    3:3:void androidx.fragment.app.FragmentController.restoreSaveState(android.os.Parcelable):0:0 -> a
    3:3:void onContextAvailable(android.content.Context):0 -> a
androidx.fragment.app.FragmentActivity$HostCallbacks -> a.h.b.m$c:
    androidx.fragment.app.FragmentActivity this$0 -> e
    void onAttachFragment(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment) -> a
    android.view.View onFindViewById(int) -> b
    boolean onHasView() -> c
    1:1:androidx.fragment.app.FragmentActivity onGetHost():0:0 -> d
    1:1:java.lang.Object onGetHost():0 -> d
    android.view.LayoutInflater onGetLayoutInflater() -> e
    boolean onShouldSaveFragmentState(androidx.fragment.app.Fragment) -> f
    1:1:boolean androidx.core.app.ActivityCompat.shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String):0:0 -> g
    1:1:boolean onShouldShowRequestPermissionRationale(java.lang.String):0 -> g
    void onSupportInvalidateOptionsMenu() -> h
androidx.fragment.app.FragmentAnim$1 -> a.h.b.n:
    androidx.fragment.app.Fragment val$fragment -> a
    void onCancel() -> a
androidx.fragment.app.FragmentAnim$2 -> a.h.b.o:
    android.view.ViewGroup val$container -> a
    androidx.fragment.app.FragmentTransition$Callback val$callback -> c
    androidx.fragment.app.Fragment val$fragment -> b
    androidx.core.os.CancellationSignal val$signal -> d
androidx.fragment.app.FragmentAnim$2$1 -> a.h.b.o$a:
    androidx.fragment.app.FragmentAnim$2 this$0 -> a
androidx.fragment.app.FragmentAnim$3 -> a.h.b.p:
    androidx.fragment.app.FragmentTransition$Callback val$callback -> d
    android.view.ViewGroup val$container -> a
    androidx.core.os.CancellationSignal val$signal -> e
    android.view.View val$viewToAnimate -> b
    androidx.fragment.app.Fragment val$fragment -> c
androidx.fragment.app.FragmentAnim$AnimationOrAnimator -> a.h.b.q:
    android.view.animation.Animation animation -> a
    android.animation.Animator animator -> b
androidx.fragment.app.FragmentAnim$EndViewTransitionAnimation -> a.h.b.r:
    android.view.ViewGroup mParent -> a
    boolean mAnimating -> e
    android.view.View mChild -> b
    boolean mEnded -> c
    boolean mTransitionEnded -> d
androidx.fragment.app.FragmentContainer -> a.h.b.s:
    android.view.View onFindViewById(int) -> b
    boolean onHasView() -> c
androidx.fragment.app.FragmentContainerView -> a.h.b.t:
    android.view.View$OnApplyWindowInsetsListener mApplyWindowInsetsListener -> c
    java.util.ArrayList mTransitioningFragmentViews -> b
    java.util.ArrayList mDisappearingFragmentChildren -> a
    boolean mDrawDisappearingViewsFirst -> d
    1:1:androidx.fragment.app.FragmentTransaction androidx.fragment.app.FragmentManager.beginTransaction():0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet,androidx.fragment.app.FragmentManager):0 -> <init>
    2:2:androidx.fragment.app.FragmentTransaction androidx.fragment.app.FragmentTransaction.setReorderingAllowed(boolean):0:0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet,androidx.fragment.app.FragmentManager):0 -> <init>
    3:3:androidx.fragment.app.FragmentTransaction androidx.fragment.app.FragmentTransaction.add(android.view.ViewGroup,androidx.fragment.app.Fragment,java.lang.String):0:0 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet,androidx.fragment.app.FragmentManager):0 -> <init>
    4:4:androidx.fragment.app.FragmentTransaction androidx.fragment.app.FragmentTransaction.add(int,androidx.fragment.app.Fragment,java.lang.String):0:0 -> <init>
    4:4:androidx.fragment.app.FragmentTransaction androidx.fragment.app.FragmentTransaction.add(android.view.ViewGroup,androidx.fragment.app.Fragment,java.lang.String):0 -> <init>
    4:4:void <init>(android.content.Context,android.util.AttributeSet,androidx.fragment.app.FragmentManager):0 -> <init>
    5:5:androidx.fragment.app.FragmentTransaction androidx.fragment.app.FragmentTransaction.disallowAddToBackStack():0:0 -> <init>
    5:5:void androidx.fragment.app.BackStackRecord.commitNowAllowingStateLoss():0 -> <init>
    5:5:void <init>(android.content.Context,android.util.AttributeSet,androidx.fragment.app.FragmentManager):0 -> <init>
    6:6:void androidx.fragment.app.BackStackRecord.commitNowAllowingStateLoss():0:0 -> <init>
    6:6:void <init>(android.content.Context,android.util.AttributeSet,androidx.fragment.app.FragmentManager):0 -> <init>
    7:7:void androidx.fragment.app.FragmentManager.execSingleAction(androidx.fragment.app.FragmentManager$OpGenerator,boolean):0:0 -> <init>
    7:7:void androidx.fragment.app.BackStackRecord.commitNowAllowingStateLoss():0 -> <init>
    7:7:void <init>(android.content.Context,android.util.AttributeSet,androidx.fragment.app.FragmentManager):0 -> <init>
    8:8:androidx.fragment.app.FragmentTransaction androidx.fragment.app.FragmentTransaction.disallowAddToBackStack():0:0 -> <init>
    8:8:void androidx.fragment.app.BackStackRecord.commitNowAllowingStateLoss():0 -> <init>
    8:8:void <init>(android.content.Context,android.util.AttributeSet,androidx.fragment.app.FragmentManager):0 -> <init>
    9:9:void androidx.fragment.app.FragmentManager.onContainerAvailable(androidx.fragment.app.FragmentContainerView):0:0 -> <init>
    9:9:void <init>(android.content.Context,android.util.AttributeSet,androidx.fragment.app.FragmentManager):0 -> <init>
    10:10:androidx.fragment.app.Fragment androidx.fragment.app.FragmentStateManager.getFragment():0:0 -> <init>
    10:10:void androidx.fragment.app.FragmentManager.onContainerAvailable(androidx.fragment.app.FragmentContainerView):0 -> <init>
    10:10:void <init>(android.content.Context,android.util.AttributeSet,androidx.fragment.app.FragmentManager):0 -> <init>
    11:11:void androidx.fragment.app.FragmentManager.onContainerAvailable(androidx.fragment.app.FragmentContainerView):0:0 -> <init>
    11:11:void <init>(android.content.Context,android.util.AttributeSet,androidx.fragment.app.FragmentManager):0 -> <init>
    void addDisappearingFragmentView(android.view.View) -> a
    1:1:androidx.fragment.app.Fragment androidx.fragment.app.FragmentManager.getViewFragment(android.view.View):0:0 -> addView
    1:1:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams):0 -> addView
    2:2:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams):0:0 -> addView
    1:1:androidx.fragment.app.Fragment androidx.fragment.app.FragmentManager.getViewFragment(android.view.View):0:0 -> addViewInLayout
    1:1:boolean addViewInLayout(android.view.View,int,android.view.ViewGroup$LayoutParams,boolean):0 -> addViewInLayout
    2:2:boolean addViewInLayout(android.view.View,int,android.view.ViewGroup$LayoutParams,boolean):0:0 -> addViewInLayout
    1:1:androidx.core.view.WindowInsetsCompat androidx.core.view.WindowInsetsCompat.toWindowInsetsCompat(android.view.WindowInsets):0:0 -> dispatchApplyWindowInsets
    1:1:android.view.WindowInsets dispatchApplyWindowInsets(android.view.WindowInsets):0 -> dispatchApplyWindowInsets
    2:2:android.view.WindowInsets dispatchApplyWindowInsets(android.view.WindowInsets):0:0 -> dispatchApplyWindowInsets
    3:3:boolean androidx.core.view.WindowInsetsCompat.isConsumed():0:0 -> dispatchApplyWindowInsets
    3:3:android.view.WindowInsets dispatchApplyWindowInsets(android.view.WindowInsets):0 -> dispatchApplyWindowInsets
    4:4:android.view.WindowInsets dispatchApplyWindowInsets(android.view.WindowInsets):0:0 -> dispatchApplyWindowInsets
androidx.fragment.app.FragmentController -> a.h.b.u:
    androidx.fragment.app.FragmentHostCallback mHost -> a
    void noteStateNotSaved() -> a
androidx.fragment.app.FragmentFactory -> a.h.b.v:
    androidx.collection.SimpleArrayMap sClassCacheMap -> a
    androidx.fragment.app.Fragment instantiate(java.lang.ClassLoader,java.lang.String) -> a
    1:1:java.lang.Object androidx.collection.SimpleArrayMap.get(java.lang.Object):0:0 -> b
    1:1:java.lang.Class loadClass(java.lang.ClassLoader,java.lang.String):0 -> b
    2:2:java.lang.Class loadClass(java.lang.ClassLoader,java.lang.String):0:0 -> b
    3:3:java.lang.Object androidx.collection.SimpleArrayMap.get(java.lang.Object):0:0 -> b
    3:3:java.lang.Class loadClass(java.lang.ClassLoader,java.lang.String):0 -> b
    4:4:java.lang.Class loadClass(java.lang.ClassLoader,java.lang.String):0:0 -> b
    java.lang.Class loadFragmentClass(java.lang.ClassLoader,java.lang.String) -> c
androidx.fragment.app.FragmentHostCallback -> a.h.b.w:
    android.content.Context mContext -> b
    android.os.Handler mHandler -> c
    androidx.fragment.app.FragmentManager mFragmentManager -> d
    android.app.Activity mActivity -> a
    1:1:void <init>(android.app.Activity,android.content.Context,android.os.Handler,int):0:0 -> <init>
    1:1:void <init>(androidx.fragment.app.FragmentActivity):0 -> <init>
    java.lang.Object onGetHost() -> d
    android.view.LayoutInflater onGetLayoutInflater() -> e
    boolean onShouldSaveFragmentState(androidx.fragment.app.Fragment) -> f
    boolean onShouldShowRequestPermissionRationale(java.lang.String) -> g
    void onSupportInvalidateOptionsMenu() -> h
androidx.fragment.app.FragmentLayoutInflaterFactory -> a.h.b.x:
    androidx.fragment.app.FragmentManager mFragmentManager -> a
    1:1:boolean androidx.fragment.app.FragmentFactory.isFragmentClass(java.lang.ClassLoader,java.lang.String):0:0 -> onCreateView
    1:1:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0 -> onCreateView
    2:2:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0:0 -> onCreateView
    3:3:androidx.fragment.app.FragmentHostCallback androidx.fragment.app.FragmentManager.getHost():0:0 -> onCreateView
    3:3:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0 -> onCreateView
    4:4:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0:0 -> onCreateView
    5:5:android.content.Context androidx.fragment.app.FragmentHostCallback.getContext():0:0 -> onCreateView
    5:5:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0 -> onCreateView
    6:6:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0:0 -> onCreateView
    7:7:androidx.fragment.app.FragmentHostCallback androidx.fragment.app.FragmentManager.getHost():0:0 -> onCreateView
    7:7:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0 -> onCreateView
    8:8:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0:0 -> onCreateView
    9:9:android.content.Context androidx.fragment.app.FragmentHostCallback.getContext():0:0 -> onCreateView
    9:9:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0 -> onCreateView
    10:10:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0:0 -> onCreateView
androidx.fragment.app.FragmentLayoutInflaterFactory$1 -> a.h.b.x$a:
    androidx.fragment.app.FragmentStateManager val$fragmentStateManager -> a
    androidx.fragment.app.FragmentLayoutInflaterFactory this$0 -> b
    1:1:androidx.fragment.app.Fragment androidx.fragment.app.FragmentStateManager.getFragment():0:0 -> onViewAttachedToWindow
    1:1:void onViewAttachedToWindow(android.view.View):0 -> onViewAttachedToWindow
    2:2:void onViewAttachedToWindow(android.view.View):0:0 -> onViewAttachedToWindow
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher -> a.h.b.y:
    androidx.fragment.app.FragmentManager mFragmentManager -> b
    java.util.concurrent.CopyOnWriteArrayList mLifecycleCallbacks -> a
    1:1:androidx.fragment.app.Fragment androidx.fragment.app.FragmentManager.getParent():0:0 -> a
    1:1:void dispatchOnFragmentActivityCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean):0 -> a
    2:2:void dispatchOnFragmentActivityCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean):0:0 -> a
    3:3:androidx.fragment.app.FragmentLifecycleCallbacksDispatcher androidx.fragment.app.FragmentManager.getLifecycleCallbacksDispatcher():0:0 -> a
    3:3:void dispatchOnFragmentActivityCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean):0 -> a
    4:4:void dispatchOnFragmentActivityCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean):0:0 -> a
    1:1:androidx.fragment.app.FragmentHostCallback androidx.fragment.app.FragmentManager.getHost():0:0 -> b
    1:1:void dispatchOnFragmentAttached(androidx.fragment.app.Fragment,boolean):0 -> b
    2:2:android.content.Context androidx.fragment.app.FragmentHostCallback.getContext():0:0 -> b
    2:2:void dispatchOnFragmentAttached(androidx.fragment.app.Fragment,boolean):0 -> b
    3:3:androidx.fragment.app.Fragment androidx.fragment.app.FragmentManager.getParent():0:0 -> b
    3:3:void dispatchOnFragmentAttached(androidx.fragment.app.Fragment,boolean):0 -> b
    4:4:void dispatchOnFragmentAttached(androidx.fragment.app.Fragment,boolean):0:0 -> b
    5:5:androidx.fragment.app.FragmentLifecycleCallbacksDispatcher androidx.fragment.app.FragmentManager.getLifecycleCallbacksDispatcher():0:0 -> b
    5:5:void dispatchOnFragmentAttached(androidx.fragment.app.Fragment,boolean):0 -> b
    6:6:void dispatchOnFragmentAttached(androidx.fragment.app.Fragment,boolean):0:0 -> b
    1:1:androidx.fragment.app.Fragment androidx.fragment.app.FragmentManager.getParent():0:0 -> c
    1:1:void dispatchOnFragmentCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean):0 -> c
    2:2:void dispatchOnFragmentCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean):0:0 -> c
    3:3:androidx.fragment.app.FragmentLifecycleCallbacksDispatcher androidx.fragment.app.FragmentManager.getLifecycleCallbacksDispatcher():0:0 -> c
    3:3:void dispatchOnFragmentCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean):0 -> c
    4:4:void dispatchOnFragmentCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean):0:0 -> c
    1:1:androidx.fragment.app.Fragment androidx.fragment.app.FragmentManager.getParent():0:0 -> d
    1:1:void dispatchOnFragmentDestroyed(androidx.fragment.app.Fragment,boolean):0 -> d
    2:2:void dispatchOnFragmentDestroyed(androidx.fragment.app.Fragment,boolean):0:0 -> d
    3:3:androidx.fragment.app.FragmentLifecycleCallbacksDispatcher androidx.fragment.app.FragmentManager.getLifecycleCallbacksDispatcher():0:0 -> d
    3:3:void dispatchOnFragmentDestroyed(androidx.fragment.app.Fragment,boolean):0 -> d
    4:4:void dispatchOnFragmentDestroyed(androidx.fragment.app.Fragment,boolean):0:0 -> d
    1:1:androidx.fragment.app.Fragment androidx.fragment.app.FragmentManager.getParent():0:0 -> e
    1:1:void dispatchOnFragmentDetached(androidx.fragment.app.Fragment,boolean):0 -> e
    2:2:void dispatchOnFragmentDetached(androidx.fragment.app.Fragment,boolean):0:0 -> e
    3:3:androidx.fragment.app.FragmentLifecycleCallbacksDispatcher androidx.fragment.app.FragmentManager.getLifecycleCallbacksDispatcher():0:0 -> e
    3:3:void dispatchOnFragmentDetached(androidx.fragment.app.Fragment,boolean):0 -> e
    4:4:void dispatchOnFragmentDetached(androidx.fragment.app.Fragment,boolean):0:0 -> e
    1:1:androidx.fragment.app.Fragment androidx.fragment.app.FragmentManager.getParent():0:0 -> f
    1:1:void dispatchOnFragmentPaused(androidx.fragment.app.Fragment,boolean):0 -> f
    2:2:void dispatchOnFragmentPaused(androidx.fragment.app.Fragment,boolean):0:0 -> f
    3:3:androidx.fragment.app.FragmentLifecycleCallbacksDispatcher androidx.fragment.app.FragmentManager.getLifecycleCallbacksDispatcher():0:0 -> f
    3:3:void dispatchOnFragmentPaused(androidx.fragment.app.Fragment,boolean):0 -> f
    4:4:void dispatchOnFragmentPaused(androidx.fragment.app.Fragment,boolean):0:0 -> f
    1:1:androidx.fragment.app.FragmentHostCallback androidx.fragment.app.FragmentManager.getHost():0:0 -> g
    1:1:void dispatchOnFragmentPreAttached(androidx.fragment.app.Fragment,boolean):0 -> g
    2:2:android.content.Context androidx.fragment.app.FragmentHostCallback.getContext():0:0 -> g
    2:2:void dispatchOnFragmentPreAttached(androidx.fragment.app.Fragment,boolean):0 -> g
    3:3:androidx.fragment.app.Fragment androidx.fragment.app.FragmentManager.getParent():0:0 -> g
    3:3:void dispatchOnFragmentPreAttached(androidx.fragment.app.Fragment,boolean):0 -> g
    4:4:void dispatchOnFragmentPreAttached(androidx.fragment.app.Fragment,boolean):0:0 -> g
    5:5:androidx.fragment.app.FragmentLifecycleCallbacksDispatcher androidx.fragment.app.FragmentManager.getLifecycleCallbacksDispatcher():0:0 -> g
    5:5:void dispatchOnFragmentPreAttached(androidx.fragment.app.Fragment,boolean):0 -> g
    6:6:void dispatchOnFragmentPreAttached(androidx.fragment.app.Fragment,boolean):0:0 -> g
    1:1:androidx.fragment.app.Fragment androidx.fragment.app.FragmentManager.getParent():0:0 -> h
    1:1:void dispatchOnFragmentPreCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean):0 -> h
    2:2:void dispatchOnFragmentPreCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean):0:0 -> h
    3:3:androidx.fragment.app.FragmentLifecycleCallbacksDispatcher androidx.fragment.app.FragmentManager.getLifecycleCallbacksDispatcher():0:0 -> h
    3:3:void dispatchOnFragmentPreCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean):0 -> h
    4:4:void dispatchOnFragmentPreCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean):0:0 -> h
    1:1:androidx.fragment.app.Fragment androidx.fragment.app.FragmentManager.getParent():0:0 -> i
    1:1:void dispatchOnFragmentResumed(androidx.fragment.app.Fragment,boolean):0 -> i
    2:2:void dispatchOnFragmentResumed(androidx.fragment.app.Fragment,boolean):0:0 -> i
    3:3:androidx.fragment.app.FragmentLifecycleCallbacksDispatcher androidx.fragment.app.FragmentManager.getLifecycleCallbacksDispatcher():0:0 -> i
    3:3:void dispatchOnFragmentResumed(androidx.fragment.app.Fragment,boolean):0 -> i
    4:4:void dispatchOnFragmentResumed(androidx.fragment.app.Fragment,boolean):0:0 -> i
    1:1:androidx.fragment.app.Fragment androidx.fragment.app.FragmentManager.getParent():0:0 -> j
    1:1:void dispatchOnFragmentSaveInstanceState(androidx.fragment.app.Fragment,android.os.Bundle,boolean):0 -> j
    2:2:void dispatchOnFragmentSaveInstanceState(androidx.fragment.app.Fragment,android.os.Bundle,boolean):0:0 -> j
    3:3:androidx.fragment.app.FragmentLifecycleCallbacksDispatcher androidx.fragment.app.FragmentManager.getLifecycleCallbacksDispatcher():0:0 -> j
    3:3:void dispatchOnFragmentSaveInstanceState(androidx.fragment.app.Fragment,android.os.Bundle,boolean):0 -> j
    4:4:void dispatchOnFragmentSaveInstanceState(androidx.fragment.app.Fragment,android.os.Bundle,boolean):0:0 -> j
    1:1:androidx.fragment.app.Fragment androidx.fragment.app.FragmentManager.getParent():0:0 -> k
    1:1:void dispatchOnFragmentStarted(androidx.fragment.app.Fragment,boolean):0 -> k
    2:2:void dispatchOnFragmentStarted(androidx.fragment.app.Fragment,boolean):0:0 -> k
    3:3:androidx.fragment.app.FragmentLifecycleCallbacksDispatcher androidx.fragment.app.FragmentManager.getLifecycleCallbacksDispatcher():0:0 -> k
    3:3:void dispatchOnFragmentStarted(androidx.fragment.app.Fragment,boolean):0 -> k
    4:4:void dispatchOnFragmentStarted(androidx.fragment.app.Fragment,boolean):0:0 -> k
    1:1:androidx.fragment.app.Fragment androidx.fragment.app.FragmentManager.getParent():0:0 -> l
    1:1:void dispatchOnFragmentStopped(androidx.fragment.app.Fragment,boolean):0 -> l
    2:2:void dispatchOnFragmentStopped(androidx.fragment.app.Fragment,boolean):0:0 -> l
    3:3:androidx.fragment.app.FragmentLifecycleCallbacksDispatcher androidx.fragment.app.FragmentManager.getLifecycleCallbacksDispatcher():0:0 -> l
    3:3:void dispatchOnFragmentStopped(androidx.fragment.app.Fragment,boolean):0 -> l
    4:4:void dispatchOnFragmentStopped(androidx.fragment.app.Fragment,boolean):0:0 -> l
    1:1:androidx.fragment.app.Fragment androidx.fragment.app.FragmentManager.getParent():0:0 -> m
    1:1:void dispatchOnFragmentViewCreated(androidx.fragment.app.Fragment,android.view.View,android.os.Bundle,boolean):0 -> m
    2:2:void dispatchOnFragmentViewCreated(androidx.fragment.app.Fragment,android.view.View,android.os.Bundle,boolean):0:0 -> m
    3:3:androidx.fragment.app.FragmentLifecycleCallbacksDispatcher androidx.fragment.app.FragmentManager.getLifecycleCallbacksDispatcher():0:0 -> m
    3:3:void dispatchOnFragmentViewCreated(androidx.fragment.app.Fragment,android.view.View,android.os.Bundle,boolean):0 -> m
    4:4:void dispatchOnFragmentViewCreated(androidx.fragment.app.Fragment,android.view.View,android.os.Bundle,boolean):0:0 -> m
    1:1:androidx.fragment.app.Fragment androidx.fragment.app.FragmentManager.getParent():0:0 -> n
    1:1:void dispatchOnFragmentViewDestroyed(androidx.fragment.app.Fragment,boolean):0 -> n
    2:2:void dispatchOnFragmentViewDestroyed(androidx.fragment.app.Fragment,boolean):0:0 -> n
    3:3:androidx.fragment.app.FragmentLifecycleCallbacksDispatcher androidx.fragment.app.FragmentManager.getLifecycleCallbacksDispatcher():0:0 -> n
    3:3:void dispatchOnFragmentViewDestroyed(androidx.fragment.app.Fragment,boolean):0 -> n
    4:4:void dispatchOnFragmentViewDestroyed(androidx.fragment.app.Fragment,boolean):0:0 -> n
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher$FragmentLifecycleCallbacksHolder -> a.h.b.y$a:
androidx.fragment.app.FragmentManager -> a.h.b.z:
    java.util.concurrent.CopyOnWriteArrayList mOnAttachListeners -> o
    androidx.fragment.app.FragmentFactory mHostFragmentFactory -> u
    java.util.ArrayList mTmpRecords -> F
    java.util.ArrayList mCreatedMenus -> e
    androidx.activity.OnBackPressedCallback mOnBackPressedCallback -> h
    androidx.activity.result.ActivityResultLauncher mStartActivityForResult -> w
    androidx.fragment.app.FragmentTransition$Callback mFragmentTransitionCallback -> m
    androidx.activity.result.ActivityResultLauncher mRequestPermissions -> y
    androidx.fragment.app.Fragment mParent -> s
    java.util.ArrayList mPendingActions -> a
    androidx.fragment.app.FragmentContainer mContainer -> r
    java.util.ArrayList mTmpAddedFragments -> H
    boolean mHavePendingDeferredStart -> E
    java.util.Map mResultListeners -> k
    boolean mNeedMenuInvalidate -> A
    boolean mExecutingActions -> b
    boolean mStopped -> C
    androidx.fragment.app.FragmentLifecycleCallbacksDispatcher mLifecycleCallbacksDispatcher -> n
    java.util.ArrayList mTmpIsPop -> G
    androidx.fragment.app.FragmentLayoutInflaterFactory mLayoutInflaterFactory -> f
    java.util.ArrayList mBackStack -> d
    java.util.concurrent.atomic.AtomicInteger mBackStackIndex -> i
    androidx.fragment.app.Fragment mPrimaryNav -> t
    androidx.activity.result.ActivityResultLauncher mStartIntentSenderForResult -> x
    androidx.activity.OnBackPressedDispatcher mOnBackPressedDispatcher -> g
    androidx.fragment.app.FragmentStore mFragmentStore -> c
    androidx.fragment.app.FragmentHostCallback mHost -> q
    java.util.ArrayDeque mLaunchedFragments -> z
    java.util.ArrayList mPostponedTransactions -> I
    java.util.Map mResults -> j
    androidx.fragment.app.SpecialEffectsControllerFactory mDefaultSpecialEffectsControllerFactory -> v
    java.lang.Runnable mExecCommit -> K
    java.util.Map mExitAnimationCancellationSignals -> l
    boolean mStateSaved -> B
    int mCurState -> p
    boolean mDestroyed -> D
    androidx.fragment.app.FragmentManagerViewModel mNonConfig -> J
    1:1:void checkStateLoss():0:0 -> A
    1:1:void enqueueAction(androidx.fragment.app.FragmentManager$OpGenerator,boolean):0 -> A
    2:2:void enqueueAction(androidx.fragment.app.FragmentManager$OpGenerator,boolean):0:0 -> A
    1:1:android.os.Handler androidx.fragment.app.FragmentHostCallback.getHandler():0:0 -> B
    1:1:void ensureExecReady(boolean):0 -> B
    2:2:void ensureExecReady(boolean):0:0 -> B
    3:3:void checkStateLoss():0:0 -> B
    3:3:void ensureExecReady(boolean):0 -> B
    4:4:void ensureExecReady(boolean):0:0 -> B
    1:1:boolean generateOpsForPendingActions(java.util.ArrayList,java.util.ArrayList):0:0 -> C
    1:1:boolean execPendingActions(boolean):0 -> C
    2:2:android.os.Handler androidx.fragment.app.FragmentHostCallback.getHandler():0:0 -> C
    2:2:boolean generateOpsForPendingActions(java.util.ArrayList,java.util.ArrayList):0 -> C
    2:2:boolean execPendingActions(boolean):0 -> C
    3:3:boolean generateOpsForPendingActions(java.util.ArrayList,java.util.ArrayList):0:0 -> C
    3:3:boolean execPendingActions(boolean):0 -> C
    4:4:boolean execPendingActions(boolean):0:0 -> C
    5:5:boolean generateOpsForPendingActions(java.util.ArrayList,java.util.ArrayList):0:0 -> C
    5:5:boolean execPendingActions(boolean):0 -> C
    1:1:androidx.fragment.app.Fragment getPrimaryNavigationFragment():0:0 -> D
    1:1:void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int):0 -> D
    2:2:void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int):0:0 -> D
    3:3:androidx.fragment.app.Fragment androidx.fragment.app.BackStackRecord.expandOps(java.util.ArrayList,androidx.fragment.app.Fragment):0:0 -> D
    3:3:void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int):0 -> D
    4:4:void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int):0:0 -> D
    5:5:androidx.fragment.app.Fragment androidx.fragment.app.BackStackRecord.trackAddedFragmentsInPop(java.util.ArrayList,androidx.fragment.app.Fragment):0:0 -> D
    5:5:void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int):0 -> D
    6:6:void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int):0:0 -> D
    7:7:void executeOps(java.util.ArrayList,java.util.ArrayList,int,int):0:0 -> D
    7:7:void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int):0 -> D
    8:8:void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int):0:0 -> D
    9:9:java.util.Set collectChangedControllers(java.util.ArrayList,int,int):0:0 -> D
    9:9:void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int):0 -> D
    10:10:androidx.fragment.app.SpecialEffectsController androidx.fragment.app.SpecialEffectsController.getOrCreateController(android.view.ViewGroup,androidx.fragment.app.FragmentManager):0:0 -> D
    10:10:java.util.Set collectChangedControllers(java.util.ArrayList,int,int):0 -> D
    10:10:void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int):0 -> D
    11:11:java.util.Set collectChangedControllers(java.util.ArrayList,int,int):0:0 -> D
    11:11:void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int):0 -> D
    12:12:void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int):0:0 -> D
    13:13:void androidx.fragment.app.SpecialEffectsController.updateOperationDirection(boolean):0:0 -> D
    13:13:void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int):0 -> D
    14:14:void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int):0:0 -> D
    15:15:void androidx.fragment.app.BackStackRecord.runOnCommitRunnables():0:0 -> D
    15:15:void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int):0 -> D
    1:1:boolean androidx.fragment.app.FragmentManager$StartEnterTransitionListener.isReady():0:0 -> E
    1:1:void executePostponedTransaction(java.util.ArrayList,java.util.ArrayList):0 -> E
    2:2:void executePostponedTransaction(java.util.ArrayList,java.util.ArrayList):0:0 -> E
    3:3:void androidx.fragment.app.FragmentManager$StartEnterTransitionListener.cancelTransaction():0:0 -> E
    3:3:void executePostponedTransaction(java.util.ArrayList,java.util.ArrayList):0 -> E
    4:4:void executePostponedTransaction(java.util.ArrayList,java.util.ArrayList):0:0 -> E
    androidx.fragment.app.Fragment findActiveFragment(java.lang.String) -> F
    1:1:androidx.fragment.app.Fragment androidx.fragment.app.FragmentStore.findFragmentById(int):0:0 -> G
    1:1:androidx.fragment.app.Fragment findFragmentById(int):0 -> G
    2:2:androidx.fragment.app.Fragment androidx.fragment.app.FragmentStateManager.getFragment():0:0 -> G
    2:2:androidx.fragment.app.Fragment androidx.fragment.app.FragmentStore.findFragmentById(int):0 -> G
    2:2:androidx.fragment.app.Fragment findFragmentById(int):0 -> G
    3:3:androidx.fragment.app.Fragment androidx.fragment.app.FragmentStore.findFragmentById(int):0:0 -> G
    3:3:androidx.fragment.app.Fragment findFragmentById(int):0 -> G
    1:1:androidx.fragment.app.Fragment androidx.fragment.app.FragmentStore.findFragmentByTag(java.lang.String):0:0 -> H
    1:1:androidx.fragment.app.Fragment findFragmentByTag(java.lang.String):0 -> H
    2:2:androidx.fragment.app.Fragment androidx.fragment.app.FragmentStateManager.getFragment():0:0 -> H
    2:2:androidx.fragment.app.Fragment androidx.fragment.app.FragmentStore.findFragmentByTag(java.lang.String):0 -> H
    2:2:androidx.fragment.app.Fragment findFragmentByTag(java.lang.String):0 -> H
    3:3:androidx.fragment.app.Fragment androidx.fragment.app.FragmentStore.findFragmentByTag(java.lang.String):0:0 -> H
    3:3:androidx.fragment.app.Fragment findFragmentByTag(java.lang.String):0 -> H
    android.view.ViewGroup getFragmentContainer(androidx.fragment.app.Fragment) -> I
    androidx.fragment.app.FragmentFactory getFragmentFactory() -> J
    androidx.fragment.app.SpecialEffectsControllerFactory getSpecialEffectsControllerFactory() -> K
    void hideFragment(androidx.fragment.app.Fragment) -> L
    boolean isLoggingEnabled(int) -> M
    1:1:boolean checkForMenus():0:0 -> N
    1:1:boolean isMenuAvailable(androidx.fragment.app.Fragment):0 -> N
    boolean isParentMenuVisible(androidx.fragment.app.Fragment) -> O
    1:1:androidx.fragment.app.Fragment getPrimaryNavigationFragment():0:0 -> P
    1:1:boolean isPrimaryNavigation(androidx.fragment.app.Fragment):0 -> P
    2:2:boolean isPrimaryNavigation(androidx.fragment.app.Fragment):0:0 -> P
    boolean isStateSaved() -> Q
    1:1:void androidx.fragment.app.FragmentStore.moveToExpectedState():0:0 -> R
    1:1:void moveToState(int,boolean):0 -> R
    2:2:androidx.fragment.app.Fragment androidx.fragment.app.FragmentStateManager.getFragment():0:0 -> R
    2:2:void androidx.fragment.app.FragmentStore.moveToExpectedState():0 -> R
    2:2:void moveToState(int,boolean):0 -> R
    3:3:void androidx.fragment.app.FragmentStore.moveToExpectedState():0:0 -> R
    3:3:void moveToState(int,boolean):0 -> R
    4:4:void moveToState(int,boolean):0:0 -> R
    1:1:void androidx.fragment.app.FragmentStateManager.setFragmentManagerState(int):0:0 -> S
    1:1:void moveToState(androidx.fragment.app.Fragment,int):0 -> S
    2:2:void moveToState(androidx.fragment.app.Fragment,int):0:0 -> S
    3:3:android.content.Context androidx.fragment.app.FragmentHostCallback.getContext():0:0 -> S
    3:3:void moveToState(androidx.fragment.app.Fragment,int):0 -> S
    4:4:void moveToState(androidx.fragment.app.Fragment,int):0:0 -> S
    5:5:void androidx.fragment.app.FragmentAnim.animateRemoveFragment(androidx.fragment.app.Fragment,androidx.fragment.app.FragmentAnim$AnimationOrAnimator,androidx.fragment.app.FragmentTransition$Callback):0:0 -> S
    5:5:void moveToState(androidx.fragment.app.Fragment,int):0 -> S
    6:6:void moveToState(androidx.fragment.app.Fragment,int):0:0 -> S
    1:1:void androidx.fragment.app.FragmentManagerViewModel.setIsStateSaved(boolean):0:0 -> T
    1:1:void noteStateNotSaved():0 -> T
    2:2:void noteStateNotSaved():0:0 -> T
    1:1:androidx.fragment.app.Fragment androidx.fragment.app.FragmentStateManager.getFragment():0:0 -> U
    1:1:void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager):0 -> U
    2:2:void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager):0:0 -> U
    1:1:boolean popBackStackImmediate(java.lang.String,int,int):0:0 -> V
    1:1:boolean popBackStackImmediate():0 -> V
    1:1:java.lang.String androidx.fragment.app.BackStackRecord.getName():0:0 -> W
    1:1:boolean popBackStackState(java.util.ArrayList,java.util.ArrayList,java.lang.String,int,int):0 -> W
    2:2:boolean popBackStackState(java.util.ArrayList,java.util.ArrayList,java.lang.String,int,int):0:0 -> W
    3:3:java.lang.String androidx.fragment.app.BackStackRecord.getName():0:0 -> W
    3:3:boolean popBackStackState(java.util.ArrayList,java.util.ArrayList,java.lang.String,int,int):0 -> W
    4:4:boolean popBackStackState(java.util.ArrayList,java.util.ArrayList,java.lang.String,int,int):0:0 -> W
    void removeFragment(androidx.fragment.app.Fragment) -> X
    void removeRedundantOperationsAndExecute(java.util.ArrayList,java.util.ArrayList) -> Y
    1:1:void androidx.fragment.app.FragmentStore.resetActiveFragments():0:0 -> Z
    1:1:void restoreSaveState(android.os.Parcelable):0 -> Z
    2:2:void restoreSaveState(android.os.Parcelable):0:0 -> Z
    3:3:androidx.fragment.app.Fragment androidx.fragment.app.FragmentManagerViewModel.findRetainedFragmentByWho(java.lang.String):0:0 -> Z
    3:3:void restoreSaveState(android.os.Parcelable):0 -> Z
    4:4:void restoreSaveState(android.os.Parcelable):0:0 -> Z
    5:5:android.content.Context androidx.fragment.app.FragmentHostCallback.getContext():0:0 -> Z
    5:5:void restoreSaveState(android.os.Parcelable):0 -> Z
    6:6:void restoreSaveState(android.os.Parcelable):0:0 -> Z
    7:7:androidx.fragment.app.Fragment androidx.fragment.app.FragmentStateManager.getFragment():0:0 -> Z
    7:7:void restoreSaveState(android.os.Parcelable):0 -> Z
    8:8:void restoreSaveState(android.os.Parcelable):0:0 -> Z
    9:9:android.content.Context androidx.fragment.app.FragmentHostCallback.getContext():0:0 -> Z
    9:9:void restoreSaveState(android.os.Parcelable):0 -> Z
    10:10:void restoreSaveState(android.os.Parcelable):0:0 -> Z
    11:11:void androidx.fragment.app.FragmentStateManager.setFragmentManagerState(int):0:0 -> Z
    11:11:void restoreSaveState(android.os.Parcelable):0 -> Z
    12:12:void restoreSaveState(android.os.Parcelable):0:0 -> Z
    13:13:java.util.Collection androidx.fragment.app.FragmentManagerViewModel.getRetainedFragments():0:0 -> Z
    13:13:void restoreSaveState(android.os.Parcelable):0 -> Z
    14:14:void restoreSaveState(android.os.Parcelable):0:0 -> Z
    15:15:void androidx.fragment.app.FragmentStateManager.setFragmentManagerState(int):0:0 -> Z
    15:15:void restoreSaveState(android.os.Parcelable):0 -> Z
    16:16:void restoreSaveState(android.os.Parcelable):0:0 -> Z
    17:17:void androidx.fragment.app.FragmentStore.restoreAddedFragments(java.util.List):0:0 -> Z
    17:17:void restoreSaveState(android.os.Parcelable):0 -> Z
    18:18:void restoreSaveState(android.os.Parcelable):0:0 -> Z
    19:19:androidx.fragment.app.BackStackRecord androidx.fragment.app.BackStackState.instantiate(androidx.fragment.app.FragmentManager):0:0 -> Z
    19:19:void restoreSaveState(android.os.Parcelable):0 -> Z
    20:20:androidx.fragment.app.Fragment findActiveFragment(java.lang.String):0:0 -> Z
    20:20:androidx.fragment.app.BackStackRecord androidx.fragment.app.BackStackState.instantiate(androidx.fragment.app.FragmentManager):0 -> Z
    20:20:void restoreSaveState(android.os.Parcelable):0 -> Z
    21:21:androidx.fragment.app.BackStackRecord androidx.fragment.app.BackStackState.instantiate(androidx.fragment.app.FragmentManager):0:0 -> Z
    21:21:void restoreSaveState(android.os.Parcelable):0 -> Z
    22:22:void restoreSaveState(android.os.Parcelable):0:0 -> Z
    23:23:android.content.Context androidx.fragment.app.FragmentHostCallback.getContext():0:0 -> Z
    23:23:void restoreSaveState(android.os.Parcelable):0 -> Z
    24:24:void restoreSaveState(android.os.Parcelable):0:0 -> Z
    androidx.fragment.app.FragmentStateManager addFragment(androidx.fragment.app.Fragment) -> a
    1:1:void forcePostponedTransactions():0:0 -> a0
    1:1:android.os.Parcelable saveAllState():0 -> a0
    2:2:void androidx.fragment.app.SpecialEffectsController.forcePostponedExecutePendingOperations():0:0 -> a0
    2:2:void forcePostponedTransactions():0 -> a0
    2:2:android.os.Parcelable saveAllState():0 -> a0
    3:3:android.os.Parcelable saveAllState():0:0 -> a0
    4:4:void androidx.fragment.app.FragmentManagerViewModel.setIsStateSaved(boolean):0:0 -> a0
    4:4:android.os.Parcelable saveAllState():0 -> a0
    5:5:android.os.Parcelable saveAllState():0:0 -> a0
    6:6:java.util.ArrayList androidx.fragment.app.FragmentStore.saveActiveFragments():0:0 -> a0
    6:6:android.os.Parcelable saveAllState():0 -> a0
    7:7:androidx.fragment.app.Fragment androidx.fragment.app.FragmentStateManager.getFragment():0:0 -> a0
    7:7:java.util.ArrayList androidx.fragment.app.FragmentStore.saveActiveFragments():0 -> a0
    7:7:android.os.Parcelable saveAllState():0 -> a0
    8:8:androidx.fragment.app.FragmentState androidx.fragment.app.FragmentStateManager.saveState():0:0 -> a0
    8:8:java.util.ArrayList androidx.fragment.app.FragmentStore.saveActiveFragments():0 -> a0
    8:8:android.os.Parcelable saveAllState():0 -> a0
    9:9:android.os.Bundle androidx.fragment.app.FragmentStateManager.saveBasicState():0:0 -> a0
    9:9:androidx.fragment.app.FragmentState androidx.fragment.app.FragmentStateManager.saveState():0 -> a0
    9:9:java.util.ArrayList androidx.fragment.app.FragmentStore.saveActiveFragments():0 -> a0
    9:9:android.os.Parcelable saveAllState():0 -> a0
    10:10:androidx.fragment.app.FragmentState androidx.fragment.app.FragmentStateManager.saveState():0:0 -> a0
    10:10:java.util.ArrayList androidx.fragment.app.FragmentStore.saveActiveFragments():0 -> a0
    10:10:android.os.Parcelable saveAllState():0 -> a0
    11:11:java.util.ArrayList androidx.fragment.app.FragmentStore.saveActiveFragments():0:0 -> a0
    11:11:android.os.Parcelable saveAllState():0 -> a0
    12:12:android.os.Parcelable saveAllState():0:0 -> a0
    13:13:java.util.ArrayList androidx.fragment.app.FragmentStore.saveAddedFragments():0:0 -> a0
    13:13:android.os.Parcelable saveAllState():0 -> a0
    14:14:android.os.Parcelable saveAllState():0:0 -> a0
    15:15:java.util.ArrayList androidx.fragment.app.FragmentStore.saveAddedFragments():0:0 -> a0
    15:15:android.os.Parcelable saveAllState():0 -> a0
    1:1:void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment):0:0 -> b
    2:2:void addFragmentOnAttachListener(androidx.fragment.app.FragmentOnAttachListener):0:0 -> b
    2:2:void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment):0 -> b
    3:3:void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment):0:0 -> b
    4:4:void androidx.activity.OnBackPressedDispatcher.addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback):0:0 -> b
    4:4:void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment):0 -> b
    5:5:androidx.lifecycle.Lifecycle$State androidx.lifecycle.LifecycleRegistry.getCurrentState():0:0 -> b
    5:5:void androidx.activity.OnBackPressedDispatcher.addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback):0 -> b
    5:5:void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment):0 -> b
    6:6:void androidx.activity.OnBackPressedDispatcher.addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback):0:0 -> b
    6:6:void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment):0 -> b
    7:7:void androidx.activity.OnBackPressedCallback.addCancellable(androidx.activity.Cancellable):0:0 -> b
    7:7:void androidx.activity.OnBackPressedDispatcher.addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback):0 -> b
    7:7:void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment):0 -> b
    8:8:void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment):0:0 -> b
    9:9:androidx.fragment.app.FragmentManagerViewModel getChildNonConfig(androidx.fragment.app.Fragment):0:0 -> b
    9:9:void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment):0 -> b
    10:10:androidx.fragment.app.FragmentManagerViewModel androidx.fragment.app.FragmentManagerViewModel.getChildNonConfig(androidx.fragment.app.Fragment):0:0 -> b
    10:10:androidx.fragment.app.FragmentManagerViewModel getChildNonConfig(androidx.fragment.app.Fragment):0 -> b
    10:10:void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment):0 -> b
    11:11:void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment):0:0 -> b
    12:12:androidx.fragment.app.FragmentManagerViewModel androidx.fragment.app.FragmentManagerViewModel.getInstance(androidx.lifecycle.ViewModelStore):0:0 -> b
    12:12:void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment):0 -> b
    13:13:androidx.lifecycle.ViewModel androidx.lifecycle.ViewModelProvider.get(java.lang.Class):0:0 -> b
    13:13:androidx.fragment.app.FragmentManagerViewModel androidx.fragment.app.FragmentManagerViewModel.getInstance(androidx.lifecycle.ViewModelStore):0 -> b
    13:13:void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment):0 -> b
    14:14:androidx.lifecycle.ViewModel androidx.lifecycle.ViewModelStore.get(java.lang.String):0:0 -> b
    14:14:androidx.lifecycle.ViewModel androidx.lifecycle.ViewModelProvider.get(java.lang.String,java.lang.Class):0 -> b
    14:14:androidx.lifecycle.ViewModel androidx.lifecycle.ViewModelProvider.get(java.lang.Class):0 -> b
    14:14:androidx.fragment.app.FragmentManagerViewModel androidx.fragment.app.FragmentManagerViewModel.getInstance(androidx.lifecycle.ViewModelStore):0 -> b
    14:14:void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment):0 -> b
    15:15:androidx.lifecycle.ViewModel androidx.lifecycle.ViewModelProvider.get(java.lang.String,java.lang.Class):0:0 -> b
    15:15:androidx.lifecycle.ViewModel androidx.lifecycle.ViewModelProvider.get(java.lang.Class):0 -> b
    15:15:androidx.fragment.app.FragmentManagerViewModel androidx.fragment.app.FragmentManagerViewModel.getInstance(androidx.lifecycle.ViewModelStore):0 -> b
    15:15:void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment):0 -> b
    16:16:void androidx.lifecycle.ViewModelStore.put(java.lang.String,androidx.lifecycle.ViewModel):0:0 -> b
    16:16:androidx.lifecycle.ViewModel androidx.lifecycle.ViewModelProvider.get(java.lang.String,java.lang.Class):0 -> b
    16:16:androidx.lifecycle.ViewModel androidx.lifecycle.ViewModelProvider.get(java.lang.Class):0 -> b
    16:16:androidx.fragment.app.FragmentManagerViewModel androidx.fragment.app.FragmentManagerViewModel.getInstance(androidx.lifecycle.ViewModelStore):0 -> b
    16:16:void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment):0 -> b
    17:17:androidx.fragment.app.FragmentManagerViewModel androidx.fragment.app.FragmentManagerViewModel.getInstance(androidx.lifecycle.ViewModelStore):0:0 -> b
    17:17:void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment):0 -> b
    18:18:void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment):0:0 -> b
    19:19:androidx.lifecycle.ViewModel androidx.lifecycle.ViewModelProvider.get(java.lang.Class):0:0 -> b
    19:19:androidx.fragment.app.FragmentManagerViewModel androidx.fragment.app.FragmentManagerViewModel.getInstance(androidx.lifecycle.ViewModelStore):0 -> b
    19:19:void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment):0 -> b
    20:20:void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment):0:0 -> b
    21:21:void androidx.fragment.app.FragmentManagerViewModel.setIsStateSaved(boolean):0:0 -> b
    21:21:void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment):0 -> b
    22:22:void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment):0:0 -> b
    23:23:void androidx.fragment.app.FragmentStore.setNonConfig(androidx.fragment.app.FragmentManagerViewModel):0:0 -> b
    23:23:void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment):0 -> b
    24:24:void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment):0:0 -> b
    1:1:android.os.Handler androidx.fragment.app.FragmentHostCallback.getHandler():0:0 -> b0
    1:1:void scheduleCommit():0 -> b0
    2:2:void scheduleCommit():0:0 -> b0
    3:3:android.os.Handler androidx.fragment.app.FragmentHostCallback.getHandler():0:0 -> b0
    3:3:void scheduleCommit():0 -> b0
    4:4:void scheduleCommit():0:0 -> b0
    void attachFragment(androidx.fragment.app.Fragment) -> c
    void setExitAnimationOrder(androidx.fragment.app.Fragment,boolean) -> c0
    void cancelExitAnimation(androidx.fragment.app.Fragment) -> d
    void setMaxLifecycle(androidx.fragment.app.Fragment,androidx.lifecycle.Lifecycle$State) -> d0
    void cleanupExec() -> e
    void setPrimaryNavigationFragment(androidx.fragment.app.Fragment) -> e0
    1:1:androidx.fragment.app.Fragment androidx.fragment.app.FragmentStateManager.getFragment():0:0 -> f
    1:1:java.util.Set collectAllSpecialEffectsController():0 -> f
    2:2:java.util.Set collectAllSpecialEffectsController():0:0 -> f
    void setVisibleRemovingFragment(androidx.fragment.app.Fragment) -> f0
    1:1:android.content.Context androidx.fragment.app.FragmentHostCallback.getContext():0:0 -> g
    1:1:void completeExecute(androidx.fragment.app.BackStackRecord,boolean,boolean,boolean):0 -> g
    2:2:void completeExecute(androidx.fragment.app.BackStackRecord,boolean,boolean,boolean):0:0 -> g
    void showFragment(androidx.fragment.app.Fragment) -> g0
    1:1:android.content.Context androidx.fragment.app.FragmentHostCallback.getContext():0:0 -> h
    1:1:androidx.fragment.app.FragmentStateManager createOrGetFragmentStateManager(androidx.fragment.app.Fragment):0 -> h
    2:2:androidx.fragment.app.FragmentStateManager createOrGetFragmentStateManager(androidx.fragment.app.Fragment):0:0 -> h
    3:3:void androidx.fragment.app.FragmentStateManager.setFragmentManagerState(int):0:0 -> h
    3:3:androidx.fragment.app.FragmentStateManager createOrGetFragmentStateManager(androidx.fragment.app.Fragment):0 -> h
    void startPendingDeferredFragments() -> h0
    void destroyFragmentView(androidx.fragment.app.Fragment) -> i
    1:1:void androidx.activity.OnBackPressedCallback.setEnabled(boolean):0:0 -> i0
    1:1:void updateOnBackPressedCallbackEnabled():0 -> i0
    2:2:void updateOnBackPressedCallbackEnabled():0:0 -> i0
    3:3:int getBackStackEntryCount():0:0 -> i0
    3:3:void updateOnBackPressedCallbackEnabled():0 -> i0
    4:4:void updateOnBackPressedCallbackEnabled():0:0 -> i0
    5:5:void androidx.activity.OnBackPressedCallback.setEnabled(boolean):0:0 -> i0
    5:5:void updateOnBackPressedCallbackEnabled():0 -> i0
    6:6:void updateOnBackPressedCallbackEnabled():0:0 -> i0
    void detachFragment(androidx.fragment.app.Fragment) -> j
    void dispatchConfigurationChanged(android.content.res.Configuration) -> k
    boolean dispatchContextItemSelected(android.view.MenuItem) -> l
    1:1:void androidx.fragment.app.FragmentManagerViewModel.setIsStateSaved(boolean):0:0 -> m
    1:1:void dispatchCreate():0 -> m
    2:2:void dispatchCreate():0:0 -> m
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> n
    1:1:void androidx.activity.OnBackPressedCallback.remove():0:0 -> o
    1:1:void dispatchDestroy():0 -> o
    2:2:void dispatchDestroy():0:0 -> o
    void dispatchLowMemory() -> p
    void dispatchMultiWindowModeChanged(boolean) -> q
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> r
    void dispatchOptionsMenuClosed(android.view.Menu) -> s
    void dispatchParentPrimaryNavigationFragmentChanged(androidx.fragment.app.Fragment) -> t
    void dispatchPictureInPictureModeChanged(boolean) -> u
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> v
    1:1:void androidx.fragment.app.FragmentStore.dispatchStateChange(int):0:0 -> w
    1:1:void dispatchStateChange(int):0 -> w
    2:2:void androidx.fragment.app.FragmentStateManager.setFragmentManagerState(int):0:0 -> w
    2:2:void androidx.fragment.app.FragmentStore.dispatchStateChange(int):0 -> w
    2:2:void dispatchStateChange(int):0 -> w
    3:3:void dispatchStateChange(int):0:0 -> w
    void doPendingDeferredStart() -> x
    1:1:void androidx.fragment.app.FragmentStore.dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]):0:0 -> y
    1:1:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]):0 -> y
    2:2:androidx.fragment.app.Fragment androidx.fragment.app.FragmentStateManager.getFragment():0:0 -> y
    2:2:void androidx.fragment.app.FragmentStore.dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]):0 -> y
    2:2:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]):0 -> y
    3:3:void androidx.fragment.app.FragmentStore.dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]):0:0 -> y
    3:3:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]):0 -> y
    4:4:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]):0:0 -> y
    5:5:void androidx.fragment.app.BackStackRecord.dump(java.lang.String,java.io.PrintWriter):0:0 -> y
    5:5:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]):0 -> y
    6:6:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]):0:0 -> y
    void endAnimatingAwayFragments() -> z
androidx.fragment.app.FragmentManager$1 -> a.h.b.z$c:
    androidx.fragment.app.FragmentManager this$0 -> c
    1:1:void androidx.fragment.app.FragmentManager.handleOnBackPressed():0:0 -> a
    1:1:void handleOnBackPressed():0 -> a
    2:2:boolean androidx.activity.OnBackPressedCallback.isEnabled():0:0 -> a
    2:2:void androidx.fragment.app.FragmentManager.handleOnBackPressed():0 -> a
    2:2:void handleOnBackPressed():0 -> a
    3:3:void androidx.fragment.app.FragmentManager.handleOnBackPressed():0:0 -> a
    3:3:void handleOnBackPressed():0 -> a
androidx.fragment.app.FragmentManager$10 -> a.h.b.z$a:
    androidx.fragment.app.FragmentManager this$0 -> a
    1:1:void onActivityResult(androidx.activity.result.ActivityResult):0:0 -> a
    1:1:void onActivityResult(java.lang.Object):0 -> a
    2:2:androidx.fragment.app.FragmentStore androidx.fragment.app.FragmentManager.access$200(androidx.fragment.app.FragmentManager):0:0 -> a
    2:2:void onActivityResult(androidx.activity.result.ActivityResult):0 -> a
    2:2:void onActivityResult(java.lang.Object):0 -> a
    3:3:void onActivityResult(androidx.activity.result.ActivityResult):0:0 -> a
    3:3:void onActivityResult(java.lang.Object):0 -> a
    4:4:int androidx.activity.result.ActivityResult.getResultCode():0:0 -> a
    4:4:void onActivityResult(androidx.activity.result.ActivityResult):0 -> a
    4:4:void onActivityResult(java.lang.Object):0 -> a
    5:5:android.content.Intent androidx.activity.result.ActivityResult.getData():0:0 -> a
    5:5:void onActivityResult(androidx.activity.result.ActivityResult):0 -> a
    5:5:void onActivityResult(java.lang.Object):0 -> a
    6:6:void onActivityResult(androidx.activity.result.ActivityResult):0:0 -> a
    6:6:void onActivityResult(java.lang.Object):0 -> a
androidx.fragment.app.FragmentManager$11 -> a.h.b.z$b:
    androidx.fragment.app.FragmentManager this$0 -> a
    1:1:void onActivityResult(java.util.Map):0:0 -> a
    1:1:void onActivityResult(java.lang.Object):0 -> a
    2:2:androidx.fragment.app.FragmentStore androidx.fragment.app.FragmentManager.access$200(androidx.fragment.app.FragmentManager):0:0 -> a
    2:2:void onActivityResult(java.util.Map):0 -> a
    2:2:void onActivityResult(java.lang.Object):0 -> a
    3:3:void onActivityResult(java.util.Map):0:0 -> a
    3:3:void onActivityResult(java.lang.Object):0 -> a
androidx.fragment.app.FragmentManager$2 -> a.h.b.z$d:
    androidx.fragment.app.FragmentManager this$0 -> a
    1:1:boolean androidx.core.os.CancellationSignal.isCanceled():0:0 -> a
    1:1:void onComplete(androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal):0 -> a
    2:2:void onComplete(androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal):0:0 -> a
    3:3:void androidx.fragment.app.FragmentManager.removeCancellationSignal(androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal):0:0 -> a
    3:3:void onComplete(androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal):0 -> a
    4:4:void androidx.fragment.app.FragmentManager.moveToState(androidx.fragment.app.Fragment):0:0 -> a
    4:4:void androidx.fragment.app.FragmentManager.removeCancellationSignal(androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal):0 -> a
    4:4:void onComplete(androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal):0 -> a
    5:5:boolean androidx.core.os.CancellationSignal.isCanceled():0:0 -> a
    5:5:void onComplete(androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal):0 -> a
    1:1:void androidx.fragment.app.FragmentManager.addCancellationSignal(androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal):0:0 -> b
    1:1:void onStart(androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal):0 -> b
androidx.fragment.app.FragmentManager$3 -> a.h.b.z$e:
    androidx.fragment.app.FragmentManager this$0 -> b
    1:1:androidx.fragment.app.FragmentHostCallback androidx.fragment.app.FragmentManager.getHost():0:0 -> a
    1:1:androidx.fragment.app.Fragment instantiate(java.lang.ClassLoader,java.lang.String):0 -> a
    2:2:android.content.Context androidx.fragment.app.FragmentHostCallback.getContext():0:0 -> a
    2:2:androidx.fragment.app.Fragment instantiate(java.lang.ClassLoader,java.lang.String):0 -> a
    3:3:androidx.fragment.app.Fragment androidx.fragment.app.FragmentContainer.instantiate(android.content.Context,java.lang.String,android.os.Bundle):0:0 -> a
    3:3:androidx.fragment.app.Fragment instantiate(java.lang.ClassLoader,java.lang.String):0 -> a
androidx.fragment.app.FragmentManager$4 -> a.h.b.z$f:
androidx.fragment.app.FragmentManager$5 -> a.h.b.z$g:
    androidx.fragment.app.FragmentManager this$0 -> a
androidx.fragment.app.FragmentManager$6 -> androidx.fragment.app.FragmentManager$6:
    1:1:java.util.Map androidx.fragment.app.FragmentManager.access$000(androidx.fragment.app.FragmentManager):0:0 -> g
    1:1:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):0 -> g
androidx.fragment.app.FragmentManager$8 -> a.h.b.z$h:
    androidx.fragment.app.Fragment val$parent -> a
    void onAttachFragment(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment) -> a
androidx.fragment.app.FragmentManager$9 -> a.h.b.z$i:
    androidx.fragment.app.FragmentManager this$0 -> a
    1:1:void onActivityResult(androidx.activity.result.ActivityResult):0:0 -> a
    1:1:void onActivityResult(java.lang.Object):0 -> a
    2:2:androidx.fragment.app.FragmentStore androidx.fragment.app.FragmentManager.access$200(androidx.fragment.app.FragmentManager):0:0 -> a
    2:2:void onActivityResult(androidx.activity.result.ActivityResult):0 -> a
    2:2:void onActivityResult(java.lang.Object):0 -> a
    3:3:void onActivityResult(androidx.activity.result.ActivityResult):0:0 -> a
    3:3:void onActivityResult(java.lang.Object):0 -> a
    4:4:int androidx.activity.result.ActivityResult.getResultCode():0:0 -> a
    4:4:void onActivityResult(androidx.activity.result.ActivityResult):0 -> a
    4:4:void onActivityResult(java.lang.Object):0 -> a
    5:5:android.content.Intent androidx.activity.result.ActivityResult.getData():0:0 -> a
    5:5:void onActivityResult(androidx.activity.result.ActivityResult):0 -> a
    5:5:void onActivityResult(java.lang.Object):0 -> a
    6:6:void onActivityResult(androidx.activity.result.ActivityResult):0:0 -> a
    6:6:void onActivityResult(java.lang.Object):0 -> a
androidx.fragment.app.FragmentManager$FragmentIntentSenderContract -> a.h.b.z$j:
    1:1:android.content.Intent createIntent(android.content.Context,androidx.activity.result.IntentSenderRequest):0:0 -> a
    1:1:android.content.Intent createIntent(android.content.Context,java.lang.Object):0 -> a
    2:2:android.content.Intent androidx.activity.result.IntentSenderRequest.getFillInIntent():0:0 -> a
    2:2:android.content.Intent createIntent(android.content.Context,androidx.activity.result.IntentSenderRequest):0 -> a
    2:2:android.content.Intent createIntent(android.content.Context,java.lang.Object):0 -> a
    3:3:android.content.Intent createIntent(android.content.Context,androidx.activity.result.IntentSenderRequest):0:0 -> a
    3:3:android.content.Intent createIntent(android.content.Context,java.lang.Object):0 -> a
    4:4:android.content.IntentSender androidx.activity.result.IntentSenderRequest.getIntentSender():0:0 -> a
    4:4:android.content.Intent createIntent(android.content.Context,androidx.activity.result.IntentSenderRequest):0 -> a
    4:4:android.content.Intent createIntent(android.content.Context,java.lang.Object):0 -> a
    5:5:int androidx.activity.result.IntentSenderRequest.getFlagsValues():0:0 -> a
    5:5:android.content.Intent createIntent(android.content.Context,androidx.activity.result.IntentSenderRequest):0 -> a
    5:5:android.content.Intent createIntent(android.content.Context,java.lang.Object):0 -> a
    6:6:int androidx.activity.result.IntentSenderRequest.getFlagsMask():0:0 -> a
    6:6:android.content.Intent createIntent(android.content.Context,androidx.activity.result.IntentSenderRequest):0 -> a
    6:6:android.content.Intent createIntent(android.content.Context,java.lang.Object):0 -> a
    7:7:androidx.activity.result.IntentSenderRequest androidx.activity.result.IntentSenderRequest$Builder.build():0:0 -> a
    7:7:android.content.Intent createIntent(android.content.Context,androidx.activity.result.IntentSenderRequest):0 -> a
    7:7:android.content.Intent createIntent(android.content.Context,java.lang.Object):0 -> a
    8:8:android.content.Intent createIntent(android.content.Context,androidx.activity.result.IntentSenderRequest):0:0 -> a
    8:8:android.content.Intent createIntent(android.content.Context,java.lang.Object):0 -> a
    1:1:androidx.activity.result.ActivityResult parseResult(int,android.content.Intent):0:0 -> c
    1:1:java.lang.Object parseResult(int,android.content.Intent):0 -> c
androidx.fragment.app.FragmentManager$LaunchedFragmentInfo -> a.h.b.z$k:
    java.lang.String mWho -> a
    int mRequestCode -> b
androidx.fragment.app.FragmentManager$LaunchedFragmentInfo$1 -> a.h.b.z$k$a:
    1:1:androidx.fragment.app.FragmentManager$LaunchedFragmentInfo createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    1:1:java.lang.Object createFromParcel(android.os.Parcel):0 -> createFromParcel
    1:1:androidx.fragment.app.FragmentManager$LaunchedFragmentInfo[] newArray(int):0:0 -> newArray
    1:1:java.lang.Object[] newArray(int):0 -> newArray
androidx.fragment.app.FragmentManager$OpGenerator -> a.h.b.z$l:
    boolean generateOps(java.util.ArrayList,java.util.ArrayList) -> a
androidx.fragment.app.FragmentManager$PopBackStackState -> a.h.b.z$m:
    androidx.fragment.app.FragmentManager this$0 -> c
    int mFlags -> b
    int mId -> a
    boolean generateOps(java.util.ArrayList,java.util.ArrayList) -> a
androidx.fragment.app.FragmentManager$StartEnterTransitionListener -> a.h.b.z$n:
    boolean mIsBack -> a
    int mNumPostponed -> c
    androidx.fragment.app.BackStackRecord mRecord -> b
    1:1:java.util.List androidx.fragment.app.FragmentManager.getFragments():0:0 -> a
    1:1:void completeTransaction():0 -> a
    2:2:void completeTransaction():0:0 -> a
androidx.fragment.app.FragmentManagerImpl -> a.h.b.a0:
androidx.fragment.app.FragmentManagerState -> a.h.b.b0:
    java.util.ArrayList mLaunchedFragments -> h
    java.util.ArrayList mResults -> g
    java.util.ArrayList mResultKeys -> f
    int mBackStackIndex -> d
    androidx.fragment.app.BackStackState[] mBackStack -> c
    java.util.ArrayList mAdded -> b
    java.util.ArrayList mActive -> a
    java.lang.String mPrimaryNavActiveWho -> e
androidx.fragment.app.FragmentManagerState$1 -> a.h.b.b0$a:
    1:1:androidx.fragment.app.FragmentManagerState createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    1:1:java.lang.Object createFromParcel(android.os.Parcel):0 -> createFromParcel
    1:1:androidx.fragment.app.FragmentManagerState[] newArray(int):0:0 -> newArray
    1:1:java.lang.Object[] newArray(int):0 -> newArray
androidx.fragment.app.FragmentManagerViewModel -> a.h.b.c0:
    androidx.lifecycle.ViewModelProvider$Factory FACTORY -> i
    boolean mStateAutomaticallySaved -> f
    boolean mHasBeenCleared -> g
    boolean mIsStateSaved -> h
    java.util.HashMap mViewModelStores -> e
    java.util.HashMap mChildNonConfigs -> d
    java.util.HashMap mRetainedFragments -> c
    void onCleared() -> a
    void addRetainedFragment(androidx.fragment.app.Fragment) -> c
    void removeRetainedFragment(androidx.fragment.app.Fragment) -> d
    boolean shouldDestroy(androidx.fragment.app.Fragment) -> e
androidx.fragment.app.FragmentManagerViewModel$1 -> a.h.b.c0$a:
    androidx.lifecycle.ViewModel create(java.lang.Class) -> a
androidx.fragment.app.FragmentOnAttachListener -> a.h.b.d0:
    void onAttachFragment(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment) -> a
androidx.fragment.app.FragmentState -> a.h.b.e0:
    java.lang.String mTag -> f
    int mMaxLifecycleState -> l
    boolean mDetached -> i
    boolean mHidden -> k
    int mFragmentId -> d
    int mContainerId -> e
    android.os.Bundle mArguments -> j
    android.os.Bundle mSavedFragmentState -> m
    java.lang.String mClassName -> a
    boolean mRetainInstance -> g
    boolean mRemoving -> h
    java.lang.String mWho -> b
    boolean mFromLayout -> c
androidx.fragment.app.FragmentState$1 -> a.h.b.e0$a:
    1:1:androidx.fragment.app.FragmentState createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    1:1:java.lang.Object createFromParcel(android.os.Parcel):0 -> createFromParcel
    1:1:androidx.fragment.app.FragmentState[] newArray(int):0:0 -> newArray
    1:1:java.lang.Object[] newArray(int):0 -> newArray
androidx.fragment.app.FragmentStateManager -> a.h.b.f0:
    androidx.fragment.app.FragmentLifecycleCallbacksDispatcher mDispatcher -> a
    androidx.fragment.app.FragmentStore mFragmentStore -> b
    int mFragmentManagerState -> e
    androidx.fragment.app.Fragment mFragment -> c
    boolean mMovingToState -> d
    void activityCreated() -> a
    1:1:int androidx.fragment.app.FragmentStore.findFragmentIndexInContainer(androidx.fragment.app.Fragment):0:0 -> b
    1:1:void addViewToContainer():0 -> b
    2:2:void addViewToContainer():0:0 -> b
    1:1:androidx.fragment.app.FragmentHostCallback androidx.fragment.app.FragmentManager.getHost():0:0 -> c
    1:1:void attach():0 -> c
    2:2:void attach():0:0 -> c
    3:3:androidx.fragment.app.Fragment androidx.fragment.app.FragmentManager.getParent():0:0 -> c
    3:3:void attach():0 -> c
    4:4:void attach():0:0 -> c
    1:1:androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact androidx.fragment.app.SpecialEffectsController.getAwaitingCompletionLifecycleImpact(androidx.fragment.app.FragmentStateManager):0:0 -> d
    1:1:int computeExpectedState():0 -> d
    2:2:androidx.fragment.app.Fragment getFragment():0:0 -> d
    2:2:androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact androidx.fragment.app.SpecialEffectsController.getAwaitingCompletionLifecycleImpact(androidx.fragment.app.FragmentStateManager):0 -> d
    2:2:int computeExpectedState():0 -> d
    3:3:androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact androidx.fragment.app.SpecialEffectsController.getAwaitingCompletionLifecycleImpact(androidx.fragment.app.FragmentStateManager):0:0 -> d
    3:3:int computeExpectedState():0 -> d
    4:4:androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact androidx.fragment.app.SpecialEffectsController$Operation.getLifecycleImpact():0:0 -> d
    4:4:androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact androidx.fragment.app.SpecialEffectsController.getAwaitingCompletionLifecycleImpact(androidx.fragment.app.FragmentStateManager):0 -> d
    4:4:int computeExpectedState():0 -> d
    5:5:androidx.fragment.app.Fragment getFragment():0:0 -> d
    5:5:androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact androidx.fragment.app.SpecialEffectsController.getAwaitingCompletionLifecycleImpact(androidx.fragment.app.FragmentStateManager):0 -> d
    5:5:int computeExpectedState():0 -> d
    6:6:androidx.fragment.app.SpecialEffectsController$Operation androidx.fragment.app.SpecialEffectsController.findRunningOperation(androidx.fragment.app.Fragment):0:0 -> d
    6:6:androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact androidx.fragment.app.SpecialEffectsController.getAwaitingCompletionLifecycleImpact(androidx.fragment.app.FragmentStateManager):0 -> d
    6:6:int computeExpectedState():0 -> d
    7:7:androidx.fragment.app.Fragment androidx.fragment.app.SpecialEffectsController$Operation.getFragment():0:0 -> d
    7:7:androidx.fragment.app.SpecialEffectsController$Operation androidx.fragment.app.SpecialEffectsController.findRunningOperation(androidx.fragment.app.Fragment):0 -> d
    7:7:androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact androidx.fragment.app.SpecialEffectsController.getAwaitingCompletionLifecycleImpact(androidx.fragment.app.FragmentStateManager):0 -> d
    7:7:int computeExpectedState():0 -> d
    8:8:androidx.fragment.app.SpecialEffectsController$Operation androidx.fragment.app.SpecialEffectsController.findRunningOperation(androidx.fragment.app.Fragment):0:0 -> d
    8:8:androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact androidx.fragment.app.SpecialEffectsController.getAwaitingCompletionLifecycleImpact(androidx.fragment.app.FragmentStateManager):0 -> d
    8:8:int computeExpectedState():0 -> d
    9:9:boolean androidx.fragment.app.SpecialEffectsController$Operation.isCanceled():0:0 -> d
    9:9:androidx.fragment.app.SpecialEffectsController$Operation androidx.fragment.app.SpecialEffectsController.findRunningOperation(androidx.fragment.app.Fragment):0 -> d
    9:9:androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact androidx.fragment.app.SpecialEffectsController.getAwaitingCompletionLifecycleImpact(androidx.fragment.app.FragmentStateManager):0 -> d
    9:9:int computeExpectedState():0 -> d
    10:10:androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact androidx.fragment.app.SpecialEffectsController.getAwaitingCompletionLifecycleImpact(androidx.fragment.app.FragmentStateManager):0:0 -> d
    10:10:int computeExpectedState():0 -> d
    11:11:androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact androidx.fragment.app.SpecialEffectsController$Operation.getLifecycleImpact():0:0 -> d
    11:11:androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact androidx.fragment.app.SpecialEffectsController.getAwaitingCompletionLifecycleImpact(androidx.fragment.app.FragmentStateManager):0 -> d
    11:11:int computeExpectedState():0 -> d
    12:12:int computeExpectedState():0:0 -> d
    void create() -> e
    1:1:androidx.fragment.app.FragmentContainer androidx.fragment.app.FragmentManager.getContainer():0:0 -> f
    1:1:void createView():0 -> f
    2:2:void createView():0:0 -> f
    3:3:boolean androidx.core.view.ViewCompat.isAttachedToWindow(android.view.View):0:0 -> f
    3:3:void createView():0 -> f
    4:4:void createView():0:0 -> f
    5:5:void androidx.core.view.ViewCompat.requestApplyInsets(android.view.View):0:0 -> f
    5:5:void createView():0 -> f
    6:6:void createView():0:0 -> f
    1:1:androidx.fragment.app.FragmentManagerViewModel androidx.fragment.app.FragmentStore.getNonConfig():0:0 -> g
    1:1:void destroy():0 -> g
    2:2:void destroy():0:0 -> g
    3:3:androidx.fragment.app.FragmentManagerViewModel androidx.fragment.app.FragmentStore.getNonConfig():0:0 -> g
    3:3:void destroy():0 -> g
    4:4:boolean androidx.fragment.app.FragmentManagerViewModel.isCleared():0:0 -> g
    4:4:void destroy():0 -> g
    5:5:android.content.Context androidx.fragment.app.FragmentHostCallback.getContext():0:0 -> g
    5:5:void destroy():0 -> g
    6:6:void destroy():0:0 -> g
    7:7:androidx.fragment.app.FragmentManagerViewModel androidx.fragment.app.FragmentStore.getNonConfig():0:0 -> g
    7:7:void destroy():0 -> g
    8:8:void destroy():0:0 -> g
    9:9:void androidx.fragment.app.FragmentManagerViewModel.clearNonConfigState(androidx.fragment.app.Fragment):0:0 -> g
    9:9:void destroy():0 -> g
    10:10:void destroy():0:0 -> g
    11:11:androidx.fragment.app.Fragment getFragment():0:0 -> g
    11:11:void destroy():0 -> g
    12:12:void destroy():0:0 -> g
    void destroyFragmentView() -> h
    1:1:androidx.fragment.app.FragmentManagerViewModel androidx.fragment.app.FragmentStore.getNonConfig():0:0 -> i
    1:1:void detach():0 -> i
    2:2:void detach():0:0 -> i
    void ensureInflatedView() -> j
    1:1:androidx.fragment.app.Fragment getFragment():0:0 -> k
    1:1:void moveToExpectedState():0 -> k
    2:2:void moveToExpectedState():0:0 -> k
    3:3:void androidx.fragment.app.SpecialEffectsController.enqueueAdd(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.FragmentStateManager):0:0 -> k
    3:3:void moveToExpectedState():0 -> k
    4:4:androidx.fragment.app.Fragment getFragment():0:0 -> k
    4:4:void androidx.fragment.app.SpecialEffectsController.enqueueAdd(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.FragmentStateManager):0 -> k
    4:4:void moveToExpectedState():0 -> k
    5:5:void androidx.fragment.app.SpecialEffectsController.enqueueAdd(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.FragmentStateManager):0:0 -> k
    5:5:void moveToExpectedState():0 -> k
    6:6:void moveToExpectedState():0:0 -> k
    7:7:void androidx.fragment.app.SpecialEffectsController.enqueueRemove(androidx.fragment.app.FragmentStateManager):0:0 -> k
    7:7:void moveToExpectedState():0 -> k
    8:8:androidx.fragment.app.Fragment getFragment():0:0 -> k
    8:8:void androidx.fragment.app.SpecialEffectsController.enqueueRemove(androidx.fragment.app.FragmentStateManager):0 -> k
    8:8:void moveToExpectedState():0 -> k
    9:9:void androidx.fragment.app.SpecialEffectsController.enqueueRemove(androidx.fragment.app.FragmentStateManager):0:0 -> k
    9:9:void moveToExpectedState():0 -> k
    10:10:void moveToExpectedState():0:0 -> k
    11:11:void androidx.fragment.app.SpecialEffectsController.enqueueHide(androidx.fragment.app.FragmentStateManager):0:0 -> k
    11:11:void moveToExpectedState():0 -> k
    12:12:androidx.fragment.app.Fragment getFragment():0:0 -> k
    12:12:void androidx.fragment.app.SpecialEffectsController.enqueueHide(androidx.fragment.app.FragmentStateManager):0 -> k
    12:12:void moveToExpectedState():0 -> k
    13:13:void androidx.fragment.app.SpecialEffectsController.enqueueHide(androidx.fragment.app.FragmentStateManager):0:0 -> k
    13:13:void moveToExpectedState():0 -> k
    14:14:void androidx.fragment.app.SpecialEffectsController.enqueueShow(androidx.fragment.app.FragmentStateManager):0:0 -> k
    14:14:void moveToExpectedState():0 -> k
    15:15:androidx.fragment.app.Fragment getFragment():0:0 -> k
    15:15:void androidx.fragment.app.SpecialEffectsController.enqueueShow(androidx.fragment.app.FragmentStateManager):0 -> k
    15:15:void moveToExpectedState():0 -> k
    16:16:void androidx.fragment.app.SpecialEffectsController.enqueueShow(androidx.fragment.app.FragmentStateManager):0:0 -> k
    16:16:void moveToExpectedState():0 -> k
    17:17:void moveToExpectedState():0:0 -> k
    18:18:void androidx.fragment.app.FragmentManager.invalidateMenuForFragment(androidx.fragment.app.Fragment):0:0 -> k
    18:18:void moveToExpectedState():0 -> k
    19:19:void moveToExpectedState():0:0 -> k
    void pause() -> l
    void restoreState(java.lang.ClassLoader) -> m
    1:1:boolean isFragmentViewChild(android.view.View):0:0 -> n
    1:1:void resume():0 -> n
    2:2:void resume():0:0 -> n
    1:1:void androidx.fragment.app.FragmentViewLifecycleOwner.performSave(android.os.Bundle):0:0 -> o
    1:1:void saveViewState():0 -> o
    2:2:void saveViewState():0:0 -> o
    void start() -> p
    void stop() -> q
androidx.fragment.app.FragmentStateManager$1 -> a.h.b.f0$a:
    android.view.View val$fragmentView -> a
    1:1:void androidx.core.view.ViewCompat.requestApplyInsets(android.view.View):0:0 -> onViewAttachedToWindow
    1:1:void onViewAttachedToWindow(android.view.View):0 -> onViewAttachedToWindow
androidx.fragment.app.FragmentStore -> a.h.b.g0:
    androidx.fragment.app.FragmentManagerViewModel mNonConfig -> c
    java.util.HashMap mActive -> b
    java.util.ArrayList mAdded -> a
    void addFragment(androidx.fragment.app.Fragment) -> a
    void burpActive() -> b
    boolean containsActiveFragment(java.lang.String) -> c
    1:1:androidx.fragment.app.Fragment androidx.fragment.app.FragmentStateManager.getFragment():0:0 -> d
    1:1:androidx.fragment.app.Fragment findActiveFragment(java.lang.String):0 -> d
    1:1:androidx.fragment.app.Fragment androidx.fragment.app.FragmentStateManager.getFragment():0:0 -> e
    1:1:androidx.fragment.app.Fragment findFragmentByWho(java.lang.String):0 -> e
    2:2:androidx.fragment.app.Fragment findFragmentByWho(java.lang.String):0:0 -> e
    java.util.List getActiveFragmentStateManagers() -> f
    1:1:androidx.fragment.app.Fragment androidx.fragment.app.FragmentStateManager.getFragment():0:0 -> g
    1:1:java.util.List getActiveFragments():0 -> g
    2:2:java.util.List getActiveFragments():0:0 -> g
    androidx.fragment.app.FragmentStateManager getFragmentStateManager(java.lang.String) -> h
    java.util.List getFragments() -> i
    1:1:androidx.fragment.app.Fragment androidx.fragment.app.FragmentStateManager.getFragment():0:0 -> j
    1:1:void makeActive(androidx.fragment.app.FragmentStateManager):0 -> j
    2:2:void makeActive(androidx.fragment.app.FragmentStateManager):0:0 -> j
    1:1:androidx.fragment.app.Fragment androidx.fragment.app.FragmentStateManager.getFragment():0:0 -> k
    1:1:void makeInactive(androidx.fragment.app.FragmentStateManager):0 -> k
    2:2:void makeInactive(androidx.fragment.app.FragmentStateManager):0:0 -> k
    void removeFragment(androidx.fragment.app.Fragment) -> l
androidx.fragment.app.FragmentTransaction -> a.h.b.h0:
    java.lang.String mName -> i
    int mBreadCrumbShortTitleRes -> l
    boolean mReorderingAllowed -> p
    int mBreadCrumbTitleRes -> j
    int mTransition -> f
    int mPopEnterAnim -> d
    int mPopExitAnim -> e
    int mEnterAnim -> b
    int mExitAnim -> c
    java.util.ArrayList mOps -> a
    java.lang.CharSequence mBreadCrumbTitleText -> k
    java.util.ArrayList mSharedElementTargetNames -> o
    java.lang.CharSequence mBreadCrumbShortTitleText -> m
    java.util.ArrayList mSharedElementSourceNames -> n
    boolean mAddToBackStack -> g
    boolean mAllowAddToBackStack -> h
    void addOp(androidx.fragment.app.FragmentTransaction$Op) -> b
    int commit() -> c
    void doAddOp(int,androidx.fragment.app.Fragment,java.lang.String,int) -> d
    1:1:androidx.fragment.app.FragmentTransaction replace(int,androidx.fragment.app.Fragment,java.lang.String):0:0 -> e
    1:1:androidx.fragment.app.FragmentTransaction replace(int,androidx.fragment.app.Fragment):0 -> e
androidx.fragment.app.FragmentTransaction$Op -> a.h.b.h0$a:
    int mPopExitAnim -> f
    androidx.fragment.app.Fragment mFragment -> b
    int mExitAnim -> d
    androidx.lifecycle.Lifecycle$State mCurrentMaxState -> h
    int mPopEnterAnim -> e
    androidx.lifecycle.Lifecycle$State mOldMaxState -> g
    int mEnterAnim -> c
    int mCmd -> a
androidx.fragment.app.FragmentTransition -> a.h.b.o0:
    androidx.fragment.app.FragmentTransitionImpl PLATFORM_IMPL -> b
    androidx.fragment.app.FragmentTransitionImpl SUPPORT_IMPL -> c
    int[] INVERSE_OPS -> a
    1:1:androidx.fragment.app.FragmentTransitionImpl resolveSupportImpl():0:0 -> <clinit>
    1:1:void <clinit>():0 -> <clinit>
    2:2:void <clinit>():0:0 -> <clinit>
    1:1:int androidx.collection.SimpleArrayMap.size():0:0 -> a
    1:1:void addSharedElementsWithMatchingNames(java.util.ArrayList,androidx.collection.ArrayMap,java.util.Collection):0 -> a
    2:2:void addSharedElementsWithMatchingNames(java.util.ArrayList,androidx.collection.ArrayMap,java.util.Collection):0:0 -> a
    3:3:java.lang.String androidx.core.view.ViewCompat.getTransitionName(android.view.View):0:0 -> a
    3:3:void addSharedElementsWithMatchingNames(java.util.ArrayList,androidx.collection.ArrayMap,java.util.Collection):0 -> a
    4:4:void addSharedElementsWithMatchingNames(java.util.ArrayList,androidx.collection.ArrayMap,java.util.Collection):0:0 -> a
    1:1:androidx.fragment.app.FragmentTransition$FragmentContainerTransition ensureContainer(androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.util.SparseArray,int):0:0 -> b
    1:1:void addToFirstInLastOut(androidx.fragment.app.BackStackRecord,androidx.fragment.app.FragmentTransaction$Op,android.util.SparseArray,boolean,boolean):0 -> b
    2:2:void addToFirstInLastOut(androidx.fragment.app.BackStackRecord,androidx.fragment.app.FragmentTransaction$Op,android.util.SparseArray,boolean,boolean):0:0 -> b
    3:3:androidx.fragment.app.FragmentStore androidx.fragment.app.FragmentManager.getFragmentStore():0:0 -> b
    3:3:void addToFirstInLastOut(androidx.fragment.app.BackStackRecord,androidx.fragment.app.FragmentTransaction$Op,android.util.SparseArray,boolean,boolean):0 -> b
    4:4:void addToFirstInLastOut(androidx.fragment.app.BackStackRecord,androidx.fragment.app.FragmentTransaction$Op,android.util.SparseArray,boolean,boolean):0:0 -> b
    5:5:void androidx.fragment.app.FragmentManager.moveToState(androidx.fragment.app.Fragment):0:0 -> b
    5:5:void addToFirstInLastOut(androidx.fragment.app.BackStackRecord,androidx.fragment.app.FragmentTransaction$Op,android.util.SparseArray,boolean,boolean):0 -> b
    6:6:void addToFirstInLastOut(androidx.fragment.app.BackStackRecord,androidx.fragment.app.FragmentTransaction$Op,android.util.SparseArray,boolean,boolean):0:0 -> b
    7:7:androidx.fragment.app.FragmentTransition$FragmentContainerTransition ensureContainer(androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.util.SparseArray,int):0:0 -> b
    7:7:void addToFirstInLastOut(androidx.fragment.app.BackStackRecord,androidx.fragment.app.FragmentTransaction$Op,android.util.SparseArray,boolean,boolean):0 -> b
    8:8:void addToFirstInLastOut(androidx.fragment.app.BackStackRecord,androidx.fragment.app.FragmentTransaction$Op,android.util.SparseArray,boolean,boolean):0:0 -> b
    1:1:int androidx.collection.SimpleArrayMap.size():0:0 -> c
    1:1:void callSharedElementStartEnd(androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean,androidx.collection.ArrayMap,boolean):0 -> c
    2:2:void callSharedElementStartEnd(androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean,androidx.collection.ArrayMap,boolean):0:0 -> c
    boolean canHandleAll(androidx.fragment.app.FragmentTransitionImpl,java.util.List) -> d
    1:1:boolean androidx.collection.ArrayMap.retainAll(java.util.Collection):0:0 -> e
    1:1:androidx.collection.ArrayMap captureInSharedElements(androidx.fragment.app.FragmentTransitionImpl,androidx.collection.ArrayMap,java.lang.Object,androidx.fragment.app.FragmentTransition$FragmentContainerTransition):0 -> e
    2:2:androidx.collection.ArrayMap captureInSharedElements(androidx.fragment.app.FragmentTransitionImpl,androidx.collection.ArrayMap,java.lang.Object,androidx.fragment.app.FragmentTransition$FragmentContainerTransition):0:0 -> e
    3:3:boolean androidx.collection.ArrayMap.retainAll(java.util.Collection):0:0 -> e
    3:3:androidx.collection.ArrayMap captureInSharedElements(androidx.fragment.app.FragmentTransitionImpl,androidx.collection.ArrayMap,java.lang.Object,androidx.fragment.app.FragmentTransition$FragmentContainerTransition):0 -> e
    4:4:androidx.collection.ArrayMap captureInSharedElements(androidx.fragment.app.FragmentTransitionImpl,androidx.collection.ArrayMap,java.lang.Object,androidx.fragment.app.FragmentTransition$FragmentContainerTransition):0:0 -> e
    1:1:boolean androidx.collection.ArrayMap.retainAll(java.util.Collection):0:0 -> f
    1:1:androidx.collection.ArrayMap captureOutSharedElements(androidx.fragment.app.FragmentTransitionImpl,androidx.collection.ArrayMap,java.lang.Object,androidx.fragment.app.FragmentTransition$FragmentContainerTransition):0 -> f
    2:2:androidx.collection.ArrayMap captureOutSharedElements(androidx.fragment.app.FragmentTransitionImpl,androidx.collection.ArrayMap,java.lang.Object,androidx.fragment.app.FragmentTransition$FragmentContainerTransition):0:0 -> f
    3:3:boolean androidx.collection.ArrayMap.retainAll(java.util.Collection):0:0 -> f
    3:3:androidx.collection.ArrayMap captureOutSharedElements(androidx.fragment.app.FragmentTransitionImpl,androidx.collection.ArrayMap,java.lang.Object,androidx.fragment.app.FragmentTransition$FragmentContainerTransition):0 -> f
    4:4:androidx.collection.ArrayMap captureOutSharedElements(androidx.fragment.app.FragmentTransitionImpl,androidx.collection.ArrayMap,java.lang.Object,androidx.fragment.app.FragmentTransition$FragmentContainerTransition):0:0 -> f
    androidx.fragment.app.FragmentTransitionImpl chooseImpl(androidx.fragment.app.Fragment,androidx.fragment.app.Fragment) -> g
    java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View) -> h
    java.lang.Object getEnterTransition(androidx.fragment.app.FragmentTransitionImpl,androidx.fragment.app.Fragment,boolean) -> i
    java.lang.Object getExitTransition(androidx.fragment.app.FragmentTransitionImpl,androidx.fragment.app.Fragment,boolean) -> j
    android.view.View getInEpicenterView(androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.lang.Object,boolean) -> k
    java.lang.Object getSharedElementTransition(androidx.fragment.app.FragmentTransitionImpl,androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean) -> l
    java.lang.Object mergeTransitions(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,java.lang.Object,java.lang.Object,androidx.fragment.app.Fragment,boolean) -> m
    1:1:int androidx.collection.SimpleArrayMap.size():0:0 -> n
    1:1:void retainValues(androidx.collection.ArrayMap,androidx.collection.ArrayMap):0 -> n
    2:2:void retainValues(androidx.collection.ArrayMap,androidx.collection.ArrayMap):0:0 -> n
    void setOutEpicenter(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,java.lang.Object,androidx.collection.ArrayMap,boolean,androidx.fragment.app.BackStackRecord) -> o
    void setViewVisibility(java.util.ArrayList,int) -> p
    1:1:void calculatePopFragments(androidx.fragment.app.BackStackRecord,android.util.SparseArray,boolean):0:0 -> q
    1:1:void startTransitions(android.content.Context,androidx.fragment.app.FragmentContainer,java.util.ArrayList,java.util.ArrayList,int,int,boolean,androidx.fragment.app.FragmentTransition$Callback):0 -> q
    2:2:androidx.fragment.app.FragmentContainer androidx.fragment.app.FragmentManager.getContainer():0:0 -> q
    2:2:void calculatePopFragments(androidx.fragment.app.BackStackRecord,android.util.SparseArray,boolean):0 -> q
    2:2:void startTransitions(android.content.Context,androidx.fragment.app.FragmentContainer,java.util.ArrayList,java.util.ArrayList,int,int,boolean,androidx.fragment.app.FragmentTransition$Callback):0 -> q
    3:3:void calculatePopFragments(androidx.fragment.app.BackStackRecord,android.util.SparseArray,boolean):0:0 -> q
    3:3:void startTransitions(android.content.Context,androidx.fragment.app.FragmentContainer,java.util.ArrayList,java.util.ArrayList,int,int,boolean,androidx.fragment.app.FragmentTransition$Callback):0 -> q
    4:4:void calculateFragments(androidx.fragment.app.BackStackRecord,android.util.SparseArray,boolean):0:0 -> q
    4:4:void startTransitions(android.content.Context,androidx.fragment.app.FragmentContainer,java.util.ArrayList,java.util.ArrayList,int,int,boolean,androidx.fragment.app.FragmentTransition$Callback):0 -> q
    5:5:void startTransitions(android.content.Context,androidx.fragment.app.FragmentContainer,java.util.ArrayList,java.util.ArrayList,int,int,boolean,androidx.fragment.app.FragmentTransition$Callback):0:0 -> q
    6:6:androidx.collection.ArrayMap calculateNameOverrides(int,java.util.ArrayList,java.util.ArrayList,int,int):0:0 -> q
    6:6:void startTransitions(android.content.Context,androidx.fragment.app.FragmentContainer,java.util.ArrayList,java.util.ArrayList,int,int,boolean,androidx.fragment.app.FragmentTransition$Callback):0 -> q
    7:7:void startTransitions(android.content.Context,androidx.fragment.app.FragmentContainer,java.util.ArrayList,java.util.ArrayList,int,int,boolean,androidx.fragment.app.FragmentTransition$Callback):0:0 -> q
    8:8:void configureTransitionsReordered(android.view.ViewGroup,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$Callback):0:0 -> q
    8:8:void startTransitions(android.content.Context,androidx.fragment.app.FragmentContainer,java.util.ArrayList,java.util.ArrayList,int,int,boolean,androidx.fragment.app.FragmentTransition$Callback):0 -> q
    9:9:java.lang.Object configureSharedElementsReordered(androidx.fragment.app.FragmentTransitionImpl,android.view.ViewGroup,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,java.util.ArrayList,java.lang.Object,java.lang.Object):0:0 -> q
    9:9:void configureTransitionsReordered(android.view.ViewGroup,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$Callback):0 -> q
    9:9:void startTransitions(android.content.Context,androidx.fragment.app.FragmentContainer,java.util.ArrayList,java.util.ArrayList,int,int,boolean,androidx.fragment.app.FragmentTransition$Callback):0 -> q
    10:10:void configureTransitionsReordered(android.view.ViewGroup,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$Callback):0:0 -> q
    10:10:void startTransitions(android.content.Context,androidx.fragment.app.FragmentContainer,java.util.ArrayList,java.util.ArrayList,int,int,boolean,androidx.fragment.app.FragmentTransition$Callback):0 -> q
    11:11:void replaceHide(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList):0:0 -> q
    11:11:void configureTransitionsReordered(android.view.ViewGroup,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$Callback):0 -> q
    11:11:void startTransitions(android.content.Context,androidx.fragment.app.FragmentContainer,java.util.ArrayList,java.util.ArrayList,int,int,boolean,androidx.fragment.app.FragmentTransition$Callback):0 -> q
    12:12:void configureTransitionsReordered(android.view.ViewGroup,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$Callback):0:0 -> q
    12:12:void startTransitions(android.content.Context,androidx.fragment.app.FragmentContainer,java.util.ArrayList,java.util.ArrayList,int,int,boolean,androidx.fragment.app.FragmentTransition$Callback):0 -> q
    13:13:void configureTransitionsOrdered(android.view.ViewGroup,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$Callback):0:0 -> q
    13:13:void startTransitions(android.content.Context,androidx.fragment.app.FragmentContainer,java.util.ArrayList,java.util.ArrayList,int,int,boolean,androidx.fragment.app.FragmentTransition$Callback):0 -> q
    14:14:java.lang.Object configureSharedElementsOrdered(androidx.fragment.app.FragmentTransitionImpl,android.view.ViewGroup,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,java.util.ArrayList,java.lang.Object,java.lang.Object):0:0 -> q
    14:14:void configureTransitionsOrdered(android.view.ViewGroup,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$Callback):0 -> q
    14:14:void startTransitions(android.content.Context,androidx.fragment.app.FragmentContainer,java.util.ArrayList,java.util.ArrayList,int,int,boolean,androidx.fragment.app.FragmentTransition$Callback):0 -> q
    15:15:void configureTransitionsOrdered(android.view.ViewGroup,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$Callback):0:0 -> q
    15:15:void startTransitions(android.content.Context,androidx.fragment.app.FragmentContainer,java.util.ArrayList,java.util.ArrayList,int,int,boolean,androidx.fragment.app.FragmentTransition$Callback):0 -> q
    16:16:void scheduleTargetChange(androidx.fragment.app.FragmentTransitionImpl,android.view.ViewGroup,androidx.fragment.app.Fragment,android.view.View,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList):0:0 -> q
    16:16:void configureTransitionsOrdered(android.view.ViewGroup,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$Callback):0 -> q
    16:16:void startTransitions(android.content.Context,androidx.fragment.app.FragmentContainer,java.util.ArrayList,java.util.ArrayList,int,int,boolean,androidx.fragment.app.FragmentTransition$Callback):0 -> q
    17:17:void androidx.fragment.app.FragmentTransitionImpl.setNameOverridesOrdered(android.view.View,java.util.ArrayList,java.util.Map):0:0 -> q
    17:17:void configureTransitionsOrdered(android.view.ViewGroup,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$Callback):0 -> q
    17:17:void startTransitions(android.content.Context,androidx.fragment.app.FragmentContainer,java.util.ArrayList,java.util.ArrayList,int,int,boolean,androidx.fragment.app.FragmentTransition$Callback):0 -> q
    18:18:void configureTransitionsOrdered(android.view.ViewGroup,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$Callback):0:0 -> q
    18:18:void startTransitions(android.content.Context,androidx.fragment.app.FragmentContainer,java.util.ArrayList,java.util.ArrayList,int,int,boolean,androidx.fragment.app.FragmentTransition$Callback):0 -> q
    19:19:void androidx.fragment.app.FragmentTransitionImpl.scheduleNameReset(android.view.ViewGroup,java.util.ArrayList,java.util.Map):0:0 -> q
    19:19:void configureTransitionsOrdered(android.view.ViewGroup,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$Callback):0 -> q
    19:19:void startTransitions(android.content.Context,androidx.fragment.app.FragmentContainer,java.util.ArrayList,java.util.ArrayList,int,int,boolean,androidx.fragment.app.FragmentTransition$Callback):0 -> q
androidx.fragment.app.FragmentTransition$1 -> a.h.b.i0:
    androidx.core.os.CancellationSignal val$signal -> c
    androidx.fragment.app.FragmentTransition$Callback val$callback -> a
    androidx.fragment.app.Fragment val$outFragment -> b
androidx.fragment.app.FragmentTransition$2 -> a.h.b.j0:
    java.util.ArrayList val$exitingViews -> a
androidx.fragment.app.FragmentTransition$3 -> a.h.b.k0:
    androidx.core.os.CancellationSignal val$signal -> c
    androidx.fragment.app.FragmentTransition$Callback val$callback -> a
    androidx.fragment.app.Fragment val$outFragment -> b
androidx.fragment.app.FragmentTransition$4 -> a.h.b.l0:
    java.lang.Object val$exitTransition -> h
    androidx.fragment.app.FragmentTransitionImpl val$impl -> b
    java.util.ArrayList val$exitingViews -> g
    java.util.ArrayList val$enteringViews -> f
    android.view.View val$nonExistentView -> c
    java.util.ArrayList val$sharedElementsIn -> e
    java.lang.Object val$enterTransition -> a
    androidx.fragment.app.Fragment val$inFragment -> d
androidx.fragment.app.FragmentTransition$5 -> a.h.b.m0:
    androidx.fragment.app.FragmentTransitionImpl val$impl -> f
    android.graphics.Rect val$epicenter -> g
    androidx.fragment.app.Fragment val$outFragment -> b
    androidx.fragment.app.Fragment val$inFragment -> a
    androidx.collection.ArrayMap val$inSharedElements -> d
    android.view.View val$epicenterView -> e
    boolean val$inIsPop -> c
androidx.fragment.app.FragmentTransition$6 -> a.h.b.n0:
    androidx.fragment.app.Fragment val$outFragment -> h
    androidx.fragment.app.Fragment val$inFragment -> g
    java.lang.Object val$enterTransition -> k
    boolean val$inIsPop -> i
    java.util.ArrayList val$sharedElementsOut -> j
    android.graphics.Rect val$inEpicenter -> l
    androidx.fragment.app.FragmentTransitionImpl val$impl -> a
    java.lang.Object val$finalSharedElementTransition -> c
    java.util.ArrayList val$sharedElementsIn -> e
    androidx.fragment.app.FragmentTransition$FragmentContainerTransition val$fragments -> d
    androidx.collection.ArrayMap val$nameOverrides -> b
    android.view.View val$nonExistentView -> f
androidx.fragment.app.FragmentTransition$Callback -> a.h.b.o0$a:
androidx.fragment.app.FragmentTransition$FragmentContainerTransition -> a.h.b.o0$b:
    androidx.fragment.app.BackStackRecord firstOutTransaction -> f
    boolean firstOutIsPop -> e
    androidx.fragment.app.Fragment lastIn -> a
    androidx.fragment.app.Fragment firstOut -> d
    boolean lastInIsPop -> b
    androidx.fragment.app.BackStackRecord lastInTransaction -> c
androidx.fragment.app.FragmentTransitionCompat21 -> a.h.b.p0:
    void addTarget(java.lang.Object,android.view.View) -> a
    void addTargets(java.lang.Object,java.util.ArrayList) -> b
    void beginDelayedTransition(android.view.ViewGroup,java.lang.Object) -> c
    boolean canHandle(java.lang.Object) -> d
    java.lang.Object cloneTransition(java.lang.Object) -> f
    java.lang.Object mergeTransitionsInSequence(java.lang.Object,java.lang.Object,java.lang.Object) -> k
    java.lang.Object mergeTransitionsTogether(java.lang.Object,java.lang.Object,java.lang.Object) -> l
    void removeTarget(java.lang.Object,android.view.View) -> n
    void replaceTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList) -> o
    void scheduleHideFragmentView(java.lang.Object,android.view.View,java.util.ArrayList) -> p
    void scheduleRemoveTargets(java.lang.Object,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> q
    void setEpicenter(java.lang.Object,android.graphics.Rect) -> r
    void setEpicenter(java.lang.Object,android.view.View) -> s
    void setListenerForTransitionEnd(androidx.fragment.app.Fragment,java.lang.Object,androidx.core.os.CancellationSignal,java.lang.Runnable) -> t
    1:1:void androidx.fragment.app.FragmentTransitionImpl.bfsAddViewChildren(java.util.List,android.view.View):0:0 -> v
    1:1:void setSharedElementTargets(java.lang.Object,android.view.View,java.util.ArrayList):0 -> v
    2:2:java.lang.String androidx.core.view.ViewCompat.getTransitionName(android.view.View):0:0 -> v
    2:2:void androidx.fragment.app.FragmentTransitionImpl.bfsAddViewChildren(java.util.List,android.view.View):0 -> v
    2:2:void setSharedElementTargets(java.lang.Object,android.view.View,java.util.ArrayList):0 -> v
    3:3:void androidx.fragment.app.FragmentTransitionImpl.bfsAddViewChildren(java.util.List,android.view.View):0:0 -> v
    3:3:void setSharedElementTargets(java.lang.Object,android.view.View,java.util.ArrayList):0 -> v
    4:4:java.lang.String androidx.core.view.ViewCompat.getTransitionName(android.view.View):0:0 -> v
    4:4:void androidx.fragment.app.FragmentTransitionImpl.bfsAddViewChildren(java.util.List,android.view.View):0 -> v
    4:4:void setSharedElementTargets(java.lang.Object,android.view.View,java.util.ArrayList):0 -> v
    5:5:void androidx.fragment.app.FragmentTransitionImpl.bfsAddViewChildren(java.util.List,android.view.View):0:0 -> v
    5:5:void setSharedElementTargets(java.lang.Object,android.view.View,java.util.ArrayList):0 -> v
    6:6:void setSharedElementTargets(java.lang.Object,android.view.View,java.util.ArrayList):0:0 -> v
    void swapSharedElementTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList) -> w
    java.lang.Object wrapTransitionInSet(java.lang.Object) -> x
    boolean hasSimpleTarget(android.transition.Transition) -> y
androidx.fragment.app.FragmentTransitionCompat21$1 -> a.h.b.p0$a:
    android.graphics.Rect val$epicenter -> a
androidx.fragment.app.FragmentTransitionCompat21$2 -> a.h.b.p0$b:
    android.view.View val$fragmentView -> a
    java.util.ArrayList val$exitingViews -> b
androidx.fragment.app.FragmentTransitionCompat21$3 -> a.h.b.p0$c:
    java.lang.Object val$sharedElementTransition -> e
    java.lang.Object val$exitTransition -> c
    java.util.ArrayList val$sharedElementsIn -> f
    java.lang.Object val$enterTransition -> a
    java.util.ArrayList val$exitingViews -> d
    java.util.ArrayList val$enteringViews -> b
    androidx.fragment.app.FragmentTransitionCompat21 this$0 -> g
androidx.fragment.app.FragmentTransitionCompat21$4 -> a.h.b.p0$d:
    java.lang.Runnable val$transitionCompleteRunnable -> a
androidx.fragment.app.FragmentTransitionCompat21$5 -> a.h.b.p0$e:
    android.graphics.Rect val$epicenter -> a
androidx.fragment.app.FragmentTransitionImpl -> a.h.b.q0:
    void addTarget(java.lang.Object,android.view.View) -> a
    void addTargets(java.lang.Object,java.util.ArrayList) -> b
    void beginDelayedTransition(android.view.ViewGroup,java.lang.Object) -> c
    boolean canHandle(java.lang.Object) -> d
    1:1:boolean androidx.core.view.ViewGroupCompat.isTransitionGroup(android.view.ViewGroup):0:0 -> e
    1:1:void captureTransitioningViews(java.util.ArrayList,android.view.View):0 -> e
    2:2:void captureTransitioningViews(java.util.ArrayList,android.view.View):0:0 -> e
    java.lang.Object cloneTransition(java.lang.Object) -> f
    boolean containedBeforeIndex(java.util.List,android.view.View,int) -> g
    1:1:java.lang.String androidx.core.view.ViewCompat.getTransitionName(android.view.View):0:0 -> h
    1:1:void findNamedViews(java.util.Map,android.view.View):0 -> h
    2:2:void findNamedViews(java.util.Map,android.view.View):0:0 -> h
    1:1:boolean androidx.core.view.ViewCompat.isAttachedToWindow(android.view.View):0:0 -> i
    1:1:void getBoundsOnScreen(android.view.View,android.graphics.Rect):0 -> i
    2:2:void getBoundsOnScreen(android.view.View,android.graphics.Rect):0:0 -> i
    boolean isNullOrEmpty(java.util.List) -> j
    java.lang.Object mergeTransitionsInSequence(java.lang.Object,java.lang.Object,java.lang.Object) -> k
    java.lang.Object mergeTransitionsTogether(java.lang.Object,java.lang.Object,java.lang.Object) -> l
    1:1:java.lang.String androidx.core.view.ViewCompat.getTransitionName(android.view.View):0:0 -> m
    1:1:java.util.ArrayList prepareSetNameOverridesReordered(java.util.ArrayList):0 -> m
    2:2:java.util.ArrayList prepareSetNameOverridesReordered(java.util.ArrayList):0:0 -> m
    3:3:void androidx.core.view.ViewCompat.setTransitionName(android.view.View,java.lang.String):0:0 -> m
    3:3:java.util.ArrayList prepareSetNameOverridesReordered(java.util.ArrayList):0 -> m
    void removeTarget(java.lang.Object,android.view.View) -> n
    void replaceTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList) -> o
    void scheduleHideFragmentView(java.lang.Object,android.view.View,java.util.ArrayList) -> p
    void scheduleRemoveTargets(java.lang.Object,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> q
    void setEpicenter(java.lang.Object,android.graphics.Rect) -> r
    void setEpicenter(java.lang.Object,android.view.View) -> s
    void setListenerForTransitionEnd(androidx.fragment.app.Fragment,java.lang.Object,androidx.core.os.CancellationSignal,java.lang.Runnable) -> t
    1:1:java.lang.String androidx.core.view.ViewCompat.getTransitionName(android.view.View):0:0 -> u
    1:1:void setNameOverridesReordered(android.view.View,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.Map):0 -> u
    2:2:void setNameOverridesReordered(android.view.View,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.Map):0:0 -> u
    3:3:void androidx.core.view.ViewCompat.setTransitionName(android.view.View,java.lang.String):0:0 -> u
    3:3:void setNameOverridesReordered(android.view.View,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.Map):0 -> u
    4:4:void setNameOverridesReordered(android.view.View,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.Map):0:0 -> u
    5:5:java.lang.Object androidx.collection.SimpleArrayMap.get(java.lang.Object):0:0 -> u
    5:5:void setNameOverridesReordered(android.view.View,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.Map):0 -> u
    6:6:void setNameOverridesReordered(android.view.View,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.Map):0:0 -> u
    7:7:void androidx.core.view.ViewCompat.setTransitionName(android.view.View,java.lang.String):0:0 -> u
    7:7:void setNameOverridesReordered(android.view.View,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.Map):0 -> u
    8:8:void setNameOverridesReordered(android.view.View,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.Map):0:0 -> u
    void setSharedElementTargets(java.lang.Object,android.view.View,java.util.ArrayList) -> v
    void swapSharedElementTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList) -> w
    java.lang.Object wrapTransitionInSet(java.lang.Object) -> x
androidx.fragment.app.FragmentTransitionImpl$1 -> a.h.b.q0$a:
    java.util.ArrayList val$outNames -> e
    java.util.ArrayList val$sharedElementsOut -> d
    java.util.ArrayList val$inNames -> c
    java.util.ArrayList val$sharedElementsIn -> b
    int val$numSharedElements -> a
    1:1:void androidx.core.view.ViewCompat.setTransitionName(android.view.View,java.lang.String):0:0 -> run
    1:1:void run():0 -> run
    2:2:void run():0:0 -> run
    3:3:void androidx.core.view.ViewCompat.setTransitionName(android.view.View,java.lang.String):0:0 -> run
    3:3:void run():0 -> run
androidx.fragment.app.FragmentTransitionImpl$2 -> a.h.b.r0:
    java.util.Map val$nameOverrides -> b
    java.util.ArrayList val$sharedElementsIn -> a
    1:1:java.lang.String androidx.core.view.ViewCompat.getTransitionName(android.view.View):0:0 -> run
    1:1:void run():0 -> run
    2:2:void run():0:0 -> run
    3:3:java.lang.String androidx.fragment.app.FragmentTransitionImpl.findKeyForValue(java.util.Map,java.lang.String):0:0 -> run
    3:3:void run():0 -> run
    4:4:void androidx.core.view.ViewCompat.setTransitionName(android.view.View,java.lang.String):0:0 -> run
    4:4:void run():0 -> run
androidx.fragment.app.FragmentTransitionImpl$3 -> a.h.b.s0:
    java.util.Map val$nameOverrides -> b
    java.util.ArrayList val$sharedElementsIn -> a
    1:1:java.lang.String androidx.core.view.ViewCompat.getTransitionName(android.view.View):0:0 -> run
    1:1:void run():0 -> run
    2:2:void run():0:0 -> run
    3:3:void androidx.core.view.ViewCompat.setTransitionName(android.view.View,java.lang.String):0:0 -> run
    3:3:void run():0 -> run
androidx.fragment.app.FragmentViewLifecycleOwner -> a.h.b.t0:
    androidx.lifecycle.ViewModelStore mViewModelStore -> a
    androidx.savedstate.SavedStateRegistryController mSavedStateRegistryController -> c
    androidx.lifecycle.LifecycleRegistry mLifecycleRegistry -> b
    1:1:void androidx.lifecycle.LifecycleRegistry.handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event):0:0 -> a
    1:1:void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event):0 -> a
    1:1:androidx.savedstate.SavedStateRegistryController androidx.savedstate.SavedStateRegistryController.create(androidx.savedstate.SavedStateRegistryOwner):0:0 -> b
    1:1:void initialize():0 -> b
    2:2:void initialize():0:0 -> b
    1:1:androidx.savedstate.SavedStateRegistry androidx.savedstate.SavedStateRegistryController.getSavedStateRegistry():0:0 -> getSavedStateRegistry
    1:1:androidx.savedstate.SavedStateRegistry getSavedStateRegistry():0 -> getSavedStateRegistry
androidx.fragment.app.LogWriter -> a.h.b.u0:
    java.lang.StringBuilder mBuilder -> b
    java.lang.String mTag -> a
    void flushBuilder() -> a
androidx.fragment.app.SpecialEffectsController -> a.h.b.v0:
    android.view.ViewGroup mContainer -> a
    boolean mIsContainerPostponed -> e
    java.util.ArrayList mRunningOperations -> c
    java.util.ArrayList mPendingOperations -> b
    boolean mOperationDirectionIsPop -> d
    1:1:androidx.fragment.app.Fragment androidx.fragment.app.FragmentStateManager.getFragment():0:0 -> a
    1:1:void enqueue(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact,androidx.fragment.app.FragmentStateManager):0 -> a
    2:2:void enqueue(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact,androidx.fragment.app.FragmentStateManager):0:0 -> a
    3:3:void androidx.fragment.app.SpecialEffectsController$Operation.addCompletionListener(java.lang.Runnable):0:0 -> a
    3:3:void enqueue(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact,androidx.fragment.app.FragmentStateManager):0 -> a
    4:4:void enqueue(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact,androidx.fragment.app.FragmentStateManager):0:0 -> a
    5:5:void androidx.fragment.app.SpecialEffectsController$Operation.addCompletionListener(java.lang.Runnable):0:0 -> a
    5:5:void enqueue(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact,androidx.fragment.app.FragmentStateManager):0 -> a
    6:6:void enqueue(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact,androidx.fragment.app.FragmentStateManager):0:0 -> a
    void executeOperations(java.util.List,boolean) -> b
    1:1:boolean androidx.core.view.ViewCompat.isAttachedToWindow(android.view.View):0:0 -> c
    1:1:void executePendingOperations():0 -> c
    2:2:void executePendingOperations():0:0 -> c
    3:3:boolean androidx.fragment.app.SpecialEffectsController$Operation.isComplete():0:0 -> c
    3:3:void executePendingOperations():0 -> c
    4:4:void executePendingOperations():0:0 -> c
    1:1:androidx.fragment.app.Fragment androidx.fragment.app.SpecialEffectsController$Operation.getFragment():0:0 -> d
    1:1:androidx.fragment.app.SpecialEffectsController$Operation findPendingOperation(androidx.fragment.app.Fragment):0 -> d
    2:2:androidx.fragment.app.SpecialEffectsController$Operation findPendingOperation(androidx.fragment.app.Fragment):0:0 -> d
    3:3:boolean androidx.fragment.app.SpecialEffectsController$Operation.isCanceled():0:0 -> d
    3:3:androidx.fragment.app.SpecialEffectsController$Operation findPendingOperation(androidx.fragment.app.Fragment):0 -> d
    1:1:boolean androidx.core.view.ViewCompat.isAttachedToWindow(android.view.View):0:0 -> e
    1:1:void forceCompleteAllOperations():0 -> e
    2:2:void forceCompleteAllOperations():0:0 -> e
    androidx.fragment.app.SpecialEffectsController getOrCreateController(android.view.ViewGroup,androidx.fragment.app.FragmentManager) -> f
    1:1:androidx.fragment.app.SpecialEffectsController androidx.fragment.app.FragmentManager$4.createController(android.view.ViewGroup):0:0 -> g
    1:1:androidx.fragment.app.SpecialEffectsController getOrCreateController(android.view.ViewGroup,androidx.fragment.app.SpecialEffectsControllerFactory):0 -> g
    2:2:androidx.fragment.app.SpecialEffectsController getOrCreateController(android.view.ViewGroup,androidx.fragment.app.SpecialEffectsControllerFactory):0:0 -> g
    1:1:androidx.fragment.app.Fragment androidx.fragment.app.SpecialEffectsController$Operation.getFragment():0:0 -> h
    1:1:void markPostponedState():0 -> h
    2:2:void markPostponedState():0:0 -> h
    3:3:androidx.fragment.app.SpecialEffectsController$Operation$State androidx.fragment.app.SpecialEffectsController$Operation.getFinalState():0:0 -> h
    3:3:void markPostponedState():0 -> h
    4:4:void markPostponedState():0:0 -> h
    5:5:androidx.fragment.app.Fragment androidx.fragment.app.SpecialEffectsController$Operation.getFragment():0:0 -> h
    5:5:void markPostponedState():0 -> h
    6:6:void markPostponedState():0:0 -> h
    1:1:androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact androidx.fragment.app.SpecialEffectsController$Operation.getLifecycleImpact():0:0 -> i
    1:1:void updateFinalState():0 -> i
    2:2:void updateFinalState():0:0 -> i
    3:3:androidx.fragment.app.Fragment androidx.fragment.app.SpecialEffectsController$Operation.getFragment():0:0 -> i
    3:3:void updateFinalState():0 -> i
    4:4:void updateFinalState():0:0 -> i
androidx.fragment.app.SpecialEffectsController$1 -> a.h.b.v0$a:
    androidx.fragment.app.SpecialEffectsController this$0 -> b
    androidx.fragment.app.SpecialEffectsController$FragmentStateManagerOperation val$operation -> a
    1:1:androidx.fragment.app.SpecialEffectsController$Operation$State androidx.fragment.app.SpecialEffectsController$Operation.getFinalState():0:0 -> run
    1:1:void run():0 -> run
    2:2:androidx.fragment.app.Fragment androidx.fragment.app.SpecialEffectsController$Operation.getFragment():0:0 -> run
    2:2:void run():0 -> run
    3:3:void run():0:0 -> run
androidx.fragment.app.SpecialEffectsController$2 -> a.h.b.v0$b:
    androidx.fragment.app.SpecialEffectsController this$0 -> b
    androidx.fragment.app.SpecialEffectsController$FragmentStateManagerOperation val$operation -> a
androidx.fragment.app.SpecialEffectsController$FragmentStateManagerOperation -> a.h.b.v0$c:
    androidx.fragment.app.FragmentStateManager mFragmentStateManager -> h
    1:1:androidx.fragment.app.Fragment androidx.fragment.app.FragmentStateManager.getFragment():0:0 -> <init>
    1:1:void <init>(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact,androidx.fragment.app.FragmentStateManager,androidx.core.os.CancellationSignal):0 -> <init>
    2:2:void <init>(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact,androidx.fragment.app.FragmentStateManager,androidx.core.os.CancellationSignal):0:0 -> <init>
    void complete() -> b
    1:1:androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact androidx.fragment.app.SpecialEffectsController$Operation.getLifecycleImpact():0:0 -> d
    1:1:void onStart():0 -> d
    2:2:void onStart():0:0 -> d
    3:3:androidx.fragment.app.Fragment androidx.fragment.app.FragmentStateManager.getFragment():0:0 -> d
    3:3:void onStart():0 -> d
    4:4:void onStart():0:0 -> d
    5:5:androidx.fragment.app.Fragment androidx.fragment.app.SpecialEffectsController$Operation.getFragment():0:0 -> d
    5:5:void onStart():0 -> d
    6:6:void onStart():0:0 -> d
androidx.fragment.app.SpecialEffectsController$Operation -> a.h.b.v0$d:
    java.util.List mCompletionListeners -> d
    androidx.fragment.app.SpecialEffectsController$Operation$State mFinalState -> a
    boolean mIsCanceled -> f
    androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact mLifecycleImpact -> b
    boolean mIsComplete -> g
    java.util.HashSet mSpecialEffectsSignals -> e
    androidx.fragment.app.Fragment mFragment -> c
    1:1:boolean isCanceled():0:0 -> a
    1:1:void cancel():0 -> a
    2:2:void cancel():0:0 -> a
    void complete() -> b
    void mergeWith(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact) -> c
    void onStart() -> d
androidx.fragment.app.SpecialEffectsController$Operation$1 -> a.h.b.v0$d$a:
    androidx.fragment.app.SpecialEffectsController$Operation this$0 -> a
    void onCancel() -> a
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact -> a.h.b.v0$d$b:
    androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact[] $VALUES -> d
    androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact REMOVING -> c
    androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact ADDING -> b
    androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact NONE -> a
androidx.fragment.app.SpecialEffectsController$Operation$State -> a.h.b.v0$d$c:
    androidx.fragment.app.SpecialEffectsController$Operation$State INVISIBLE -> d
    androidx.fragment.app.SpecialEffectsController$Operation$State[] $VALUES -> e
    androidx.fragment.app.SpecialEffectsController$Operation$State REMOVED -> a
    androidx.fragment.app.SpecialEffectsController$Operation$State GONE -> c
    androidx.fragment.app.SpecialEffectsController$Operation$State VISIBLE -> b
    void applyState(android.view.View) -> a
    androidx.fragment.app.SpecialEffectsController$Operation$State from(int) -> b
    androidx.fragment.app.SpecialEffectsController$Operation$State from(android.view.View) -> c
androidx.fragment.app.SpecialEffectsControllerFactory -> a.h.b.w0:
androidx.fragment.app.SuperNotCalledException -> a.h.b.x0:
androidx.lifecycle.AndroidViewModel -> a.i.a:
androidx.lifecycle.ClassesInfoCache -> a.i.b:
    java.util.Map mCallbackMap -> a
    java.util.Map mHasLifecycleMethods -> b
    androidx.lifecycle.ClassesInfoCache sInstance -> c
    1:1:java.lang.reflect.Method[] getDeclaredMethods(java.lang.Class):0:0 -> a
    1:1:androidx.lifecycle.ClassesInfoCache$CallbackInfo createInfo(java.lang.Class,java.lang.reflect.Method[]):0 -> a
    2:2:androidx.lifecycle.ClassesInfoCache$CallbackInfo createInfo(java.lang.Class,java.lang.reflect.Method[]):0:0 -> a
    3:3:java.lang.reflect.Method[] getDeclaredMethods(java.lang.Class):0:0 -> a
    3:3:androidx.lifecycle.ClassesInfoCache$CallbackInfo createInfo(java.lang.Class,java.lang.reflect.Method[]):0 -> a
    androidx.lifecycle.ClassesInfoCache$CallbackInfo getInfo(java.lang.Class) -> b
    void verifyAndPutHandler(java.util.Map,androidx.lifecycle.ClassesInfoCache$MethodReference,androidx.lifecycle.Lifecycle$Event,java.lang.Class) -> c
androidx.lifecycle.ClassesInfoCache$CallbackInfo -> a.i.b$a:
    java.util.Map mEventToHandlers -> a
    java.util.Map mHandlerToEvent -> b
    1:1:void androidx.lifecycle.ClassesInfoCache$MethodReference.invokeCallback(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object):0:0 -> a
    1:1:void invokeMethodsForEvent(java.util.List,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object):0 -> a
androidx.lifecycle.ClassesInfoCache$MethodReference -> a.i.b$b:
    int mCallType -> a
    java.lang.reflect.Method mMethod -> b
androidx.lifecycle.CompositeGeneratedAdaptersObserver -> androidx.lifecycle.CompositeGeneratedAdaptersObserver:
    androidx.lifecycle.GeneratedAdapter[] mGeneratedAdapters -> a
    void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> g
androidx.lifecycle.FullLifecycleObserver -> a.i.c:
    void onResume(androidx.lifecycle.LifecycleOwner) -> a
    void onPause(androidx.lifecycle.LifecycleOwner) -> b
    void onDestroy(androidx.lifecycle.LifecycleOwner) -> c
    void onStop(androidx.lifecycle.LifecycleOwner) -> d
    void onCreate(androidx.lifecycle.LifecycleOwner) -> e
    void onStart(androidx.lifecycle.LifecycleOwner) -> f
androidx.lifecycle.FullLifecycleObserverAdapter -> androidx.lifecycle.FullLifecycleObserverAdapter:
    androidx.lifecycle.FullLifecycleObserver mFullLifecycleObserver -> a
    androidx.lifecycle.LifecycleEventObserver mLifecycleEventObserver -> b
    void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> g
androidx.lifecycle.GeneratedAdapter -> a.i.d:
    void callMethods(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,boolean,androidx.lifecycle.MethodCallsLogger) -> a
androidx.lifecycle.Lifecycle -> a.i.e:
    void addObserver(androidx.lifecycle.LifecycleObserver) -> a
    void removeObserver(androidx.lifecycle.LifecycleObserver) -> b
androidx.lifecycle.Lifecycle$Event -> a.i.e$a:
    androidx.lifecycle.Lifecycle$State getTargetState() -> a
    androidx.lifecycle.Lifecycle$Event upFrom(androidx.lifecycle.Lifecycle$State) -> b
androidx.lifecycle.Lifecycle$State -> a.i.e$b:
    androidx.lifecycle.Lifecycle$State INITIALIZED -> b
    androidx.lifecycle.Lifecycle$State DESTROYED -> a
    androidx.lifecycle.Lifecycle$State[] $VALUES -> f
    androidx.lifecycle.Lifecycle$State RESUMED -> e
    androidx.lifecycle.Lifecycle$State STARTED -> d
    androidx.lifecycle.Lifecycle$State CREATED -> c
androidx.lifecycle.LifecycleEventObserver -> a.i.f:
    void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> g
androidx.lifecycle.LifecycleObserver -> a.i.g:
androidx.lifecycle.LifecycleOwner -> a.i.h:
androidx.lifecycle.LifecycleRegistry -> a.i.i:
    androidx.lifecycle.Lifecycle$State mState -> b
    androidx.arch.core.internal.FastSafeIterableMap mObserverMap -> a
    boolean mHandlingEvent -> e
    java.util.ArrayList mParentStates -> g
    java.lang.ref.WeakReference mLifecycleOwner -> c
    boolean mNewEventOccurred -> f
    int mAddingObserverCounter -> d
    boolean mEnforceMainThread -> h
    1:1:void <init>(androidx.lifecycle.LifecycleOwner,boolean):0:0 -> <init>
    1:1:void <init>(androidx.lifecycle.LifecycleOwner):0 -> <init>
    1:1:boolean androidx.arch.core.internal.FastSafeIterableMap.contains(java.lang.Object):0:0 -> a
    1:1:void addObserver(androidx.lifecycle.LifecycleObserver):0 -> a
    2:2:void addObserver(androidx.lifecycle.LifecycleObserver):0:0 -> a
    3:3:void pushParentState(androidx.lifecycle.Lifecycle$State):0:0 -> a
    3:3:void addObserver(androidx.lifecycle.LifecycleObserver):0 -> a
    4:4:void addObserver(androidx.lifecycle.LifecycleObserver):0:0 -> a
    void removeObserver(androidx.lifecycle.LifecycleObserver) -> b
    1:1:boolean androidx.arch.core.internal.FastSafeIterableMap.contains(java.lang.Object):0:0 -> c
    1:1:java.util.Map$Entry androidx.arch.core.internal.FastSafeIterableMap.ceil(java.lang.Object):0 -> c
    1:1:androidx.lifecycle.Lifecycle$State calculateTargetState(androidx.lifecycle.LifecycleObserver):0 -> c
    2:2:java.util.Map$Entry androidx.arch.core.internal.FastSafeIterableMap.ceil(java.lang.Object):0:0 -> c
    2:2:androidx.lifecycle.Lifecycle$State calculateTargetState(androidx.lifecycle.LifecycleObserver):0 -> c
    3:3:java.lang.Object androidx.arch.core.internal.SafeIterableMap$Entry.getValue():0:0 -> c
    3:3:androidx.lifecycle.Lifecycle$State calculateTargetState(androidx.lifecycle.LifecycleObserver):0 -> c
    4:4:androidx.lifecycle.Lifecycle$State calculateTargetState(androidx.lifecycle.LifecycleObserver):0:0 -> c
    void enforceMainThreadIfNeeded(java.lang.String) -> d
    void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event) -> e
    androidx.lifecycle.Lifecycle$State min(androidx.lifecycle.Lifecycle$State,androidx.lifecycle.Lifecycle$State) -> f
    void moveToState(androidx.lifecycle.Lifecycle$State) -> g
    void popParentState() -> h
    1:1:boolean isSynced():0:0 -> i
    1:1:void sync():0 -> i
    2:2:int androidx.arch.core.internal.SafeIterableMap.size():0:0 -> i
    2:2:boolean isSynced():0 -> i
    2:2:void sync():0 -> i
    3:3:java.util.Map$Entry androidx.arch.core.internal.SafeIterableMap.eldest():0:0 -> i
    3:3:boolean isSynced():0 -> i
    3:3:void sync():0 -> i
    4:4:java.lang.Object androidx.arch.core.internal.SafeIterableMap$Entry.getValue():0:0 -> i
    4:4:boolean isSynced():0 -> i
    4:4:void sync():0 -> i
    5:5:boolean isSynced():0:0 -> i
    5:5:void sync():0 -> i
    6:6:java.util.Map$Entry androidx.arch.core.internal.SafeIterableMap.newest():0:0 -> i
    6:6:boolean isSynced():0 -> i
    6:6:void sync():0 -> i
    7:7:java.lang.Object androidx.arch.core.internal.SafeIterableMap$Entry.getValue():0:0 -> i
    7:7:boolean isSynced():0 -> i
    7:7:void sync():0 -> i
    8:8:boolean isSynced():0:0 -> i
    8:8:void sync():0 -> i
    9:9:void sync():0:0 -> i
    10:10:java.util.Map$Entry androidx.arch.core.internal.SafeIterableMap.eldest():0:0 -> i
    10:10:void sync():0 -> i
    11:11:java.lang.Object androidx.arch.core.internal.SafeIterableMap$Entry.getValue():0:0 -> i
    11:11:void sync():0 -> i
    12:12:void sync():0:0 -> i
    13:13:void backwardPass(androidx.lifecycle.LifecycleOwner):0:0 -> i
    13:13:void sync():0 -> i
    14:14:java.util.Iterator androidx.arch.core.internal.SafeIterableMap.descendingIterator():0:0 -> i
    14:14:void backwardPass(androidx.lifecycle.LifecycleOwner):0 -> i
    14:14:void sync():0 -> i
    15:15:void backwardPass(androidx.lifecycle.LifecycleOwner):0:0 -> i
    15:15:void sync():0 -> i
    16:16:androidx.lifecycle.Lifecycle$Event androidx.lifecycle.Lifecycle$Event.downFrom(androidx.lifecycle.Lifecycle$State):0:0 -> i
    16:16:void backwardPass(androidx.lifecycle.LifecycleOwner):0 -> i
    16:16:void sync():0 -> i
    17:17:void backwardPass(androidx.lifecycle.LifecycleOwner):0:0 -> i
    17:17:void sync():0 -> i
    18:18:void pushParentState(androidx.lifecycle.Lifecycle$State):0:0 -> i
    18:18:void backwardPass(androidx.lifecycle.LifecycleOwner):0 -> i
    18:18:void sync():0 -> i
    19:19:void backwardPass(androidx.lifecycle.LifecycleOwner):0:0 -> i
    19:19:void sync():0 -> i
    20:20:void sync():0:0 -> i
    21:21:java.util.Map$Entry androidx.arch.core.internal.SafeIterableMap.newest():0:0 -> i
    21:21:void sync():0 -> i
    22:22:void sync():0:0 -> i
    23:23:java.lang.Object androidx.arch.core.internal.SafeIterableMap$Entry.getValue():0:0 -> i
    23:23:void sync():0 -> i
    24:24:void sync():0:0 -> i
    25:25:void forwardPass(androidx.lifecycle.LifecycleOwner):0:0 -> i
    25:25:void sync():0 -> i
    26:26:void pushParentState(androidx.lifecycle.Lifecycle$State):0:0 -> i
    26:26:void forwardPass(androidx.lifecycle.LifecycleOwner):0 -> i
    26:26:void sync():0 -> i
    27:27:void forwardPass(androidx.lifecycle.LifecycleOwner):0:0 -> i
    27:27:void sync():0 -> i
    28:28:void sync():0:0 -> i
androidx.lifecycle.LifecycleRegistry$ObserverWithState -> a.i.i$a:
    androidx.lifecycle.Lifecycle$State mState -> a
    androidx.lifecycle.LifecycleEventObserver mLifecycleObserver -> b
    1:1:androidx.lifecycle.LifecycleEventObserver androidx.lifecycle.Lifecycling.lifecycleEventObserver(java.lang.Object):0:0 -> <init>
    1:1:void <init>(androidx.lifecycle.LifecycleObserver,androidx.lifecycle.Lifecycle$State):0 -> <init>
    2:2:void <init>(androidx.lifecycle.LifecycleObserver,androidx.lifecycle.Lifecycle$State):0:0 -> <init>
    void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> a
androidx.lifecycle.LifecycleRegistryOwner -> a.i.j:
androidx.lifecycle.Lifecycling -> a.i.k:
    java.util.Map sCallbackCache -> a
    java.util.Map sClassToAdapters -> b
    androidx.lifecycle.GeneratedAdapter createGeneratedAdapter(java.lang.reflect.Constructor,java.lang.Object) -> a
    java.lang.String getAdapterName(java.lang.String) -> b
    1:1:int resolveObserverCallbackType(java.lang.Class):0:0 -> c
    1:1:int getObserverConstructorType(java.lang.Class):0 -> c
    2:2:java.lang.reflect.Constructor generatedConstructor(java.lang.Class):0:0 -> c
    2:2:int resolveObserverCallbackType(java.lang.Class):0 -> c
    2:2:int getObserverConstructorType(java.lang.Class):0 -> c
    3:3:int resolveObserverCallbackType(java.lang.Class):0:0 -> c
    3:3:int getObserverConstructorType(java.lang.Class):0 -> c
    4:4:boolean androidx.lifecycle.ClassesInfoCache.hasLifecycleMethods(java.lang.Class):0:0 -> c
    4:4:int resolveObserverCallbackType(java.lang.Class):0 -> c
    4:4:int getObserverConstructorType(java.lang.Class):0 -> c
    5:5:java.lang.reflect.Method[] androidx.lifecycle.ClassesInfoCache.getDeclaredMethods(java.lang.Class):0:0 -> c
    5:5:boolean androidx.lifecycle.ClassesInfoCache.hasLifecycleMethods(java.lang.Class):0 -> c
    5:5:int resolveObserverCallbackType(java.lang.Class):0 -> c
    5:5:int getObserverConstructorType(java.lang.Class):0 -> c
    6:6:boolean androidx.lifecycle.ClassesInfoCache.hasLifecycleMethods(java.lang.Class):0:0 -> c
    6:6:int resolveObserverCallbackType(java.lang.Class):0 -> c
    6:6:int getObserverConstructorType(java.lang.Class):0 -> c
    7:7:int resolveObserverCallbackType(java.lang.Class):0:0 -> c
    7:7:int getObserverConstructorType(java.lang.Class):0 -> c
    8:8:boolean isLifecycleParent(java.lang.Class):0:0 -> c
    8:8:int resolveObserverCallbackType(java.lang.Class):0 -> c
    8:8:int getObserverConstructorType(java.lang.Class):0 -> c
    9:9:int resolveObserverCallbackType(java.lang.Class):0:0 -> c
    9:9:int getObserverConstructorType(java.lang.Class):0 -> c
    10:10:boolean isLifecycleParent(java.lang.Class):0:0 -> c
    10:10:int resolveObserverCallbackType(java.lang.Class):0 -> c
    10:10:int getObserverConstructorType(java.lang.Class):0 -> c
    11:11:int resolveObserverCallbackType(java.lang.Class):0:0 -> c
    11:11:int getObserverConstructorType(java.lang.Class):0 -> c
    12:12:int getObserverConstructorType(java.lang.Class):0:0 -> c
    13:13:java.lang.reflect.Method[] androidx.lifecycle.ClassesInfoCache.getDeclaredMethods(java.lang.Class):0:0 -> c
    13:13:boolean androidx.lifecycle.ClassesInfoCache.hasLifecycleMethods(java.lang.Class):0 -> c
    13:13:int resolveObserverCallbackType(java.lang.Class):0 -> c
    13:13:int getObserverConstructorType(java.lang.Class):0 -> c
androidx.lifecycle.Lifecycling$1 -> androidx.lifecycle.Lifecycling$1:
    void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> g
androidx.lifecycle.LiveData -> androidx.lifecycle.LiveData:
    java.lang.Object NOT_SET -> j
    java.lang.Object mPendingData -> f
    boolean mDispatchInvalidated -> i
    java.lang.Object mData -> e
    androidx.arch.core.internal.SafeIterableMap mObservers -> b
    int mVersion -> g
    java.lang.Object mDataLock -> a
    boolean mDispatchingValue -> h
    int mActiveCount -> c
    boolean mChangingActiveState -> d
    void assertMainThread(java.lang.String) -> a
    1:1:void androidx.fragment.app.DialogFragment$4.onChanged(java.lang.Object):0:0 -> b
    1:1:void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper):0 -> b
    2:2:void androidx.fragment.app.DialogFragment$4.onChanged(androidx.lifecycle.LifecycleOwner):0:0 -> b
    2:2:void androidx.fragment.app.DialogFragment$4.onChanged(java.lang.Object):0 -> b
    2:2:void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper):0 -> b
    3:3:boolean androidx.fragment.app.DialogFragment.access$200(androidx.fragment.app.DialogFragment):0:0 -> b
    3:3:void androidx.fragment.app.DialogFragment$4.onChanged(androidx.lifecycle.LifecycleOwner):0 -> b
    3:3:void androidx.fragment.app.DialogFragment$4.onChanged(java.lang.Object):0 -> b
    3:3:void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper):0 -> b
    4:4:void androidx.fragment.app.DialogFragment$4.onChanged(androidx.lifecycle.LifecycleOwner):0:0 -> b
    4:4:void androidx.fragment.app.DialogFragment$4.onChanged(java.lang.Object):0 -> b
    4:4:void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper):0 -> b
    5:5:android.app.Dialog androidx.fragment.app.DialogFragment.access$000(androidx.fragment.app.DialogFragment):0:0 -> b
    5:5:void androidx.fragment.app.DialogFragment$4.onChanged(androidx.lifecycle.LifecycleOwner):0 -> b
    5:5:void androidx.fragment.app.DialogFragment$4.onChanged(java.lang.Object):0 -> b
    5:5:void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper):0 -> b
    6:6:void androidx.fragment.app.DialogFragment$4.onChanged(androidx.lifecycle.LifecycleOwner):0:0 -> b
    6:6:void androidx.fragment.app.DialogFragment$4.onChanged(java.lang.Object):0 -> b
    6:6:void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper):0 -> b
    7:7:android.app.Dialog androidx.fragment.app.DialogFragment.access$000(androidx.fragment.app.DialogFragment):0:0 -> b
    7:7:void androidx.fragment.app.DialogFragment$4.onChanged(androidx.lifecycle.LifecycleOwner):0 -> b
    7:7:void androidx.fragment.app.DialogFragment$4.onChanged(java.lang.Object):0 -> b
    7:7:void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper):0 -> b
    8:8:void androidx.fragment.app.DialogFragment$4.onChanged(androidx.lifecycle.LifecycleOwner):0:0 -> b
    8:8:void androidx.fragment.app.DialogFragment$4.onChanged(java.lang.Object):0 -> b
    8:8:void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper):0 -> b
    9:9:android.app.Dialog androidx.fragment.app.DialogFragment.access$000(androidx.fragment.app.DialogFragment):0:0 -> b
    9:9:void androidx.fragment.app.DialogFragment$4.onChanged(androidx.lifecycle.LifecycleOwner):0 -> b
    9:9:void androidx.fragment.app.DialogFragment$4.onChanged(java.lang.Object):0 -> b
    9:9:void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper):0 -> b
    10:10:void androidx.fragment.app.DialogFragment$4.onChanged(androidx.lifecycle.LifecycleOwner):0:0 -> b
    10:10:void androidx.fragment.app.DialogFragment$4.onChanged(java.lang.Object):0 -> b
    10:10:void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper):0 -> b
    void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper) -> c
    void onActive() -> d
    void onInactive() -> e
    void removeObserver(androidx.lifecycle.Observer) -> f
androidx.lifecycle.LiveData$AlwaysActiveObserver -> androidx.lifecycle.LiveData$a:
    boolean shouldBeActive() -> j
androidx.lifecycle.LiveData$LifecycleBoundObserver -> androidx.lifecycle.LiveData$LifecycleBoundObserver:
    androidx.lifecycle.LiveData this$0 -> f
    androidx.lifecycle.LifecycleOwner mOwner -> e
    1:1:androidx.lifecycle.Lifecycle$State androidx.lifecycle.LifecycleRegistry.getCurrentState():0:0 -> g
    1:1:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):0 -> g
    2:2:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):0:0 -> g
    3:3:androidx.lifecycle.Lifecycle$State androidx.lifecycle.LifecycleRegistry.getCurrentState():0:0 -> g
    3:3:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):0 -> g
    1:1:void androidx.lifecycle.LifecycleRegistry.removeObserver(androidx.lifecycle.LifecycleObserver):0:0 -> i
    1:1:void detachObserver():0 -> i
    1:1:androidx.lifecycle.Lifecycle$State androidx.lifecycle.LifecycleRegistry.getCurrentState():0:0 -> j
    1:1:boolean shouldBeActive():0 -> j
    2:2:boolean shouldBeActive():0:0 -> j
    3:3:boolean androidx.lifecycle.Lifecycle$State.isAtLeast(androidx.lifecycle.Lifecycle$State):0:0 -> j
    3:3:boolean shouldBeActive():0 -> j
androidx.lifecycle.LiveData$ObserverWrapper -> androidx.lifecycle.LiveData$b:
    androidx.lifecycle.Observer mObserver -> a
    androidx.lifecycle.LiveData this$0 -> d
    boolean mActive -> b
    int mLastVersion -> c
    1:1:void androidx.lifecycle.LiveData.changeActiveCounter(int):0:0 -> h
    1:1:void activeStateChanged(boolean):0 -> h
    2:2:void activeStateChanged(boolean):0:0 -> h
    3:3:void androidx.lifecycle.LiveData.changeActiveCounter(int):0:0 -> h
    3:3:void activeStateChanged(boolean):0 -> h
    void detachObserver() -> i
    boolean shouldBeActive() -> j
androidx.lifecycle.MethodCallsLogger -> a.i.l:
androidx.lifecycle.MutableLiveData -> a.i.m:
    1:1:void androidx.lifecycle.LiveData.setValue(java.lang.Object):0:0 -> g
    1:1:void setValue(java.lang.Object):0 -> g
androidx.lifecycle.Observer -> a.i.n:
androidx.lifecycle.OnLifecycleEvent -> a.i.o:
androidx.lifecycle.ReflectiveGenericLifecycleObserver -> androidx.lifecycle.ReflectiveGenericLifecycleObserver:
    androidx.lifecycle.ClassesInfoCache$CallbackInfo mInfo -> b
    java.lang.Object mWrapped -> a
    1:1:void androidx.lifecycle.ClassesInfoCache$CallbackInfo.invokeCallbacks(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object):0:0 -> g
    1:1:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):0 -> g
androidx.lifecycle.ReportFragment -> a.i.p:
    1:1:void androidx.lifecycle.LifecycleRegistry.handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event):0:0 -> a
    1:1:void dispatch(android.app.Activity,androidx.lifecycle.Lifecycle$Event):0 -> a
    2:2:void dispatch(android.app.Activity,androidx.lifecycle.Lifecycle$Event):0:0 -> a
    3:3:void androidx.lifecycle.LifecycleRegistry.handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event):0:0 -> a
    3:3:void dispatch(android.app.Activity,androidx.lifecycle.Lifecycle$Event):0 -> a
    void injectIfNeededIn(android.app.Activity) -> b
androidx.lifecycle.ReportFragment$LifecycleCallbacks -> a.i.p$a:
androidx.lifecycle.SavedStateHandle -> a.i.q:
    java.util.Map mRegular -> a
    java.util.Map mSavedStateProviders -> b
    java.lang.Class[] ACCEPTABLE_CLASSES -> e
    java.util.Map mLiveDatas -> c
    androidx.savedstate.SavedStateRegistry$SavedStateProvider mSavedStateProvider -> d
androidx.lifecycle.SavedStateHandle$1 -> a.i.q$a:
    androidx.lifecycle.SavedStateHandle this$0 -> a
    1:1:void androidx.lifecycle.SavedStateHandle.set(java.lang.String,java.lang.Object):0:0 -> a
    1:1:android.os.Bundle saveState():0 -> a
    2:2:void androidx.lifecycle.SavedStateHandle.validateValue(java.lang.Object):0:0 -> a
    2:2:void androidx.lifecycle.SavedStateHandle.set(java.lang.String,java.lang.Object):0 -> a
    2:2:android.os.Bundle saveState():0 -> a
    3:3:void androidx.lifecycle.SavedStateHandle.set(java.lang.String,java.lang.Object):0:0 -> a
    3:3:android.os.Bundle saveState():0 -> a
    4:4:void androidx.lifecycle.SavedStateHandle.validateValue(java.lang.Object):0:0 -> a
    4:4:void androidx.lifecycle.SavedStateHandle.set(java.lang.String,java.lang.Object):0 -> a
    4:4:android.os.Bundle saveState():0 -> a
    5:5:android.os.Bundle saveState():0:0 -> a
androidx.lifecycle.SavedStateHandleController -> androidx.lifecycle.SavedStateHandleController:
    androidx.lifecycle.SavedStateHandle mHandle -> c
    java.lang.String mKey -> a
    boolean mIsAttached -> b
    1:1:void androidx.lifecycle.LifecycleRegistry.removeObserver(androidx.lifecycle.LifecycleObserver):0:0 -> g
    1:1:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):0 -> g
    1:1:java.lang.Object androidx.lifecycle.ViewModel.getTag(java.lang.String):0:0 -> h
    1:1:void attachHandleIfNeeded(androidx.lifecycle.ViewModel,androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle):0 -> h
    2:2:void attachHandleIfNeeded(androidx.lifecycle.ViewModel,androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle):0:0 -> h
    3:3:boolean isAttached():0:0 -> h
    3:3:void attachHandleIfNeeded(androidx.lifecycle.ViewModel,androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle):0 -> h
    4:4:void attachHandleIfNeeded(androidx.lifecycle.ViewModel,androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle):0:0 -> h
    5:5:java.lang.Object androidx.lifecycle.ViewModel.getTag(java.lang.String):0:0 -> h
    5:5:void attachHandleIfNeeded(androidx.lifecycle.ViewModel,androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle):0 -> h
    1:1:androidx.savedstate.SavedStateRegistry$SavedStateProvider androidx.lifecycle.SavedStateHandle.savedStateProvider():0:0 -> i
    1:1:void attachToLifecycle(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle):0 -> i
    2:2:void attachToLifecycle(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle):0:0 -> i
    1:1:androidx.lifecycle.Lifecycle$State androidx.lifecycle.LifecycleRegistry.getCurrentState():0:0 -> j
    1:1:void tryToAddRecreator(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle):0 -> j
    2:2:void tryToAddRecreator(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle):0:0 -> j
    3:3:boolean androidx.lifecycle.Lifecycle$State.isAtLeast(androidx.lifecycle.Lifecycle$State):0:0 -> j
    3:3:void tryToAddRecreator(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle):0 -> j
    4:4:void tryToAddRecreator(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle):0:0 -> j
androidx.lifecycle.SavedStateHandleController$1 -> androidx.lifecycle.SavedStateHandleController$1:
    androidx.lifecycle.Lifecycle val$lifecycle -> a
    androidx.savedstate.SavedStateRegistry val$registry -> b
    1:1:void androidx.lifecycle.LifecycleRegistry.removeObserver(androidx.lifecycle.LifecycleObserver):0:0 -> g
    1:1:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):0 -> g
    2:2:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):0:0 -> g
androidx.lifecycle.SavedStateHandleController$OnRecreation -> androidx.lifecycle.SavedStateHandleController$a:
    1:1:java.util.Set androidx.lifecycle.ViewModelStore.keys():0:0 -> a
    1:1:void onRecreated(androidx.savedstate.SavedStateRegistryOwner):0 -> a
    2:2:void onRecreated(androidx.savedstate.SavedStateRegistryOwner):0:0 -> a
    3:3:androidx.lifecycle.ViewModel androidx.lifecycle.ViewModelStore.get(java.lang.String):0:0 -> a
    3:3:void onRecreated(androidx.savedstate.SavedStateRegistryOwner):0 -> a
    4:4:void onRecreated(androidx.savedstate.SavedStateRegistryOwner):0:0 -> a
    5:5:java.util.Set androidx.lifecycle.ViewModelStore.keys():0:0 -> a
    5:5:void onRecreated(androidx.savedstate.SavedStateRegistryOwner):0 -> a
    6:6:void onRecreated(androidx.savedstate.SavedStateRegistryOwner):0:0 -> a
androidx.lifecycle.SavedStateViewModelFactory -> a.i.r:
    android.app.Application mApplication -> a
    java.lang.Class[] ANDROID_VIEWMODEL_SIGNATURE -> f
    android.os.Bundle mDefaultArgs -> c
    androidx.lifecycle.ViewModelProvider$Factory mFactory -> b
    androidx.savedstate.SavedStateRegistry mSavedStateRegistry -> e
    java.lang.Class[] VIEWMODEL_SIGNATURE -> g
    androidx.lifecycle.Lifecycle mLifecycle -> d
    1:1:androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory.getInstance(android.app.Application):0:0 -> <init>
    1:1:void <init>(android.app.Application,androidx.savedstate.SavedStateRegistryOwner,android.os.Bundle):0 -> <init>
    2:2:androidx.lifecycle.ViewModelProvider$NewInstanceFactory androidx.lifecycle.ViewModelProvider$NewInstanceFactory.getInstance():0:0 -> <init>
    2:2:void <init>(android.app.Application,androidx.savedstate.SavedStateRegistryOwner,android.os.Bundle):0 -> <init>
    3:3:void <init>(android.app.Application,androidx.savedstate.SavedStateRegistryOwner,android.os.Bundle):0:0 -> <init>
    androidx.lifecycle.ViewModel create(java.lang.Class) -> a
    void onRequery(androidx.lifecycle.ViewModel) -> b
    1:1:androidx.lifecycle.SavedStateHandleController androidx.lifecycle.SavedStateHandleController.create(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle,java.lang.String,android.os.Bundle):0:0 -> c
    1:1:androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class):0 -> c
    2:2:androidx.lifecycle.SavedStateHandle androidx.lifecycle.SavedStateHandle.createHandle(android.os.Bundle,android.os.Bundle):0:0 -> c
    2:2:androidx.lifecycle.SavedStateHandleController androidx.lifecycle.SavedStateHandleController.create(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle,java.lang.String,android.os.Bundle):0 -> c
    2:2:androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class):0 -> c
    3:3:androidx.lifecycle.SavedStateHandleController androidx.lifecycle.SavedStateHandleController.create(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle,java.lang.String,android.os.Bundle):0:0 -> c
    3:3:androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class):0 -> c
    4:4:androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class):0:0 -> c
    5:5:androidx.lifecycle.SavedStateHandle androidx.lifecycle.SavedStateHandleController.getHandle():0:0 -> c
    5:5:androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class):0 -> c
    6:6:androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class):0:0 -> c
    7:7:androidx.lifecycle.SavedStateHandle androidx.lifecycle.SavedStateHandleController.getHandle():0:0 -> c
    7:7:androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class):0 -> c
    8:8:androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class):0:0 -> c
    9:9:androidx.lifecycle.SavedStateHandle androidx.lifecycle.SavedStateHandle.createHandle(android.os.Bundle,android.os.Bundle):0:0 -> c
    9:9:androidx.lifecycle.SavedStateHandleController androidx.lifecycle.SavedStateHandleController.create(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle,java.lang.String,android.os.Bundle):0 -> c
    9:9:androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class):0 -> c
    java.lang.reflect.Constructor findMatchingConstructor(java.lang.Class,java.lang.Class[]) -> d
androidx.lifecycle.SingleGeneratedAdapterObserver -> androidx.lifecycle.SingleGeneratedAdapterObserver:
    androidx.lifecycle.GeneratedAdapter mGeneratedAdapter -> a
    void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> g
androidx.lifecycle.ViewModel -> a.i.s:
    java.util.Map mBagOfTags -> a
    boolean mCleared -> b
    void onCleared() -> a
    1:1:void closeWithRuntimeException(java.lang.Object):0:0 -> b
    1:1:java.lang.Object setTagIfAbsent(java.lang.String,java.lang.Object):0 -> b
    2:2:java.lang.Object setTagIfAbsent(java.lang.String,java.lang.Object):0:0 -> b
androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory -> a.i.t:
    android.app.Application mApplication -> b
    androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory sInstance -> c
    androidx.lifecycle.ViewModel create(java.lang.Class) -> a
androidx.lifecycle.ViewModelProvider$Factory -> a.i.u:
    androidx.lifecycle.ViewModel create(java.lang.Class) -> a
androidx.lifecycle.ViewModelProvider$KeyedFactory -> a.i.v:
    androidx.lifecycle.ViewModel create(java.lang.Class) -> a
    androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class) -> c
androidx.lifecycle.ViewModelProvider$NewInstanceFactory -> a.i.w:
    androidx.lifecycle.ViewModelProvider$NewInstanceFactory sInstance -> a
    androidx.lifecycle.ViewModel create(java.lang.Class) -> a
androidx.lifecycle.ViewModelProvider$OnRequeryFactory -> a.i.x:
    void onRequery(androidx.lifecycle.ViewModel) -> b
androidx.lifecycle.ViewModelStore -> a.i.y:
    java.util.HashMap mMap -> a
    1:1:void androidx.lifecycle.ViewModel.clear():0:0 -> a
    1:1:void clear():0 -> a
    2:2:void androidx.lifecycle.ViewModel.closeWithRuntimeException(java.lang.Object):0:0 -> a
    2:2:void androidx.lifecycle.ViewModel.clear():0 -> a
    2:2:void clear():0 -> a
    3:3:void androidx.lifecycle.ViewModel.clear():0:0 -> a
    3:3:void clear():0 -> a
    4:4:void clear():0:0 -> a
androidx.lifecycle.ViewModelStoreOwner -> a.i.z:
androidx.loader.app.LoaderManager -> a.j.a.a:
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner) -> b
androidx.loader.app.LoaderManagerImpl -> a.j.a.b:
    androidx.lifecycle.LifecycleOwner mLifecycleOwner -> a
    androidx.loader.app.LoaderManagerImpl$LoaderViewModel mLoaderViewModel -> b
    1:1:androidx.loader.app.LoaderManagerImpl$LoaderViewModel androidx.loader.app.LoaderManagerImpl$LoaderViewModel.getInstance(androidx.lifecycle.ViewModelStore):0:0 -> <init>
    1:1:void <init>(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore):0 -> <init>
    2:2:androidx.lifecycle.ViewModel androidx.lifecycle.ViewModelProvider.get(java.lang.Class):0:0 -> <init>
    2:2:androidx.loader.app.LoaderManagerImpl$LoaderViewModel androidx.loader.app.LoaderManagerImpl$LoaderViewModel.getInstance(androidx.lifecycle.ViewModelStore):0 -> <init>
    2:2:void <init>(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore):0 -> <init>
    3:3:androidx.lifecycle.ViewModel androidx.lifecycle.ViewModelStore.get(java.lang.String):0:0 -> <init>
    3:3:androidx.lifecycle.ViewModel androidx.lifecycle.ViewModelProvider.get(java.lang.String,java.lang.Class):0 -> <init>
    3:3:androidx.lifecycle.ViewModel androidx.lifecycle.ViewModelProvider.get(java.lang.Class):0 -> <init>
    3:3:androidx.loader.app.LoaderManagerImpl$LoaderViewModel androidx.loader.app.LoaderManagerImpl$LoaderViewModel.getInstance(androidx.lifecycle.ViewModelStore):0 -> <init>
    3:3:void <init>(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore):0 -> <init>
    4:4:androidx.lifecycle.ViewModel androidx.lifecycle.ViewModelProvider.get(java.lang.String,java.lang.Class):0:0 -> <init>
    4:4:androidx.lifecycle.ViewModel androidx.lifecycle.ViewModelProvider.get(java.lang.Class):0 -> <init>
    4:4:androidx.loader.app.LoaderManagerImpl$LoaderViewModel androidx.loader.app.LoaderManagerImpl$LoaderViewModel.getInstance(androidx.lifecycle.ViewModelStore):0 -> <init>
    4:4:void <init>(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore):0 -> <init>
    5:5:void androidx.lifecycle.ViewModelStore.put(java.lang.String,androidx.lifecycle.ViewModel):0:0 -> <init>
    5:5:androidx.lifecycle.ViewModel androidx.lifecycle.ViewModelProvider.get(java.lang.String,java.lang.Class):0 -> <init>
    5:5:androidx.lifecycle.ViewModel androidx.lifecycle.ViewModelProvider.get(java.lang.Class):0 -> <init>
    5:5:androidx.loader.app.LoaderManagerImpl$LoaderViewModel androidx.loader.app.LoaderManagerImpl$LoaderViewModel.getInstance(androidx.lifecycle.ViewModelStore):0 -> <init>
    5:5:void <init>(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore):0 -> <init>
    6:6:androidx.loader.app.LoaderManagerImpl$LoaderViewModel androidx.loader.app.LoaderManagerImpl$LoaderViewModel.getInstance(androidx.lifecycle.ViewModelStore):0:0 -> <init>
    6:6:void <init>(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore):0 -> <init>
    7:7:void <init>(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore):0:0 -> <init>
    8:8:androidx.lifecycle.ViewModel androidx.lifecycle.ViewModelProvider.get(java.lang.Class):0:0 -> <init>
    8:8:androidx.loader.app.LoaderManagerImpl$LoaderViewModel androidx.loader.app.LoaderManagerImpl$LoaderViewModel.getInstance(androidx.lifecycle.ViewModelStore):0 -> <init>
    8:8:void <init>(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore):0 -> <init>
    1:1:void androidx.loader.app.LoaderManagerImpl$LoaderViewModel.dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]):0:0 -> a
    1:1:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]):0 -> a
    2:2:int androidx.collection.SparseArrayCompat.keyAt(int):0:0 -> a
    2:2:void androidx.loader.app.LoaderManagerImpl$LoaderViewModel.dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]):0 -> a
    2:2:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]):0 -> a
    3:3:void androidx.loader.app.LoaderManagerImpl$LoaderViewModel.dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]):0:0 -> a
    3:3:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]):0 -> a
    4:4:void androidx.loader.app.LoaderManagerImpl$LoaderInfo.dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]):0:0 -> a
    4:4:void androidx.loader.app.LoaderManagerImpl$LoaderViewModel.dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]):0 -> a
    4:4:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]):0 -> a
androidx.loader.app.LoaderManagerImpl$LoaderInfo -> a.j.a.b$a:
    void onActive() -> d
    void onInactive() -> e
    void removeObserver(androidx.lifecycle.Observer) -> f
    void setValue(java.lang.Object) -> g
androidx.loader.app.LoaderManagerImpl$LoaderViewModel -> a.j.a.b$b:
    androidx.collection.SparseArrayCompat mLoaders -> c
    androidx.lifecycle.ViewModelProvider$Factory FACTORY -> d
    1:1:void androidx.collection.SparseArrayCompat.clear():0:0 -> a
    1:1:void onCleared():0 -> a
    2:2:void onCleared():0:0 -> a
    3:3:androidx.loader.content.Loader androidx.loader.app.LoaderManagerImpl$LoaderInfo.destroy(boolean):0:0 -> a
    3:3:void onCleared():0 -> a
androidx.loader.app.LoaderManagerImpl$LoaderViewModel$1 -> a.j.a.b$b$a:
    androidx.lifecycle.ViewModel create(java.lang.Class) -> a
androidx.preference.CheckBoxPreference -> androidx.preference.CheckBoxPreference:
    androidx.preference.CheckBoxPreference$Listener mListener -> R
    1:1:void <init>(android.content.Context,android.util.AttributeSet,int,int):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    2:2:java.lang.String androidx.core.content.res.TypedArrayUtils.getString(android.content.res.TypedArray,int,int):0:0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet,int,int):0:0 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    4:4:boolean androidx.core.content.res.TypedArrayUtils.getBoolean(android.content.res.TypedArray,int,int,boolean):0:0 -> <init>
    4:4:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    4:4:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    4:4:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    5:5:void androidx.preference.TwoStatePreference.setDisableDependentsState(boolean):0:0 -> <init>
    5:5:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    5:5:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    5:5:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    6:6:void <init>(android.content.Context,android.util.AttributeSet,int,int):0:0 -> <init>
    6:6:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    6:6:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    1:1:android.content.Context androidx.preference.Preference.getContext():0:0 -> A
    1:1:void syncViewIfAccessibilityEnabled(android.view.View):0 -> A
    1:1:void performClick(android.view.View):0 -> A
    2:2:void syncViewIfAccessibilityEnabled(android.view.View):0:0 -> A
    2:2:void performClick(android.view.View):0 -> A
    void syncCheckboxView(android.view.View) -> L
    void onBindViewHolder(androidx.preference.PreferenceViewHolder) -> p
androidx.preference.CheckBoxPreference$Listener -> androidx.preference.CheckBoxPreference$a:
    androidx.preference.CheckBoxPreference this$0 -> a
androidx.preference.DialogPreference -> androidx.preference.DialogPreference:
    java.lang.CharSequence mDialogTitle -> M
    java.lang.CharSequence mDialogMessage -> N
    java.lang.CharSequence mPositiveButtonText -> P
    java.lang.CharSequence mNegativeButtonText -> Q
    android.graphics.drawable.Drawable mDialogIcon -> O
    int mDialogLayoutResId -> R
    1:1:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    2:2:java.lang.CharSequence androidx.preference.Preference.getTitle():0:0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet,int,int):0:0 -> <init>
    4:4:java.lang.String androidx.core.content.res.TypedArrayUtils.getString(android.content.res.TypedArray,int,int):0:0 -> <init>
    4:4:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    5:5:void <init>(android.content.Context,android.util.AttributeSet,int,int):0:0 -> <init>
    6:6:android.graphics.drawable.Drawable androidx.core.content.res.TypedArrayUtils.getDrawable(android.content.res.TypedArray,int,int):0:0 -> <init>
    6:6:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    7:7:void <init>(android.content.Context,android.util.AttributeSet,int,int):0:0 -> <init>
    8:8:java.lang.String androidx.core.content.res.TypedArrayUtils.getString(android.content.res.TypedArray,int,int):0:0 -> <init>
    8:8:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    9:9:void <init>(android.content.Context,android.util.AttributeSet,int,int):0:0 -> <init>
    10:10:java.lang.String androidx.core.content.res.TypedArrayUtils.getString(android.content.res.TypedArray,int,int):0:0 -> <init>
    10:10:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    11:11:void <init>(android.content.Context,android.util.AttributeSet,int,int):0:0 -> <init>
    12:12:int androidx.core.content.res.TypedArrayUtils.getResourceId(android.content.res.TypedArray,int,int,int):0:0 -> <init>
    12:12:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    13:13:void <init>(android.content.Context,android.util.AttributeSet,int,int):0:0 -> <init>
    1:1:androidx.preference.PreferenceManager androidx.preference.Preference.getPreferenceManager():0:0 -> q
    1:1:void onClick():0 -> q
    2:2:void androidx.preference.PreferenceManager.showDialog(androidx.preference.Preference):0:0 -> q
    2:2:void onClick():0 -> q
androidx.preference.DialogPreference$TargetFragment -> androidx.preference.DialogPreference$a:
androidx.preference.DropDownPreference -> androidx.preference.DropDownPreference:
    android.widget.Spinner mSpinner -> Z
    android.widget.ArrayAdapter mAdapter -> Y
    android.content.Context mContext -> X
    android.widget.AdapterView$OnItemSelectedListener mItemSelectedListener -> a0
    1:1:void <init>(android.content.Context,android.util.AttributeSet,int,int):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    2:2:android.widget.ArrayAdapter createAdapter():0:0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet,int,int):0:0 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    1:1:void androidx.preference.ListPreference.setEntries(java.lang.CharSequence[]):0:0 -> I
    1:1:void setEntries(java.lang.CharSequence[]):0 -> I
    2:2:void setEntries(java.lang.CharSequence[]):0:0 -> I
    1:1:java.lang.CharSequence[] androidx.preference.ListPreference.getEntries():0:0 -> K
    1:1:void updateEntries():0 -> K
    2:2:void updateEntries():0:0 -> K
    void notifyChanged() -> l
    1:1:java.lang.String androidx.preference.ListPreference.getValue():0:0 -> p
    1:1:void onBindViewHolder(androidx.preference.PreferenceViewHolder):0 -> p
    2:2:java.lang.CharSequence[] androidx.preference.ListPreference.getEntryValues():0:0 -> p
    2:2:int findSpinnerIndexOfValue(java.lang.String):0 -> p
    2:2:void onBindViewHolder(androidx.preference.PreferenceViewHolder):0 -> p
    3:3:int findSpinnerIndexOfValue(java.lang.String):0:0 -> p
    3:3:void onBindViewHolder(androidx.preference.PreferenceViewHolder):0 -> p
    4:4:void onBindViewHolder(androidx.preference.PreferenceViewHolder):0:0 -> p
    void onClick() -> q
androidx.preference.DropDownPreference$1 -> androidx.preference.DropDownPreference$a:
    androidx.preference.DropDownPreference this$0 -> a
    1:1:java.lang.CharSequence[] androidx.preference.ListPreference.getEntryValues():0:0 -> onItemSelected
    1:1:void onItemSelected(android.widget.AdapterView,android.view.View,int,long):0 -> onItemSelected
    2:2:void onItemSelected(android.widget.AdapterView,android.view.View,int,long):0:0 -> onItemSelected
    3:3:java.lang.String androidx.preference.ListPreference.getValue():0:0 -> onItemSelected
    3:3:void onItemSelected(android.widget.AdapterView,android.view.View,int,long):0 -> onItemSelected
    4:4:void onItemSelected(android.widget.AdapterView,android.view.View,int,long):0:0 -> onItemSelected
androidx.preference.EditTextPreference -> androidx.preference.EditTextPreference:
    java.lang.String mText -> S
    1:1:void <init>(android.content.Context,android.util.AttributeSet,int,int):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    2:2:androidx.preference.EditTextPreference$SimpleSummaryProvider androidx.preference.EditTextPreference$SimpleSummaryProvider.getInstance():0:0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    3:3:void androidx.preference.Preference.setSummaryProvider(androidx.preference.Preference$SummaryProvider):0:0 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    4:4:void <init>(android.content.Context,android.util.AttributeSet,int,int):0:0 -> <init>
    4:4:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    4:4:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    boolean shouldDisableDependents() -> E
    void setText(java.lang.String) -> G
    java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int) -> t
    void onRestoreInstanceState(android.os.Parcelable) -> w
    1:1:boolean androidx.preference.Preference.isPersistent():0:0 -> x
    1:1:android.os.Parcelable onSaveInstanceState():0 -> x
    2:2:android.os.Parcelable onSaveInstanceState():0:0 -> x
    3:3:java.lang.String getText():0:0 -> x
    3:3:android.os.Parcelable onSaveInstanceState():0 -> x
    4:4:android.os.Parcelable onSaveInstanceState():0:0 -> x
    void onSetInitialValue(java.lang.Object) -> y
androidx.preference.EditTextPreference$SavedState -> androidx.preference.EditTextPreference$a:
    java.lang.String mText -> a
androidx.preference.EditTextPreference$SavedState$1 -> androidx.preference.EditTextPreference$a$a:
    1:1:androidx.preference.EditTextPreference$SavedState createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    1:1:java.lang.Object createFromParcel(android.os.Parcel):0 -> createFromParcel
    1:1:androidx.preference.EditTextPreference$SavedState[] newArray(int):0:0 -> newArray
    1:1:java.lang.Object[] newArray(int):0 -> newArray
androidx.preference.EditTextPreference$SimpleSummaryProvider -> androidx.preference.EditTextPreference$b:
    androidx.preference.EditTextPreference$SimpleSummaryProvider sSimpleSummaryProvider -> a
    1:1:java.lang.String androidx.preference.EditTextPreference.getText():0:0 -> a
    1:1:java.lang.CharSequence provideSummary(androidx.preference.EditTextPreference):0 -> a
    1:1:java.lang.CharSequence provideSummary(androidx.preference.Preference):0 -> a
    2:2:java.lang.CharSequence provideSummary(androidx.preference.EditTextPreference):0:0 -> a
    2:2:java.lang.CharSequence provideSummary(androidx.preference.Preference):0 -> a
    3:3:android.content.Context androidx.preference.Preference.getContext():0:0 -> a
    3:3:java.lang.CharSequence provideSummary(androidx.preference.EditTextPreference):0 -> a
    3:3:java.lang.CharSequence provideSummary(androidx.preference.Preference):0 -> a
    4:4:java.lang.CharSequence provideSummary(androidx.preference.EditTextPreference):0:0 -> a
    4:4:java.lang.CharSequence provideSummary(androidx.preference.Preference):0 -> a
    5:5:java.lang.String androidx.preference.EditTextPreference.getText():0:0 -> a
    5:5:java.lang.CharSequence provideSummary(androidx.preference.EditTextPreference):0 -> a
    5:5:java.lang.CharSequence provideSummary(androidx.preference.Preference):0 -> a
androidx.preference.EditTextPreferenceDialogFragmentCompat -> a.k.a:
    android.widget.EditText mEditText -> y
    java.lang.CharSequence mText -> z
    boolean needInputMethod() -> c
    void onBindDialogView(android.view.View) -> d
    void onDialogClosed(boolean) -> f
    androidx.preference.EditTextPreference getEditTextPreference() -> h
    1:1:java.lang.String androidx.preference.EditTextPreference.getText():0:0 -> onCreate
    1:1:void onCreate(android.os.Bundle):0 -> onCreate
    2:2:void onCreate(android.os.Bundle):0:0 -> onCreate
androidx.preference.ExpandButton -> a.k.b:
    long mId -> M
    1:1:void androidx.preference.Preference.<init>(android.content.Context):0:0 -> <init>
    1:1:void <init>(android.content.Context,java.util.List,long):0 -> <init>
    2:2:void androidx.preference.Preference.setLayoutResource(int):0:0 -> <init>
    2:2:void initLayout():0 -> <init>
    2:2:void <init>(android.content.Context,java.util.List,long):0 -> <init>
    3:3:void androidx.preference.Preference.setIcon(int):0:0 -> <init>
    3:3:void initLayout():0 -> <init>
    3:3:void <init>(android.content.Context,java.util.List,long):0 -> <init>
    4:4:void androidx.preference.Preference.setIcon(android.graphics.drawable.Drawable):0:0 -> <init>
    4:4:void androidx.preference.Preference.setIcon(int):0 -> <init>
    4:4:void initLayout():0 -> <init>
    4:4:void <init>(android.content.Context,java.util.List,long):0 -> <init>
    5:5:void androidx.preference.Preference.setIcon(int):0:0 -> <init>
    5:5:void initLayout():0 -> <init>
    5:5:void <init>(android.content.Context,java.util.List,long):0 -> <init>
    6:6:void androidx.preference.Preference.setTitle(int):0:0 -> <init>
    6:6:void initLayout():0 -> <init>
    6:6:void <init>(android.content.Context,java.util.List,long):0 -> <init>
    7:7:void androidx.preference.Preference.setTitle(java.lang.CharSequence):0:0 -> <init>
    7:7:void androidx.preference.Preference.setTitle(int):0 -> <init>
    7:7:void initLayout():0 -> <init>
    7:7:void <init>(android.content.Context,java.util.List,long):0 -> <init>
    8:8:void initLayout():0:0 -> <init>
    8:8:void <init>(android.content.Context,java.util.List,long):0 -> <init>
    9:9:void setSummary(java.util.List):0:0 -> <init>
    9:9:void <init>(android.content.Context,java.util.List,long):0 -> <init>
    10:10:java.lang.CharSequence androidx.preference.Preference.getTitle():0:0 -> <init>
    10:10:void setSummary(java.util.List):0 -> <init>
    10:10:void <init>(android.content.Context,java.util.List,long):0 -> <init>
    11:11:void setSummary(java.util.List):0:0 -> <init>
    11:11:void <init>(android.content.Context,java.util.List,long):0 -> <init>
    12:12:androidx.preference.PreferenceGroup androidx.preference.Preference.getParent():0:0 -> <init>
    12:12:void setSummary(java.util.List):0 -> <init>
    12:12:void <init>(android.content.Context,java.util.List,long):0 -> <init>
    13:13:void setSummary(java.util.List):0:0 -> <init>
    13:13:void <init>(android.content.Context,java.util.List,long):0 -> <init>
    14:14:android.content.Context androidx.preference.Preference.getContext():0:0 -> <init>
    14:14:void setSummary(java.util.List):0 -> <init>
    14:14:void <init>(android.content.Context,java.util.List,long):0 -> <init>
    15:15:void setSummary(java.util.List):0:0 -> <init>
    15:15:void <init>(android.content.Context,java.util.List,long):0 -> <init>
    16:16:androidx.preference.Preference$SummaryProvider androidx.preference.Preference.getSummaryProvider():0:0 -> <init>
    16:16:void androidx.preference.Preference.setSummary(java.lang.CharSequence):0 -> <init>
    16:16:void setSummary(java.util.List):0 -> <init>
    16:16:void <init>(android.content.Context,java.util.List,long):0 -> <init>
    17:17:void androidx.preference.Preference.setSummary(java.lang.CharSequence):0:0 -> <init>
    17:17:void setSummary(java.util.List):0 -> <init>
    17:17:void <init>(android.content.Context,java.util.List,long):0 -> <init>
    18:18:void <init>(android.content.Context,java.util.List,long):0:0 -> <init>
    19:19:void androidx.preference.Preference.setSummary(java.lang.CharSequence):0:0 -> <init>
    19:19:void setSummary(java.util.List):0 -> <init>
    19:19:void <init>(android.content.Context,java.util.List,long):0 -> <init>
    long getId() -> c
    1:1:void androidx.preference.PreferenceViewHolder.setDividerAllowedAbove(boolean):0:0 -> p
    1:1:void onBindViewHolder(androidx.preference.PreferenceViewHolder):0 -> p
androidx.preference.ListPreference -> androidx.preference.ListPreference:
    java.lang.String mSummary -> V
    java.lang.CharSequence[] mEntryValues -> T
    boolean mValueSet -> W
    java.lang.CharSequence[] mEntries -> S
    java.lang.String mValue -> U
    1:1:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    2:2:java.lang.CharSequence[] androidx.core.content.res.TypedArrayUtils.getTextArray(android.content.res.TypedArray,int,int):0:0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet,int,int):0:0 -> <init>
    4:4:boolean androidx.core.content.res.TypedArrayUtils.getBoolean(android.content.res.TypedArray,int,int,boolean):0:0 -> <init>
    4:4:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    5:5:androidx.preference.ListPreference$SimpleSummaryProvider androidx.preference.ListPreference$SimpleSummaryProvider.getInstance():0:0 -> <init>
    5:5:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    6:6:void androidx.preference.Preference.setSummaryProvider(androidx.preference.Preference$SummaryProvider):0:0 -> <init>
    6:6:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    7:7:void <init>(android.content.Context,android.util.AttributeSet,int,int):0:0 -> <init>
    int findIndexOfValue(java.lang.String) -> G
    1:1:int getValueIndex():0:0 -> H
    1:1:java.lang.CharSequence getEntry():0 -> H
    2:2:java.lang.CharSequence getEntry():0:0 -> H
    void setEntries(java.lang.CharSequence[]) -> I
    void setValue(java.lang.String) -> J
    1:1:androidx.preference.Preference$SummaryProvider androidx.preference.Preference.getSummaryProvider():0:0 -> i
    1:1:java.lang.CharSequence getSummary():0 -> i
    2:2:java.lang.CharSequence getSummary():0:0 -> i
    java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int) -> t
    void onRestoreInstanceState(android.os.Parcelable) -> w
    1:1:boolean androidx.preference.Preference.isPersistent():0:0 -> x
    1:1:android.os.Parcelable onSaveInstanceState():0 -> x
    2:2:android.os.Parcelable onSaveInstanceState():0:0 -> x
    3:3:java.lang.String getValue():0:0 -> x
    3:3:android.os.Parcelable onSaveInstanceState():0 -> x
    4:4:android.os.Parcelable onSaveInstanceState():0:0 -> x
    void onSetInitialValue(java.lang.Object) -> y
androidx.preference.ListPreference$SavedState -> androidx.preference.ListPreference$a:
    java.lang.String mValue -> a
androidx.preference.ListPreference$SavedState$1 -> androidx.preference.ListPreference$a$a:
    1:1:androidx.preference.ListPreference$SavedState createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    1:1:java.lang.Object createFromParcel(android.os.Parcel):0 -> createFromParcel
    1:1:androidx.preference.ListPreference$SavedState[] newArray(int):0:0 -> newArray
    1:1:java.lang.Object[] newArray(int):0 -> newArray
androidx.preference.ListPreference$SimpleSummaryProvider -> androidx.preference.ListPreference$b:
    androidx.preference.ListPreference$SimpleSummaryProvider sSimpleSummaryProvider -> a
    1:1:java.lang.CharSequence provideSummary(androidx.preference.ListPreference):0:0 -> a
    1:1:java.lang.CharSequence provideSummary(androidx.preference.Preference):0 -> a
    2:2:android.content.Context androidx.preference.Preference.getContext():0:0 -> a
    2:2:java.lang.CharSequence provideSummary(androidx.preference.ListPreference):0 -> a
    2:2:java.lang.CharSequence provideSummary(androidx.preference.Preference):0 -> a
    3:3:java.lang.CharSequence provideSummary(androidx.preference.ListPreference):0:0 -> a
    3:3:java.lang.CharSequence provideSummary(androidx.preference.Preference):0 -> a
androidx.preference.ListPreferenceDialogFragmentCompat -> a.k.c:
    java.lang.CharSequence[] mEntries -> z
    int mClickedDialogEntryIndex -> y
    java.lang.CharSequence[] mEntryValues -> A
    1:1:androidx.preference.ListPreference getListPreference():0:0 -> f
    1:1:void onDialogClosed(boolean):0 -> f
    2:2:void onDialogClosed(boolean):0:0 -> f
    1:1:androidx.appcompat.app.AlertDialog$Builder androidx.appcompat.app.AlertDialog$Builder.setSingleChoiceItems(java.lang.CharSequence[],int,android.content.DialogInterface$OnClickListener):0:0 -> g
    1:1:void onPrepareDialogBuilder(androidx.appcompat.app.AlertDialog$Builder):0 -> g
    2:2:androidx.appcompat.app.AlertDialog$Builder androidx.appcompat.app.AlertDialog$Builder.setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener):0:0 -> g
    2:2:void onPrepareDialogBuilder(androidx.appcompat.app.AlertDialog$Builder):0 -> g
    1:1:androidx.preference.ListPreference getListPreference():0:0 -> onCreate
    1:1:void onCreate(android.os.Bundle):0 -> onCreate
    2:2:java.lang.CharSequence[] androidx.preference.ListPreference.getEntries():0:0 -> onCreate
    2:2:void onCreate(android.os.Bundle):0 -> onCreate
    3:3:java.lang.CharSequence[] androidx.preference.ListPreference.getEntryValues():0:0 -> onCreate
    3:3:void onCreate(android.os.Bundle):0 -> onCreate
    4:4:java.lang.String androidx.preference.ListPreference.getValue():0:0 -> onCreate
    4:4:void onCreate(android.os.Bundle):0 -> onCreate
    5:5:void onCreate(android.os.Bundle):0:0 -> onCreate
    6:6:java.lang.CharSequence[] androidx.preference.ListPreference.getEntries():0:0 -> onCreate
    6:6:void onCreate(android.os.Bundle):0 -> onCreate
    7:7:void onCreate(android.os.Bundle):0:0 -> onCreate
    8:8:java.lang.CharSequence[] androidx.preference.ListPreference.getEntryValues():0:0 -> onCreate
    8:8:void onCreate(android.os.Bundle):0 -> onCreate
    9:9:void onCreate(android.os.Bundle):0:0 -> onCreate
androidx.preference.ListPreferenceDialogFragmentCompat$1 -> a.k.c$a:
    androidx.preference.ListPreferenceDialogFragmentCompat this$0 -> a
androidx.preference.MultiSelectListPreference -> androidx.preference.MultiSelectListPreference:
    java.util.Set mValues -> U
    java.lang.CharSequence[] mEntryValues -> T
    java.lang.CharSequence[] mEntries -> S
    1:1:void <init>(android.content.Context,android.util.AttributeSet,int,int):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    2:2:java.lang.CharSequence[] androidx.core.content.res.TypedArrayUtils.getTextArray(android.content.res.TypedArray,int,int):0:0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet,int,int):0:0 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    1:1:boolean androidx.preference.Preference.persistStringSet(java.util.Set):0:0 -> G
    1:1:void setValues(java.util.Set):0 -> G
    2:2:void androidx.preference.Preference.tryCommit(android.content.SharedPreferences$Editor):0:0 -> G
    2:2:boolean androidx.preference.Preference.persistStringSet(java.util.Set):0 -> G
    2:2:void setValues(java.util.Set):0 -> G
    3:3:boolean androidx.preference.PreferenceManager.shouldCommit():0:0 -> G
    3:3:void androidx.preference.Preference.tryCommit(android.content.SharedPreferences$Editor):0 -> G
    3:3:boolean androidx.preference.Preference.persistStringSet(java.util.Set):0 -> G
    3:3:void setValues(java.util.Set):0 -> G
    4:4:void androidx.preference.Preference.tryCommit(android.content.SharedPreferences$Editor):0:0 -> G
    4:4:boolean androidx.preference.Preference.persistStringSet(java.util.Set):0 -> G
    4:4:void setValues(java.util.Set):0 -> G
    5:5:void setValues(java.util.Set):0:0 -> G
    java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int) -> t
    void onRestoreInstanceState(android.os.Parcelable) -> w
    1:1:boolean androidx.preference.Preference.isPersistent():0:0 -> x
    1:1:android.os.Parcelable onSaveInstanceState():0 -> x
    2:2:android.os.Parcelable onSaveInstanceState():0:0 -> x
    3:3:java.util.Set getValues():0:0 -> x
    3:3:android.os.Parcelable onSaveInstanceState():0 -> x
    4:4:android.os.Parcelable onSaveInstanceState():0:0 -> x
    void onSetInitialValue(java.lang.Object) -> y
androidx.preference.MultiSelectListPreference$SavedState -> androidx.preference.MultiSelectListPreference$a:
    java.util.Set mValues -> a
androidx.preference.MultiSelectListPreference$SavedState$1 -> androidx.preference.MultiSelectListPreference$a$a:
    1:1:androidx.preference.MultiSelectListPreference$SavedState createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    1:1:java.lang.Object createFromParcel(android.os.Parcel):0 -> createFromParcel
    1:1:androidx.preference.MultiSelectListPreference$SavedState[] newArray(int):0:0 -> newArray
    1:1:java.lang.Object[] newArray(int):0 -> newArray
androidx.preference.MultiSelectListPreferenceDialogFragmentCompat -> a.k.d:
    java.util.Set mNewValues -> y
    boolean mPreferenceChanged -> z
    java.lang.CharSequence[] mEntryValues -> B
    java.lang.CharSequence[] mEntries -> A
    1:1:androidx.preference.MultiSelectListPreference getListPreference():0:0 -> f
    1:1:void onDialogClosed(boolean):0 -> f
    2:2:void onDialogClosed(boolean):0:0 -> f
    1:1:androidx.appcompat.app.AlertDialog$Builder androidx.appcompat.app.AlertDialog$Builder.setMultiChoiceItems(java.lang.CharSequence[],boolean[],android.content.DialogInterface$OnMultiChoiceClickListener):0:0 -> g
    1:1:void onPrepareDialogBuilder(androidx.appcompat.app.AlertDialog$Builder):0 -> g
    1:1:androidx.preference.MultiSelectListPreference getListPreference():0:0 -> onCreate
    1:1:void onCreate(android.os.Bundle):0 -> onCreate
    2:2:java.lang.CharSequence[] androidx.preference.MultiSelectListPreference.getEntries():0:0 -> onCreate
    2:2:void onCreate(android.os.Bundle):0 -> onCreate
    3:3:java.lang.CharSequence[] androidx.preference.MultiSelectListPreference.getEntryValues():0:0 -> onCreate
    3:3:void onCreate(android.os.Bundle):0 -> onCreate
    4:4:void onCreate(android.os.Bundle):0:0 -> onCreate
    5:5:java.util.Set androidx.preference.MultiSelectListPreference.getValues():0:0 -> onCreate
    5:5:void onCreate(android.os.Bundle):0 -> onCreate
    6:6:void onCreate(android.os.Bundle):0:0 -> onCreate
    7:7:java.lang.CharSequence[] androidx.preference.MultiSelectListPreference.getEntries():0:0 -> onCreate
    7:7:void onCreate(android.os.Bundle):0 -> onCreate
    8:8:void onCreate(android.os.Bundle):0:0 -> onCreate
    9:9:java.lang.CharSequence[] androidx.preference.MultiSelectListPreference.getEntryValues():0:0 -> onCreate
    9:9:void onCreate(android.os.Bundle):0 -> onCreate
    10:10:void onCreate(android.os.Bundle):0:0 -> onCreate
androidx.preference.MultiSelectListPreferenceDialogFragmentCompat$1 -> a.k.d$a:
    androidx.preference.MultiSelectListPreferenceDialogFragmentCompat this$0 -> a
androidx.preference.Preference -> androidx.preference.Preference:
    android.content.Context mContext -> a
    boolean mEnabled -> o
    int mOrder -> f
    boolean mParentDependencyMet -> u
    boolean mAllowDividerAbove -> w
    long mId -> c
    int mWidgetLayoutResId -> E
    java.lang.CharSequence mSummary -> h
    boolean mPersistent -> q
    java.lang.String mDependencyKey -> r
    android.os.Bundle mExtras -> n
    boolean mHasSingleLineTitleAttr -> y
    androidx.preference.Preference$OnPreferenceClickListener mOnClickListener -> e
    androidx.preference.PreferenceGroup mParentGroup -> H
    java.util.List mDependents -> G
    boolean mIconSpaceReserved -> A
    boolean mShouldDisableView -> C
    androidx.preference.PreferenceManager mPreferenceManager -> b
    boolean mHasId -> d
    boolean mSelectable -> p
    java.lang.String mKey -> k
    boolean mBaseMethodCalled -> I
    java.lang.String mFragment -> m
    int mIconResId -> i
    android.graphics.drawable.Drawable mIcon -> j
    java.lang.Object mDefaultValue -> s
    boolean mVisible -> v
    int mLayoutResId -> D
    java.lang.CharSequence mTitle -> g
    boolean mAllowDividerBelow -> x
    boolean mDependencyMet -> t
    android.view.View$OnClickListener mClickListener -> L
    androidx.preference.Preference$OnPreferenceChangeInternalListener mListener -> F
    boolean mSingleLineTitle -> z
    androidx.preference.Preference$SummaryProvider mSummaryProvider -> K
    boolean mCopyingEnabled -> B
    android.content.Intent mIntent -> l
    androidx.preference.Preference$OnPreferenceCopyListener mOnCopyListener -> J
    1:1:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    2:2:java.lang.String androidx.core.content.res.TypedArrayUtils.getString(android.content.res.TypedArray,int,int):0:0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet,int,int):0:0 -> <init>
    4:4:java.lang.CharSequence androidx.core.content.res.TypedArrayUtils.getText(android.content.res.TypedArray,int,int):0:0 -> <init>
    4:4:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    5:5:void <init>(android.content.Context,android.util.AttributeSet,int,int):0:0 -> <init>
    6:6:java.lang.CharSequence androidx.core.content.res.TypedArrayUtils.getText(android.content.res.TypedArray,int,int):0:0 -> <init>
    6:6:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    7:7:void <init>(android.content.Context,android.util.AttributeSet,int,int):0:0 -> <init>
    8:8:int androidx.core.content.res.TypedArrayUtils.getInt(android.content.res.TypedArray,int,int,int):0:0 -> <init>
    8:8:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    9:9:void <init>(android.content.Context,android.util.AttributeSet,int,int):0:0 -> <init>
    10:10:java.lang.String androidx.core.content.res.TypedArrayUtils.getString(android.content.res.TypedArray,int,int):0:0 -> <init>
    10:10:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    11:11:void <init>(android.content.Context,android.util.AttributeSet,int,int):0:0 -> <init>
    12:12:int androidx.core.content.res.TypedArrayUtils.getResourceId(android.content.res.TypedArray,int,int,int):0:0 -> <init>
    12:12:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    13:13:void <init>(android.content.Context,android.util.AttributeSet,int,int):0:0 -> <init>
    14:14:int androidx.core.content.res.TypedArrayUtils.getResourceId(android.content.res.TypedArray,int,int,int):0:0 -> <init>
    14:14:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    15:15:void <init>(android.content.Context,android.util.AttributeSet,int,int):0:0 -> <init>
    16:16:boolean androidx.core.content.res.TypedArrayUtils.getBoolean(android.content.res.TypedArray,int,int,boolean):0:0 -> <init>
    16:16:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    17:17:void <init>(android.content.Context,android.util.AttributeSet,int,int):0:0 -> <init>
    18:18:boolean androidx.core.content.res.TypedArrayUtils.getBoolean(android.content.res.TypedArray,int,int,boolean):0:0 -> <init>
    18:18:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    19:19:void <init>(android.content.Context,android.util.AttributeSet,int,int):0:0 -> <init>
    20:20:boolean androidx.core.content.res.TypedArrayUtils.getBoolean(android.content.res.TypedArray,int,int,boolean):0:0 -> <init>
    20:20:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    21:21:void <init>(android.content.Context,android.util.AttributeSet,int,int):0:0 -> <init>
    22:22:java.lang.String androidx.core.content.res.TypedArrayUtils.getString(android.content.res.TypedArray,int,int):0:0 -> <init>
    22:22:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    23:23:void <init>(android.content.Context,android.util.AttributeSet,int,int):0:0 -> <init>
    24:24:boolean androidx.core.content.res.TypedArrayUtils.getBoolean(android.content.res.TypedArray,int,int,boolean):0:0 -> <init>
    24:24:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    25:25:void <init>(android.content.Context,android.util.AttributeSet,int,int):0:0 -> <init>
    26:26:boolean androidx.core.content.res.TypedArrayUtils.getBoolean(android.content.res.TypedArray,int,int,boolean):0:0 -> <init>
    26:26:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    27:27:void <init>(android.content.Context,android.util.AttributeSet,int,int):0:0 -> <init>
    28:28:boolean androidx.core.content.res.TypedArrayUtils.getBoolean(android.content.res.TypedArray,int,int,boolean):0:0 -> <init>
    28:28:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    29:29:void <init>(android.content.Context,android.util.AttributeSet,int,int):0:0 -> <init>
    30:30:boolean androidx.core.content.res.TypedArrayUtils.getBoolean(android.content.res.TypedArray,int,int,boolean):0:0 -> <init>
    30:30:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    31:31:void <init>(android.content.Context,android.util.AttributeSet,int,int):0:0 -> <init>
    32:32:boolean androidx.core.content.res.TypedArrayUtils.getBoolean(android.content.res.TypedArray,int,int,boolean):0:0 -> <init>
    32:32:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    33:33:void <init>(android.content.Context,android.util.AttributeSet,int,int):0:0 -> <init>
    34:34:boolean androidx.core.content.res.TypedArrayUtils.getBoolean(android.content.res.TypedArray,int,int,boolean):0:0 -> <init>
    34:34:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    35:35:void <init>(android.content.Context,android.util.AttributeSet,int,int):0:0 -> <init>
    36:36:boolean androidx.core.content.res.TypedArrayUtils.getBoolean(android.content.res.TypedArray,int,int,boolean):0:0 -> <init>
    36:36:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    37:37:void <init>(android.content.Context,android.util.AttributeSet,int,int):0:0 -> <init>
    1:1:void performClick():0:0 -> A
    1:1:void performClick(android.view.View):0 -> A
    2:2:boolean isSelectable():0:0 -> A
    2:2:void performClick():0 -> A
    2:2:void performClick(android.view.View):0 -> A
    3:3:void performClick():0:0 -> A
    3:3:void performClick(android.view.View):0 -> A
    4:4:boolean androidx.preference.PreferenceGroupAdapter$3.onPreferenceClick(androidx.preference.Preference):0:0 -> A
    4:4:void performClick():0 -> A
    4:4:void performClick(android.view.View):0 -> A
    5:5:void androidx.preference.PreferenceGroupAdapter.onPreferenceHierarchyChange(androidx.preference.Preference):0:0 -> A
    5:5:boolean androidx.preference.PreferenceGroupAdapter$3.onPreferenceClick(androidx.preference.Preference):0 -> A
    5:5:void performClick():0 -> A
    5:5:void performClick(android.view.View):0 -> A
    6:6:boolean androidx.preference.PreferenceGroupAdapter$3.onPreferenceClick(androidx.preference.Preference):0:0 -> A
    6:6:void performClick():0 -> A
    6:6:void performClick(android.view.View):0 -> A
    7:7:androidx.preference.PreferenceManager getPreferenceManager():0:0 -> A
    7:7:void performClick():0 -> A
    7:7:void performClick(android.view.View):0 -> A
    8:8:androidx.preference.PreferenceManager$OnPreferenceTreeClickListener androidx.preference.PreferenceManager.getOnPreferenceTreeClickListener():0:0 -> A
    8:8:void performClick():0 -> A
    8:8:void performClick(android.view.View):0 -> A
    9:9:void performClick():0:0 -> A
    9:9:void performClick(android.view.View):0 -> A
    10:10:android.content.Context getContext():0:0 -> A
    10:10:void performClick():0 -> A
    10:10:void performClick(android.view.View):0 -> A
    11:11:void performClick():0:0 -> A
    11:11:void performClick(android.view.View):0 -> A
    1:1:void tryCommit(android.content.SharedPreferences$Editor):0:0 -> B
    1:1:boolean persistString(java.lang.String):0 -> B
    2:2:boolean androidx.preference.PreferenceManager.shouldCommit():0:0 -> B
    2:2:void tryCommit(android.content.SharedPreferences$Editor):0 -> B
    2:2:boolean persistString(java.lang.String):0 -> B
    3:3:void tryCommit(android.content.SharedPreferences$Editor):0:0 -> B
    3:3:boolean persistString(java.lang.String):0 -> B
    void setEnabledStateOnViews(android.view.View,boolean) -> C
    1:1:void notifyHierarchyChanged():0:0 -> D
    1:1:void setOrder(int):0 -> D
    2:2:void androidx.preference.PreferenceGroupAdapter.onPreferenceHierarchyChange(androidx.preference.Preference):0:0 -> D
    2:2:void notifyHierarchyChanged():0 -> D
    2:2:void setOrder(int):0 -> D
    boolean shouldDisableDependents() -> E
    1:1:boolean isPersistent():0:0 -> F
    1:1:boolean shouldPersist():0 -> F
    2:2:boolean shouldPersist():0:0 -> F
    void dispatchRestoreInstanceState(android.os.Bundle) -> a
    void dispatchSaveInstanceState(android.os.Bundle) -> b
    long getId() -> c
    1:1:int compareTo(androidx.preference.Preference):0:0 -> compareTo
    1:1:int compareTo(java.lang.Object):0 -> compareTo
    boolean getPersistedBoolean(boolean) -> d
    int getPersistedInt(int) -> e
    java.lang.String getPersistedString(java.lang.String) -> f
    java.util.Set getPersistedStringSet(java.util.Set) -> g
    androidx.preference.PreferenceDataStore getPreferenceDataStore() -> h
    1:1:androidx.preference.Preference$SummaryProvider getSummaryProvider():0:0 -> i
    1:1:java.lang.CharSequence getSummary():0 -> i
    2:2:java.lang.CharSequence getSummary():0:0 -> i
    boolean hasKey() -> j
    boolean isEnabled() -> k
    1:1:void androidx.preference.PreferenceGroupAdapter.onPreferenceChange(androidx.preference.Preference):0:0 -> l
    1:1:void notifyChanged():0 -> l
    void notifyDependencyChange(boolean) -> m
    1:1:void registerDependency():0:0 -> n
    1:1:void onAttached():0 -> n
    2:2:androidx.preference.Preference findPreferenceInHierarchy(java.lang.String):0:0 -> n
    2:2:void registerDependency():0 -> n
    2:2:void onAttached():0 -> n
    3:3:androidx.preference.Preference androidx.preference.PreferenceManager.findPreference(java.lang.CharSequence):0:0 -> n
    3:3:androidx.preference.Preference findPreferenceInHierarchy(java.lang.String):0 -> n
    3:3:void registerDependency():0 -> n
    3:3:void onAttached():0 -> n
    4:4:void registerDependent(androidx.preference.Preference):0:0 -> n
    4:4:void registerDependency():0 -> n
    4:4:void onAttached():0 -> n
    5:5:void registerDependency():0:0 -> n
    5:5:void onAttached():0 -> n
    1:1:long androidx.preference.PreferenceManager.getNextId():0:0 -> o
    1:1:void onAttachedToHierarchy(androidx.preference.PreferenceManager):0 -> o
    2:2:void onAttachedToHierarchy(androidx.preference.PreferenceManager):0:0 -> o
    3:3:long androidx.preference.PreferenceManager.getNextId():0:0 -> o
    3:3:void onAttachedToHierarchy(androidx.preference.PreferenceManager):0 -> o
    4:4:void dispatchSetInitialValue():0:0 -> o
    4:4:void onAttachedToHierarchy(androidx.preference.PreferenceManager):0 -> o
    5:5:android.content.SharedPreferences getSharedPreferences():0:0 -> o
    5:5:void dispatchSetInitialValue():0 -> o
    5:5:void onAttachedToHierarchy(androidx.preference.PreferenceManager):0 -> o
    6:6:void dispatchSetInitialValue():0:0 -> o
    6:6:void onAttachedToHierarchy(androidx.preference.PreferenceManager):0 -> o
    1:1:java.lang.CharSequence getTitle():0:0 -> p
    1:1:void onBindViewHolder(androidx.preference.PreferenceViewHolder):0 -> p
    2:2:void onBindViewHolder(androidx.preference.PreferenceViewHolder):0:0 -> p
    3:3:boolean isSelectable():0:0 -> p
    3:3:void onBindViewHolder(androidx.preference.PreferenceViewHolder):0 -> p
    4:4:void onBindViewHolder(androidx.preference.PreferenceViewHolder):0:0 -> p
    5:5:boolean isSelectable():0:0 -> p
    5:5:void onBindViewHolder(androidx.preference.PreferenceViewHolder):0 -> p
    6:6:void onBindViewHolder(androidx.preference.PreferenceViewHolder):0:0 -> p
    7:7:void androidx.preference.PreferenceViewHolder.setDividerAllowedAbove(boolean):0:0 -> p
    7:7:void onBindViewHolder(androidx.preference.PreferenceViewHolder):0 -> p
    8:8:void onBindViewHolder(androidx.preference.PreferenceViewHolder):0:0 -> p
    9:9:void androidx.preference.PreferenceViewHolder.setDividerAllowedBelow(boolean):0:0 -> p
    9:9:void onBindViewHolder(androidx.preference.PreferenceViewHolder):0 -> p
    10:10:boolean isCopyingEnabled():0:0 -> p
    10:10:void onBindViewHolder(androidx.preference.PreferenceViewHolder):0 -> p
    11:11:void onBindViewHolder(androidx.preference.PreferenceViewHolder):0:0 -> p
    12:12:void androidx.core.view.ViewCompat.setBackground(android.view.View,android.graphics.drawable.Drawable):0:0 -> p
    12:12:void onBindViewHolder(androidx.preference.PreferenceViewHolder):0 -> p
    void onClick() -> q
    void onDependencyChanged(androidx.preference.Preference,boolean) -> r
    1:1:void unregisterDependency():0:0 -> s
    1:1:void onDetached():0 -> s
    2:2:androidx.preference.Preference findPreferenceInHierarchy(java.lang.String):0:0 -> s
    2:2:void unregisterDependency():0 -> s
    2:2:void onDetached():0 -> s
    3:3:androidx.preference.Preference androidx.preference.PreferenceManager.findPreference(java.lang.CharSequence):0:0 -> s
    3:3:androidx.preference.Preference findPreferenceInHierarchy(java.lang.String):0 -> s
    3:3:void unregisterDependency():0 -> s
    3:3:void onDetached():0 -> s
    4:4:void unregisterDependent(androidx.preference.Preference):0:0 -> s
    4:4:void unregisterDependency():0 -> s
    4:4:void onDetached():0 -> s
    java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int) -> t
    1:1:java.lang.StringBuilder getFilterableStringBuilder():0:0 -> toString
    1:1:java.lang.String toString():0 -> toString
    2:2:java.lang.CharSequence getTitle():0:0 -> toString
    2:2:java.lang.StringBuilder getFilterableStringBuilder():0 -> toString
    2:2:java.lang.String toString():0 -> toString
    3:3:java.lang.StringBuilder getFilterableStringBuilder():0:0 -> toString
    3:3:java.lang.String toString():0 -> toString
    4:4:java.lang.String toString():0:0 -> toString
    void onInitializeAccessibilityNodeInfo(androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> u
    void onParentChanged(androidx.preference.Preference,boolean) -> v
    void onRestoreInstanceState(android.os.Parcelable) -> w
    android.os.Parcelable onSaveInstanceState() -> x
    void onSetInitialValue(java.lang.Object) -> y
    void onSetInitialValue(boolean,java.lang.Object) -> z
androidx.preference.Preference$1 -> androidx.preference.Preference$a:
    androidx.preference.Preference this$0 -> a
androidx.preference.Preference$BaseSavedState -> androidx.preference.Preference$b:
androidx.preference.Preference$BaseSavedState$1 -> androidx.preference.Preference$b$a:
    1:1:androidx.preference.Preference$BaseSavedState createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    1:1:java.lang.Object createFromParcel(android.os.Parcel):0 -> createFromParcel
    1:1:androidx.preference.Preference$BaseSavedState[] newArray(int):0:0 -> newArray
    1:1:java.lang.Object[] newArray(int):0 -> newArray
androidx.preference.Preference$OnPreferenceChangeInternalListener -> androidx.preference.Preference$c:
androidx.preference.Preference$OnPreferenceClickListener -> androidx.preference.Preference$d:
androidx.preference.Preference$OnPreferenceCopyListener -> androidx.preference.Preference$e:
    androidx.preference.Preference mPreference -> a
    1:1:boolean androidx.preference.Preference.isCopyingEnabled():0:0 -> onCreateContextMenu
    1:1:void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo):0 -> onCreateContextMenu
    2:2:void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo):0:0 -> onCreateContextMenu
    1:1:android.content.Context androidx.preference.Preference.getContext():0:0 -> onMenuItemClick
    1:1:boolean onMenuItemClick(android.view.MenuItem):0 -> onMenuItemClick
    2:2:boolean onMenuItemClick(android.view.MenuItem):0:0 -> onMenuItemClick
    3:3:android.content.Context androidx.preference.Preference.getContext():0:0 -> onMenuItemClick
    3:3:boolean onMenuItemClick(android.view.MenuItem):0 -> onMenuItemClick
    4:4:boolean onMenuItemClick(android.view.MenuItem):0:0 -> onMenuItemClick
androidx.preference.Preference$SummaryProvider -> androidx.preference.Preference$f:
    java.lang.CharSequence provideSummary(androidx.preference.Preference) -> a
androidx.preference.PreferenceCategory -> androidx.preference.PreferenceCategory:
    1:1:void <init>(android.content.Context,android.util.AttributeSet,int,int):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    boolean shouldDisableDependents() -> E
    boolean isEnabled() -> k
    void onBindViewHolder(androidx.preference.PreferenceViewHolder) -> p
    void onInitializeAccessibilityNodeInfo(androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> u
androidx.preference.PreferenceDialogFragmentCompat -> a.k.e:
    android.graphics.drawable.BitmapDrawable mDialogIcon -> w
    java.lang.CharSequence mDialogTitle -> r
    int mWhichButtonClicked -> x
    java.lang.CharSequence mPositiveButtonText -> s
    androidx.preference.DialogPreference mPreference -> q
    java.lang.CharSequence mNegativeButtonText -> t
    int mDialogLayoutRes -> v
    java.lang.CharSequence mDialogMessage -> u
    1:1:androidx.appcompat.app.AlertDialog$Builder androidx.appcompat.app.AlertDialog$Builder.setTitle(java.lang.CharSequence):0:0 -> a
    1:1:android.app.Dialog onCreateDialog(android.os.Bundle):0 -> a
    2:2:android.app.Dialog onCreateDialog(android.os.Bundle):0:0 -> a
    3:3:androidx.appcompat.app.AlertDialog$Builder androidx.appcompat.app.AlertDialog$Builder.setIcon(android.graphics.drawable.Drawable):0:0 -> a
    3:3:android.app.Dialog onCreateDialog(android.os.Bundle):0 -> a
    4:4:android.app.Dialog onCreateDialog(android.os.Bundle):0:0 -> a
    5:5:androidx.appcompat.app.AlertDialog$Builder androidx.appcompat.app.AlertDialog$Builder.setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener):0:0 -> a
    5:5:android.app.Dialog onCreateDialog(android.os.Bundle):0 -> a
    6:6:android.app.Dialog onCreateDialog(android.os.Bundle):0:0 -> a
    7:7:androidx.appcompat.app.AlertDialog$Builder androidx.appcompat.app.AlertDialog$Builder.setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener):0:0 -> a
    7:7:android.app.Dialog onCreateDialog(android.os.Bundle):0 -> a
    8:8:android.app.Dialog onCreateDialog(android.os.Bundle):0:0 -> a
    9:9:androidx.appcompat.app.AlertDialog$Builder androidx.appcompat.app.AlertDialog$Builder.setView(android.view.View):0:0 -> a
    9:9:android.app.Dialog onCreateDialog(android.os.Bundle):0 -> a
    10:10:android.app.Dialog onCreateDialog(android.os.Bundle):0:0 -> a
    11:11:androidx.appcompat.app.AlertDialog$Builder androidx.appcompat.app.AlertDialog$Builder.setMessage(java.lang.CharSequence):0:0 -> a
    11:11:android.app.Dialog onCreateDialog(android.os.Bundle):0 -> a
    12:12:android.app.Dialog onCreateDialog(android.os.Bundle):0:0 -> a
    13:13:void requestInputMethod(android.app.Dialog):0:0 -> a
    13:13:android.app.Dialog onCreateDialog(android.os.Bundle):0 -> a
    androidx.preference.DialogPreference getPreference() -> b
    boolean needInputMethod() -> c
    void onBindDialogView(android.view.View) -> d
    android.view.View onCreateDialogView(android.content.Context) -> e
    void onDialogClosed(boolean) -> f
    void onPrepareDialogBuilder(androidx.appcompat.app.AlertDialog$Builder) -> g
    1:1:java.lang.CharSequence androidx.preference.DialogPreference.getDialogTitle():0:0 -> onCreate
    1:1:void onCreate(android.os.Bundle):0 -> onCreate
    2:2:void onCreate(android.os.Bundle):0:0 -> onCreate
    3:3:java.lang.CharSequence androidx.preference.DialogPreference.getPositiveButtonText():0:0 -> onCreate
    3:3:void onCreate(android.os.Bundle):0 -> onCreate
    4:4:void onCreate(android.os.Bundle):0:0 -> onCreate
    5:5:java.lang.CharSequence androidx.preference.DialogPreference.getNegativeButtonText():0:0 -> onCreate
    5:5:void onCreate(android.os.Bundle):0 -> onCreate
    6:6:void onCreate(android.os.Bundle):0:0 -> onCreate
    7:7:java.lang.CharSequence androidx.preference.DialogPreference.getDialogMessage():0:0 -> onCreate
    7:7:void onCreate(android.os.Bundle):0 -> onCreate
    8:8:void onCreate(android.os.Bundle):0:0 -> onCreate
    9:9:int androidx.preference.DialogPreference.getDialogLayoutResource():0:0 -> onCreate
    9:9:void onCreate(android.os.Bundle):0 -> onCreate
    10:10:void onCreate(android.os.Bundle):0:0 -> onCreate
    11:11:android.graphics.drawable.Drawable androidx.preference.DialogPreference.getDialogIcon():0:0 -> onCreate
    11:11:void onCreate(android.os.Bundle):0 -> onCreate
    12:12:void onCreate(android.os.Bundle):0:0 -> onCreate
androidx.preference.PreferenceFragmentCompat -> a.k.f:
    1:1:androidx.preference.Preference androidx.preference.PreferenceManager.findPreference(java.lang.CharSequence):0:0 -> findPreference
    1:1:androidx.preference.Preference findPreference(java.lang.CharSequence):0 -> findPreference
    1:1:androidx.preference.PreferenceScreen androidx.preference.PreferenceManager.getPreferenceScreen():0:0 -> getPreferenceScreen
    1:1:androidx.preference.PreferenceScreen getPreferenceScreen():0 -> getPreferenceScreen
    1:1:void androidx.preference.PreferenceManager.setOnNavigateToScreenListener(androidx.preference.PreferenceManager$OnNavigateToScreenListener):0:0 -> onCreate
    1:1:void onCreate(android.os.Bundle):0 -> onCreate
    2:2:void onCreate(android.os.Bundle):0:0 -> onCreate
    1:1:void androidx.preference.PreferenceFragmentCompat$DividerDecoration.setAllowDividerAfterLastItem(boolean):0:0 -> onCreateView
    1:1:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle):0 -> onCreateView
    2:2:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle):0:0 -> onCreateView
    1:1:java.lang.String androidx.preference.Preference.getKey():0:0 -> onDisplayPreferenceDialog
    1:1:void onDisplayPreferenceDialog(androidx.preference.Preference):0 -> onDisplayPreferenceDialog
    2:2:androidx.preference.EditTextPreferenceDialogFragmentCompat androidx.preference.EditTextPreferenceDialogFragmentCompat.newInstance(java.lang.String):0:0 -> onDisplayPreferenceDialog
    2:2:void onDisplayPreferenceDialog(androidx.preference.Preference):0 -> onDisplayPreferenceDialog
    3:3:void onDisplayPreferenceDialog(androidx.preference.Preference):0:0 -> onDisplayPreferenceDialog
    4:4:java.lang.String androidx.preference.Preference.getKey():0:0 -> onDisplayPreferenceDialog
    4:4:void onDisplayPreferenceDialog(androidx.preference.Preference):0 -> onDisplayPreferenceDialog
    5:5:androidx.preference.ListPreferenceDialogFragmentCompat androidx.preference.ListPreferenceDialogFragmentCompat.newInstance(java.lang.String):0:0 -> onDisplayPreferenceDialog
    5:5:void onDisplayPreferenceDialog(androidx.preference.Preference):0 -> onDisplayPreferenceDialog
    6:6:void onDisplayPreferenceDialog(androidx.preference.Preference):0:0 -> onDisplayPreferenceDialog
    7:7:java.lang.String androidx.preference.Preference.getKey():0:0 -> onDisplayPreferenceDialog
    7:7:void onDisplayPreferenceDialog(androidx.preference.Preference):0 -> onDisplayPreferenceDialog
    8:8:androidx.preference.MultiSelectListPreferenceDialogFragmentCompat androidx.preference.MultiSelectListPreferenceDialogFragmentCompat.newInstance(java.lang.String):0:0 -> onDisplayPreferenceDialog
    8:8:void onDisplayPreferenceDialog(androidx.preference.Preference):0 -> onDisplayPreferenceDialog
    9:9:void onDisplayPreferenceDialog(androidx.preference.Preference):0:0 -> onDisplayPreferenceDialog
    10:10:void androidx.fragment.app.DialogFragment.show(androidx.fragment.app.FragmentManager,java.lang.String):0:0 -> onDisplayPreferenceDialog
    10:10:void onDisplayPreferenceDialog(androidx.preference.Preference):0 -> onDisplayPreferenceDialog
    11:11:androidx.fragment.app.FragmentTransaction androidx.fragment.app.FragmentManager.beginTransaction():0:0 -> onDisplayPreferenceDialog
    11:11:void androidx.fragment.app.DialogFragment.show(androidx.fragment.app.FragmentManager,java.lang.String):0 -> onDisplayPreferenceDialog
    11:11:void onDisplayPreferenceDialog(androidx.preference.Preference):0 -> onDisplayPreferenceDialog
    12:12:androidx.fragment.app.FragmentTransaction androidx.fragment.app.FragmentTransaction.add(androidx.fragment.app.Fragment,java.lang.String):0:0 -> onDisplayPreferenceDialog
    12:12:void androidx.fragment.app.DialogFragment.show(androidx.fragment.app.FragmentManager,java.lang.String):0 -> onDisplayPreferenceDialog
    12:12:void onDisplayPreferenceDialog(androidx.preference.Preference):0 -> onDisplayPreferenceDialog
    13:13:void androidx.fragment.app.DialogFragment.show(androidx.fragment.app.FragmentManager,java.lang.String):0:0 -> onDisplayPreferenceDialog
    13:13:void onDisplayPreferenceDialog(androidx.preference.Preference):0 -> onDisplayPreferenceDialog
    14:14:void onDisplayPreferenceDialog(androidx.preference.Preference):0:0 -> onDisplayPreferenceDialog
    1:1:java.lang.String androidx.preference.Preference.getFragment():0:0 -> onPreferenceTreeClick
    1:1:boolean onPreferenceTreeClick(androidx.preference.Preference):0 -> onPreferenceTreeClick
    2:2:boolean onPreferenceTreeClick(androidx.preference.Preference):0:0 -> onPreferenceTreeClick
    3:3:android.os.Bundle androidx.preference.Preference.getExtras():0:0 -> onPreferenceTreeClick
    3:3:boolean onPreferenceTreeClick(androidx.preference.Preference):0 -> onPreferenceTreeClick
    4:4:boolean onPreferenceTreeClick(androidx.preference.Preference):0:0 -> onPreferenceTreeClick
    5:5:java.lang.String androidx.preference.Preference.getFragment():0:0 -> onPreferenceTreeClick
    5:5:boolean onPreferenceTreeClick(androidx.preference.Preference):0 -> onPreferenceTreeClick
    6:6:boolean onPreferenceTreeClick(androidx.preference.Preference):0:0 -> onPreferenceTreeClick
    7:7:androidx.fragment.app.FragmentTransaction androidx.fragment.app.FragmentManager.beginTransaction():0:0 -> onPreferenceTreeClick
    7:7:boolean onPreferenceTreeClick(androidx.preference.Preference):0 -> onPreferenceTreeClick
    8:8:boolean onPreferenceTreeClick(androidx.preference.Preference):0:0 -> onPreferenceTreeClick
    9:9:androidx.fragment.app.FragmentTransaction androidx.fragment.app.FragmentTransaction.addToBackStack(java.lang.String):0:0 -> onPreferenceTreeClick
    9:9:boolean onPreferenceTreeClick(androidx.preference.Preference):0 -> onPreferenceTreeClick
    10:10:boolean onPreferenceTreeClick(androidx.preference.Preference):0:0 -> onPreferenceTreeClick
    11:11:androidx.fragment.app.FragmentTransaction androidx.fragment.app.FragmentTransaction.addToBackStack(java.lang.String):0:0 -> onPreferenceTreeClick
    11:11:boolean onPreferenceTreeClick(androidx.preference.Preference):0 -> onPreferenceTreeClick
    1:1:void androidx.preference.Preference.saveHierarchyState(android.os.Bundle):0:0 -> onSaveInstanceState
    1:1:void onSaveInstanceState(android.os.Bundle):0 -> onSaveInstanceState
    2:2:void onSaveInstanceState(android.os.Bundle):0:0 -> onSaveInstanceState
    1:1:void androidx.preference.PreferenceManager.setOnPreferenceTreeClickListener(androidx.preference.PreferenceManager$OnPreferenceTreeClickListener):0:0 -> onStart
    1:1:void onStart():0 -> onStart
    2:2:void androidx.preference.PreferenceManager.setOnDisplayPreferenceDialogListener(androidx.preference.PreferenceManager$OnDisplayPreferenceDialogListener):0:0 -> onStart
    2:2:void onStart():0 -> onStart
    1:1:void androidx.preference.PreferenceManager.setOnPreferenceTreeClickListener(androidx.preference.PreferenceManager$OnPreferenceTreeClickListener):0:0 -> onStop
    1:1:void onStop():0 -> onStop
    2:2:void androidx.preference.PreferenceManager.setOnDisplayPreferenceDialogListener(androidx.preference.PreferenceManager$OnDisplayPreferenceDialogListener):0:0 -> onStop
    2:2:void onStop():0 -> onStop
    1:1:void androidx.preference.Preference.restoreHierarchyState(android.os.Bundle):0:0 -> onViewCreated
    1:1:void onViewCreated(android.view.View,android.os.Bundle):0 -> onViewCreated
    2:2:void onViewCreated(android.view.View,android.os.Bundle):0:0 -> onViewCreated
    1:1:void androidx.preference.PreferenceFragmentCompat$DividerDecoration.setDivider(android.graphics.drawable.Drawable):0:0 -> setDivider
    1:1:void setDivider(android.graphics.drawable.Drawable):0 -> setDivider
    1:1:void androidx.preference.PreferenceFragmentCompat$DividerDecoration.setDividerHeight(int):0:0 -> setDividerHeight
    1:1:void setDividerHeight(int):0 -> setDividerHeight
    1:1:boolean androidx.preference.PreferenceManager.setPreferences(androidx.preference.PreferenceScreen):0:0 -> setPreferenceScreen
    1:1:void setPreferenceScreen(androidx.preference.PreferenceScreen):0 -> setPreferenceScreen
    2:2:void setPreferenceScreen(androidx.preference.PreferenceScreen):0:0 -> setPreferenceScreen
androidx.preference.PreferenceFragmentCompat$1 -> a.k.f$a:
    androidx.preference.PreferenceFragmentCompat this$0 -> a
androidx.preference.PreferenceFragmentCompat$2 -> a.k.f$b:
    androidx.preference.PreferenceFragmentCompat this$0 -> a
androidx.preference.PreferenceFragmentCompat$3 -> a.k.f$c:
    androidx.preference.Preference val$preference -> a
    java.lang.String val$key -> b
    androidx.preference.PreferenceFragmentCompat this$0 -> c
androidx.preference.PreferenceFragmentCompat$DividerDecoration -> a.k.f$d:
    androidx.preference.PreferenceFragmentCompat this$0 -> d
    int mDividerHeight -> b
    android.graphics.drawable.Drawable mDivider -> a
    boolean mAllowDividerAfterLastItem -> c
    void getItemOffsets(android.graphics.Rect,android.view.View,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> f
    void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> h
    1:1:boolean androidx.preference.PreferenceViewHolder.isDividerAllowedBelow():0:0 -> i
    1:1:boolean shouldDrawDividerBelow(android.view.View,androidx.recyclerview.widget.RecyclerView):0 -> i
    2:2:boolean shouldDrawDividerBelow(android.view.View,androidx.recyclerview.widget.RecyclerView):0:0 -> i
    3:3:boolean androidx.preference.PreferenceViewHolder.isDividerAllowedAbove():0:0 -> i
    3:3:boolean shouldDrawDividerBelow(android.view.View,androidx.recyclerview.widget.RecyclerView):0 -> i
androidx.preference.PreferenceFragmentCompat$OnPreferenceDisplayDialogCallback -> a.k.f$e:
    boolean onPreferenceDisplayDialog(androidx.preference.PreferenceFragmentCompat,androidx.preference.Preference) -> a
androidx.preference.PreferenceFragmentCompat$OnPreferenceStartFragmentCallback -> a.k.f$f:
    boolean onPreferenceStartFragment(androidx.preference.PreferenceFragmentCompat,androidx.preference.Preference) -> a
androidx.preference.PreferenceFragmentCompat$OnPreferenceStartScreenCallback -> a.k.f$g:
    boolean onPreferenceStartScreen(androidx.preference.PreferenceFragmentCompat,androidx.preference.PreferenceScreen) -> a
androidx.preference.PreferenceFragmentCompat$ScrollToPreferenceObserver -> a.k.f$h:
    androidx.recyclerview.widget.RecyclerView$Adapter mAdapter -> a
    androidx.preference.Preference mPreference -> c
    androidx.recyclerview.widget.RecyclerView mList -> b
    java.lang.String mKey -> d
    void onChanged() -> a
    void onItemRangeChanged(int,int) -> b
    void onItemRangeChanged(int,int,java.lang.Object) -> c
    void onItemRangeInserted(int,int) -> d
    void onItemRangeMoved(int,int,int) -> e
    void onItemRangeRemoved(int,int) -> f
    void scrollToPreference() -> h
androidx.preference.PreferenceGroup -> androidx.preference.PreferenceGroup:
    boolean mOrderingAsAdded -> O
    androidx.collection.SimpleArrayMap mIdRecycleCache -> M
    java.util.List mPreferences -> N
    boolean mAttachedToHierarchy -> Q
    int mInitialExpandedChildrenCount -> R
    int mCurrentPreferenceOrder -> P
    1:1:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    2:2:int androidx.core.content.res.TypedArrayUtils.getInt(android.content.res.TypedArray,int,int,int):0:0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet,int,int):0:0 -> <init>
    1:1:java.lang.String androidx.preference.Preference.getKey():0:0 -> G
    1:1:androidx.preference.Preference findPreference(java.lang.CharSequence):0 -> G
    2:2:androidx.preference.Preference findPreference(java.lang.CharSequence):0:0 -> G
    3:3:java.lang.String androidx.preference.Preference.getKey():0:0 -> G
    3:3:androidx.preference.Preference findPreference(java.lang.CharSequence):0 -> G
    4:4:androidx.preference.Preference findPreference(java.lang.CharSequence):0:0 -> G
    androidx.preference.Preference getPreference(int) -> H
    int getPreferenceCount() -> I
    boolean isOnSameScreenAsChildren() -> J
    void setInitialExpandedChildrenCount(int) -> K
    void dispatchRestoreInstanceState(android.os.Bundle) -> a
    void dispatchSaveInstanceState(android.os.Bundle) -> b
    void notifyDependencyChange(boolean) -> m
    void onAttached() -> n
    void onDetached() -> s
    void onRestoreInstanceState(android.os.Parcelable) -> w
    android.os.Parcelable onSaveInstanceState() -> x
androidx.preference.PreferenceGroup$PreferencePositionCallback -> androidx.preference.PreferenceGroup$a:
    int getPreferenceAdapterPosition(java.lang.String) -> a
    int getPreferenceAdapterPosition(androidx.preference.Preference) -> b
androidx.preference.PreferenceGroup$SavedState -> androidx.preference.PreferenceGroup$b:
    int mInitialExpandedChildrenCount -> a
androidx.preference.PreferenceGroup$SavedState$1 -> androidx.preference.PreferenceGroup$b$a:
    1:1:androidx.preference.PreferenceGroup$SavedState createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    1:1:java.lang.Object createFromParcel(android.os.Parcel):0 -> createFromParcel
    1:1:androidx.preference.PreferenceGroup$SavedState[] newArray(int):0:0 -> newArray
    1:1:java.lang.Object[] newArray(int):0 -> newArray
androidx.preference.PreferenceGroupAdapter -> a.k.g:
    java.util.List mPreferences -> b
    android.os.Handler mHandler -> e
    androidx.preference.PreferenceGroup mPreferenceGroup -> a
    java.util.List mPreferenceResourceDescriptors -> d
    java.util.List mVisiblePreferences -> c
    java.lang.Runnable mSyncRunnable -> f
    1:1:void androidx.preference.Preference.setOnPreferenceChangeInternalListener(androidx.preference.Preference$OnPreferenceChangeInternalListener):0:0 -> <init>
    1:1:void <init>(androidx.preference.PreferenceGroup):0 -> <init>
    2:2:void <init>(androidx.preference.PreferenceGroup):0:0 -> <init>
    3:3:boolean androidx.preference.PreferenceScreen.shouldUseGeneratedIds():0:0 -> <init>
    3:3:void <init>(androidx.preference.PreferenceGroup):0 -> <init>
    4:4:void <init>(androidx.preference.PreferenceGroup):0:0 -> <init>
    1:1:java.lang.String androidx.preference.Preference.getKey():0:0 -> a
    1:1:int getPreferenceAdapterPosition(java.lang.String):0 -> a
    2:2:int getPreferenceAdapterPosition(java.lang.String):0:0 -> a
    int getPreferenceAdapterPosition(androidx.preference.Preference) -> b
    1:1:boolean androidx.preference.Preference.isVisible():0:0 -> c
    1:1:java.util.List createVisiblePreferencesList(androidx.preference.PreferenceGroup):0 -> c
    2:2:java.util.List createVisiblePreferencesList(androidx.preference.PreferenceGroup):0:0 -> c
    3:3:int androidx.preference.PreferenceGroup.getInitialExpandedChildrenCount():0:0 -> c
    3:3:java.util.List createVisiblePreferencesList(androidx.preference.PreferenceGroup):0 -> c
    4:4:java.util.List createVisiblePreferencesList(androidx.preference.PreferenceGroup):0:0 -> c
    5:5:int androidx.preference.PreferenceGroup.getInitialExpandedChildrenCount():0:0 -> c
    5:5:java.util.List createVisiblePreferencesList(androidx.preference.PreferenceGroup):0 -> c
    6:6:java.util.List createVisiblePreferencesList(androidx.preference.PreferenceGroup):0:0 -> c
    7:7:int androidx.preference.PreferenceGroup.getInitialExpandedChildrenCount():0:0 -> c
    7:7:java.util.List createVisiblePreferencesList(androidx.preference.PreferenceGroup):0 -> c
    8:8:androidx.preference.ExpandButton createExpandButton(androidx.preference.PreferenceGroup,java.util.List):0:0 -> c
    8:8:java.util.List createVisiblePreferencesList(androidx.preference.PreferenceGroup):0 -> c
    9:9:android.content.Context androidx.preference.Preference.getContext():0:0 -> c
    9:9:androidx.preference.ExpandButton createExpandButton(androidx.preference.PreferenceGroup,java.util.List):0 -> c
    9:9:java.util.List createVisiblePreferencesList(androidx.preference.PreferenceGroup):0 -> c
    10:10:long androidx.preference.Preference.getId():0:0 -> c
    10:10:androidx.preference.ExpandButton createExpandButton(androidx.preference.PreferenceGroup,java.util.List):0 -> c
    10:10:java.util.List createVisiblePreferencesList(androidx.preference.PreferenceGroup):0 -> c
    11:11:androidx.preference.ExpandButton createExpandButton(androidx.preference.PreferenceGroup,java.util.List):0:0 -> c
    11:11:java.util.List createVisiblePreferencesList(androidx.preference.PreferenceGroup):0 -> c
    12:12:void androidx.preference.Preference.setOnPreferenceClickListener(androidx.preference.Preference$OnPreferenceClickListener):0:0 -> c
    12:12:androidx.preference.ExpandButton createExpandButton(androidx.preference.PreferenceGroup,java.util.List):0 -> c
    12:12:java.util.List createVisiblePreferencesList(androidx.preference.PreferenceGroup):0 -> c
    13:13:java.util.List createVisiblePreferencesList(androidx.preference.PreferenceGroup):0:0 -> c
    1:1:void androidx.preference.PreferenceGroup.sortPreferences():0:0 -> d
    1:1:void flattenPreferenceGroup(java.util.List,androidx.preference.PreferenceGroup):0 -> d
    2:2:void flattenPreferenceGroup(java.util.List,androidx.preference.PreferenceGroup):0:0 -> d
    3:3:void androidx.preference.Preference.setOnPreferenceChangeInternalListener(androidx.preference.Preference$OnPreferenceChangeInternalListener):0:0 -> d
    3:3:void flattenPreferenceGroup(java.util.List,androidx.preference.PreferenceGroup):0 -> d
    4:4:void androidx.preference.PreferenceGroup.sortPreferences():0:0 -> d
    4:4:void flattenPreferenceGroup(java.util.List,androidx.preference.PreferenceGroup):0 -> d
    androidx.preference.Preference getItem(int) -> e
    1:1:int androidx.preference.PreferenceGroup.getInitialExpandedChildrenCount():0:0 -> f
    1:1:boolean isGroupExpandable(androidx.preference.PreferenceGroup):0 -> f
    1:1:void androidx.preference.Preference.setOnPreferenceChangeInternalListener(androidx.preference.Preference$OnPreferenceChangeInternalListener):0:0 -> g
    1:1:void updatePreferences():0 -> g
    2:2:void updatePreferences():0:0 -> g
    3:3:androidx.preference.PreferenceManager androidx.preference.Preference.getPreferenceManager():0:0 -> g
    3:3:void updatePreferences():0 -> g
    4:4:void updatePreferences():0:0 -> g
    5:5:void androidx.preference.Preference.clearWasDetached():0:0 -> g
    5:5:void updatePreferences():0 -> g
    1:1:void onBindViewHolder(androidx.preference.PreferenceViewHolder,int):0:0 -> onBindViewHolder
    1:1:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int):0 -> onBindViewHolder
    1:1:androidx.preference.PreferenceViewHolder onCreateViewHolder(android.view.ViewGroup,int):0:0 -> onCreateViewHolder
    1:1:androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int):0 -> onCreateViewHolder
    2:2:void androidx.core.view.ViewCompat.setBackground(android.view.View,android.graphics.drawable.Drawable):0:0 -> onCreateViewHolder
    2:2:androidx.preference.PreferenceViewHolder onCreateViewHolder(android.view.ViewGroup,int):0 -> onCreateViewHolder
    2:2:androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int):0 -> onCreateViewHolder
    3:3:androidx.preference.PreferenceViewHolder onCreateViewHolder(android.view.ViewGroup,int):0:0 -> onCreateViewHolder
    3:3:androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int):0 -> onCreateViewHolder
androidx.preference.PreferenceGroupAdapter$1 -> a.k.g$a:
    androidx.preference.PreferenceGroupAdapter this$0 -> a
androidx.preference.PreferenceGroupAdapter$3 -> a.k.h:
    androidx.preference.PreferenceGroup val$group -> a
    androidx.preference.PreferenceGroupAdapter this$0 -> b
androidx.preference.PreferenceGroupAdapter$PreferenceResourceDescriptor -> a.k.g$b:
    int mWidgetLayoutResId -> b
    java.lang.String mClassName -> c
    int mLayoutResId -> a
    1:1:int androidx.preference.Preference.getLayoutResource():0:0 -> <init>
    1:1:void <init>(androidx.preference.Preference):0 -> <init>
    2:2:void <init>(androidx.preference.Preference):0:0 -> <init>
    3:3:int androidx.preference.Preference.getWidgetLayoutResource():0:0 -> <init>
    3:3:void <init>(androidx.preference.Preference):0 -> <init>
    4:4:void <init>(androidx.preference.Preference):0:0 -> <init>
androidx.preference.PreferenceInflater -> a.k.i:
    android.content.Context mContext -> a
    java.lang.Class[] CONSTRUCTOR_SIGNATURE -> e
    java.lang.Object[] mConstructorArgs -> b
    java.lang.String[] mDefaultPackages -> d
    java.util.HashMap CONSTRUCTOR_MAP -> f
    androidx.preference.PreferenceManager mPreferenceManager -> c
    1:1:void init(androidx.preference.PreferenceManager):0:0 -> <init>
    1:1:void <init>(android.content.Context,androidx.preference.PreferenceManager):0 -> <init>
    2:2:void setDefaultPackages(java.lang.String[]):0:0 -> <init>
    2:2:void init(androidx.preference.PreferenceManager):0 -> <init>
    2:2:void <init>(android.content.Context,androidx.preference.PreferenceManager):0 -> <init>
    androidx.preference.Preference createItem(java.lang.String,java.lang.String[],android.util.AttributeSet) -> a
    1:1:androidx.preference.Preference onCreateItem(java.lang.String,android.util.AttributeSet):0:0 -> b
    1:1:androidx.preference.Preference createItemFromTag(java.lang.String,android.util.AttributeSet):0 -> b
    2:2:androidx.preference.Preference createItemFromTag(java.lang.String,android.util.AttributeSet):0:0 -> b
    1:1:androidx.preference.PreferenceGroup onMergeRoots(androidx.preference.PreferenceGroup,androidx.preference.PreferenceGroup):0:0 -> c
    1:1:androidx.preference.Preference inflate(org.xmlpull.v1.XmlPullParser,androidx.preference.PreferenceGroup):0 -> c
    2:2:androidx.preference.Preference inflate(org.xmlpull.v1.XmlPullParser,androidx.preference.PreferenceGroup):0:0 -> c
    1:1:android.content.Context getContext():0:0 -> d
    1:1:void rInflate(org.xmlpull.v1.XmlPullParser,androidx.preference.Preference,android.util.AttributeSet):0 -> d
    2:2:void rInflate(org.xmlpull.v1.XmlPullParser,androidx.preference.Preference,android.util.AttributeSet):0:0 -> d
    3:3:void androidx.preference.Preference.setIntent(android.content.Intent):0:0 -> d
    3:3:void rInflate(org.xmlpull.v1.XmlPullParser,androidx.preference.Preference,android.util.AttributeSet):0 -> d
    4:4:void rInflate(org.xmlpull.v1.XmlPullParser,androidx.preference.Preference,android.util.AttributeSet):0:0 -> d
    5:5:android.content.Context getContext():0:0 -> d
    5:5:void rInflate(org.xmlpull.v1.XmlPullParser,androidx.preference.Preference,android.util.AttributeSet):0 -> d
    6:6:void rInflate(org.xmlpull.v1.XmlPullParser,androidx.preference.Preference,android.util.AttributeSet):0:0 -> d
    7:7:android.os.Bundle androidx.preference.Preference.getExtras():0:0 -> d
    7:7:void rInflate(org.xmlpull.v1.XmlPullParser,androidx.preference.Preference,android.util.AttributeSet):0 -> d
    8:8:void rInflate(org.xmlpull.v1.XmlPullParser,androidx.preference.Preference,android.util.AttributeSet):0:0 -> d
    9:9:void skipCurrentTag(org.xmlpull.v1.XmlPullParser):0:0 -> d
    9:9:void rInflate(org.xmlpull.v1.XmlPullParser,androidx.preference.Preference,android.util.AttributeSet):0 -> d
    10:10:void rInflate(org.xmlpull.v1.XmlPullParser,androidx.preference.Preference,android.util.AttributeSet):0:0 -> d
    11:11:boolean androidx.preference.PreferenceGroup.addPreference(androidx.preference.Preference):0:0 -> d
    11:11:void androidx.preference.PreferenceGroup.addItemFromInflater(androidx.preference.Preference):0 -> d
    11:11:void rInflate(org.xmlpull.v1.XmlPullParser,androidx.preference.Preference,android.util.AttributeSet):0 -> d
    12:12:java.lang.String androidx.preference.Preference.getKey():0:0 -> d
    12:12:boolean androidx.preference.PreferenceGroup.addPreference(androidx.preference.Preference):0 -> d
    12:12:void androidx.preference.PreferenceGroup.addItemFromInflater(androidx.preference.Preference):0 -> d
    12:12:void rInflate(org.xmlpull.v1.XmlPullParser,androidx.preference.Preference,android.util.AttributeSet):0 -> d
    13:13:androidx.preference.PreferenceGroup androidx.preference.Preference.getParent():0:0 -> d
    13:13:boolean androidx.preference.PreferenceGroup.addPreference(androidx.preference.Preference):0 -> d
    13:13:void androidx.preference.PreferenceGroup.addItemFromInflater(androidx.preference.Preference):0 -> d
    13:13:void rInflate(org.xmlpull.v1.XmlPullParser,androidx.preference.Preference,android.util.AttributeSet):0 -> d
    14:14:java.lang.String androidx.preference.Preference.getKey():0:0 -> d
    14:14:boolean androidx.preference.PreferenceGroup.addPreference(androidx.preference.Preference):0 -> d
    14:14:void androidx.preference.PreferenceGroup.addItemFromInflater(androidx.preference.Preference):0 -> d
    14:14:void rInflate(org.xmlpull.v1.XmlPullParser,androidx.preference.Preference,android.util.AttributeSet):0 -> d
    15:15:boolean androidx.preference.PreferenceGroup.addPreference(androidx.preference.Preference):0:0 -> d
    15:15:void androidx.preference.PreferenceGroup.addItemFromInflater(androidx.preference.Preference):0 -> d
    15:15:void rInflate(org.xmlpull.v1.XmlPullParser,androidx.preference.Preference,android.util.AttributeSet):0 -> d
    16:16:int androidx.preference.Preference.getOrder():0:0 -> d
    16:16:boolean androidx.preference.PreferenceGroup.addPreference(androidx.preference.Preference):0 -> d
    16:16:void androidx.preference.PreferenceGroup.addItemFromInflater(androidx.preference.Preference):0 -> d
    16:16:void rInflate(org.xmlpull.v1.XmlPullParser,androidx.preference.Preference,android.util.AttributeSet):0 -> d
    17:17:boolean androidx.preference.PreferenceGroup.addPreference(androidx.preference.Preference):0:0 -> d
    17:17:void androidx.preference.PreferenceGroup.addItemFromInflater(androidx.preference.Preference):0 -> d
    17:17:void rInflate(org.xmlpull.v1.XmlPullParser,androidx.preference.Preference,android.util.AttributeSet):0 -> d
    18:18:void androidx.preference.PreferenceGroup.setOrderingAsAdded(boolean):0:0 -> d
    18:18:boolean androidx.preference.PreferenceGroup.addPreference(androidx.preference.Preference):0 -> d
    18:18:void androidx.preference.PreferenceGroup.addItemFromInflater(androidx.preference.Preference):0 -> d
    18:18:void rInflate(org.xmlpull.v1.XmlPullParser,androidx.preference.Preference,android.util.AttributeSet):0 -> d
    19:19:boolean androidx.preference.PreferenceGroup.addPreference(androidx.preference.Preference):0:0 -> d
    19:19:void androidx.preference.PreferenceGroup.addItemFromInflater(androidx.preference.Preference):0 -> d
    19:19:void rInflate(org.xmlpull.v1.XmlPullParser,androidx.preference.Preference,android.util.AttributeSet):0 -> d
    20:20:boolean androidx.preference.PreferenceGroup.onPrepareAddPreference(androidx.preference.Preference):0:0 -> d
    20:20:boolean androidx.preference.PreferenceGroup.addPreference(androidx.preference.Preference):0 -> d
    20:20:void androidx.preference.PreferenceGroup.addItemFromInflater(androidx.preference.Preference):0 -> d
    20:20:void rInflate(org.xmlpull.v1.XmlPullParser,androidx.preference.Preference,android.util.AttributeSet):0 -> d
    21:21:boolean androidx.preference.PreferenceGroup.addPreference(androidx.preference.Preference):0:0 -> d
    21:21:void androidx.preference.PreferenceGroup.addItemFromInflater(androidx.preference.Preference):0 -> d
    21:21:void rInflate(org.xmlpull.v1.XmlPullParser,androidx.preference.Preference,android.util.AttributeSet):0 -> d
    22:22:androidx.preference.PreferenceManager androidx.preference.Preference.getPreferenceManager():0:0 -> d
    22:22:boolean androidx.preference.PreferenceGroup.addPreference(androidx.preference.Preference):0 -> d
    22:22:void androidx.preference.PreferenceGroup.addItemFromInflater(androidx.preference.Preference):0 -> d
    22:22:void rInflate(org.xmlpull.v1.XmlPullParser,androidx.preference.Preference,android.util.AttributeSet):0 -> d
    23:23:java.lang.String androidx.preference.Preference.getKey():0:0 -> d
    23:23:boolean androidx.preference.PreferenceGroup.addPreference(androidx.preference.Preference):0 -> d
    23:23:void androidx.preference.PreferenceGroup.addItemFromInflater(androidx.preference.Preference):0 -> d
    23:23:void rInflate(org.xmlpull.v1.XmlPullParser,androidx.preference.Preference,android.util.AttributeSet):0 -> d
    24:24:boolean androidx.preference.PreferenceGroup.addPreference(androidx.preference.Preference):0:0 -> d
    24:24:void androidx.preference.PreferenceGroup.addItemFromInflater(androidx.preference.Preference):0 -> d
    24:24:void rInflate(org.xmlpull.v1.XmlPullParser,androidx.preference.Preference,android.util.AttributeSet):0 -> d
    25:25:boolean androidx.collection.SimpleArrayMap.containsKey(java.lang.Object):0:0 -> d
    25:25:boolean androidx.preference.PreferenceGroup.addPreference(androidx.preference.Preference):0 -> d
    25:25:void androidx.preference.PreferenceGroup.addItemFromInflater(androidx.preference.Preference):0 -> d
    25:25:void rInflate(org.xmlpull.v1.XmlPullParser,androidx.preference.Preference,android.util.AttributeSet):0 -> d
    26:26:boolean androidx.preference.PreferenceGroup.addPreference(androidx.preference.Preference):0:0 -> d
    26:26:void androidx.preference.PreferenceGroup.addItemFromInflater(androidx.preference.Preference):0 -> d
    26:26:void rInflate(org.xmlpull.v1.XmlPullParser,androidx.preference.Preference,android.util.AttributeSet):0 -> d
    27:27:java.lang.Object androidx.collection.SimpleArrayMap.get(java.lang.Object):0:0 -> d
    27:27:boolean androidx.preference.PreferenceGroup.addPreference(androidx.preference.Preference):0 -> d
    27:27:void androidx.preference.PreferenceGroup.addItemFromInflater(androidx.preference.Preference):0 -> d
    27:27:void rInflate(org.xmlpull.v1.XmlPullParser,androidx.preference.Preference,android.util.AttributeSet):0 -> d
    28:28:boolean androidx.preference.PreferenceGroup.addPreference(androidx.preference.Preference):0:0 -> d
    28:28:void androidx.preference.PreferenceGroup.addItemFromInflater(androidx.preference.Preference):0 -> d
    28:28:void rInflate(org.xmlpull.v1.XmlPullParser,androidx.preference.Preference,android.util.AttributeSet):0 -> d
    29:29:long androidx.preference.PreferenceManager.getNextId():0:0 -> d
    29:29:boolean androidx.preference.PreferenceGroup.addPreference(androidx.preference.Preference):0 -> d
    29:29:void androidx.preference.PreferenceGroup.addItemFromInflater(androidx.preference.Preference):0 -> d
    29:29:void rInflate(org.xmlpull.v1.XmlPullParser,androidx.preference.Preference,android.util.AttributeSet):0 -> d
    30:30:void androidx.preference.Preference.onAttachedToHierarchy(androidx.preference.PreferenceManager,long):0:0 -> d
    30:30:boolean androidx.preference.PreferenceGroup.addPreference(androidx.preference.Preference):0 -> d
    30:30:void androidx.preference.PreferenceGroup.addItemFromInflater(androidx.preference.Preference):0 -> d
    30:30:void rInflate(org.xmlpull.v1.XmlPullParser,androidx.preference.Preference,android.util.AttributeSet):0 -> d
    31:31:void androidx.preference.Preference.assignParent(androidx.preference.PreferenceGroup):0:0 -> d
    31:31:boolean androidx.preference.PreferenceGroup.addPreference(androidx.preference.Preference):0 -> d
    31:31:void androidx.preference.PreferenceGroup.addItemFromInflater(androidx.preference.Preference):0 -> d
    31:31:void rInflate(org.xmlpull.v1.XmlPullParser,androidx.preference.Preference,android.util.AttributeSet):0 -> d
    32:32:boolean androidx.preference.PreferenceGroup.addPreference(androidx.preference.Preference):0:0 -> d
    32:32:void androidx.preference.PreferenceGroup.addItemFromInflater(androidx.preference.Preference):0 -> d
    32:32:void rInflate(org.xmlpull.v1.XmlPullParser,androidx.preference.Preference,android.util.AttributeSet):0 -> d
    33:33:void androidx.preference.Preference.notifyHierarchyChanged():0:0 -> d
    33:33:boolean androidx.preference.PreferenceGroup.addPreference(androidx.preference.Preference):0 -> d
    33:33:void androidx.preference.PreferenceGroup.addItemFromInflater(androidx.preference.Preference):0 -> d
    33:33:void rInflate(org.xmlpull.v1.XmlPullParser,androidx.preference.Preference,android.util.AttributeSet):0 -> d
    34:34:void androidx.preference.PreferenceGroupAdapter.onPreferenceHierarchyChange(androidx.preference.Preference):0:0 -> d
    34:34:void androidx.preference.Preference.notifyHierarchyChanged():0 -> d
    34:34:boolean androidx.preference.PreferenceGroup.addPreference(androidx.preference.Preference):0 -> d
    34:34:void androidx.preference.PreferenceGroup.addItemFromInflater(androidx.preference.Preference):0 -> d
    34:34:void rInflate(org.xmlpull.v1.XmlPullParser,androidx.preference.Preference,android.util.AttributeSet):0 -> d
    35:35:void rInflate(org.xmlpull.v1.XmlPullParser,androidx.preference.Preference,android.util.AttributeSet):0:0 -> d
    36:36:void androidx.preference.Preference.assignParent(androidx.preference.PreferenceGroup):0:0 -> d
    36:36:boolean androidx.preference.PreferenceGroup.addPreference(androidx.preference.Preference):0 -> d
    36:36:void androidx.preference.PreferenceGroup.addItemFromInflater(androidx.preference.Preference):0 -> d
    36:36:void rInflate(org.xmlpull.v1.XmlPullParser,androidx.preference.Preference,android.util.AttributeSet):0 -> d
    37:37:void androidx.preference.Preference.onAttachedToHierarchy(androidx.preference.PreferenceManager,long):0:0 -> d
    37:37:boolean androidx.preference.PreferenceGroup.addPreference(androidx.preference.Preference):0 -> d
    37:37:void androidx.preference.PreferenceGroup.addItemFromInflater(androidx.preference.Preference):0 -> d
    37:37:void rInflate(org.xmlpull.v1.XmlPullParser,androidx.preference.Preference,android.util.AttributeSet):0 -> d
    38:38:long androidx.preference.PreferenceManager.getNextId():0:0 -> d
    38:38:boolean androidx.preference.PreferenceGroup.addPreference(androidx.preference.Preference):0 -> d
    38:38:void androidx.preference.PreferenceGroup.addItemFromInflater(androidx.preference.Preference):0 -> d
    38:38:void rInflate(org.xmlpull.v1.XmlPullParser,androidx.preference.Preference,android.util.AttributeSet):0 -> d
    39:39:boolean androidx.preference.PreferenceGroup.addPreference(androidx.preference.Preference):0:0 -> d
    39:39:void androidx.preference.PreferenceGroup.addItemFromInflater(androidx.preference.Preference):0 -> d
    39:39:void rInflate(org.xmlpull.v1.XmlPullParser,androidx.preference.Preference,android.util.AttributeSet):0 -> d
androidx.preference.PreferenceManager -> a.k.j:
    android.content.Context mContext -> a
    java.lang.String mSharedPreferencesName -> f
    androidx.preference.PreferenceManager$OnNavigateToScreenListener mOnNavigateToScreenListener -> k
    android.content.SharedPreferences mSharedPreferences -> c
    long mNextId -> b
    boolean mNoCommit -> e
    int mSharedPreferencesMode -> g
    androidx.preference.PreferenceScreen mPreferenceScreen -> h
    android.content.SharedPreferences$Editor mEditor -> d
    androidx.preference.PreferenceManager$OnPreferenceTreeClickListener mOnPreferenceTreeClickListener -> i
    androidx.preference.PreferenceManager$OnDisplayPreferenceDialogListener mOnDisplayPreferenceDialogListener -> j
    1:1:void setSharedPreferencesName(java.lang.String):0:0 -> <init>
    1:1:void <init>(android.content.Context):0 -> <init>
    android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context) -> a
    java.lang.String getDefaultSharedPreferencesName(android.content.Context) -> b
    android.content.SharedPreferences$Editor getEditor() -> c
    android.content.SharedPreferences getSharedPreferences() -> d
    1:1:void setNoCommit(boolean):0:0 -> e
    1:1:androidx.preference.PreferenceScreen inflateFromResource(android.content.Context,int,androidx.preference.PreferenceScreen):0 -> e
    2:2:androidx.preference.PreferenceScreen inflateFromResource(android.content.Context,int,androidx.preference.PreferenceScreen):0:0 -> e
    3:3:androidx.preference.Preference androidx.preference.PreferenceInflater.inflate(int,androidx.preference.PreferenceGroup):0:0 -> e
    3:3:androidx.preference.PreferenceScreen inflateFromResource(android.content.Context,int,androidx.preference.PreferenceScreen):0 -> e
    4:4:androidx.preference.PreferenceScreen inflateFromResource(android.content.Context,int,androidx.preference.PreferenceScreen):0:0 -> e
    5:5:void setNoCommit(boolean):0:0 -> e
    5:5:androidx.preference.PreferenceScreen inflateFromResource(android.content.Context,int,androidx.preference.PreferenceScreen):0 -> e
    6:6:androidx.preference.Preference androidx.preference.PreferenceInflater.inflate(int,androidx.preference.PreferenceGroup):0:0 -> e
    6:6:androidx.preference.PreferenceScreen inflateFromResource(android.content.Context,int,androidx.preference.PreferenceScreen):0 -> e
    1:1:void setDefaultValues(android.content.Context,java.lang.String,int,int,boolean):0:0 -> f
    1:1:void setDefaultValues(android.content.Context,int,boolean):0 -> f
    2:2:void setSharedPreferencesName(java.lang.String):0:0 -> f
    2:2:void setDefaultValues(android.content.Context,java.lang.String,int,int,boolean):0 -> f
    2:2:void setDefaultValues(android.content.Context,int,boolean):0 -> f
    3:3:void setSharedPreferencesMode(int):0:0 -> f
    3:3:void setDefaultValues(android.content.Context,java.lang.String,int,int,boolean):0 -> f
    3:3:void setDefaultValues(android.content.Context,int,boolean):0 -> f
    4:4:void setDefaultValues(android.content.Context,java.lang.String,int,int,boolean):0:0 -> f
    4:4:void setDefaultValues(android.content.Context,int,boolean):0 -> f
androidx.preference.PreferenceManager$OnDisplayPreferenceDialogListener -> a.k.j$a:
androidx.preference.PreferenceManager$OnNavigateToScreenListener -> a.k.j$b:
androidx.preference.PreferenceManager$OnPreferenceTreeClickListener -> a.k.j$c:
androidx.preference.PreferenceRecyclerViewAccessibilityDelegate -> a.k.k:
    androidx.recyclerview.widget.RecyclerView mRecyclerView -> f
    androidx.core.view.AccessibilityDelegateCompat mItemDelegate -> h
    androidx.core.view.AccessibilityDelegateCompat mDefaultItemDelegate -> g
    1:1:androidx.core.view.AccessibilityDelegateCompat androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate.getItemDelegate():0:0 -> <init>
    1:1:void <init>(androidx.recyclerview.widget.RecyclerView):0 -> <init>
    2:2:void <init>(androidx.recyclerview.widget.RecyclerView):0:0 -> <init>
    androidx.core.view.AccessibilityDelegateCompat getItemDelegate() -> j
androidx.preference.PreferenceRecyclerViewAccessibilityDelegate$1 -> a.k.k$a:
    androidx.preference.PreferenceRecyclerViewAccessibilityDelegate this$0 -> d
    1:1:int androidx.recyclerview.widget.RecyclerView.getChildAdapterPosition(android.view.View):0:0 -> d
    1:1:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0 -> d
    2:2:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0:0 -> d
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> g
androidx.preference.PreferenceScreen -> androidx.preference.PreferenceScreen:
    boolean mShouldUseGeneratedIds -> S
    1:1:void androidx.preference.PreferenceGroup.<init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet):0:0 -> <init>
    boolean isOnSameScreenAsChildren() -> J
    1:1:android.content.Intent androidx.preference.Preference.getIntent():0:0 -> q
    1:1:void onClick():0 -> q
    2:2:java.lang.String androidx.preference.Preference.getFragment():0:0 -> q
    2:2:void onClick():0 -> q
    3:3:void onClick():0:0 -> q
    4:4:androidx.preference.PreferenceManager androidx.preference.Preference.getPreferenceManager():0:0 -> q
    4:4:void onClick():0 -> q
    5:5:androidx.preference.PreferenceManager$OnNavigateToScreenListener androidx.preference.PreferenceManager.getOnNavigateToScreenListener():0:0 -> q
    5:5:void onClick():0 -> q
    6:6:void onClick():0:0 -> q
androidx.preference.PreferenceViewHolder -> a.k.l:
    android.util.SparseArray mCachedViews -> a
    boolean mDividerAllowedAbove -> b
    boolean mDividerAllowedBelow -> c
    android.view.View findViewById(int) -> a
androidx.preference.R$style -> a.k.m:
    long androidx.tracing.Trace.sTraceTagApp -> a
    java.lang.reflect.Method androidx.tracing.Trace.sIsTagEnabledMethod -> b
    int androidx.recyclerview.widget.ScrollbarHelper.computeScrollExtent(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.OrientationHelper,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$LayoutManager,boolean) -> a
    int androidx.recyclerview.widget.ScrollbarHelper.computeScrollOffset(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.OrientationHelper,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$LayoutManager,boolean,boolean) -> b
    int androidx.recyclerview.widget.ScrollbarHelper.computeScrollRange(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.OrientationHelper,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$LayoutManager,boolean) -> c
    1:1:boolean androidx.tracing.Trace.isEnabledFallback():0:0 -> d
    1:1:boolean androidx.tracing.Trace.isEnabled():0 -> d
    2:2:void androidx.tracing.Trace.handleException(java.lang.String,java.lang.Exception):0:0 -> d
    2:2:boolean androidx.tracing.Trace.isEnabledFallback():0 -> d
    2:2:boolean androidx.tracing.Trace.isEnabled():0 -> d
androidx.preference.R$styleable -> a.k.n:
    int[] BackgroundStyle -> a
    int[] MultiSelectListPreference -> f
    int[] Preference -> g
    int[] PreferenceFragmentCompat -> h
    int[] PreferenceGroup -> i
    int[] CheckBoxPreference -> b
    int[] DialogPreference -> c
    int[] EditTextPreference -> d
    int[] ListPreference -> e
    int[] PreferenceImageView -> j
    int[] SeekBarPreference -> k
    int[] SwitchPreference -> l
    int[] SwitchPreferenceCompat -> m
androidx.preference.SeekBarPreference -> androidx.preference.SeekBarPreference:
    int mMin -> N
    int mMax -> O
    int mSeekBarValue -> M
    android.widget.TextView mSeekBarValueTextView -> S
    boolean mShowSeekBarValue -> U
    boolean mUpdatesContinuously -> V
    android.view.View$OnKeyListener mSeekBarKeyListener -> X
    boolean mTrackingTouch -> Q
    android.widget.SeekBar$OnSeekBarChangeListener mSeekBarChangeListener -> W
    int mSeekBarIncrement -> P
    android.widget.SeekBar mSeekBar -> R
    boolean mAdjustable -> T
    1:1:void <init>(android.content.Context,android.util.AttributeSet,int,int):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    2:2:void setMax(int):0:0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet,int,int):0:0 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    4:4:void setSeekBarIncrement(int):0:0 -> <init>
    4:4:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    4:4:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    4:4:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    5:5:void <init>(android.content.Context,android.util.AttributeSet,int,int):0:0 -> <init>
    5:5:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    5:5:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    1:1:boolean androidx.preference.Preference.persistInt(int):0:0 -> G
    1:1:void setValueInternal(int,boolean):0 -> G
    2:2:void androidx.preference.Preference.tryCommit(android.content.SharedPreferences$Editor):0:0 -> G
    2:2:boolean androidx.preference.Preference.persistInt(int):0 -> G
    2:2:void setValueInternal(int,boolean):0 -> G
    3:3:boolean androidx.preference.PreferenceManager.shouldCommit():0:0 -> G
    3:3:void androidx.preference.Preference.tryCommit(android.content.SharedPreferences$Editor):0 -> G
    3:3:boolean androidx.preference.Preference.persistInt(int):0 -> G
    3:3:void setValueInternal(int,boolean):0 -> G
    4:4:void androidx.preference.Preference.tryCommit(android.content.SharedPreferences$Editor):0:0 -> G
    4:4:boolean androidx.preference.Preference.persistInt(int):0 -> G
    4:4:void setValueInternal(int,boolean):0 -> G
    5:5:void setValueInternal(int,boolean):0:0 -> G
    void updateLabelValue(int) -> H
    void onBindViewHolder(androidx.preference.PreferenceViewHolder) -> p
    java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int) -> t
    void onRestoreInstanceState(android.os.Parcelable) -> w
    1:1:boolean androidx.preference.Preference.isPersistent():0:0 -> x
    1:1:android.os.Parcelable onSaveInstanceState():0 -> x
    2:2:android.os.Parcelable onSaveInstanceState():0:0 -> x
    1:1:void setValue(int):0:0 -> y
    1:1:void onSetInitialValue(java.lang.Object):0 -> y
androidx.preference.SeekBarPreference$1 -> androidx.preference.SeekBarPreference$a:
    androidx.preference.SeekBarPreference this$0 -> a
    1:1:void androidx.preference.SeekBarPreference.syncValueInternal(android.widget.SeekBar):0:0 -> onProgressChanged
    1:1:void onProgressChanged(android.widget.SeekBar,int,boolean):0 -> onProgressChanged
    2:2:void onProgressChanged(android.widget.SeekBar,int,boolean):0:0 -> onProgressChanged
    1:1:void androidx.preference.SeekBarPreference.syncValueInternal(android.widget.SeekBar):0:0 -> onStopTrackingTouch
    1:1:void onStopTrackingTouch(android.widget.SeekBar):0 -> onStopTrackingTouch
androidx.preference.SeekBarPreference$2 -> androidx.preference.SeekBarPreference$b:
    androidx.preference.SeekBarPreference this$0 -> a
androidx.preference.SeekBarPreference$SavedState -> androidx.preference.SeekBarPreference$c:
    int mMin -> b
    int mMax -> c
    int mSeekBarValue -> a
androidx.preference.SeekBarPreference$SavedState$1 -> androidx.preference.SeekBarPreference$c$a:
    1:1:androidx.preference.SeekBarPreference$SavedState createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    1:1:java.lang.Object createFromParcel(android.os.Parcel):0 -> createFromParcel
    1:1:androidx.preference.SeekBarPreference$SavedState[] newArray(int):0:0 -> newArray
    1:1:java.lang.Object[] newArray(int):0 -> newArray
androidx.preference.SwitchPreference -> androidx.preference.SwitchPreference:
    androidx.preference.SwitchPreference$Listener mListener -> R
    java.lang.CharSequence mSwitchOn -> S
    java.lang.CharSequence mSwitchOff -> T
    1:1:void <init>(android.content.Context,android.util.AttributeSet,int,int):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    2:2:java.lang.String androidx.core.content.res.TypedArrayUtils.getString(android.content.res.TypedArray,int,int):0:0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet,int,int):0:0 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    4:4:java.lang.String androidx.core.content.res.TypedArrayUtils.getString(android.content.res.TypedArray,int,int):0:0 -> <init>
    4:4:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    4:4:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    4:4:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    5:5:void setSwitchTextOn(java.lang.CharSequence):0:0 -> <init>
    5:5:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    5:5:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    5:5:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    6:6:java.lang.String androidx.core.content.res.TypedArrayUtils.getString(android.content.res.TypedArray,int,int):0:0 -> <init>
    6:6:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    6:6:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    6:6:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    7:7:void setSwitchTextOff(java.lang.CharSequence):0:0 -> <init>
    7:7:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    7:7:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    7:7:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    8:8:boolean androidx.core.content.res.TypedArrayUtils.getBoolean(android.content.res.TypedArray,int,int,boolean):0:0 -> <init>
    8:8:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    8:8:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    8:8:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    9:9:void androidx.preference.TwoStatePreference.setDisableDependentsState(boolean):0:0 -> <init>
    9:9:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    9:9:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    9:9:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    10:10:void <init>(android.content.Context,android.util.AttributeSet,int,int):0:0 -> <init>
    10:10:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    10:10:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    1:1:android.content.Context androidx.preference.Preference.getContext():0:0 -> A
    1:1:void syncViewIfAccessibilityEnabled(android.view.View):0 -> A
    1:1:void performClick(android.view.View):0 -> A
    2:2:void syncViewIfAccessibilityEnabled(android.view.View):0:0 -> A
    2:2:void performClick(android.view.View):0 -> A
    void syncSwitchView(android.view.View) -> L
    void onBindViewHolder(androidx.preference.PreferenceViewHolder) -> p
androidx.preference.SwitchPreference$Listener -> androidx.preference.SwitchPreference$a:
    androidx.preference.SwitchPreference this$0 -> a
androidx.preference.SwitchPreferenceCompat -> androidx.preference.SwitchPreferenceCompat:
    java.lang.CharSequence mSwitchOn -> S
    java.lang.CharSequence mSwitchOff -> T
    androidx.preference.SwitchPreferenceCompat$Listener mListener -> R
    1:1:void <init>(android.content.Context,android.util.AttributeSet,int,int):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    2:2:java.lang.String androidx.core.content.res.TypedArrayUtils.getString(android.content.res.TypedArray,int,int):0:0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet,int,int):0:0 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    4:4:java.lang.String androidx.core.content.res.TypedArrayUtils.getString(android.content.res.TypedArray,int,int):0:0 -> <init>
    4:4:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    4:4:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    4:4:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    5:5:void setSwitchTextOn(java.lang.CharSequence):0:0 -> <init>
    5:5:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    5:5:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    5:5:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    6:6:java.lang.String androidx.core.content.res.TypedArrayUtils.getString(android.content.res.TypedArray,int,int):0:0 -> <init>
    6:6:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    6:6:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    6:6:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    7:7:void setSwitchTextOff(java.lang.CharSequence):0:0 -> <init>
    7:7:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    7:7:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    7:7:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    8:8:boolean androidx.core.content.res.TypedArrayUtils.getBoolean(android.content.res.TypedArray,int,int,boolean):0:0 -> <init>
    8:8:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    8:8:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    8:8:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    9:9:void androidx.preference.TwoStatePreference.setDisableDependentsState(boolean):0:0 -> <init>
    9:9:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    9:9:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    9:9:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    10:10:void <init>(android.content.Context,android.util.AttributeSet,int,int):0:0 -> <init>
    10:10:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    10:10:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    1:1:android.content.Context androidx.preference.Preference.getContext():0:0 -> A
    1:1:void syncViewIfAccessibilityEnabled(android.view.View):0 -> A
    1:1:void performClick(android.view.View):0 -> A
    2:2:void syncViewIfAccessibilityEnabled(android.view.View):0:0 -> A
    2:2:void performClick(android.view.View):0 -> A
    void syncSwitchView(android.view.View) -> L
    void onBindViewHolder(androidx.preference.PreferenceViewHolder) -> p
androidx.preference.SwitchPreferenceCompat$Listener -> androidx.preference.SwitchPreferenceCompat$a:
    androidx.preference.SwitchPreferenceCompat this$0 -> a
androidx.preference.TwoStatePreference -> androidx.preference.TwoStatePreference:
    boolean mChecked -> M
    java.lang.CharSequence mSummaryOn -> N
    java.lang.CharSequence mSummaryOff -> O
    boolean mCheckedSet -> P
    boolean mDisableDependentsState -> Q
    1:1:void <init>(android.content.Context,android.util.AttributeSet,int,int):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    boolean shouldDisableDependents() -> E
    1:1:boolean androidx.preference.Preference.persistBoolean(boolean):0:0 -> G
    1:1:void setChecked(boolean):0 -> G
    2:2:void androidx.preference.Preference.tryCommit(android.content.SharedPreferences$Editor):0:0 -> G
    2:2:boolean androidx.preference.Preference.persistBoolean(boolean):0 -> G
    2:2:void setChecked(boolean):0 -> G
    3:3:boolean androidx.preference.PreferenceManager.shouldCommit():0:0 -> G
    3:3:void androidx.preference.Preference.tryCommit(android.content.SharedPreferences$Editor):0 -> G
    3:3:boolean androidx.preference.Preference.persistBoolean(boolean):0 -> G
    3:3:void setChecked(boolean):0 -> G
    4:4:void androidx.preference.Preference.tryCommit(android.content.SharedPreferences$Editor):0:0 -> G
    4:4:boolean androidx.preference.Preference.persistBoolean(boolean):0 -> G
    4:4:void setChecked(boolean):0 -> G
    5:5:void setChecked(boolean):0:0 -> G
    1:1:boolean isChecked():0:0 -> H
    1:1:void setSummaryOff(java.lang.CharSequence):0 -> H
    2:2:void setSummaryOff(java.lang.CharSequence):0:0 -> H
    1:1:boolean isChecked():0:0 -> I
    1:1:void setSummaryOn(java.lang.CharSequence):0 -> I
    2:2:void setSummaryOn(java.lang.CharSequence):0:0 -> I
    void syncSummaryView(android.view.View) -> J
    void syncSummaryView(androidx.preference.PreferenceViewHolder) -> K
    1:1:boolean isChecked():0:0 -> q
    1:1:void onClick():0 -> q
    2:2:void onClick():0:0 -> q
    java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int) -> t
    void onRestoreInstanceState(android.os.Parcelable) -> w
    1:1:boolean androidx.preference.Preference.isPersistent():0:0 -> x
    1:1:android.os.Parcelable onSaveInstanceState():0 -> x
    2:2:android.os.Parcelable onSaveInstanceState():0:0 -> x
    3:3:boolean isChecked():0:0 -> x
    3:3:android.os.Parcelable onSaveInstanceState():0 -> x
    4:4:android.os.Parcelable onSaveInstanceState():0:0 -> x
    void onSetInitialValue(java.lang.Object) -> y
androidx.preference.TwoStatePreference$SavedState -> androidx.preference.TwoStatePreference$a:
    boolean mChecked -> a
androidx.preference.TwoStatePreference$SavedState$1 -> androidx.preference.TwoStatePreference$a$a:
    1:1:androidx.preference.TwoStatePreference$SavedState createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    1:1:java.lang.Object createFromParcel(android.os.Parcel):0 -> createFromParcel
    1:1:androidx.preference.TwoStatePreference$SavedState[] newArray(int):0:0 -> newArray
    1:1:java.lang.Object[] newArray(int):0 -> newArray
androidx.preference.internal.PreferenceImageView -> androidx.preference.internal.PreferenceImageView:
    int mMaxHeight -> b
    int mMaxWidth -> a
    1:1:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
androidx.recyclerview.R$styleable -> a.l.a:
    int[] RecyclerView -> a
androidx.recyclerview.widget.AdapterHelper -> a.l.b.a:
    androidx.recyclerview.widget.AdapterHelper$Callback mCallback -> d
    int mExistingUpdateTypes -> f
    androidx.core.util.Pools$Pool mUpdateOpPool -> a
    java.util.ArrayList mPostponedList -> c
    java.util.ArrayList mPendingUpdates -> b
    androidx.recyclerview.widget.OpReorderer mOpReorderer -> e
    1:1:void <init>(androidx.recyclerview.widget.AdapterHelper$Callback,boolean):0:0 -> <init>
    1:1:void <init>(androidx.recyclerview.widget.AdapterHelper$Callback):0 -> <init>
    boolean canFindInPreLayout(int) -> a
    1:1:void androidx.recyclerview.widget.RecyclerView$6.onDispatchSecondPass(androidx.recyclerview.widget.AdapterHelper$UpdateOp):0:0 -> b
    1:1:void consumePostponedUpdates():0 -> b
    2:2:void consumePostponedUpdates():0:0 -> b
    1:1:void androidx.recyclerview.widget.RecyclerView$6.onDispatchSecondPass(androidx.recyclerview.widget.AdapterHelper$UpdateOp):0:0 -> c
    1:1:void consumeUpdatesInOnePass():0 -> c
    2:2:void consumeUpdatesInOnePass():0:0 -> c
    3:3:void androidx.recyclerview.widget.RecyclerView$6.onDispatchSecondPass(androidx.recyclerview.widget.AdapterHelper$UpdateOp):0:0 -> c
    3:3:void consumeUpdatesInOnePass():0 -> c
    4:4:void consumeUpdatesInOnePass():0:0 -> c
    5:5:void androidx.recyclerview.widget.RecyclerView$6.onDispatchSecondPass(androidx.recyclerview.widget.AdapterHelper$UpdateOp):0:0 -> c
    5:5:void consumeUpdatesInOnePass():0 -> c
    6:6:void consumeUpdatesInOnePass():0:0 -> c
    7:7:void androidx.recyclerview.widget.RecyclerView$6.offsetPositionsForRemovingInvisible(int,int):0:0 -> c
    7:7:void consumeUpdatesInOnePass():0 -> c
    8:8:void consumeUpdatesInOnePass():0:0 -> c
    9:9:void androidx.recyclerview.widget.RecyclerView$6.onDispatchSecondPass(androidx.recyclerview.widget.AdapterHelper$UpdateOp):0:0 -> c
    9:9:void consumeUpdatesInOnePass():0 -> c
    10:10:void consumeUpdatesInOnePass():0:0 -> c
    1:1:void recycleUpdateOp(androidx.recyclerview.widget.AdapterHelper$UpdateOp):0:0 -> d
    1:1:void dispatchAndUpdateViewHolders(androidx.recyclerview.widget.AdapterHelper$UpdateOp):0 -> d
    2:2:void dispatchAndUpdateViewHolders(androidx.recyclerview.widget.AdapterHelper$UpdateOp):0:0 -> d
    3:3:void recycleUpdateOp(androidx.recyclerview.widget.AdapterHelper$UpdateOp):0:0 -> d
    3:3:void dispatchAndUpdateViewHolders(androidx.recyclerview.widget.AdapterHelper$UpdateOp):0 -> d
    4:4:void dispatchAndUpdateViewHolders(androidx.recyclerview.widget.AdapterHelper$UpdateOp):0:0 -> d
    5:5:void recycleUpdateOp(androidx.recyclerview.widget.AdapterHelper$UpdateOp):0:0 -> d
    5:5:void dispatchAndUpdateViewHolders(androidx.recyclerview.widget.AdapterHelper$UpdateOp):0 -> d
    6:6:void dispatchAndUpdateViewHolders(androidx.recyclerview.widget.AdapterHelper$UpdateOp):0:0 -> d
    1:1:void androidx.recyclerview.widget.RecyclerView$6.onDispatchFirstPass(androidx.recyclerview.widget.AdapterHelper$UpdateOp):0:0 -> e
    1:1:void dispatchFirstPassAndUpdateViewHolders(androidx.recyclerview.widget.AdapterHelper$UpdateOp,int):0 -> e
    2:2:void dispatchFirstPassAndUpdateViewHolders(androidx.recyclerview.widget.AdapterHelper$UpdateOp,int):0:0 -> e
    3:3:void androidx.recyclerview.widget.RecyclerView$6.offsetPositionsForRemovingInvisible(int,int):0:0 -> e
    3:3:void dispatchFirstPassAndUpdateViewHolders(androidx.recyclerview.widget.AdapterHelper$UpdateOp,int):0 -> e
    int findPositionOffset(int,int) -> f
    boolean hasPendingUpdates() -> g
    androidx.recyclerview.widget.AdapterHelper$UpdateOp obtainUpdateOp(int,int,int,java.lang.Object) -> h
    1:1:void androidx.recyclerview.widget.RecyclerView$6.offsetPositionsForRemovingLaidOutOrNewView(int,int):0:0 -> i
    1:1:void postponeAndUpdateViewHolders(androidx.recyclerview.widget.AdapterHelper$UpdateOp):0 -> i
    2:2:void postponeAndUpdateViewHolders(androidx.recyclerview.widget.AdapterHelper$UpdateOp):0:0 -> i
    1:1:void androidx.recyclerview.widget.OpReorderer.reorderOps(java.util.List):0:0 -> j
    1:1:void preProcess():0 -> j
    2:2:int androidx.recyclerview.widget.OpReorderer.getLastMoveOutOfOrder(java.util.List):0:0 -> j
    2:2:void androidx.recyclerview.widget.OpReorderer.reorderOps(java.util.List):0 -> j
    2:2:void preProcess():0 -> j
    3:3:void androidx.recyclerview.widget.OpReorderer.swapMoveOp(java.util.List,int,int):0:0 -> j
    3:3:void androidx.recyclerview.widget.OpReorderer.reorderOps(java.util.List):0 -> j
    3:3:void preProcess():0 -> j
    4:4:void androidx.recyclerview.widget.OpReorderer.swapMoveUpdate(java.util.List,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp):0:0 -> j
    4:4:void androidx.recyclerview.widget.OpReorderer.swapMoveOp(java.util.List,int,int):0 -> j
    4:4:void androidx.recyclerview.widget.OpReorderer.reorderOps(java.util.List):0 -> j
    4:4:void preProcess():0 -> j
    5:5:void recycleUpdateOp(androidx.recyclerview.widget.AdapterHelper$UpdateOp):0:0 -> j
    5:5:void androidx.recyclerview.widget.OpReorderer.swapMoveUpdate(java.util.List,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp):0 -> j
    5:5:void androidx.recyclerview.widget.OpReorderer.swapMoveOp(java.util.List,int,int):0 -> j
    5:5:void androidx.recyclerview.widget.OpReorderer.reorderOps(java.util.List):0 -> j
    5:5:void preProcess():0 -> j
    6:6:void androidx.recyclerview.widget.OpReorderer.swapMoveUpdate(java.util.List,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp):0:0 -> j
    6:6:void androidx.recyclerview.widget.OpReorderer.swapMoveOp(java.util.List,int,int):0 -> j
    6:6:void androidx.recyclerview.widget.OpReorderer.reorderOps(java.util.List):0 -> j
    6:6:void preProcess():0 -> j
    7:7:void androidx.recyclerview.widget.OpReorderer.swapMoveRemove(java.util.List,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp):0:0 -> j
    7:7:void androidx.recyclerview.widget.OpReorderer.swapMoveOp(java.util.List,int,int):0 -> j
    7:7:void androidx.recyclerview.widget.OpReorderer.reorderOps(java.util.List):0 -> j
    7:7:void preProcess():0 -> j
    8:8:void recycleUpdateOp(androidx.recyclerview.widget.AdapterHelper$UpdateOp):0:0 -> j
    8:8:void androidx.recyclerview.widget.OpReorderer.swapMoveRemove(java.util.List,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp):0 -> j
    8:8:void androidx.recyclerview.widget.OpReorderer.swapMoveOp(java.util.List,int,int):0 -> j
    8:8:void androidx.recyclerview.widget.OpReorderer.reorderOps(java.util.List):0 -> j
    8:8:void preProcess():0 -> j
    9:9:void androidx.recyclerview.widget.OpReorderer.swapMoveRemove(java.util.List,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp):0:0 -> j
    9:9:void androidx.recyclerview.widget.OpReorderer.swapMoveOp(java.util.List,int,int):0 -> j
    9:9:void androidx.recyclerview.widget.OpReorderer.reorderOps(java.util.List):0 -> j
    9:9:void preProcess():0 -> j
    10:10:void recycleUpdateOp(androidx.recyclerview.widget.AdapterHelper$UpdateOp):0:0 -> j
    10:10:void androidx.recyclerview.widget.OpReorderer.swapMoveRemove(java.util.List,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp):0 -> j
    10:10:void androidx.recyclerview.widget.OpReorderer.swapMoveOp(java.util.List,int,int):0 -> j
    10:10:void androidx.recyclerview.widget.OpReorderer.reorderOps(java.util.List):0 -> j
    10:10:void preProcess():0 -> j
    11:11:void androidx.recyclerview.widget.OpReorderer.swapMoveRemove(java.util.List,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp):0:0 -> j
    11:11:void androidx.recyclerview.widget.OpReorderer.swapMoveOp(java.util.List,int,int):0 -> j
    11:11:void androidx.recyclerview.widget.OpReorderer.reorderOps(java.util.List):0 -> j
    11:11:void preProcess():0 -> j
    12:12:void androidx.recyclerview.widget.OpReorderer.swapMoveAdd(java.util.List,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp):0:0 -> j
    12:12:void androidx.recyclerview.widget.OpReorderer.swapMoveOp(java.util.List,int,int):0 -> j
    12:12:void androidx.recyclerview.widget.OpReorderer.reorderOps(java.util.List):0 -> j
    12:12:void preProcess():0 -> j
    13:13:void preProcess():0:0 -> j
    14:14:void applyMove(androidx.recyclerview.widget.AdapterHelper$UpdateOp):0:0 -> j
    14:14:void preProcess():0 -> j
    15:15:void applyUpdate(androidx.recyclerview.widget.AdapterHelper$UpdateOp):0:0 -> j
    15:15:void preProcess():0 -> j
    16:16:void recycleUpdateOp(androidx.recyclerview.widget.AdapterHelper$UpdateOp):0:0 -> j
    16:16:void applyUpdate(androidx.recyclerview.widget.AdapterHelper$UpdateOp):0 -> j
    16:16:void preProcess():0 -> j
    17:17:void applyUpdate(androidx.recyclerview.widget.AdapterHelper$UpdateOp):0:0 -> j
    17:17:void preProcess():0 -> j
    18:18:void applyRemove(androidx.recyclerview.widget.AdapterHelper$UpdateOp):0:0 -> j
    18:18:void preProcess():0 -> j
    19:19:void recycleUpdateOp(androidx.recyclerview.widget.AdapterHelper$UpdateOp):0:0 -> j
    19:19:void applyRemove(androidx.recyclerview.widget.AdapterHelper$UpdateOp):0 -> j
    19:19:void preProcess():0 -> j
    20:20:void applyRemove(androidx.recyclerview.widget.AdapterHelper$UpdateOp):0:0 -> j
    20:20:void preProcess():0 -> j
    21:21:void applyAdd(androidx.recyclerview.widget.AdapterHelper$UpdateOp):0:0 -> j
    21:21:void preProcess():0 -> j
    22:22:void preProcess():0:0 -> j
    void recycleUpdateOp(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> k
    void recycleUpdateOpsAndClearList(java.util.List) -> l
    1:1:void recycleUpdateOp(androidx.recyclerview.widget.AdapterHelper$UpdateOp):0:0 -> m
    1:1:int updatePositionWithPostponed(int,int):0 -> m
    2:2:int updatePositionWithPostponed(int,int):0:0 -> m
androidx.recyclerview.widget.AdapterHelper$Callback -> a.l.b.a$a:
androidx.recyclerview.widget.AdapterHelper$UpdateOp -> a.l.b.a$b:
    java.lang.Object payload -> c
    int itemCount -> d
    int positionStart -> b
    int cmd -> a
    1:1:java.lang.String cmdToString():0:0 -> toString
    1:1:java.lang.String toString():0 -> toString
    2:2:java.lang.String toString():0:0 -> toString
androidx.recyclerview.widget.ChildHelper -> a.l.b.b:
    androidx.recyclerview.widget.ChildHelper$Bucket mBucket -> b
    java.util.List mHiddenViews -> c
    androidx.recyclerview.widget.ChildHelper$Callback mCallback -> a
    1:1:void androidx.recyclerview.widget.RecyclerView$5.addView(android.view.View,int):0:0 -> a
    1:1:void addView(android.view.View,int,boolean):0 -> a
    2:2:void androidx.recyclerview.widget.RecyclerView.dispatchChildAttached(android.view.View):0:0 -> a
    2:2:void androidx.recyclerview.widget.RecyclerView$5.addView(android.view.View,int):0 -> a
    2:2:void addView(android.view.View,int,boolean):0 -> a
    1:1:void androidx.recyclerview.widget.RecyclerView$5.attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams):0:0 -> b
    1:1:void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams,boolean):0 -> b
    1:1:android.view.View androidx.recyclerview.widget.RecyclerView$5.getChildAt(int):0:0 -> c
    1:1:void androidx.recyclerview.widget.RecyclerView$5.detachViewFromParent(int):0 -> c
    1:1:void detachViewFromParent(int):0 -> c
    2:2:void androidx.recyclerview.widget.RecyclerView$5.detachViewFromParent(int):0:0 -> c
    2:2:void detachViewFromParent(int):0 -> c
    android.view.View getChildAt(int) -> d
    int getChildCount() -> e
    int getOffset(int) -> f
    1:1:android.view.View androidx.recyclerview.widget.RecyclerView$5.getChildAt(int):0:0 -> g
    1:1:android.view.View getUnfilteredChildAt(int):0 -> g
    int getUnfilteredChildCount() -> h
    1:1:void androidx.recyclerview.widget.RecyclerView$5.onEnteredHiddenState(android.view.View):0:0 -> i
    1:1:void hideViewInternal(android.view.View):0 -> i
    1:1:int androidx.recyclerview.widget.RecyclerView$5.indexOfChild(android.view.View):0:0 -> j
    1:1:int indexOfChild(android.view.View):0 -> j
    2:2:int indexOfChild(android.view.View):0:0 -> j
    boolean isHidden(android.view.View) -> k
    void removeViewAt(int) -> l
    1:1:void androidx.recyclerview.widget.RecyclerView$5.onLeftHiddenState(android.view.View):0:0 -> m
    1:1:boolean unhideViewInternal(android.view.View):0 -> m
androidx.recyclerview.widget.ChildHelper$Bucket -> a.l.b.b$a:
    androidx.recyclerview.widget.ChildHelper$Bucket mNext -> b
    long mData -> a
    void clear(int) -> a
    int countOnesBefore(int) -> b
    void ensureNext() -> c
    boolean get(int) -> d
    void insert(int,boolean) -> e
    boolean remove(int) -> f
    void reset() -> g
    void set(int) -> h
androidx.recyclerview.widget.ChildHelper$Callback -> a.l.b.b$b:
androidx.recyclerview.widget.DefaultItemAnimator -> a.l.b.k:
    java.util.ArrayList mAddAnimations -> o
    java.util.ArrayList mChangesList -> n
    java.util.ArrayList mMovesList -> m
    java.util.ArrayList mAdditionsList -> l
    java.util.ArrayList mPendingChanges -> k
    android.animation.TimeInterpolator sDefaultInterpolator -> s
    java.util.ArrayList mPendingMoves -> j
    java.util.ArrayList mPendingAdditions -> i
    java.util.ArrayList mPendingRemovals -> h
    java.util.ArrayList mChangeAnimations -> r
    java.util.ArrayList mRemoveAnimations -> q
    java.util.ArrayList mMoveAnimations -> p
    1:1:void androidx.recyclerview.widget.SimpleItemAnimator.dispatchMoveFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder):0:0 -> e
    1:1:void endAnimation(androidx.recyclerview.widget.RecyclerView$ViewHolder):0 -> e
    2:2:void endAnimation(androidx.recyclerview.widget.RecyclerView$ViewHolder):0:0 -> e
    3:3:void androidx.recyclerview.widget.SimpleItemAnimator.dispatchRemoveFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder):0:0 -> e
    3:3:void endAnimation(androidx.recyclerview.widget.RecyclerView$ViewHolder):0 -> e
    4:4:void endAnimation(androidx.recyclerview.widget.RecyclerView$ViewHolder):0:0 -> e
    5:5:void androidx.recyclerview.widget.SimpleItemAnimator.dispatchAddFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder):0:0 -> e
    5:5:void endAnimation(androidx.recyclerview.widget.RecyclerView$ViewHolder):0 -> e
    6:6:void endAnimation(androidx.recyclerview.widget.RecyclerView$ViewHolder):0:0 -> e
    7:7:void androidx.recyclerview.widget.SimpleItemAnimator.dispatchMoveFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder):0:0 -> e
    7:7:void endAnimation(androidx.recyclerview.widget.RecyclerView$ViewHolder):0 -> e
    8:8:void endAnimation(androidx.recyclerview.widget.RecyclerView$ViewHolder):0:0 -> e
    9:9:void androidx.recyclerview.widget.SimpleItemAnimator.dispatchAddFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder):0:0 -> e
    9:9:void endAnimation(androidx.recyclerview.widget.RecyclerView$ViewHolder):0 -> e
    10:10:void endAnimation(androidx.recyclerview.widget.RecyclerView$ViewHolder):0:0 -> e
    1:1:void androidx.recyclerview.widget.SimpleItemAnimator.dispatchMoveFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder):0:0 -> f
    1:1:void endAnimations():0 -> f
    2:2:void endAnimations():0:0 -> f
    3:3:void androidx.recyclerview.widget.SimpleItemAnimator.dispatchRemoveFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder):0:0 -> f
    3:3:void endAnimations():0 -> f
    4:4:void endAnimations():0:0 -> f
    5:5:void androidx.recyclerview.widget.SimpleItemAnimator.dispatchAddFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder):0:0 -> f
    5:5:void endAnimations():0 -> f
    6:6:void endAnimations():0:0 -> f
    7:7:void endChangeAnimationIfNecessary(androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo):0:0 -> f
    7:7:void endAnimations():0 -> f
    8:8:void endAnimations():0:0 -> f
    9:9:void androidx.recyclerview.widget.SimpleItemAnimator.dispatchMoveFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder):0:0 -> f
    9:9:void endAnimations():0 -> f
    10:10:void endAnimations():0:0 -> f
    11:11:void androidx.recyclerview.widget.SimpleItemAnimator.dispatchAddFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder):0:0 -> f
    11:11:void endAnimations():0 -> f
    12:12:void endAnimations():0:0 -> f
    13:13:void endChangeAnimationIfNecessary(androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo):0:0 -> f
    13:13:void endAnimations():0 -> f
    14:14:void endAnimations():0:0 -> f
    boolean isRunning() -> g
    1:1:void androidx.recyclerview.widget.SimpleItemAnimator.dispatchMoveFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder):0:0 -> i
    1:1:boolean animateMove(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int):0 -> i
    2:2:boolean animateMove(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int):0:0 -> i
    void cancelAll(java.util.List) -> j
    void dispatchFinishedWhenDone() -> k
    void endChangeAnimation(java.util.List,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> l
    1:1:void androidx.recyclerview.widget.SimpleItemAnimator.dispatchChangeFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean):0:0 -> m
    1:1:boolean endChangeAnimationIfNecessary(androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo,androidx.recyclerview.widget.RecyclerView$ViewHolder):0 -> m
    void resetAnimation(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> n
androidx.recyclerview.widget.DefaultItemAnimator$1 -> a.l.b.c:
    androidx.recyclerview.widget.DefaultItemAnimator this$0 -> b
    java.util.ArrayList val$moves -> a
    1:1:void androidx.recyclerview.widget.DefaultItemAnimator.animateMoveImpl(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int):0:0 -> run
    1:1:void run():0 -> run
    2:2:long androidx.recyclerview.widget.RecyclerView$ItemAnimator.getMoveDuration():0:0 -> run
    2:2:void androidx.recyclerview.widget.DefaultItemAnimator.animateMoveImpl(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int):0 -> run
    2:2:void run():0 -> run
    3:3:void androidx.recyclerview.widget.DefaultItemAnimator.animateMoveImpl(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int):0:0 -> run
    3:3:void run():0 -> run
    4:4:void run():0:0 -> run
androidx.recyclerview.widget.DefaultItemAnimator$2 -> a.l.b.d:
    androidx.recyclerview.widget.DefaultItemAnimator this$0 -> b
    java.util.ArrayList val$changes -> a
    1:1:void androidx.recyclerview.widget.DefaultItemAnimator.animateChangeImpl(androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo):0:0 -> run
    1:1:void run():0 -> run
    2:2:long androidx.recyclerview.widget.RecyclerView$ItemAnimator.getChangeDuration():0:0 -> run
    2:2:void androidx.recyclerview.widget.DefaultItemAnimator.animateChangeImpl(androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo):0 -> run
    2:2:void run():0 -> run
    3:3:void androidx.recyclerview.widget.DefaultItemAnimator.animateChangeImpl(androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo):0:0 -> run
    3:3:void run():0 -> run
    4:4:long androidx.recyclerview.widget.RecyclerView$ItemAnimator.getChangeDuration():0:0 -> run
    4:4:void androidx.recyclerview.widget.DefaultItemAnimator.animateChangeImpl(androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo):0 -> run
    4:4:void run():0 -> run
    5:5:void androidx.recyclerview.widget.DefaultItemAnimator.animateChangeImpl(androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo):0:0 -> run
    5:5:void run():0 -> run
    6:6:void run():0:0 -> run
androidx.recyclerview.widget.DefaultItemAnimator$3 -> a.l.b.e:
    androidx.recyclerview.widget.DefaultItemAnimator this$0 -> b
    java.util.ArrayList val$additions -> a
    1:1:void androidx.recyclerview.widget.DefaultItemAnimator.animateAddImpl(androidx.recyclerview.widget.RecyclerView$ViewHolder):0:0 -> run
    1:1:void run():0 -> run
    2:2:long androidx.recyclerview.widget.RecyclerView$ItemAnimator.getAddDuration():0:0 -> run
    2:2:void androidx.recyclerview.widget.DefaultItemAnimator.animateAddImpl(androidx.recyclerview.widget.RecyclerView$ViewHolder):0 -> run
    2:2:void run():0 -> run
    3:3:void androidx.recyclerview.widget.DefaultItemAnimator.animateAddImpl(androidx.recyclerview.widget.RecyclerView$ViewHolder):0:0 -> run
    3:3:void run():0 -> run
    4:4:void run():0:0 -> run
androidx.recyclerview.widget.DefaultItemAnimator$4 -> a.l.b.f:
    androidx.recyclerview.widget.DefaultItemAnimator this$0 -> d
    androidx.recyclerview.widget.RecyclerView$ViewHolder val$holder -> a
    android.view.ViewPropertyAnimator val$animation -> b
    android.view.View val$view -> c
    1:1:void androidx.recyclerview.widget.SimpleItemAnimator.dispatchRemoveFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder):0:0 -> onAnimationEnd
    1:1:void onAnimationEnd(android.animation.Animator):0 -> onAnimationEnd
    2:2:void onAnimationEnd(android.animation.Animator):0:0 -> onAnimationEnd
    1:1:void androidx.recyclerview.widget.SimpleItemAnimator.dispatchRemoveStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder):0:0 -> onAnimationStart
    1:1:void onAnimationStart(android.animation.Animator):0 -> onAnimationStart
androidx.recyclerview.widget.DefaultItemAnimator$5 -> a.l.b.g:
    androidx.recyclerview.widget.DefaultItemAnimator this$0 -> d
    androidx.recyclerview.widget.RecyclerView$ViewHolder val$holder -> a
    android.view.ViewPropertyAnimator val$animation -> c
    android.view.View val$view -> b
    1:1:void androidx.recyclerview.widget.SimpleItemAnimator.dispatchAddFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder):0:0 -> onAnimationEnd
    1:1:void onAnimationEnd(android.animation.Animator):0 -> onAnimationEnd
    2:2:void onAnimationEnd(android.animation.Animator):0:0 -> onAnimationEnd
    1:1:void androidx.recyclerview.widget.SimpleItemAnimator.dispatchAddStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder):0:0 -> onAnimationStart
    1:1:void onAnimationStart(android.animation.Animator):0 -> onAnimationStart
androidx.recyclerview.widget.DefaultItemAnimator$6 -> a.l.b.h:
    androidx.recyclerview.widget.RecyclerView$ViewHolder val$holder -> a
    android.view.ViewPropertyAnimator val$animation -> e
    androidx.recyclerview.widget.DefaultItemAnimator this$0 -> f
    android.view.View val$view -> c
    int val$deltaY -> d
    int val$deltaX -> b
    1:1:void androidx.recyclerview.widget.SimpleItemAnimator.dispatchMoveFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder):0:0 -> onAnimationEnd
    1:1:void onAnimationEnd(android.animation.Animator):0 -> onAnimationEnd
    2:2:void onAnimationEnd(android.animation.Animator):0:0 -> onAnimationEnd
    1:1:void androidx.recyclerview.widget.SimpleItemAnimator.dispatchMoveStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder):0:0 -> onAnimationStart
    1:1:void onAnimationStart(android.animation.Animator):0 -> onAnimationStart
androidx.recyclerview.widget.DefaultItemAnimator$7 -> a.l.b.i:
    androidx.recyclerview.widget.DefaultItemAnimator this$0 -> d
    androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo val$changeInfo -> a
    android.view.ViewPropertyAnimator val$oldViewAnim -> b
    android.view.View val$view -> c
    1:1:void androidx.recyclerview.widget.SimpleItemAnimator.dispatchChangeFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean):0:0 -> onAnimationEnd
    1:1:void onAnimationEnd(android.animation.Animator):0 -> onAnimationEnd
    2:2:void onAnimationEnd(android.animation.Animator):0:0 -> onAnimationEnd
    1:1:void androidx.recyclerview.widget.SimpleItemAnimator.dispatchChangeStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean):0:0 -> onAnimationStart
    1:1:void onAnimationStart(android.animation.Animator):0 -> onAnimationStart
androidx.recyclerview.widget.DefaultItemAnimator$8 -> a.l.b.j:
    androidx.recyclerview.widget.DefaultItemAnimator this$0 -> d
    androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo val$changeInfo -> a
    android.view.ViewPropertyAnimator val$newViewAnimation -> b
    android.view.View val$newView -> c
    1:1:void androidx.recyclerview.widget.SimpleItemAnimator.dispatchChangeFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean):0:0 -> onAnimationEnd
    1:1:void onAnimationEnd(android.animation.Animator):0 -> onAnimationEnd
    2:2:void onAnimationEnd(android.animation.Animator):0:0 -> onAnimationEnd
    1:1:void androidx.recyclerview.widget.SimpleItemAnimator.dispatchChangeStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean):0:0 -> onAnimationStart
    1:1:void onAnimationStart(android.animation.Animator):0 -> onAnimationStart
androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo -> a.l.b.k$a:
    androidx.recyclerview.widget.RecyclerView$ViewHolder oldHolder -> a
    androidx.recyclerview.widget.RecyclerView$ViewHolder newHolder -> b
    int toY -> f
    int fromY -> d
    int toX -> e
    int fromX -> c
    1:1:void <init>(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder):0:0 -> <init>
    1:1:void <init>(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int):0 -> <init>
    2:2:void <init>(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int):0:0 -> <init>
androidx.recyclerview.widget.DefaultItemAnimator$MoveInfo -> a.l.b.k$b:
    androidx.recyclerview.widget.RecyclerView$ViewHolder holder -> a
    int toX -> d
    int toY -> e
    int fromX -> b
    int fromY -> c
androidx.recyclerview.widget.FastScroller -> a.l.b.l:
    int mHorizontalThumbWidth -> n
    int mVerticalThumbCenterY -> l
    int[] mHorizontalRange -> y
    int mHorizontalTrackHeight -> j
    int mVerticalTrackWidth -> f
    boolean mNeedHorizontalScrollbar -> u
    int mMargin -> b
    androidx.recyclerview.widget.RecyclerView$OnScrollListener mOnScrollListener -> C
    int mAnimationState -> A
    java.lang.Runnable mHideRunnable -> B
    int[] EMPTY_STATE_SET -> E
    int mDragState -> w
    float mVerticalDragY -> m
    int mRecyclerViewWidth -> q
    android.graphics.drawable.Drawable mVerticalTrackDrawable -> d
    int mHorizontalThumbCenterX -> o
    int[] mVerticalRange -> x
    androidx.recyclerview.widget.RecyclerView mRecyclerView -> s
    android.graphics.drawable.Drawable mHorizontalTrackDrawable -> h
    int mVerticalThumbHeight -> k
    android.animation.ValueAnimator mShowHideAnimator -> z
    int mHorizontalThumbHeight -> i
    android.graphics.drawable.StateListDrawable mVerticalThumbDrawable -> c
    int mVerticalThumbWidth -> e
    android.graphics.drawable.StateListDrawable mHorizontalThumbDrawable -> g
    int mScrollbarMinimumRange -> a
    boolean mNeedVerticalScrollbar -> t
    int[] PRESSED_STATE_SET -> D
    int mState -> v
    float mHorizontalDragX -> p
    int mRecyclerViewHeight -> r
    1:1:void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView):0:0 -> <init>
    1:1:void <init>(androidx.recyclerview.widget.RecyclerView,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,int,int,int):0 -> <init>
    2:2:void destroyCallbacks():0:0 -> <init>
    2:2:void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView):0 -> <init>
    2:2:void <init>(androidx.recyclerview.widget.RecyclerView,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,int,int,int):0 -> <init>
    3:3:void androidx.recyclerview.widget.RecyclerView.removeOnItemTouchListener(androidx.recyclerview.widget.RecyclerView$OnItemTouchListener):0:0 -> <init>
    3:3:void destroyCallbacks():0 -> <init>
    3:3:void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView):0 -> <init>
    3:3:void <init>(androidx.recyclerview.widget.RecyclerView,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,int,int,int):0 -> <init>
    4:4:void destroyCallbacks():0:0 -> <init>
    4:4:void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView):0 -> <init>
    4:4:void <init>(androidx.recyclerview.widget.RecyclerView,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,int,int,int):0 -> <init>
    5:5:void androidx.recyclerview.widget.RecyclerView.removeOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener):0:0 -> <init>
    5:5:void destroyCallbacks():0 -> <init>
    5:5:void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView):0 -> <init>
    5:5:void <init>(androidx.recyclerview.widget.RecyclerView,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,int,int,int):0 -> <init>
    6:6:void destroyCallbacks():0:0 -> <init>
    6:6:void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView):0 -> <init>
    6:6:void <init>(androidx.recyclerview.widget.RecyclerView,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,int,int,int):0 -> <init>
    7:7:void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView):0:0 -> <init>
    7:7:void <init>(androidx.recyclerview.widget.RecyclerView,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,int,int,int):0 -> <init>
    8:8:void setupCallbacks():0:0 -> <init>
    8:8:void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView):0 -> <init>
    8:8:void <init>(androidx.recyclerview.widget.RecyclerView,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,int,int,int):0 -> <init>
    9:9:void androidx.recyclerview.widget.RecyclerView.addOnItemTouchListener(androidx.recyclerview.widget.RecyclerView$OnItemTouchListener):0:0 -> <init>
    9:9:void setupCallbacks():0 -> <init>
    9:9:void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView):0 -> <init>
    9:9:void <init>(androidx.recyclerview.widget.RecyclerView,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,int,int,int):0 -> <init>
    10:10:void setupCallbacks():0:0 -> <init>
    10:10:void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView):0 -> <init>
    10:10:void <init>(androidx.recyclerview.widget.RecyclerView,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,int,int,int):0 -> <init>
    void onRequestDisallowInterceptTouchEvent(boolean) -> b
    boolean onInterceptTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent) -> c
    1:1:int[] getHorizontalRange():0:0 -> d
    1:1:void horizontalScrollTo(float):0 -> d
    1:1:void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent):0 -> d
    2:2:void horizontalScrollTo(float):0:0 -> d
    2:2:void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent):0 -> d
    3:3:void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent):0:0 -> d
    4:4:int[] getVerticalRange():0:0 -> d
    4:4:void verticalScrollTo(float):0 -> d
    4:4:void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent):0 -> d
    5:5:void verticalScrollTo(float):0:0 -> d
    5:5:void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent):0 -> d
    1:1:void drawVerticalScrollbar(android.graphics.Canvas):0:0 -> h
    1:1:void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State):0 -> h
    2:2:boolean isLayoutRTL():0:0 -> h
    2:2:void drawVerticalScrollbar(android.graphics.Canvas):0 -> h
    2:2:void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State):0 -> h
    3:3:int androidx.core.view.ViewCompat.getLayoutDirection(android.view.View):0:0 -> h
    3:3:boolean isLayoutRTL():0 -> h
    3:3:void drawVerticalScrollbar(android.graphics.Canvas):0 -> h
    3:3:void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State):0 -> h
    4:4:void drawVerticalScrollbar(android.graphics.Canvas):0:0 -> h
    4:4:void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State):0 -> h
    5:5:void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State):0:0 -> h
    6:6:void drawHorizontalScrollbar(android.graphics.Canvas):0:0 -> h
    6:6:void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State):0 -> h
    7:7:void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State):0:0 -> h
    void cancelHide() -> i
    boolean isPointInsideHorizontalThumb(float,float) -> j
    1:1:boolean isLayoutRTL():0:0 -> k
    1:1:boolean isPointInsideVerticalThumb(float,float):0 -> k
    2:2:int androidx.core.view.ViewCompat.getLayoutDirection(android.view.View):0:0 -> k
    2:2:boolean isLayoutRTL():0 -> k
    2:2:boolean isPointInsideVerticalThumb(float,float):0 -> k
    3:3:boolean isPointInsideVerticalThumb(float,float):0:0 -> k
    int scrollTo(float,float,int[],int,int,int) -> l
    1:1:void requestRedraw():0:0 -> m
    1:1:void setState(int):0 -> m
    2:2:void setState(int):0:0 -> m
    3:3:void resetHideDelay(int):0:0 -> m
    3:3:void setState(int):0 -> m
    4:4:void setState(int):0:0 -> m
    void show() -> n
androidx.recyclerview.widget.FastScroller$1 -> a.l.b.l$a:
    androidx.recyclerview.widget.FastScroller this$0 -> a
    1:1:void androidx.recyclerview.widget.FastScroller.hide(int):0:0 -> run
    1:1:void run():0 -> run
androidx.recyclerview.widget.FastScroller$2 -> a.l.b.l$b:
    androidx.recyclerview.widget.FastScroller this$0 -> a
    1:1:void androidx.recyclerview.widget.FastScroller.updateScrollPosition(int,int):0:0 -> onScrolled
    1:1:void onScrolled(androidx.recyclerview.widget.RecyclerView,int,int):0 -> onScrolled
androidx.recyclerview.widget.FastScroller$AnimatorListener -> a.l.b.l$c:
    androidx.recyclerview.widget.FastScroller this$0 -> b
    boolean mCanceled -> a
    1:1:void androidx.recyclerview.widget.FastScroller.requestRedraw():0:0 -> onAnimationEnd
    1:1:void onAnimationEnd(android.animation.Animator):0 -> onAnimationEnd
androidx.recyclerview.widget.FastScroller$AnimatorUpdater -> a.l.b.l$d:
    androidx.recyclerview.widget.FastScroller this$0 -> a
    1:1:void androidx.recyclerview.widget.FastScroller.requestRedraw():0:0 -> onAnimationUpdate
    1:1:void onAnimationUpdate(android.animation.ValueAnimator):0 -> onAnimationUpdate
androidx.recyclerview.widget.GapWorker -> a.l.b.m:
    java.lang.ThreadLocal sGapWorker -> e
    long mPostTimeNs -> b
    java.util.Comparator sTaskComparator -> f
    long mFrameIntervalNs -> c
    java.util.ArrayList mTasks -> d
    java.util.ArrayList mRecyclerViews -> a
    1:1:void androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl.setPrefetchVector(int,int):0:0 -> a
    1:1:void postFromTraversal(androidx.recyclerview.widget.RecyclerView,int,int):0 -> a
    1:1:void buildTaskList():0:0 -> b
    1:1:void prefetch(long):0 -> b
    2:2:void flushTasksWithDeadline(long):0:0 -> b
    2:2:void prefetch(long):0 -> b
    3:3:void flushTaskWithDeadline(androidx.recyclerview.widget.GapWorker$Task,long):0:0 -> b
    3:3:void flushTasksWithDeadline(long):0 -> b
    3:3:void prefetch(long):0 -> b
    4:4:void prefetchInnerRecyclerViewWithDeadline(androidx.recyclerview.widget.RecyclerView,long):0:0 -> b
    4:4:void flushTaskWithDeadline(androidx.recyclerview.widget.GapWorker$Task,long):0 -> b
    4:4:void flushTasksWithDeadline(long):0 -> b
    4:4:void prefetch(long):0 -> b
    5:5:void androidx.core.os.TraceCompat.beginSection(java.lang.String):0:0 -> b
    5:5:void prefetchInnerRecyclerViewWithDeadline(androidx.recyclerview.widget.RecyclerView,long):0 -> b
    5:5:void flushTaskWithDeadline(androidx.recyclerview.widget.GapWorker$Task,long):0 -> b
    5:5:void flushTasksWithDeadline(long):0 -> b
    5:5:void prefetch(long):0 -> b
    6:6:void prefetchInnerRecyclerViewWithDeadline(androidx.recyclerview.widget.RecyclerView,long):0:0 -> b
    6:6:void flushTaskWithDeadline(androidx.recyclerview.widget.GapWorker$Task,long):0 -> b
    6:6:void flushTasksWithDeadline(long):0 -> b
    6:6:void prefetch(long):0 -> b
    7:7:void androidx.recyclerview.widget.RecyclerView$State.prepareForNestedPrefetch(androidx.recyclerview.widget.RecyclerView$Adapter):0:0 -> b
    7:7:void prefetchInnerRecyclerViewWithDeadline(androidx.recyclerview.widget.RecyclerView,long):0 -> b
    7:7:void flushTaskWithDeadline(androidx.recyclerview.widget.GapWorker$Task,long):0 -> b
    7:7:void flushTasksWithDeadline(long):0 -> b
    7:7:void prefetch(long):0 -> b
    8:8:void prefetchInnerRecyclerViewWithDeadline(androidx.recyclerview.widget.RecyclerView,long):0:0 -> b
    8:8:void flushTaskWithDeadline(androidx.recyclerview.widget.GapWorker$Task,long):0 -> b
    8:8:void flushTasksWithDeadline(long):0 -> b
    8:8:void prefetch(long):0 -> b
    9:9:void androidx.core.os.TraceCompat.endSection():0:0 -> b
    9:9:void prefetchInnerRecyclerViewWithDeadline(androidx.recyclerview.widget.RecyclerView,long):0 -> b
    9:9:void flushTaskWithDeadline(androidx.recyclerview.widget.GapWorker$Task,long):0 -> b
    9:9:void flushTasksWithDeadline(long):0 -> b
    9:9:void prefetch(long):0 -> b
    10:10:void prefetchInnerRecyclerViewWithDeadline(androidx.recyclerview.widget.RecyclerView,long):0:0 -> b
    10:10:void flushTaskWithDeadline(androidx.recyclerview.widget.GapWorker$Task,long):0 -> b
    10:10:void flushTasksWithDeadline(long):0 -> b
    10:10:void prefetch(long):0 -> b
    11:11:void androidx.recyclerview.widget.GapWorker$Task.clear():0:0 -> b
    11:11:void flushTasksWithDeadline(long):0 -> b
    11:11:void prefetch(long):0 -> b
    1:1:boolean isPrefetchPositionAttached(androidx.recyclerview.widget.RecyclerView,int):0:0 -> c
    1:1:androidx.recyclerview.widget.RecyclerView$ViewHolder prefetchPositionWithDeadline(androidx.recyclerview.widget.RecyclerView,int,long):0 -> c
    2:2:androidx.recyclerview.widget.RecyclerView$ViewHolder prefetchPositionWithDeadline(androidx.recyclerview.widget.RecyclerView,int,long):0:0 -> c
    1:1:void androidx.core.os.TraceCompat.beginSection(java.lang.String):0:0 -> run
    1:1:void run():0 -> run
    2:2:void run():0:0 -> run
    3:3:void androidx.core.os.TraceCompat.endSection():0:0 -> run
    3:3:void run():0 -> run
    4:4:void run():0:0 -> run
    5:5:void androidx.core.os.TraceCompat.endSection():0:0 -> run
    5:5:void run():0 -> run
    6:6:void run():0:0 -> run
    7:7:void androidx.core.os.TraceCompat.endSection():0:0 -> run
    7:7:void run():0 -> run
    8:8:void run():0:0 -> run
    9:9:void androidx.core.os.TraceCompat.endSection():0:0 -> run
    9:9:void run():0 -> run
    10:10:void run():0:0 -> run
androidx.recyclerview.widget.GapWorker$1 -> a.l.b.m$a:
    1:1:int compare(androidx.recyclerview.widget.GapWorker$Task,androidx.recyclerview.widget.GapWorker$Task):0:0 -> compare
    1:1:int compare(java.lang.Object,java.lang.Object):0 -> compare
androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl -> a.l.b.m$b:
    int[] mPrefetchArray -> c
    int mCount -> d
    int mPrefetchDy -> b
    int mPrefetchDx -> a
    void addPosition(int,int) -> a
    void collectPrefetchPositionsFromView(androidx.recyclerview.widget.RecyclerView,boolean) -> b
    boolean lastPrefetchIncludedPosition(int) -> c
androidx.recyclerview.widget.GapWorker$Task -> a.l.b.m$c:
    androidx.recyclerview.widget.RecyclerView view -> d
    int position -> e
    boolean immediate -> a
    int viewVelocity -> b
    int distanceToItem -> c
androidx.recyclerview.widget.GridLayoutManager -> androidx.recyclerview.widget.GridLayoutManager:
    1:1:int androidx.recyclerview.widget.GridLayoutManager$LayoutParams.getSpanSize():0:0 -> cachePreLayoutSpanMapping
    1:1:void cachePreLayoutSpanMapping():0 -> cachePreLayoutSpanMapping
    2:2:void cachePreLayoutSpanMapping():0:0 -> cachePreLayoutSpanMapping
    3:3:int androidx.recyclerview.widget.GridLayoutManager$LayoutParams.getSpanIndex():0:0 -> cachePreLayoutSpanMapping
    3:3:void cachePreLayoutSpanMapping():0 -> cachePreLayoutSpanMapping
    4:4:void cachePreLayoutSpanMapping():0:0 -> cachePreLayoutSpanMapping
    1:1:int androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup.getCachedSpanGroupIndex(int,int):0:0 -> computeScrollOffsetWithSpanInfo
    1:1:int computeScrollOffsetWithSpanInfo(androidx.recyclerview.widget.RecyclerView$State):0 -> computeScrollOffsetWithSpanInfo
    2:2:int computeScrollOffsetWithSpanInfo(androidx.recyclerview.widget.RecyclerView$State):0:0 -> computeScrollOffsetWithSpanInfo
    3:3:int androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup.getCachedSpanGroupIndex(int,int):0:0 -> computeScrollOffsetWithSpanInfo
    3:3:int computeScrollOffsetWithSpanInfo(androidx.recyclerview.widget.RecyclerView$State):0 -> computeScrollOffsetWithSpanInfo
    4:4:int computeScrollOffsetWithSpanInfo(androidx.recyclerview.widget.RecyclerView$State):0:0 -> computeScrollOffsetWithSpanInfo
    5:5:int androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup.getCachedSpanGroupIndex(int,int):0:0 -> computeScrollOffsetWithSpanInfo
    5:5:int computeScrollOffsetWithSpanInfo(androidx.recyclerview.widget.RecyclerView$State):0 -> computeScrollOffsetWithSpanInfo
    6:6:int computeScrollOffsetWithSpanInfo(androidx.recyclerview.widget.RecyclerView$State):0:0 -> computeScrollOffsetWithSpanInfo
    7:7:int androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup.getCachedSpanGroupIndex(int,int):0:0 -> computeScrollOffsetWithSpanInfo
    7:7:int computeScrollOffsetWithSpanInfo(androidx.recyclerview.widget.RecyclerView$State):0 -> computeScrollOffsetWithSpanInfo
    8:8:int computeScrollOffsetWithSpanInfo(androidx.recyclerview.widget.RecyclerView$State):0:0 -> computeScrollOffsetWithSpanInfo
    9:9:int androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup.getCachedSpanGroupIndex(int,int):0:0 -> computeScrollOffsetWithSpanInfo
    9:9:int computeScrollOffsetWithSpanInfo(androidx.recyclerview.widget.RecyclerView$State):0 -> computeScrollOffsetWithSpanInfo
    10:10:int computeScrollOffsetWithSpanInfo(androidx.recyclerview.widget.RecyclerView$State):0:0 -> computeScrollOffsetWithSpanInfo
    1:1:int androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup.getCachedSpanGroupIndex(int,int):0:0 -> computeScrollRangeWithSpanInfo
    1:1:int computeScrollRangeWithSpanInfo(androidx.recyclerview.widget.RecyclerView$State):0 -> computeScrollRangeWithSpanInfo
    2:2:int computeScrollRangeWithSpanInfo(androidx.recyclerview.widget.RecyclerView$State):0:0 -> computeScrollRangeWithSpanInfo
    3:3:int androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup.getCachedSpanGroupIndex(int,int):0:0 -> computeScrollRangeWithSpanInfo
    3:3:int computeScrollRangeWithSpanInfo(androidx.recyclerview.widget.RecyclerView$State):0 -> computeScrollRangeWithSpanInfo
    4:4:int computeScrollRangeWithSpanInfo(androidx.recyclerview.widget.RecyclerView$State):0:0 -> computeScrollRangeWithSpanInfo
    5:5:int androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup.getCachedSpanGroupIndex(int,int):0:0 -> computeScrollRangeWithSpanInfo
    5:5:int computeScrollRangeWithSpanInfo(androidx.recyclerview.widget.RecyclerView$State):0 -> computeScrollRangeWithSpanInfo
    6:6:int computeScrollRangeWithSpanInfo(androidx.recyclerview.widget.RecyclerView$State):0:0 -> computeScrollRangeWithSpanInfo
    7:7:int androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup.getCachedSpanGroupIndex(int,int):0:0 -> computeScrollRangeWithSpanInfo
    7:7:int computeScrollRangeWithSpanInfo(androidx.recyclerview.widget.RecyclerView$State):0 -> computeScrollRangeWithSpanInfo
    1:1:boolean androidx.recyclerview.widget.RecyclerView$State.isPreLayout():0:0 -> getSpanGroupIndex
    1:1:int getSpanGroupIndex(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int):0 -> getSpanGroupIndex
    2:2:int getSpanGroupIndex(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int):0:0 -> getSpanGroupIndex
    3:3:int androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup.getCachedSpanGroupIndex(int,int):0:0 -> getSpanGroupIndex
    3:3:int getSpanGroupIndex(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int):0 -> getSpanGroupIndex
    4:4:int getSpanGroupIndex(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int):0:0 -> getSpanGroupIndex
    5:5:int androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup.getCachedSpanGroupIndex(int,int):0:0 -> getSpanGroupIndex
    5:5:int getSpanGroupIndex(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int):0 -> getSpanGroupIndex
    1:1:boolean androidx.recyclerview.widget.RecyclerView$State.isPreLayout():0:0 -> getSpanIndex
    1:1:int getSpanIndex(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int):0 -> getSpanIndex
    2:2:int getSpanIndex(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int):0:0 -> getSpanIndex
    3:3:int androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup.getCachedSpanIndex(int,int):0:0 -> getSpanIndex
    3:3:int getSpanIndex(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int):0 -> getSpanIndex
    4:4:int androidx.recyclerview.widget.GridLayoutManager$DefaultSpanSizeLookup.getSpanIndex(int,int):0:0 -> getSpanIndex
    4:4:int androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup.getCachedSpanIndex(int,int):0 -> getSpanIndex
    4:4:int getSpanIndex(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int):0 -> getSpanIndex
    5:5:int getSpanIndex(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int):0:0 -> getSpanIndex
    6:6:int androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup.getCachedSpanIndex(int,int):0:0 -> getSpanIndex
    6:6:int getSpanIndex(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int):0 -> getSpanIndex
    7:7:int androidx.recyclerview.widget.GridLayoutManager$DefaultSpanSizeLookup.getSpanIndex(int,int):0:0 -> getSpanIndex
    7:7:int androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup.getCachedSpanIndex(int,int):0 -> getSpanIndex
    7:7:int getSpanIndex(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int):0 -> getSpanIndex
    1:1:boolean androidx.recyclerview.widget.RecyclerView$State.isPreLayout():0:0 -> getSpanSize
    1:1:int getSpanSize(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int):0 -> getSpanSize
    2:2:int getSpanSize(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int):0:0 -> getSpanSize
    1:1:boolean androidx.recyclerview.widget.RecyclerView$State.isPreLayout():0:0 -> onAnchorReady
    1:1:void onAnchorReady(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo,int):0 -> onAnchorReady
    2:2:void onAnchorReady(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo,int):0:0 -> onAnchorReady
    1:1:int androidx.recyclerview.widget.GridLayoutManager$LayoutParams.getSpanIndex():0:0 -> onInitializeAccessibilityNodeInfoForItem
    1:1:void onInitializeAccessibilityNodeInfoForItem(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0 -> onInitializeAccessibilityNodeInfoForItem
    2:2:int androidx.recyclerview.widget.GridLayoutManager$LayoutParams.getSpanSize():0:0 -> onInitializeAccessibilityNodeInfoForItem
    2:2:void onInitializeAccessibilityNodeInfoForItem(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0 -> onInitializeAccessibilityNodeInfoForItem
    3:3:int androidx.recyclerview.widget.GridLayoutManager$LayoutParams.getSpanIndex():0:0 -> onInitializeAccessibilityNodeInfoForItem
    3:3:void onInitializeAccessibilityNodeInfoForItem(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0 -> onInitializeAccessibilityNodeInfoForItem
    4:4:int androidx.recyclerview.widget.GridLayoutManager$LayoutParams.getSpanSize():0:0 -> onInitializeAccessibilityNodeInfoForItem
    4:4:void onInitializeAccessibilityNodeInfoForItem(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0 -> onInitializeAccessibilityNodeInfoForItem
    5:5:void onInitializeAccessibilityNodeInfoForItem(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0:0 -> onInitializeAccessibilityNodeInfoForItem
    1:1:void androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup.invalidateSpanIndexCache():0:0 -> onItemsAdded
    1:1:void onItemsAdded(androidx.recyclerview.widget.RecyclerView,int,int):0 -> onItemsAdded
    2:2:void onItemsAdded(androidx.recyclerview.widget.RecyclerView,int,int):0:0 -> onItemsAdded
    3:3:void androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup.invalidateSpanGroupIndexCache():0:0 -> onItemsAdded
    3:3:void onItemsAdded(androidx.recyclerview.widget.RecyclerView,int,int):0 -> onItemsAdded
    1:1:void androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup.invalidateSpanIndexCache():0:0 -> onItemsChanged
    1:1:void onItemsChanged(androidx.recyclerview.widget.RecyclerView):0 -> onItemsChanged
    2:2:void onItemsChanged(androidx.recyclerview.widget.RecyclerView):0:0 -> onItemsChanged
    3:3:void androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup.invalidateSpanGroupIndexCache():0:0 -> onItemsChanged
    3:3:void onItemsChanged(androidx.recyclerview.widget.RecyclerView):0 -> onItemsChanged
    1:1:void androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup.invalidateSpanIndexCache():0:0 -> onItemsMoved
    1:1:void onItemsMoved(androidx.recyclerview.widget.RecyclerView,int,int,int):0 -> onItemsMoved
    2:2:void onItemsMoved(androidx.recyclerview.widget.RecyclerView,int,int,int):0:0 -> onItemsMoved
    3:3:void androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup.invalidateSpanGroupIndexCache():0:0 -> onItemsMoved
    3:3:void onItemsMoved(androidx.recyclerview.widget.RecyclerView,int,int,int):0 -> onItemsMoved
    1:1:void androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup.invalidateSpanIndexCache():0:0 -> onItemsRemoved
    1:1:void onItemsRemoved(androidx.recyclerview.widget.RecyclerView,int,int):0 -> onItemsRemoved
    2:2:void onItemsRemoved(androidx.recyclerview.widget.RecyclerView,int,int):0:0 -> onItemsRemoved
    3:3:void androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup.invalidateSpanGroupIndexCache():0:0 -> onItemsRemoved
    3:3:void onItemsRemoved(androidx.recyclerview.widget.RecyclerView,int,int):0 -> onItemsRemoved
    1:1:void androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup.invalidateSpanIndexCache():0:0 -> onItemsUpdated
    1:1:void onItemsUpdated(androidx.recyclerview.widget.RecyclerView,int,int,java.lang.Object):0 -> onItemsUpdated
    2:2:void onItemsUpdated(androidx.recyclerview.widget.RecyclerView,int,int,java.lang.Object):0:0 -> onItemsUpdated
    3:3:void androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup.invalidateSpanGroupIndexCache():0:0 -> onItemsUpdated
    3:3:void onItemsUpdated(androidx.recyclerview.widget.RecyclerView,int,int,java.lang.Object):0 -> onItemsUpdated
    1:1:boolean androidx.recyclerview.widget.RecyclerView$State.isPreLayout():0:0 -> onLayoutChildren
    1:1:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State):0 -> onLayoutChildren
    2:2:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State):0:0 -> onLayoutChildren
    1:1:void androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup.invalidateSpanIndexCache():0:0 -> setSpanCount
    1:1:void setSpanCount(int):0 -> setSpanCount
    2:2:void setSpanCount(int):0:0 -> setSpanCount
androidx.recyclerview.widget.GridLayoutManager$DefaultSpanSizeLookup -> androidx.recyclerview.widget.GridLayoutManager$a:
androidx.recyclerview.widget.GridLayoutManager$LayoutParams -> androidx.recyclerview.widget.GridLayoutManager$b:
    int mSpanSize -> f
    int mSpanIndex -> e
androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup -> androidx.recyclerview.widget.GridLayoutManager$c:
    android.util.SparseIntArray mSpanIndexCache -> a
    android.util.SparseIntArray mSpanGroupIndexCache -> b
    int getSpanGroupIndex(int,int) -> a
androidx.recyclerview.widget.ItemTouchHelper -> a.l.b.n:
    int mActionState -> n
    float mSelectedStartY -> k
    int mActivePointerId -> l
    java.util.List mRecoverAnimations -> p
    float mDy -> i
    java.util.List mDistances -> v
    float mMaxSwipeVelocity -> g
    androidx.recyclerview.widget.RecyclerView mRecyclerView -> r
    androidx.recyclerview.widget.ItemTouchHelper$Callback mCallback -> m
    float mInitialTouchY -> e
    float[] mTmpPosition -> b
    android.graphics.Rect mTmpRect -> B
    androidx.recyclerview.widget.RecyclerView$ViewHolder mSelected -> c
    androidx.recyclerview.widget.ItemTouchHelper$ItemTouchHelperGestureListener mItemTouchHelperGestureListener -> z
    android.view.VelocityTracker mVelocityTracker -> t
    int mSlop -> q
    int mSelectedFlags -> o
    float mSelectedStartX -> j
    java.lang.Runnable mScrollRunnable -> s
    float mDx -> h
    java.util.List mSwapTargets -> u
    float mSwipeEscapeVelocity -> f
    float mInitialTouchX -> d
    long mDragScrollStartTimeInMs -> C
    androidx.core.view.GestureDetectorCompat mGestureDetector -> y
    android.view.View mOverdrawChild -> w
    java.util.List mPendingCleanup -> a
    androidx.recyclerview.widget.RecyclerView$OnItemTouchListener mOnItemTouchListener -> A
    int mOverdrawChildPosition -> x
    void onChildViewDetachedFromWindow(android.view.View) -> a
    void onChildViewAttachedToWindow(android.view.View) -> e
    void getItemOffsets(android.graphics.Rect,android.view.View,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> f
    void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> g
    void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> h
    int checkHorizontalSwipe(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> i
    1:1:androidx.recyclerview.widget.RecyclerView$ViewHolder findSwipedView(android.view.MotionEvent):0:0 -> j
    1:1:void checkSelectForSwipe(int,android.view.MotionEvent,int):0 -> j
    2:2:void checkSelectForSwipe(int,android.view.MotionEvent,int):0:0 -> j
    int checkVerticalSwipe(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> k
    1:1:void androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation.cancel():0:0 -> l
    1:1:void endRecoverAnimation(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean):0 -> l
    2:2:void endRecoverAnimation(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean):0:0 -> l
    1:1:android.view.View androidx.recyclerview.widget.RecyclerView.findChildViewUnder(float,float):0:0 -> m
    1:1:android.view.View findChildView(android.view.MotionEvent):0 -> m
    void getSelectedDxDy(float[]) -> n
    boolean hitTest(android.view.View,float,float,float,float) -> o
    1:1:java.util.List findSwapTargets(androidx.recyclerview.widget.RecyclerView$ViewHolder):0:0 -> p
    1:1:void moveIfNecessary(androidx.recyclerview.widget.RecyclerView$ViewHolder):0 -> p
    2:2:void moveIfNecessary(androidx.recyclerview.widget.RecyclerView$ViewHolder):0:0 -> p
    void removeChildDrawingOrderCallbackIfNecessary(android.view.View) -> q
    1:1:int swipeIfNecessary(androidx.recyclerview.widget.RecyclerView$ViewHolder):0:0 -> r
    1:1:void select(androidx.recyclerview.widget.RecyclerView$ViewHolder,int):0 -> r
    2:2:int androidx.core.view.ViewCompat.getLayoutDirection(android.view.View):0:0 -> r
    2:2:int swipeIfNecessary(androidx.recyclerview.widget.RecyclerView$ViewHolder):0 -> r
    2:2:void select(androidx.recyclerview.widget.RecyclerView$ViewHolder,int):0 -> r
    3:3:int swipeIfNecessary(androidx.recyclerview.widget.RecyclerView$ViewHolder):0:0 -> r
    3:3:void select(androidx.recyclerview.widget.RecyclerView$ViewHolder,int):0 -> r
    4:4:int androidx.core.view.ViewCompat.getLayoutDirection(android.view.View):0:0 -> r
    4:4:int swipeIfNecessary(androidx.recyclerview.widget.RecyclerView$ViewHolder):0 -> r
    4:4:void select(androidx.recyclerview.widget.RecyclerView$ViewHolder,int):0 -> r
    5:5:int swipeIfNecessary(androidx.recyclerview.widget.RecyclerView$ViewHolder):0:0 -> r
    5:5:void select(androidx.recyclerview.widget.RecyclerView$ViewHolder,int):0 -> r
    6:6:void releaseVelocityTracker():0:0 -> r
    6:6:void select(androidx.recyclerview.widget.RecyclerView$ViewHolder,int):0 -> r
    7:7:void select(androidx.recyclerview.widget.RecyclerView$ViewHolder,int):0:0 -> r
    8:8:void androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation.setDuration(long):0:0 -> r
    8:8:void select(androidx.recyclerview.widget.RecyclerView$ViewHolder,int):0 -> r
    9:9:void select(androidx.recyclerview.widget.RecyclerView$ViewHolder,int):0:0 -> r
    10:10:void androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation.start():0:0 -> r
    10:10:void select(androidx.recyclerview.widget.RecyclerView$ViewHolder,int):0 -> r
    11:11:void select(androidx.recyclerview.widget.RecyclerView$ViewHolder,int):0:0 -> r
    void updateDxDy(android.view.MotionEvent,int,int) -> s
androidx.recyclerview.widget.ItemTouchHelper$1 -> a.l.b.n$a:
    androidx.recyclerview.widget.ItemTouchHelper this$0 -> a
    1:1:boolean androidx.recyclerview.widget.ItemTouchHelper.scrollIfNecessary():0:0 -> run
    1:1:void run():0 -> run
    2:2:void run():0:0 -> run
    3:3:void androidx.core.view.ViewCompat.postOnAnimation(android.view.View,java.lang.Runnable):0:0 -> run
    3:3:void run():0 -> run
androidx.recyclerview.widget.ItemTouchHelper$2 -> a.l.b.n$b:
    androidx.recyclerview.widget.ItemTouchHelper this$0 -> a
    void onRequestDisallowInterceptTouchEvent(boolean) -> b
    1:1:boolean androidx.core.view.GestureDetectorCompat.onTouchEvent(android.view.MotionEvent):0:0 -> c
    1:1:boolean onInterceptTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent):0 -> c
    2:2:boolean androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr2.onTouchEvent(android.view.MotionEvent):0:0 -> c
    2:2:boolean androidx.core.view.GestureDetectorCompat.onTouchEvent(android.view.MotionEvent):0 -> c
    2:2:boolean onInterceptTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent):0 -> c
    3:3:boolean onInterceptTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent):0:0 -> c
    4:4:void androidx.recyclerview.widget.ItemTouchHelper.obtainVelocityTracker():0:0 -> c
    4:4:boolean onInterceptTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent):0 -> c
    5:5:boolean onInterceptTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent):0:0 -> c
    6:6:androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation androidx.recyclerview.widget.ItemTouchHelper.findAnimation(android.view.MotionEvent):0:0 -> c
    6:6:boolean onInterceptTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent):0 -> c
    7:7:boolean onInterceptTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent):0:0 -> c
    1:1:boolean androidx.core.view.GestureDetectorCompat.onTouchEvent(android.view.MotionEvent):0:0 -> d
    1:1:void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent):0 -> d
    2:2:boolean androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr2.onTouchEvent(android.view.MotionEvent):0:0 -> d
    2:2:boolean androidx.core.view.GestureDetectorCompat.onTouchEvent(android.view.MotionEvent):0 -> d
    2:2:void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent):0 -> d
    3:3:void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent):0:0 -> d
androidx.recyclerview.widget.ItemTouchHelper$3 -> a.l.b.n$c:
    int val$swipeDir -> n
    androidx.recyclerview.widget.RecyclerView$ViewHolder val$prevSelected -> o
    androidx.recyclerview.widget.ItemTouchHelper this$0 -> p
    1:1:void androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation.onAnimationEnd(android.animation.Animator):0:0 -> onAnimationEnd
    1:1:void onAnimationEnd(android.animation.Animator):0 -> onAnimationEnd
    2:2:void onAnimationEnd(android.animation.Animator):0:0 -> onAnimationEnd
    3:3:void androidx.recyclerview.widget.ItemTouchHelper.postDispatchSwipe(androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation,int):0:0 -> onAnimationEnd
    3:3:void onAnimationEnd(android.animation.Animator):0 -> onAnimationEnd
    4:4:void onAnimationEnd(android.animation.Animator):0:0 -> onAnimationEnd
androidx.recyclerview.widget.ItemTouchHelper$4 -> a.l.b.o:
    androidx.recyclerview.widget.ItemTouchHelper this$0 -> c
    int val$swipeDir -> b
    androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation val$anim -> a
    1:1:boolean androidx.recyclerview.widget.RecyclerView$ItemAnimator.isRunning(androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorFinishedListener):0:0 -> run
    1:1:void run():0 -> run
    2:2:void run():0:0 -> run
    3:3:boolean androidx.recyclerview.widget.ItemTouchHelper.hasRunningRecoverAnim():0:0 -> run
    3:3:void run():0 -> run
    4:4:void run():0:0 -> run
androidx.recyclerview.widget.ItemTouchHelper$Callback -> a.l.b.n$d:
    1:1:void androidx.recyclerview.widget.ItemTouchUIUtilImpl.clearView(android.view.View):0:0 -> clearView
    1:1:void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder):0 -> clearView
    2:2:void androidx.core.view.ViewCompat.setElevation(android.view.View,float):0:0 -> clearView
    2:2:void androidx.recyclerview.widget.ItemTouchUIUtilImpl.clearView(android.view.View):0 -> clearView
    2:2:void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder):0 -> clearView
    3:3:void androidx.recyclerview.widget.ItemTouchUIUtilImpl.clearView(android.view.View):0:0 -> clearView
    3:3:void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder):0 -> clearView
    1:1:int androidx.core.view.ViewCompat.getLayoutDirection(android.view.View):0:0 -> getAbsoluteMovementFlags
    1:1:int getAbsoluteMovementFlags(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder):0 -> getAbsoluteMovementFlags
    2:2:int getAbsoluteMovementFlags(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder):0:0 -> getAbsoluteMovementFlags
    1:1:long androidx.recyclerview.widget.RecyclerView$ItemAnimator.getMoveDuration():0:0 -> getAnimationDuration
    1:1:long getAnimationDuration(androidx.recyclerview.widget.RecyclerView,int,float,float):0 -> getAnimationDuration
    2:2:long androidx.recyclerview.widget.RecyclerView$ItemAnimator.getRemoveDuration():0:0 -> getAnimationDuration
    2:2:long getAnimationDuration(androidx.recyclerview.widget.RecyclerView,int,float,float):0 -> getAnimationDuration
    1:1:void androidx.recyclerview.widget.ItemTouchUIUtilImpl.onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,android.view.View,float,float,int,boolean):0:0 -> onChildDraw
    1:1:void onChildDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder,float,float,int,boolean):0 -> onChildDraw
    2:2:float androidx.core.view.ViewCompat.getElevation(android.view.View):0:0 -> onChildDraw
    2:2:void androidx.recyclerview.widget.ItemTouchUIUtilImpl.onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,android.view.View,float,float,int,boolean):0 -> onChildDraw
    2:2:void onChildDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder,float,float,int,boolean):0 -> onChildDraw
    3:3:void androidx.recyclerview.widget.ItemTouchUIUtilImpl.onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,android.view.View,float,float,int,boolean):0:0 -> onChildDraw
    3:3:void onChildDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder,float,float,int,boolean):0 -> onChildDraw
    4:4:float androidx.recyclerview.widget.ItemTouchUIUtilImpl.findMaxElevation(androidx.recyclerview.widget.RecyclerView,android.view.View):0:0 -> onChildDraw
    4:4:void androidx.recyclerview.widget.ItemTouchUIUtilImpl.onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,android.view.View,float,float,int,boolean):0 -> onChildDraw
    4:4:void onChildDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder,float,float,int,boolean):0 -> onChildDraw
    5:5:float androidx.core.view.ViewCompat.getElevation(android.view.View):0:0 -> onChildDraw
    5:5:float androidx.recyclerview.widget.ItemTouchUIUtilImpl.findMaxElevation(androidx.recyclerview.widget.RecyclerView,android.view.View):0 -> onChildDraw
    5:5:void androidx.recyclerview.widget.ItemTouchUIUtilImpl.onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,android.view.View,float,float,int,boolean):0 -> onChildDraw
    5:5:void onChildDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder,float,float,int,boolean):0 -> onChildDraw
    6:6:void androidx.core.view.ViewCompat.setElevation(android.view.View,float):0:0 -> onChildDraw
    6:6:void androidx.recyclerview.widget.ItemTouchUIUtilImpl.onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,android.view.View,float,float,int,boolean):0 -> onChildDraw
    6:6:void onChildDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder,float,float,int,boolean):0 -> onChildDraw
    7:7:void androidx.recyclerview.widget.ItemTouchUIUtilImpl.onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,android.view.View,float,float,int,boolean):0:0 -> onChildDraw
    7:7:void onChildDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder,float,float,int,boolean):0 -> onChildDraw
    1:1:void androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation.update():0:0 -> onDraw
    1:1:void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder,java.util.List,int,float,float):0 -> onDraw
    2:2:void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder,java.util.List,int,float,float):0:0 -> onDraw
androidx.recyclerview.widget.ItemTouchHelper$Callback$1 -> a.l.b.n$d$a:
androidx.recyclerview.widget.ItemTouchHelper$Callback$2 -> a.l.b.n$d$b:
androidx.recyclerview.widget.ItemTouchHelper$ItemTouchHelperGestureListener -> a.l.b.n$e:
    androidx.recyclerview.widget.ItemTouchHelper this$0 -> b
    boolean mShouldReactToLongPress -> a
androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation -> a.l.b.n$f:
    float mY -> j
    float mX -> i
    boolean mOverridden -> k
    boolean mEnded -> l
    float mTargetY -> d
    int mActionState -> f
    float mTargetX -> c
    float mStartDy -> b
    float mStartDx -> a
    android.animation.ValueAnimator mValueAnimator -> g
    androidx.recyclerview.widget.RecyclerView$ViewHolder mViewHolder -> e
    boolean mIsPendingCleanup -> h
    float mFraction -> m
    1:1:void setFraction(float):0:0 -> <init>
    1:1:void <init>(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,float,float,float,float):0 -> <init>
    1:1:void setFraction(float):0:0 -> onAnimationCancel
    1:1:void onAnimationCancel(android.animation.Animator):0 -> onAnimationCancel
androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation$1 -> a.l.b.n$f$a:
    androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation this$0 -> a
    1:1:void androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation.setFraction(float):0:0 -> onAnimationUpdate
    1:1:void onAnimationUpdate(android.animation.ValueAnimator):0 -> onAnimationUpdate
androidx.recyclerview.widget.ItemTouchHelper$ViewDropHandler -> a.l.b.n$g:
androidx.recyclerview.widget.ItemTouchUIUtil -> a.l.b.p:
androidx.recyclerview.widget.ItemTouchUIUtilImpl -> a.l.b.q:
    androidx.recyclerview.widget.ItemTouchUIUtil INSTANCE -> a
androidx.recyclerview.widget.LayoutState -> a.l.b.r:
    boolean mInfinite -> i
    int mStartLine -> f
    int mEndLine -> g
    int mItemDirection -> d
    int mLayoutDirection -> e
    boolean mStopInFocusable -> h
    boolean mRecycle -> a
    int mAvailable -> b
    int mCurrentPosition -> c
androidx.recyclerview.widget.LinearLayoutManager -> androidx.recyclerview.widget.LinearLayoutManager:
    1:1:void androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult.resetInternal():0:0 -> fill
    1:1:int fill(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.RecyclerView$State,boolean):0 -> fill
    2:2:int fill(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.RecyclerView$State,boolean):0:0 -> fill
    3:3:boolean androidx.recyclerview.widget.RecyclerView$State.isPreLayout():0:0 -> fill
    3:3:int fill(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.RecyclerView$State,boolean):0 -> fill
    4:4:int fill(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.RecyclerView$State,boolean):0:0 -> fill
    1:1:boolean androidx.recyclerview.widget.RecyclerView$State.hasTargetScrollPosition():0:0 -> getExtraLayoutSpace
    1:1:int getExtraLayoutSpace(androidx.recyclerview.widget.RecyclerView$State):0 -> getExtraLayoutSpace
    2:2:int getExtraLayoutSpace(androidx.recyclerview.widget.RecyclerView$State):0:0 -> getExtraLayoutSpace
    1:1:boolean androidx.recyclerview.widget.RecyclerView$State.willRunPredictiveAnimations():0:0 -> layoutForPredictiveAnimations
    1:1:void layoutForPredictiveAnimations(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int):0 -> layoutForPredictiveAnimations
    2:2:void layoutForPredictiveAnimations(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int):0:0 -> layoutForPredictiveAnimations
    3:3:boolean androidx.recyclerview.widget.RecyclerView$State.isPreLayout():0:0 -> layoutForPredictiveAnimations
    3:3:void layoutForPredictiveAnimations(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int):0 -> layoutForPredictiveAnimations
    4:4:void layoutForPredictiveAnimations(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int):0:0 -> layoutForPredictiveAnimations
    5:5:java.util.List androidx.recyclerview.widget.RecyclerView$Recycler.getScrapList():0:0 -> layoutForPredictiveAnimations
    5:5:void layoutForPredictiveAnimations(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int):0 -> layoutForPredictiveAnimations
    6:6:void layoutForPredictiveAnimations(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int):0:0 -> layoutForPredictiveAnimations
    7:7:void androidx.recyclerview.widget.LinearLayoutManager$LayoutState.assignPositionFromScrapList():0:0 -> layoutForPredictiveAnimations
    7:7:void layoutForPredictiveAnimations(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int):0 -> layoutForPredictiveAnimations
    8:8:void layoutForPredictiveAnimations(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int):0:0 -> layoutForPredictiveAnimations
    9:9:void androidx.recyclerview.widget.LinearLayoutManager$LayoutState.assignPositionFromScrapList():0:0 -> layoutForPredictiveAnimations
    9:9:void layoutForPredictiveAnimations(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int):0 -> layoutForPredictiveAnimations
    10:10:void layoutForPredictiveAnimations(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int):0:0 -> layoutForPredictiveAnimations
    1:1:boolean androidx.recyclerview.widget.RecyclerView$State.isPreLayout():0:0 -> onLayoutChildren
    1:1:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State):0 -> onLayoutChildren
    2:2:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State):0:0 -> onLayoutChildren
    3:3:boolean androidx.recyclerview.widget.RecyclerView$State.isPreLayout():0:0 -> onLayoutChildren
    3:3:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State):0 -> onLayoutChildren
    4:4:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State):0:0 -> onLayoutChildren
    5:5:void androidx.recyclerview.widget.OrientationHelper.onLayoutComplete():0:0 -> onLayoutChildren
    5:5:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State):0 -> onLayoutChildren
    6:6:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State):0:0 -> onLayoutChildren
    1:1:void androidx.recyclerview.widget.LinearLayoutManager$SavedState.invalidateAnchor():0:0 -> onRestoreInstanceState
    1:1:void onRestoreInstanceState(android.os.Parcelable):0 -> onRestoreInstanceState
    2:2:void onRestoreInstanceState(android.os.Parcelable):0:0 -> onRestoreInstanceState
    1:1:void androidx.recyclerview.widget.LinearLayoutManager$SavedState.invalidateAnchor():0:0 -> onSaveInstanceState
    1:1:android.os.Parcelable onSaveInstanceState():0 -> onSaveInstanceState
    1:1:void androidx.recyclerview.widget.LinearLayoutManager$SavedState.invalidateAnchor():0:0 -> scrollToPosition
    1:1:void scrollToPosition(int):0 -> scrollToPosition
    2:2:void scrollToPosition(int):0:0 -> scrollToPosition
    1:1:void androidx.recyclerview.widget.LinearLayoutManager$SavedState.invalidateAnchor():0:0 -> scrollToPositionWithOffset
    1:1:void scrollToPositionWithOffset(int,int):0 -> scrollToPositionWithOffset
    2:2:void scrollToPositionWithOffset(int,int):0:0 -> scrollToPositionWithOffset
    1:1:void androidx.recyclerview.widget.RecyclerView$SmoothScroller.setTargetPosition(int):0:0 -> smoothScrollToPosition
    1:1:void smoothScrollToPosition(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State,int):0 -> smoothScrollToPosition
    2:2:void smoothScrollToPosition(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State,int):0:0 -> smoothScrollToPosition
    1:1:boolean androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo.isViewValidAsAnchor(android.view.View,androidx.recyclerview.widget.RecyclerView$State):0:0 -> updateAnchorFromChildren
    1:1:boolean updateAnchorFromChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo):0 -> updateAnchorFromChildren
    2:2:boolean updateAnchorFromChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo):0:0 -> updateAnchorFromChildren
    3:3:boolean androidx.recyclerview.widget.RecyclerView$State.isPreLayout():0:0 -> updateAnchorFromChildren
    3:3:boolean updateAnchorFromChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo):0 -> updateAnchorFromChildren
    4:4:boolean updateAnchorFromChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo):0:0 -> updateAnchorFromChildren
    1:1:boolean androidx.recyclerview.widget.RecyclerView$State.isPreLayout():0:0 -> updateAnchorFromPendingData
    1:1:boolean updateAnchorFromPendingData(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo):0 -> updateAnchorFromPendingData
    2:2:boolean updateAnchorFromPendingData(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo):0:0 -> updateAnchorFromPendingData
androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo -> androidx.recyclerview.widget.LinearLayoutManager$a:
    androidx.recyclerview.widget.OrientationHelper mOrientationHelper -> a
    boolean mValid -> e
    int mPosition -> b
    int mCoordinate -> c
    boolean mLayoutFromEnd -> d
    void assignCoordinateFromPadding() -> a
    void assignFromView(android.view.View,int) -> b
    void assignFromViewAndKeepVisibleRect(android.view.View,int) -> c
    void reset() -> d
androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult -> androidx.recyclerview.widget.LinearLayoutManager$b:
    boolean mFinished -> b
    boolean mIgnoreConsumed -> c
    int mConsumed -> a
    boolean mFocusable -> d
androidx.recyclerview.widget.LinearLayoutManager$LayoutState -> androidx.recyclerview.widget.LinearLayoutManager$c:
    int mLastScrollDelta -> j
    int mExtraFillSpace -> h
    int mNoRecycleSpace -> i
    boolean mInfinite -> l
    int mLayoutDirection -> f
    int mScrollingOffset -> g
    int mCurrentPosition -> d
    int mItemDirection -> e
    boolean mRecycle -> a
    int mOffset -> b
    int mAvailable -> c
    java.util.List mScrapList -> k
    1:1:android.view.View nextViewInLimitedList(android.view.View):0:0 -> a
    1:1:void assignPositionFromScrapList(android.view.View):0 -> a
    2:2:void assignPositionFromScrapList(android.view.View):0:0 -> a
    boolean hasMore(androidx.recyclerview.widget.RecyclerView$State) -> b
    1:1:android.view.View nextViewFromScrapList():0:0 -> c
    1:1:android.view.View next(androidx.recyclerview.widget.RecyclerView$Recycler):0 -> c
    2:2:android.view.View next(androidx.recyclerview.widget.RecyclerView$Recycler):0:0 -> c
    3:3:android.view.View androidx.recyclerview.widget.RecyclerView$Recycler.getViewForPosition(int,boolean):0:0 -> c
    3:3:android.view.View androidx.recyclerview.widget.RecyclerView$Recycler.getViewForPosition(int):0 -> c
    3:3:android.view.View next(androidx.recyclerview.widget.RecyclerView$Recycler):0 -> c
    4:4:android.view.View next(androidx.recyclerview.widget.RecyclerView$Recycler):0:0 -> c
androidx.recyclerview.widget.LinearLayoutManager$SavedState -> androidx.recyclerview.widget.LinearLayoutManager$d:
    int mAnchorOffset -> b
    boolean mAnchorLayoutFromEnd -> c
    int mAnchorPosition -> a
    boolean hasValidAnchor() -> a
androidx.recyclerview.widget.LinearLayoutManager$SavedState$1 -> androidx.recyclerview.widget.LinearLayoutManager$d$a:
    1:1:androidx.recyclerview.widget.LinearLayoutManager$SavedState createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    1:1:java.lang.Object createFromParcel(android.os.Parcel):0 -> createFromParcel
    1:1:androidx.recyclerview.widget.LinearLayoutManager$SavedState[] newArray(int):0:0 -> newArray
    1:1:java.lang.Object[] newArray(int):0 -> newArray
androidx.recyclerview.widget.LinearSmoothScroller -> a.l.b.s:
    boolean mHasCalculatedMillisPerPixel -> m
    android.view.animation.LinearInterpolator mLinearInterpolator -> i
    int mInterimTargetDx -> o
    android.util.DisplayMetrics mDisplayMetrics -> l
    android.view.animation.DecelerateInterpolator mDecelerateInterpolator -> j
    android.graphics.PointF mTargetVector -> k
    float mMillisPerPixel -> n
    int mInterimTargetDy -> p
    int calculateDtToFit(int,int,int,int,int) -> d
    1:1:float getSpeedPerPixel():0:0 -> e
    1:1:int calculateTimeForScrolling(int):0 -> e
    2:2:float calculateSpeedPerPixel(android.util.DisplayMetrics):0:0 -> e
    2:2:float getSpeedPerPixel():0 -> e
    2:2:int calculateTimeForScrolling(int):0 -> e
    3:3:float getSpeedPerPixel():0:0 -> e
    3:3:int calculateTimeForScrolling(int):0 -> e
    4:4:int calculateTimeForScrolling(int):0:0 -> e
androidx.recyclerview.widget.OpReorderer -> a.l.b.t:
    androidx.recyclerview.widget.OpReorderer$Callback mCallback -> a
androidx.recyclerview.widget.OpReorderer$Callback -> a.l.b.t$a:
androidx.recyclerview.widget.OrientationHelper -> a.l.b.w:
    androidx.recyclerview.widget.RecyclerView$LayoutManager mLayoutManager -> a
    int mLastTotalSpace -> b
    android.graphics.Rect mTmpRect -> c
    1:1:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager):0:0 -> <init>
    1:1:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager,androidx.recyclerview.widget.OrientationHelper$1):0 -> <init>
    1:1:androidx.recyclerview.widget.OrientationHelper createVerticalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager):0:0 -> a
    1:1:androidx.recyclerview.widget.OrientationHelper createOrientationHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager,int):0 -> a
    2:2:androidx.recyclerview.widget.OrientationHelper createOrientationHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager,int):0:0 -> a
    3:3:androidx.recyclerview.widget.OrientationHelper createHorizontalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager):0:0 -> a
    3:3:androidx.recyclerview.widget.OrientationHelper createOrientationHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager,int):0 -> a
    int getDecoratedEnd(android.view.View) -> b
    int getDecoratedMeasurement(android.view.View) -> c
    int getDecoratedMeasurementInOther(android.view.View) -> d
    int getDecoratedStart(android.view.View) -> e
    int getEnd() -> f
    int getEndAfterPadding() -> g
    int getEndPadding() -> h
    int getMode() -> i
    int getModeInOther() -> j
    int getStartAfterPadding() -> k
    int getTotalSpace() -> l
    int getTotalSpaceChange() -> m
    int getTransformedEndWithDecoration(android.view.View) -> n
    int getTransformedStartWithDecoration(android.view.View) -> o
    void offsetChildren(int) -> p
androidx.recyclerview.widget.OrientationHelper$1 -> a.l.b.u:
    int getDecoratedEnd(android.view.View) -> b
    int getDecoratedMeasurement(android.view.View) -> c
    int getDecoratedMeasurementInOther(android.view.View) -> d
    int getDecoratedStart(android.view.View) -> e
    int getEnd() -> f
    int getEndAfterPadding() -> g
    int getEndPadding() -> h
    int getMode() -> i
    int getModeInOther() -> j
    int getStartAfterPadding() -> k
    int getTotalSpace() -> l
    int getTransformedEndWithDecoration(android.view.View) -> n
    int getTransformedStartWithDecoration(android.view.View) -> o
    void offsetChildren(int) -> p
androidx.recyclerview.widget.OrientationHelper$2 -> a.l.b.v:
    int getDecoratedEnd(android.view.View) -> b
    int getDecoratedMeasurement(android.view.View) -> c
    int getDecoratedMeasurementInOther(android.view.View) -> d
    int getDecoratedStart(android.view.View) -> e
    int getEnd() -> f
    int getEndAfterPadding() -> g
    int getEndPadding() -> h
    int getMode() -> i
    int getModeInOther() -> j
    int getStartAfterPadding() -> k
    int getTotalSpace() -> l
    int getTransformedEndWithDecoration(android.view.View) -> n
    int getTransformedStartWithDecoration(android.view.View) -> o
    void offsetChildren(int) -> p
androidx.recyclerview.widget.RecyclerView -> androidx.recyclerview.widget.RecyclerView:
    androidx.recyclerview.widget.RecyclerView$OnItemTouchListener mInterceptingOnItemTouchListener -> r
    boolean mPreserveFocusAfterLayout -> d0
    int mScrollState -> O
    java.lang.Runnable mItemAnimatorRunner -> w0
    boolean mEnableFastScroller -> u
    int mLayoutOrScrollCounter -> G
    android.widget.EdgeEffect mLeftGlow -> J
    androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver mObserver -> a
    boolean mLayoutSuppressed -> y
    androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback mChildDrawingOrderCallback -> p0
    int mLastTouchX -> T
    androidx.recyclerview.widget.ViewInfoStore$ProcessCallback mViewInfoProcessCallback -> A0
    androidx.recyclerview.widget.ViewInfoStore mViewInfoStore -> f
    java.util.ArrayList mOnItemTouchListeners -> q
    int mScrollPointerId -> P
    float mScaledVerticalScrollFactor -> c0
    android.view.VelocityTracker mVelocityTracker -> Q
    androidx.recyclerview.widget.RecyclerView$State mState -> h0
    androidx.recyclerview.widget.GapWorker mGapWorker -> f0
    java.util.List mRecyclerListeners -> o
    int mDispatchScrollCounter -> H
    int[] mNestedOffsets -> t0
    boolean mFirstLayoutComplete -> v
    androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl mPrefetchRegistry -> g0
    android.graphics.RectF mTempRectF -> k
    boolean mLastAutoMeasureSkippedDueToExact -> x0
    android.widget.EdgeEffect mBottomGlow -> M
    boolean mIgnoreMotionEventTillDown -> z
    android.graphics.Rect mTempRect -> i
    androidx.recyclerview.widget.RecyclerView$RecyclerListener mRecyclerListener -> n
    androidx.recyclerview.widget.RecyclerView$Recycler mRecycler -> b
    boolean mItemsChanged -> l0
    int mLastAutoMeasureNonExactMeasuredHeight -> z0
    int mLastTouchY -> U
    boolean mPostedAnimatorRunner -> n0
    android.view.accessibility.AccessibilityManager mAccessibilityManager -> C
    androidx.recyclerview.widget.RecyclerView$SavedState mPendingSavedState -> c
    androidx.recyclerview.widget.RecyclerView$Adapter mAdapter -> l
    java.util.List mPendingAccessibilityImportanceChange -> v0
    java.lang.Class[] LAYOUT_MANAGER_CONSTRUCTOR_SIGNATURE -> C0
    boolean mIsAttached -> s
    android.widget.EdgeEffect mRightGlow -> L
    int mEatenAccessibilityChangeFlags -> A
    android.view.animation.Interpolator sQuinticInterpolator -> D0
    androidx.recyclerview.widget.RecyclerView$ItemAnimator mItemAnimator -> N
    androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate mAccessibilityDelegate -> o0
    android.graphics.Rect mTempRect2 -> j
    boolean mDataSetHasChangedAfterLayout -> E
    int mTouchSlop -> V
    androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorListener mItemAnimatorListener -> m0
    int mInterceptRequestLayoutDepth -> w
    int mInitialTouchX -> R
    androidx.core.view.NestedScrollingChildHelper mScrollingChildHelper -> r0
    int[] NESTED_SCROLLING_ATTRS -> B0
    float mScaledHorizontalScrollFactor -> b0
    int mMaxFlingVelocity -> a0
    androidx.recyclerview.widget.RecyclerView$ViewFlinger mViewFlinger -> e0
    androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout -> m
    androidx.recyclerview.widget.AdapterHelper mAdapterHelper -> d
    int[] mScrollOffset -> s0
    androidx.recyclerview.widget.ChildHelper mChildHelper -> e
    boolean mLayoutWasDefered -> x
    androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory mEdgeEffectFactory -> I
    int[] mReusableIntPair -> u0
    androidx.recyclerview.widget.RecyclerView$OnScrollListener mScrollListener -> i0
    android.widget.EdgeEffect mTopGlow -> K
    boolean mHasFixedSize -> t
    int[] mMinMaxLayoutPositions -> q0
    java.lang.Runnable mUpdateChildViewsRunnable -> h
    java.util.List mScrollListeners -> j0
    java.util.List mOnChildAttachStateListeners -> D
    boolean mDispatchItemsChangedEvent -> F
    int mMinFlingVelocity -> W
    boolean mClipToPadding -> g
    int mLastAutoMeasureNonExactMeasuredWidth -> y0
    boolean mAdapterUpdateDuringMeasure -> B
    int mInitialTouchY -> S
    boolean mItemsAddedOrRemoved -> k0
    java.util.ArrayList mItemDecorations -> p
    1:1:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    2:2:float androidx.core.view.ViewConfigurationCompat.getScaledHorizontalScrollFactor(android.view.ViewConfiguration,android.content.Context):0:0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    4:4:float androidx.core.view.ViewConfigurationCompat.getScaledVerticalScrollFactor(android.view.ViewConfiguration,android.content.Context):0:0 -> <init>
    4:4:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    4:4:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    5:5:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    5:5:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    6:6:void androidx.recyclerview.widget.RecyclerView$ItemAnimator.setListener(androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorListener):0:0 -> <init>
    6:6:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    6:6:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    7:7:void initAdapterManager():0:0 -> <init>
    7:7:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    7:7:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    8:8:void initChildrenHelper():0:0 -> <init>
    8:8:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    8:8:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    9:9:int androidx.core.view.ViewCompat.getImportantForAutofill(android.view.View):0:0 -> <init>
    9:9:void initAutofill():0 -> <init>
    9:9:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    9:9:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    10:10:void androidx.core.view.ViewCompat.setImportantForAutofill(android.view.View,int):0:0 -> <init>
    10:10:void initAutofill():0 -> <init>
    10:10:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    10:10:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    11:11:int androidx.core.view.ViewCompat.getImportantForAccessibility(android.view.View):0:0 -> <init>
    11:11:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    11:11:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    12:12:void androidx.core.view.ViewCompat.setImportantForAccessibility(android.view.View,int):0:0 -> <init>
    12:12:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    12:12:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    13:13:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    13:13:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    14:14:void androidx.core.view.ViewCompat$Api29Impl.saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int):0:0 -> <init>
    14:14:void androidx.core.view.ViewCompat.saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int):0 -> <init>
    14:14:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    14:14:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    15:15:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    15:15:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    16:16:void initFastScroller(android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable):0:0 -> <init>
    16:16:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    16:16:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    17:17:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    17:17:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    18:18:void createLayoutManager(android.content.Context,java.lang.String,android.util.AttributeSet,int,int):0:0 -> <init>
    18:18:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    18:18:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    19:19:java.lang.String getFullClassName(android.content.Context,java.lang.String):0:0 -> <init>
    19:19:void createLayoutManager(android.content.Context,java.lang.String,android.util.AttributeSet,int,int):0 -> <init>
    19:19:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    19:19:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    20:20:void createLayoutManager(android.content.Context,java.lang.String,android.util.AttributeSet,int,int):0:0 -> <init>
    20:20:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    20:20:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    21:21:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    21:21:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    22:22:void androidx.core.view.ViewCompat$Api29Impl.saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int):0:0 -> <init>
    22:22:void androidx.core.view.ViewCompat.saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int):0 -> <init>
    22:22:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    22:22:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    23:23:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    23:23:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    void fillRemainingScrollValues(androidx.recyclerview.widget.RecyclerView$State) -> A
    android.view.View findContainingItemView(android.view.View) -> B
    boolean findInterceptingOnItemTouchListener(android.view.MotionEvent) -> C
    void findMinMaxChildLayoutPositions(int[]) -> D
    androidx.recyclerview.widget.RecyclerView findNestedRecyclerView(android.view.View) -> E
    androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForAdapterPosition(int) -> F
    1:1:int androidx.recyclerview.widget.AdapterHelper.applyPendingUpdatesToPosition(int):0:0 -> G
    1:1:int getAdapterPositionInRecyclerView(androidx.recyclerview.widget.RecyclerView$ViewHolder):0 -> G
    long getChangedHolderKey(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> H
    androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View) -> I
    androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View) -> J
    1:1:boolean androidx.recyclerview.widget.RecyclerView$State.isPreLayout():0:0 -> K
    1:1:android.graphics.Rect getItemDecorInsetsForChild(android.view.View):0 -> K
    2:2:android.graphics.Rect getItemDecorInsetsForChild(android.view.View):0:0 -> K
    3:3:boolean androidx.recyclerview.widget.RecyclerView$LayoutParams.isViewInvalid():0:0 -> K
    3:3:android.graphics.Rect getItemDecorInsetsForChild(android.view.View):0 -> K
    4:4:android.graphics.Rect getItemDecorInsetsForChild(android.view.View):0:0 -> K
    boolean hasPendingAdapterUpdates() -> L
    void invalidateGlows() -> M
    void invalidateItemDecorations() -> N
    boolean isComputingLayout() -> O
    void jumpToPositionForSmoothScroller(int) -> P
    1:1:void androidx.recyclerview.widget.RecyclerView$Recycler.markItemDecorInsetsDirty():0:0 -> Q
    1:1:void markItemDecorInsetsDirty():0 -> Q
    1:1:void androidx.recyclerview.widget.RecyclerView$Recycler.offsetPositionRecordsForRemove(int,int,boolean):0:0 -> R
    1:1:void offsetPositionRecordsForRemove(int,int,boolean):0 -> R
    2:2:void offsetPositionRecordsForRemove(int,int,boolean):0:0 -> R
    void onChildAttachedToWindow(android.view.View) -> S
    void onChildDetachedFromWindow(android.view.View) -> T
    void onEnterLayoutOrScroll() -> U
    1:1:void dispatchContentChangedIfNecessary():0:0 -> V
    1:1:void onExitLayoutOrScroll(boolean):0 -> V
    2:2:boolean isAccessibilityEnabled():0:0 -> V
    2:2:void dispatchContentChangedIfNecessary():0 -> V
    2:2:void onExitLayoutOrScroll(boolean):0 -> V
    3:3:void dispatchContentChangedIfNecessary():0:0 -> V
    3:3:void onExitLayoutOrScroll(boolean):0 -> V
    4:4:void androidx.core.view.accessibility.AccessibilityEventCompat.setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int):0:0 -> V
    4:4:void dispatchContentChangedIfNecessary():0 -> V
    4:4:void onExitLayoutOrScroll(boolean):0 -> V
    5:5:void dispatchContentChangedIfNecessary():0:0 -> V
    5:5:void onExitLayoutOrScroll(boolean):0 -> V
    6:6:void dispatchPendingImportantForAccessibilityChanges():0:0 -> V
    6:6:void onExitLayoutOrScroll(boolean):0 -> V
    7:7:void androidx.core.view.ViewCompat.setImportantForAccessibility(android.view.View,int):0:0 -> V
    7:7:void dispatchPendingImportantForAccessibilityChanges():0 -> V
    7:7:void onExitLayoutOrScroll(boolean):0 -> V
    8:8:void dispatchPendingImportantForAccessibilityChanges():0:0 -> V
    8:8:void onExitLayoutOrScroll(boolean):0 -> V
    void onPointerUp(android.view.MotionEvent) -> W
    void onScrollStateChanged(int) -> X
    void onScrolled(int,int) -> Y
    1:1:void androidx.core.view.ViewCompat.postOnAnimation(android.view.View,java.lang.Runnable):0:0 -> Z
    1:1:void postAnimationRunner():0 -> Z
    2:2:void postAnimationRunner():0:0 -> Z
    void access$000(androidx.recyclerview.widget.RecyclerView,android.view.View,int,android.view.ViewGroup$LayoutParams) -> a
    1:1:void androidx.recyclerview.widget.AdapterHelper.reset():0:0 -> a0
    1:1:void processAdapterUpdatesAndSetAnimationFlags():0 -> a0
    2:2:void processAdapterUpdatesAndSetAnimationFlags():0:0 -> a0
    3:3:boolean predictiveItemAnimationsEnabled():0:0 -> a0
    3:3:void processAdapterUpdatesAndSetAnimationFlags():0 -> a0
    4:4:void processAdapterUpdatesAndSetAnimationFlags():0:0 -> a0
    5:5:boolean predictiveItemAnimationsEnabled():0:0 -> a0
    5:5:void processAdapterUpdatesAndSetAnimationFlags():0 -> a0
    6:6:void processAdapterUpdatesAndSetAnimationFlags():0:0 -> a0
    void access$100(androidx.recyclerview.widget.RecyclerView,int) -> b
    1:1:void markKnownViewsInvalid():0:0 -> b0
    1:1:void processDataSetCompletelyChanged(boolean):0 -> b0
    2:2:void androidx.recyclerview.widget.RecyclerView$Recycler.markKnownViewsInvalid():0:0 -> b0
    2:2:void markKnownViewsInvalid():0 -> b0
    2:2:void processDataSetCompletelyChanged(boolean):0 -> b0
    boolean access$200(androidx.recyclerview.widget.RecyclerView) -> c
    1:1:void androidx.recyclerview.widget.ViewInfoStore.addToOldChangeHolders(long,androidx.recyclerview.widget.RecyclerView$ViewHolder):0:0 -> c0
    1:1:void recordAnimationInfoIfBouncedHiddenView(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo):0 -> c0
    2:2:void recordAnimationInfoIfBouncedHiddenView(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo):0:0 -> c0
    void access$300(androidx.recyclerview.widget.RecyclerView,int,int) -> d
    void removeAndRecycleViews() -> d0
    1:1:boolean androidx.core.view.NestedScrollingChildHelper.dispatchNestedPreScroll(int,int,int[],int[]):0:0 -> dispatchNestedPreScroll
    1:1:boolean dispatchNestedPreScroll(int,int,int[],int[]):0 -> dispatchNestedPreScroll
    1:1:void androidx.core.view.ViewCompat.postInvalidateOnAnimation(android.view.View):0:0 -> draw
    1:1:void draw(android.graphics.Canvas):0 -> draw
    1:1:void androidx.recyclerview.widget.ChildHelper.addView(android.view.View,boolean):0:0 -> e
    1:1:void addAnimatingView(androidx.recyclerview.widget.RecyclerView$ViewHolder):0 -> e
    2:2:void androidx.recyclerview.widget.ChildHelper.hide(android.view.View):0:0 -> e
    2:2:void addAnimatingView(androidx.recyclerview.widget.RecyclerView$ViewHolder):0 -> e
    3:3:int androidx.recyclerview.widget.RecyclerView$5.indexOfChild(android.view.View):0:0 -> e
    3:3:void androidx.recyclerview.widget.ChildHelper.hide(android.view.View):0 -> e
    3:3:void addAnimatingView(androidx.recyclerview.widget.RecyclerView$ViewHolder):0 -> e
    4:4:void androidx.recyclerview.widget.ChildHelper.hide(android.view.View):0:0 -> e
    4:4:void addAnimatingView(androidx.recyclerview.widget.RecyclerView$ViewHolder):0 -> e
    void removeItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration) -> e0
    1:1:void addItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration,int):0:0 -> f
    1:1:void addItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration):0 -> f
    void requestChildOnScreen(android.view.View,android.view.View) -> f0
    1:1:boolean isPreferredNextFocus(android.view.View,android.view.View,int):0:0 -> focusSearch
    1:1:android.view.View focusSearch(android.view.View,int):0 -> focusSearch
    2:2:android.view.View focusSearch(android.view.View,int):0:0 -> focusSearch
    void addOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener) -> g
    1:1:void releaseGlows():0:0 -> g0
    1:1:void resetScroll():0 -> g0
    2:2:void androidx.core.view.ViewCompat.postInvalidateOnAnimation(android.view.View):0:0 -> g0
    2:2:void releaseGlows():0 -> g0
    2:2:void resetScroll():0 -> g0
    void assertNotInLayoutOrScroll(java.lang.String) -> h
    1:1:boolean androidx.core.view.MotionEventCompat.isFromSource(android.view.MotionEvent,int):0:0 -> h0
    1:1:boolean scrollByInternal(int,int,android.view.MotionEvent,int):0 -> h0
    2:2:boolean scrollByInternal(int,int,android.view.MotionEvent,int):0:0 -> h0
    3:3:void pullGlows(float,float,float,float):0:0 -> h0
    3:3:boolean scrollByInternal(int,int,android.view.MotionEvent,int):0 -> h0
    4:4:void androidx.core.widget.EdgeEffectCompat.onPull(android.widget.EdgeEffect,float,float):0:0 -> h0
    4:4:void pullGlows(float,float,float,float):0 -> h0
    4:4:boolean scrollByInternal(int,int,android.view.MotionEvent,int):0 -> h0
    5:5:void pullGlows(float,float,float,float):0:0 -> h0
    5:5:boolean scrollByInternal(int,int,android.view.MotionEvent,int):0 -> h0
    6:6:void androidx.core.widget.EdgeEffectCompat.onPull(android.widget.EdgeEffect,float,float):0:0 -> h0
    6:6:void pullGlows(float,float,float,float):0 -> h0
    6:6:boolean scrollByInternal(int,int,android.view.MotionEvent,int):0 -> h0
    7:7:void pullGlows(float,float,float,float):0:0 -> h0
    7:7:boolean scrollByInternal(int,int,android.view.MotionEvent,int):0 -> h0
    8:8:void androidx.core.widget.EdgeEffectCompat.onPull(android.widget.EdgeEffect,float,float):0:0 -> h0
    8:8:void pullGlows(float,float,float,float):0 -> h0
    8:8:boolean scrollByInternal(int,int,android.view.MotionEvent,int):0 -> h0
    9:9:void androidx.core.view.ViewCompat.postInvalidateOnAnimation(android.view.View):0:0 -> h0
    9:9:void pullGlows(float,float,float,float):0 -> h0
    9:9:boolean scrollByInternal(int,int,android.view.MotionEvent,int):0 -> h0
    10:10:boolean scrollByInternal(int,int,android.view.MotionEvent,int):0:0 -> h0
    1:1:boolean androidx.core.view.NestedScrollingChildHelper.hasNestedScrollingParent():0:0 -> hasNestedScrollingParent
    1:1:boolean hasNestedScrollingParent():0 -> hasNestedScrollingParent
    void cancelScroll() -> i
    1:1:void androidx.core.os.TraceCompat.beginSection(java.lang.String):0:0 -> i0
    1:1:void scrollStep(int,int,int[]):0 -> i0
    2:2:void scrollStep(int,int,int[]):0:0 -> i0
    3:3:void androidx.core.os.TraceCompat.endSection():0:0 -> i0
    3:3:void scrollStep(int,int,int[]):0 -> i0
    4:4:void repositionShadowingViews():0:0 -> i0
    4:4:void scrollStep(int,int,int[]):0 -> i0
    5:5:void onExitLayoutOrScroll():0:0 -> i0
    5:5:void scrollStep(int,int,int[]):0 -> i0
    6:6:void scrollStep(int,int,int[]):0:0 -> i0
    1:1:boolean androidx.core.view.NestedScrollingChildHelper.isNestedScrollingEnabled():0:0 -> isNestedScrollingEnabled
    1:1:boolean isNestedScrollingEnabled():0 -> isNestedScrollingEnabled
    void clearNestedRecyclerViewIfNotNested(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> j
    void scrollToPosition(int) -> j0
    1:1:void androidx.recyclerview.widget.RecyclerView$Recycler.clearOldPositions():0:0 -> k
    1:1:void clearOldPositions():0 -> k
    1:1:void androidx.core.view.ViewCompat.setImportantForAccessibility(android.view.View,int):0:0 -> k0
    1:1:boolean setChildImportantForAccessibilityInternal(androidx.recyclerview.widget.RecyclerView$ViewHolder,int):0 -> k0
    1:1:void androidx.core.view.ViewCompat.postInvalidateOnAnimation(android.view.View):0:0 -> l
    1:1:void considerReleasingGlowsOnScroll(int,int):0 -> l
    void smoothScrollBy(int,int,android.view.animation.Interpolator,int,boolean) -> l0
    1:1:boolean androidx.recyclerview.widget.AdapterHelper.hasAnyUpdateTypes(int):0:0 -> m
    1:1:void consumePendingUpdateOperations():0 -> m
    2:2:void androidx.core.os.TraceCompat.beginSection(java.lang.String):0:0 -> m
    2:2:void consumePendingUpdateOperations():0 -> m
    3:3:void consumePendingUpdateOperations():0:0 -> m
    4:4:boolean hasUpdatedView():0:0 -> m
    4:4:void consumePendingUpdateOperations():0 -> m
    5:5:void consumePendingUpdateOperations():0:0 -> m
    6:6:void onExitLayoutOrScroll():0:0 -> m
    6:6:void consumePendingUpdateOperations():0 -> m
    7:7:void consumePendingUpdateOperations():0:0 -> m
    8:8:void androidx.core.os.TraceCompat.beginSection(java.lang.String):0:0 -> m
    8:8:void consumePendingUpdateOperations():0 -> m
    9:9:void consumePendingUpdateOperations():0:0 -> m
    10:10:void androidx.core.os.TraceCompat.endSection():0:0 -> m
    10:10:void consumePendingUpdateOperations():0 -> m
    11:11:void androidx.core.os.TraceCompat.beginSection(java.lang.String):0:0 -> m
    11:11:void consumePendingUpdateOperations():0 -> m
    12:12:void consumePendingUpdateOperations():0:0 -> m
    13:13:void androidx.core.os.TraceCompat.endSection():0:0 -> m
    13:13:void consumePendingUpdateOperations():0 -> m
    void startInterceptRequestLayout() -> m0
    1:1:int androidx.core.view.ViewCompat.getMinimumWidth(android.view.View):0:0 -> n
    1:1:void defaultOnMeasure(int,int):0 -> n
    2:2:void defaultOnMeasure(int,int):0:0 -> n
    3:3:int androidx.core.view.ViewCompat.getMinimumHeight(android.view.View):0:0 -> n
    3:3:void defaultOnMeasure(int,int):0 -> n
    4:4:void defaultOnMeasure(int,int):0:0 -> n
    boolean startNestedScroll(int,int) -> n0
    void dispatchChildDetached(android.view.View) -> o
    void stopInterceptRequestLayout(boolean) -> o0
    1:1:android.view.Display androidx.core.view.ViewCompat.getDisplay(android.view.View):0:0 -> onAttachedToWindow
    1:1:void onAttachedToWindow():0 -> onAttachedToWindow
    2:2:void onAttachedToWindow():0:0 -> onAttachedToWindow
    3:3:void androidx.recyclerview.widget.GapWorker.add(androidx.recyclerview.widget.RecyclerView):0:0 -> onAttachedToWindow
    3:3:void onAttachedToWindow():0 -> onAttachedToWindow
    1:1:void androidx.recyclerview.widget.ViewInfoStore.onDetach():0:0 -> onDetachedFromWindow
    1:1:void onDetachedFromWindow():0 -> onDetachedFromWindow
    2:2:void androidx.recyclerview.widget.ViewInfoStore$InfoRecord.drainCache():0:0 -> onDetachedFromWindow
    2:2:void androidx.recyclerview.widget.ViewInfoStore.onDetach():0 -> onDetachedFromWindow
    2:2:void onDetachedFromWindow():0 -> onDetachedFromWindow
    3:3:void onDetachedFromWindow():0:0 -> onDetachedFromWindow
    4:4:void androidx.recyclerview.widget.GapWorker.remove(androidx.recyclerview.widget.RecyclerView):0:0 -> onDetachedFromWindow
    4:4:void onDetachedFromWindow():0 -> onDetachedFromWindow
    5:5:void onDetachedFromWindow():0:0 -> onDetachedFromWindow
    1:1:void nestedScrollByInternal(int,int,android.view.MotionEvent,int):0:0 -> onGenericMotionEvent
    1:1:boolean onGenericMotionEvent(android.view.MotionEvent):0 -> onGenericMotionEvent
    2:2:void stopNestedScroll(int):0:0 -> onGenericMotionEvent
    2:2:void nestedScrollByInternal(int,int,android.view.MotionEvent,int):0 -> onGenericMotionEvent
    2:2:boolean onGenericMotionEvent(android.view.MotionEvent):0 -> onGenericMotionEvent
    1:1:void androidx.core.os.TraceCompat.beginSection(java.lang.String):0:0 -> onLayout
    1:1:void onLayout(boolean,int,int,int,int):0 -> onLayout
    2:2:void onLayout(boolean,int,int,int,int):0:0 -> onLayout
    3:3:void androidx.core.os.TraceCompat.endSection():0:0 -> onLayout
    3:3:void onLayout(boolean,int,int,int,int):0 -> onLayout
    4:4:void onLayout(boolean,int,int,int,int):0:0 -> onLayout
    1:1:void onExitLayoutOrScroll():0:0 -> onMeasure
    1:1:void onMeasure(int,int):0 -> onMeasure
    2:2:void onMeasure(int,int):0:0 -> onMeasure
    1:1:android.os.Parcelable androidx.customview.view.AbsSavedState.getSuperState():0:0 -> onRestoreInstanceState
    1:1:void onRestoreInstanceState(android.os.Parcelable):0 -> onRestoreInstanceState
    2:2:void onRestoreInstanceState(android.os.Parcelable):0:0 -> onRestoreInstanceState
    1:1:void androidx.recyclerview.widget.RecyclerView$SavedState.copyFrom(androidx.recyclerview.widget.RecyclerView$SavedState):0:0 -> onSaveInstanceState
    1:1:android.os.Parcelable onSaveInstanceState():0 -> onSaveInstanceState
    2:2:android.os.Parcelable onSaveInstanceState():0:0 -> onSaveInstanceState
    1:1:boolean dispatchToOnItemTouchListeners(android.view.MotionEvent):0:0 -> onTouchEvent
    1:1:boolean onTouchEvent(android.view.MotionEvent):0 -> onTouchEvent
    2:2:boolean onTouchEvent(android.view.MotionEvent):0:0 -> onTouchEvent
    3:3:boolean fling(int,int):0:0 -> onTouchEvent
    3:3:boolean onTouchEvent(android.view.MotionEvent):0 -> onTouchEvent
    4:4:void androidx.recyclerview.widget.RecyclerView$ViewFlinger.fling(int,int):0:0 -> onTouchEvent
    4:4:boolean fling(int,int):0 -> onTouchEvent
    4:4:boolean onTouchEvent(android.view.MotionEvent):0 -> onTouchEvent
    5:5:boolean onTouchEvent(android.view.MotionEvent):0:0 -> onTouchEvent
    1:1:boolean androidx.recyclerview.widget.AdapterHelper.hasUpdates():0:0 -> p
    1:1:void dispatchLayout():0 -> p
    2:3:void dispatchLayout():0:0 -> p
    4:4:void dispatchLayoutStep3():0:0 -> p
    4:4:void dispatchLayout():0 -> p
    5:5:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo androidx.recyclerview.widget.RecyclerView$ItemAnimator.recordPostLayoutInformation(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$ViewHolder):0:0 -> p
    5:5:void dispatchLayoutStep3():0 -> p
    5:5:void dispatchLayout():0 -> p
    6:6:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo androidx.recyclerview.widget.RecyclerView$ItemAnimator.obtainHolderInfo():0:0 -> p
    6:6:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo androidx.recyclerview.widget.RecyclerView$ItemAnimator.recordPostLayoutInformation(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$ViewHolder):0 -> p
    6:6:void dispatchLayoutStep3():0 -> p
    6:6:void dispatchLayout():0 -> p
    7:7:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo.setFrom(androidx.recyclerview.widget.RecyclerView$ViewHolder,int):0:0 -> p
    7:7:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo.setFrom(androidx.recyclerview.widget.RecyclerView$ViewHolder):0 -> p
    7:7:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo androidx.recyclerview.widget.RecyclerView$ItemAnimator.recordPostLayoutInformation(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$ViewHolder):0 -> p
    7:7:void dispatchLayoutStep3():0 -> p
    7:7:void dispatchLayout():0 -> p
    8:8:void dispatchLayoutStep3():0:0 -> p
    8:8:void dispatchLayout():0 -> p
    9:9:androidx.recyclerview.widget.RecyclerView$ViewHolder androidx.recyclerview.widget.ViewInfoStore.getFromOldChangeHolders(long):0:0 -> p
    9:9:void dispatchLayoutStep3():0 -> p
    9:9:void dispatchLayout():0 -> p
    10:10:java.lang.Object androidx.collection.LongSparseArray.get(long):0:0 -> p
    10:10:androidx.recyclerview.widget.RecyclerView$ViewHolder androidx.recyclerview.widget.ViewInfoStore.getFromOldChangeHolders(long):0 -> p
    10:10:void dispatchLayoutStep3():0 -> p
    10:10:void dispatchLayout():0 -> p
    11:11:androidx.recyclerview.widget.RecyclerView$ViewHolder androidx.recyclerview.widget.ViewInfoStore.getFromOldChangeHolders(long):0:0 -> p
    11:11:void dispatchLayoutStep3():0 -> p
    11:11:void dispatchLayout():0 -> p
    12:12:void dispatchLayoutStep3():0:0 -> p
    12:12:void dispatchLayout():0 -> p
    13:13:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo androidx.recyclerview.widget.ViewInfoStore.popFromPreLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder):0:0 -> p
    13:13:void dispatchLayoutStep3():0 -> p
    13:13:void dispatchLayout():0 -> p
    14:14:void dispatchLayoutStep3():0:0 -> p
    14:14:void dispatchLayout():0 -> p
    15:15:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo androidx.recyclerview.widget.ViewInfoStore.popFromPostLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder):0:0 -> p
    15:15:void dispatchLayoutStep3():0 -> p
    15:15:void dispatchLayout():0 -> p
    16:16:void handleMissingPreInfoForChangeError(long,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder):0:0 -> p
    16:16:void dispatchLayoutStep3():0 -> p
    16:16:void dispatchLayout():0 -> p
    17:17:void animateChange(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,boolean,boolean):0:0 -> p
    17:17:void dispatchLayoutStep3():0 -> p
    17:17:void dispatchLayout():0 -> p
    18:18:void dispatchLayoutStep3():0:0 -> p
    18:18:void dispatchLayout():0 -> p
    19:19:void androidx.recyclerview.widget.ViewInfoStore.process(androidx.recyclerview.widget.ViewInfoStore$ProcessCallback):0:0 -> p
    19:19:void dispatchLayoutStep3():0 -> p
    19:19:void dispatchLayout():0 -> p
    20:20:int androidx.collection.SimpleArrayMap.size():0:0 -> p
    20:20:void androidx.recyclerview.widget.ViewInfoStore.process(androidx.recyclerview.widget.ViewInfoStore$ProcessCallback):0 -> p
    20:20:void dispatchLayoutStep3():0 -> p
    20:20:void dispatchLayout():0 -> p
    21:21:void androidx.recyclerview.widget.ViewInfoStore.process(androidx.recyclerview.widget.ViewInfoStore$ProcessCallback):0:0 -> p
    21:21:void dispatchLayoutStep3():0 -> p
    21:21:void dispatchLayout():0 -> p
    22:22:void androidx.recyclerview.widget.RecyclerView$4.unused(androidx.recyclerview.widget.RecyclerView$ViewHolder):0:0 -> p
    22:22:void androidx.recyclerview.widget.ViewInfoStore.process(androidx.recyclerview.widget.ViewInfoStore$ProcessCallback):0 -> p
    22:22:void dispatchLayoutStep3():0 -> p
    22:22:void dispatchLayout():0 -> p
    23:23:void androidx.recyclerview.widget.ViewInfoStore.process(androidx.recyclerview.widget.ViewInfoStore$ProcessCallback):0:0 -> p
    23:23:void dispatchLayoutStep3():0 -> p
    23:23:void dispatchLayout():0 -> p
    24:24:void androidx.recyclerview.widget.RecyclerView$4.processPersistent(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo):0:0 -> p
    24:24:void androidx.recyclerview.widget.ViewInfoStore.process(androidx.recyclerview.widget.ViewInfoStore$ProcessCallback):0 -> p
    24:24:void dispatchLayoutStep3():0 -> p
    24:24:void dispatchLayout():0 -> p
    25:25:boolean androidx.recyclerview.widget.SimpleItemAnimator.animatePersistence(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo):0:0 -> p
    25:25:void androidx.recyclerview.widget.RecyclerView$4.processPersistent(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo):0 -> p
    25:25:void androidx.recyclerview.widget.ViewInfoStore.process(androidx.recyclerview.widget.ViewInfoStore$ProcessCallback):0 -> p
    25:25:void dispatchLayoutStep3():0 -> p
    25:25:void dispatchLayout():0 -> p
    26:26:void androidx.recyclerview.widget.SimpleItemAnimator.dispatchMoveFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder):0:0 -> p
    26:26:boolean androidx.recyclerview.widget.SimpleItemAnimator.animatePersistence(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo):0 -> p
    26:26:void androidx.recyclerview.widget.RecyclerView$4.processPersistent(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo):0 -> p
    26:26:void androidx.recyclerview.widget.ViewInfoStore.process(androidx.recyclerview.widget.ViewInfoStore$ProcessCallback):0 -> p
    26:26:void dispatchLayoutStep3():0 -> p
    26:26:void dispatchLayout():0 -> p
    27:27:boolean androidx.recyclerview.widget.SimpleItemAnimator.animatePersistence(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo):0:0 -> p
    27:27:void androidx.recyclerview.widget.RecyclerView$4.processPersistent(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo):0 -> p
    27:27:void androidx.recyclerview.widget.ViewInfoStore.process(androidx.recyclerview.widget.ViewInfoStore$ProcessCallback):0 -> p
    27:27:void dispatchLayoutStep3():0 -> p
    27:27:void dispatchLayout():0 -> p
    28:28:void androidx.recyclerview.widget.RecyclerView$4.processPersistent(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo):0:0 -> p
    28:28:void androidx.recyclerview.widget.ViewInfoStore.process(androidx.recyclerview.widget.ViewInfoStore$ProcessCallback):0 -> p
    28:28:void dispatchLayoutStep3():0 -> p
    28:28:void dispatchLayout():0 -> p
    29:29:void androidx.recyclerview.widget.ViewInfoStore.process(androidx.recyclerview.widget.ViewInfoStore$ProcessCallback):0:0 -> p
    29:29:void dispatchLayoutStep3():0 -> p
    29:29:void dispatchLayout():0 -> p
    30:30:void dispatchLayoutStep3():0:0 -> p
    30:30:void dispatchLayout():0 -> p
    31:31:void onExitLayoutOrScroll():0:0 -> p
    31:31:void dispatchLayoutStep3():0 -> p
    31:31:void dispatchLayout():0 -> p
    32:32:void dispatchLayoutStep3():0:0 -> p
    32:32:void dispatchLayout():0 -> p
    33:33:void androidx.recyclerview.widget.ViewInfoStore.clear():0:0 -> p
    33:33:void dispatchLayoutStep3():0 -> p
    33:33:void dispatchLayout():0 -> p
    34:34:void dispatchLayoutStep3():0:0 -> p
    34:34:void dispatchLayout():0 -> p
    35:35:boolean didChildRangeChange(int,int):0:0 -> p
    35:35:void dispatchLayoutStep3():0 -> p
    35:35:void dispatchLayout():0 -> p
    36:36:void dispatchLayoutStep3():0:0 -> p
    36:36:void dispatchLayout():0 -> p
    37:37:void recoverFocusFromState():0:0 -> p
    37:37:void dispatchLayoutStep3():0 -> p
    37:37:void dispatchLayout():0 -> p
    38:38:androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForItemId(long):0:0 -> p
    38:38:void recoverFocusFromState():0 -> p
    38:38:void dispatchLayoutStep3():0 -> p
    38:38:void dispatchLayout():0 -> p
    39:39:void recoverFocusFromState():0:0 -> p
    39:39:void dispatchLayoutStep3():0 -> p
    39:39:void dispatchLayout():0 -> p
    40:40:android.view.View findNextViewToFocus():0:0 -> p
    40:40:void recoverFocusFromState():0 -> p
    40:40:void dispatchLayoutStep3():0 -> p
    40:40:void dispatchLayout():0 -> p
    41:41:void recoverFocusFromState():0:0 -> p
    41:41:void dispatchLayoutStep3():0 -> p
    41:41:void dispatchLayout():0 -> p
    42:42:void resetFocusInfo():0:0 -> p
    42:42:void dispatchLayoutStep3():0 -> p
    42:42:void dispatchLayout():0 -> p
    void stopNestedScroll(int) -> p0
    1:1:void androidx.recyclerview.widget.ViewInfoStore.clear():0:0 -> q
    1:1:void dispatchLayoutStep1():0 -> q
    2:2:void dispatchLayoutStep1():0:0 -> q
    3:3:void saveFocusInfo():0:0 -> q
    3:3:void dispatchLayoutStep1():0 -> q
    4:4:androidx.recyclerview.widget.RecyclerView$ViewHolder findContainingViewHolder(android.view.View):0:0 -> q
    4:4:void saveFocusInfo():0 -> q
    4:4:void dispatchLayoutStep1():0 -> q
    5:5:void resetFocusInfo():0:0 -> q
    5:5:void saveFocusInfo():0 -> q
    5:5:void dispatchLayoutStep1():0 -> q
    6:6:void saveFocusInfo():0:0 -> q
    6:6:void dispatchLayoutStep1():0 -> q
    7:7:int getDeepestFocusedViewWithId(android.view.View):0:0 -> q
    7:7:void saveFocusInfo():0 -> q
    7:7:void dispatchLayoutStep1():0 -> q
    8:8:void saveFocusInfo():0:0 -> q
    8:8:void dispatchLayoutStep1():0 -> q
    9:9:void dispatchLayoutStep1():0:0 -> q
    10:10:void androidx.recyclerview.widget.ViewInfoStore.addToOldChangeHolders(long,androidx.recyclerview.widget.RecyclerView$ViewHolder):0:0 -> q
    10:10:void dispatchLayoutStep1():0 -> q
    11:11:void dispatchLayoutStep1():0:0 -> q
    12:12:void saveOldPositions():0:0 -> q
    12:12:void dispatchLayoutStep1():0 -> q
    13:13:void dispatchLayoutStep1():0:0 -> q
    14:14:boolean androidx.recyclerview.widget.ViewInfoStore.isInPreLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder):0:0 -> q
    14:14:void dispatchLayoutStep1():0 -> q
    15:15:java.lang.Object androidx.collection.SimpleArrayMap.get(java.lang.Object):0:0 -> q
    15:15:boolean androidx.recyclerview.widget.ViewInfoStore.isInPreLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder):0 -> q
    15:15:void dispatchLayoutStep1():0 -> q
    16:16:boolean androidx.recyclerview.widget.ViewInfoStore.isInPreLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder):0:0 -> q
    16:16:void dispatchLayoutStep1():0 -> q
    17:17:void dispatchLayoutStep1():0:0 -> q
    18:18:void androidx.recyclerview.widget.ViewInfoStore.addToAppearedInPreLayoutHolders(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo):0:0 -> q
    18:18:void dispatchLayoutStep1():0 -> q
    19:19:java.lang.Object androidx.collection.SimpleArrayMap.get(java.lang.Object):0:0 -> q
    19:19:void androidx.recyclerview.widget.ViewInfoStore.addToAppearedInPreLayoutHolders(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo):0 -> q
    19:19:void dispatchLayoutStep1():0 -> q
    20:20:void androidx.recyclerview.widget.ViewInfoStore.addToAppearedInPreLayoutHolders(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo):0:0 -> q
    20:20:void dispatchLayoutStep1():0 -> q
    21:21:void dispatchLayoutStep1():0:0 -> q
    22:22:void onExitLayoutOrScroll():0:0 -> q
    22:22:void dispatchLayoutStep1():0 -> q
    23:23:void dispatchLayoutStep1():0:0 -> q
    1:1:void stopScrollersInternal():0:0 -> q0
    1:1:void stopScroll():0 -> q0
    1:1:void onExitLayoutOrScroll():0:0 -> r
    1:1:void dispatchLayoutStep2():0 -> r
    2:2:void dispatchLayoutStep2():0:0 -> r
    boolean dispatchNestedPreScroll(int,int,int[],int[],int) -> s
    1:1:boolean shouldDeferAccessibilityEvent(android.view.accessibility.AccessibilityEvent):0:0 -> sendAccessibilityEventUnchecked
    1:1:void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent):0 -> sendAccessibilityEventUnchecked
    2:2:int androidx.core.view.accessibility.AccessibilityEventCompat.getContentChangeTypes(android.view.accessibility.AccessibilityEvent):0:0 -> sendAccessibilityEventUnchecked
    2:2:boolean shouldDeferAccessibilityEvent(android.view.accessibility.AccessibilityEvent):0 -> sendAccessibilityEventUnchecked
    2:2:void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent):0 -> sendAccessibilityEventUnchecked
    3:3:boolean shouldDeferAccessibilityEvent(android.view.accessibility.AccessibilityEvent):0:0 -> sendAccessibilityEventUnchecked
    3:3:void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent):0 -> sendAccessibilityEventUnchecked
    4:4:void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent):0:0 -> sendAccessibilityEventUnchecked
    1:1:void setAdapterInternal(androidx.recyclerview.widget.RecyclerView$Adapter,boolean,boolean):0:0 -> setAdapter
    1:1:void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter):0 -> setAdapter
    2:2:void androidx.recyclerview.widget.AdapterHelper.reset():0:0 -> setAdapter
    2:2:void setAdapterInternal(androidx.recyclerview.widget.RecyclerView$Adapter,boolean,boolean):0 -> setAdapter
    2:2:void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter):0 -> setAdapter
    3:3:void setAdapterInternal(androidx.recyclerview.widget.RecyclerView$Adapter,boolean,boolean):0:0 -> setAdapter
    3:3:void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter):0 -> setAdapter
    4:4:void androidx.recyclerview.widget.RecyclerView$Recycler.onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$Adapter,boolean):0:0 -> setAdapter
    4:4:void setAdapterInternal(androidx.recyclerview.widget.RecyclerView$Adapter,boolean,boolean):0 -> setAdapter
    4:4:void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter):0 -> setAdapter
    5:5:void androidx.recyclerview.widget.RecyclerView$RecycledViewPool.onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$Adapter,boolean):0:0 -> setAdapter
    5:5:void androidx.recyclerview.widget.RecyclerView$Recycler.onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$Adapter,boolean):0 -> setAdapter
    5:5:void setAdapterInternal(androidx.recyclerview.widget.RecyclerView$Adapter,boolean,boolean):0 -> setAdapter
    5:5:void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter):0 -> setAdapter
    6:6:void androidx.recyclerview.widget.RecyclerView$RecycledViewPool.detach():0:0 -> setAdapter
    6:6:void androidx.recyclerview.widget.RecyclerView$RecycledViewPool.onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$Adapter,boolean):0 -> setAdapter
    6:6:void androidx.recyclerview.widget.RecyclerView$Recycler.onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$Adapter,boolean):0 -> setAdapter
    6:6:void setAdapterInternal(androidx.recyclerview.widget.RecyclerView$Adapter,boolean,boolean):0 -> setAdapter
    6:6:void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter):0 -> setAdapter
    7:7:void androidx.recyclerview.widget.RecyclerView$RecycledViewPool.onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$Adapter,boolean):0:0 -> setAdapter
    7:7:void androidx.recyclerview.widget.RecyclerView$Recycler.onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$Adapter,boolean):0 -> setAdapter
    7:7:void setAdapterInternal(androidx.recyclerview.widget.RecyclerView$Adapter,boolean,boolean):0 -> setAdapter
    7:7:void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter):0 -> setAdapter
    8:8:void androidx.recyclerview.widget.RecyclerView$RecycledViewPool.clear():0:0 -> setAdapter
    8:8:void androidx.recyclerview.widget.RecyclerView$RecycledViewPool.onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$Adapter,boolean):0 -> setAdapter
    8:8:void androidx.recyclerview.widget.RecyclerView$Recycler.onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$Adapter,boolean):0 -> setAdapter
    8:8:void setAdapterInternal(androidx.recyclerview.widget.RecyclerView$Adapter,boolean,boolean):0 -> setAdapter
    8:8:void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter):0 -> setAdapter
    9:9:void androidx.recyclerview.widget.RecyclerView$RecycledViewPool.attach():0:0 -> setAdapter
    9:9:void androidx.recyclerview.widget.RecyclerView$RecycledViewPool.onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$Adapter,boolean):0 -> setAdapter
    9:9:void androidx.recyclerview.widget.RecyclerView$Recycler.onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$Adapter,boolean):0 -> setAdapter
    9:9:void setAdapterInternal(androidx.recyclerview.widget.RecyclerView$Adapter,boolean,boolean):0 -> setAdapter
    9:9:void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter):0 -> setAdapter
    10:10:void setAdapterInternal(androidx.recyclerview.widget.RecyclerView$Adapter,boolean,boolean):0:0 -> setAdapter
    10:10:void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter):0 -> setAdapter
    11:11:void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter):0:0 -> setAdapter
    1:1:java.lang.Object androidx.core.util.Preconditions.checkNotNull(java.lang.Object):0:0 -> setEdgeEffectFactory
    1:1:void setEdgeEffectFactory(androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory):0 -> setEdgeEffectFactory
    2:2:void setEdgeEffectFactory(androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory):0:0 -> setEdgeEffectFactory
    1:1:void androidx.recyclerview.widget.RecyclerView$ItemAnimator.setListener(androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorListener):0:0 -> setItemAnimator
    1:1:void setItemAnimator(androidx.recyclerview.widget.RecyclerView$ItemAnimator):0 -> setItemAnimator
    2:2:void setItemAnimator(androidx.recyclerview.widget.RecyclerView$ItemAnimator):0:0 -> setItemAnimator
    3:3:void androidx.recyclerview.widget.RecyclerView$ItemAnimator.setListener(androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorListener):0:0 -> setItemAnimator
    3:3:void setItemAnimator(androidx.recyclerview.widget.RecyclerView$ItemAnimator):0 -> setItemAnimator
    1:1:void androidx.recyclerview.widget.RecyclerView$Recycler.setViewCacheSize(int):0:0 -> setItemViewCacheSize
    1:1:void setItemViewCacheSize(int):0 -> setItemViewCacheSize
    1:1:void androidx.recyclerview.widget.ChildHelper.removeAllViewsUnfiltered():0:0 -> setLayoutManager
    1:1:void setLayoutManager(androidx.recyclerview.widget.RecyclerView$LayoutManager):0 -> setLayoutManager
    2:2:void androidx.recyclerview.widget.ChildHelper$Bucket.reset():0:0 -> setLayoutManager
    2:2:void androidx.recyclerview.widget.ChildHelper.removeAllViewsUnfiltered():0 -> setLayoutManager
    2:2:void setLayoutManager(androidx.recyclerview.widget.RecyclerView$LayoutManager):0 -> setLayoutManager
    3:3:void androidx.recyclerview.widget.ChildHelper.removeAllViewsUnfiltered():0:0 -> setLayoutManager
    3:3:void setLayoutManager(androidx.recyclerview.widget.RecyclerView$LayoutManager):0 -> setLayoutManager
    4:4:void androidx.recyclerview.widget.RecyclerView$5.onLeftHiddenState(android.view.View):0:0 -> setLayoutManager
    4:4:void androidx.recyclerview.widget.ChildHelper.removeAllViewsUnfiltered():0 -> setLayoutManager
    4:4:void setLayoutManager(androidx.recyclerview.widget.RecyclerView$LayoutManager):0 -> setLayoutManager
    5:5:void androidx.recyclerview.widget.ChildHelper.removeAllViewsUnfiltered():0:0 -> setLayoutManager
    5:5:void setLayoutManager(androidx.recyclerview.widget.RecyclerView$LayoutManager):0 -> setLayoutManager
    6:6:void androidx.recyclerview.widget.RecyclerView$5.removeAllViews():0:0 -> setLayoutManager
    6:6:void androidx.recyclerview.widget.ChildHelper.removeAllViewsUnfiltered():0 -> setLayoutManager
    6:6:void setLayoutManager(androidx.recyclerview.widget.RecyclerView$LayoutManager):0 -> setLayoutManager
    7:7:void setLayoutManager(androidx.recyclerview.widget.RecyclerView$LayoutManager):0:0 -> setLayoutManager
    1:1:void androidx.core.view.NestedScrollingChildHelper.setNestedScrollingEnabled(boolean):0:0 -> setNestedScrollingEnabled
    1:1:void setNestedScrollingEnabled(boolean):0 -> setNestedScrollingEnabled
    2:2:void androidx.core.view.ViewCompat.stopNestedScroll(android.view.View):0:0 -> setNestedScrollingEnabled
    2:2:void androidx.core.view.NestedScrollingChildHelper.setNestedScrollingEnabled(boolean):0 -> setNestedScrollingEnabled
    2:2:void setNestedScrollingEnabled(boolean):0 -> setNestedScrollingEnabled
    3:3:void androidx.core.view.NestedScrollingChildHelper.setNestedScrollingEnabled(boolean):0:0 -> setNestedScrollingEnabled
    3:3:void setNestedScrollingEnabled(boolean):0 -> setNestedScrollingEnabled
    1:1:void androidx.recyclerview.widget.RecyclerView$Recycler.setRecycledViewPool(androidx.recyclerview.widget.RecyclerView$RecycledViewPool):0:0 -> setRecycledViewPool
    1:1:void setRecycledViewPool(androidx.recyclerview.widget.RecyclerView$RecycledViewPool):0 -> setRecycledViewPool
    2:2:void androidx.recyclerview.widget.RecyclerView$RecycledViewPool.detach():0:0 -> setRecycledViewPool
    2:2:void androidx.recyclerview.widget.RecyclerView$Recycler.setRecycledViewPool(androidx.recyclerview.widget.RecyclerView$RecycledViewPool):0 -> setRecycledViewPool
    2:2:void setRecycledViewPool(androidx.recyclerview.widget.RecyclerView$RecycledViewPool):0 -> setRecycledViewPool
    3:3:void androidx.recyclerview.widget.RecyclerView$Recycler.setRecycledViewPool(androidx.recyclerview.widget.RecyclerView$RecycledViewPool):0:0 -> setRecycledViewPool
    3:3:void setRecycledViewPool(androidx.recyclerview.widget.RecyclerView$RecycledViewPool):0 -> setRecycledViewPool
    4:4:void androidx.recyclerview.widget.RecyclerView$RecycledViewPool.attach():0:0 -> setRecycledViewPool
    4:4:void androidx.recyclerview.widget.RecyclerView$Recycler.setRecycledViewPool(androidx.recyclerview.widget.RecyclerView$RecycledViewPool):0 -> setRecycledViewPool
    4:4:void setRecycledViewPool(androidx.recyclerview.widget.RecyclerView$RecycledViewPool):0 -> setRecycledViewPool
    1:1:void stopScrollersInternal():0:0 -> setScrollState
    1:1:void setScrollState(int):0 -> setScrollState
    2:2:void dispatchOnScrollStateChanged(int):0:0 -> setScrollState
    2:2:void setScrollState(int):0 -> setScrollState
    1:1:void androidx.recyclerview.widget.RecyclerView$Recycler.setViewCacheExtension(androidx.recyclerview.widget.RecyclerView$ViewCacheExtension):0:0 -> setViewCacheExtension
    1:1:void setViewCacheExtension(androidx.recyclerview.widget.RecyclerView$ViewCacheExtension):0 -> setViewCacheExtension
    1:1:boolean androidx.core.view.NestedScrollingChildHelper.startNestedScroll(int):0:0 -> startNestedScroll
    1:1:boolean startNestedScroll(int):0 -> startNestedScroll
    1:1:void androidx.core.view.NestedScrollingChildHelper.stopNestedScroll():0:0 -> stopNestedScroll
    1:1:void stopNestedScroll():0 -> stopNestedScroll
    1:1:void androidx.core.view.NestedScrollingChildHelper.dispatchNestedScroll(int,int,int,int,int[],int,int[]):0:0 -> t
    1:1:void dispatchNestedScroll(int,int,int,int,int[],int,int[]):0 -> t
    void dispatchOnScrolled(int,int) -> u
    void ensureBottomGlow() -> v
    void ensureLeftGlow() -> w
    void ensureRightGlow() -> x
    void ensureTopGlow() -> y
    java.lang.String exceptionLabel() -> z
androidx.recyclerview.widget.RecyclerView$1 -> androidx.recyclerview.widget.RecyclerView$a:
    androidx.recyclerview.widget.RecyclerView this$0 -> a
androidx.recyclerview.widget.RecyclerView$2 -> androidx.recyclerview.widget.RecyclerView$b:
    androidx.recyclerview.widget.RecyclerView this$0 -> a
    1:1:void androidx.recyclerview.widget.DefaultItemAnimator.runPendingAnimations():0:0 -> run
    1:1:void run():0 -> run
    2:2:void androidx.recyclerview.widget.DefaultItemAnimator.animateRemoveImpl(androidx.recyclerview.widget.RecyclerView$ViewHolder):0:0 -> run
    2:2:void androidx.recyclerview.widget.DefaultItemAnimator.runPendingAnimations():0 -> run
    2:2:void run():0 -> run
    3:3:long androidx.recyclerview.widget.RecyclerView$ItemAnimator.getRemoveDuration():0:0 -> run
    3:3:void androidx.recyclerview.widget.DefaultItemAnimator.animateRemoveImpl(androidx.recyclerview.widget.RecyclerView$ViewHolder):0 -> run
    3:3:void androidx.recyclerview.widget.DefaultItemAnimator.runPendingAnimations():0 -> run
    3:3:void run():0 -> run
    4:4:void androidx.recyclerview.widget.DefaultItemAnimator.animateRemoveImpl(androidx.recyclerview.widget.RecyclerView$ViewHolder):0:0 -> run
    4:4:void androidx.recyclerview.widget.DefaultItemAnimator.runPendingAnimations():0 -> run
    4:4:void run():0 -> run
    5:5:void androidx.recyclerview.widget.DefaultItemAnimator.runPendingAnimations():0:0 -> run
    5:5:void run():0 -> run
    6:6:long androidx.recyclerview.widget.RecyclerView$ItemAnimator.getRemoveDuration():0:0 -> run
    6:6:void androidx.recyclerview.widget.DefaultItemAnimator.runPendingAnimations():0 -> run
    6:6:void run():0 -> run
    7:7:void androidx.core.view.ViewCompat.postOnAnimationDelayed(android.view.View,java.lang.Runnable,long):0:0 -> run
    7:7:void androidx.recyclerview.widget.DefaultItemAnimator.runPendingAnimations():0 -> run
    7:7:void run():0 -> run
    8:8:void androidx.recyclerview.widget.DefaultItemAnimator.runPendingAnimations():0:0 -> run
    8:8:void run():0 -> run
    9:9:long androidx.recyclerview.widget.RecyclerView$ItemAnimator.getRemoveDuration():0:0 -> run
    9:9:void androidx.recyclerview.widget.DefaultItemAnimator.runPendingAnimations():0 -> run
    9:9:void run():0 -> run
    10:10:void androidx.core.view.ViewCompat.postOnAnimationDelayed(android.view.View,java.lang.Runnable,long):0:0 -> run
    10:10:void androidx.recyclerview.widget.DefaultItemAnimator.runPendingAnimations():0 -> run
    10:10:void run():0 -> run
    11:11:void androidx.recyclerview.widget.DefaultItemAnimator.runPendingAnimations():0:0 -> run
    11:11:void run():0 -> run
    12:12:long androidx.recyclerview.widget.RecyclerView$ItemAnimator.getRemoveDuration():0:0 -> run
    12:12:void androidx.recyclerview.widget.DefaultItemAnimator.runPendingAnimations():0 -> run
    12:12:void run():0 -> run
    13:13:long androidx.recyclerview.widget.RecyclerView$ItemAnimator.getMoveDuration():0:0 -> run
    13:13:void androidx.recyclerview.widget.DefaultItemAnimator.runPendingAnimations():0 -> run
    13:13:void run():0 -> run
    14:14:long androidx.recyclerview.widget.RecyclerView$ItemAnimator.getChangeDuration():0:0 -> run
    14:14:void androidx.recyclerview.widget.DefaultItemAnimator.runPendingAnimations():0 -> run
    14:14:void run():0 -> run
    15:15:void androidx.recyclerview.widget.DefaultItemAnimator.runPendingAnimations():0:0 -> run
    15:15:void run():0 -> run
    16:16:void androidx.core.view.ViewCompat.postOnAnimationDelayed(android.view.View,java.lang.Runnable,long):0:0 -> run
    16:16:void androidx.recyclerview.widget.DefaultItemAnimator.runPendingAnimations():0 -> run
    16:16:void run():0 -> run
    17:17:void run():0:0 -> run
androidx.recyclerview.widget.RecyclerView$3 -> androidx.recyclerview.widget.RecyclerView$c:
androidx.recyclerview.widget.RecyclerView$4 -> androidx.recyclerview.widget.RecyclerView$d:
    androidx.recyclerview.widget.RecyclerView this$0 -> a
    1:1:void androidx.recyclerview.widget.RecyclerView.animateAppearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo):0:0 -> a
    1:1:void processAppeared(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo):0 -> a
    2:2:boolean androidx.recyclerview.widget.SimpleItemAnimator.animateAppearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo):0:0 -> a
    2:2:void androidx.recyclerview.widget.RecyclerView.animateAppearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo):0 -> a
    2:2:void processAppeared(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo):0 -> a
    3:3:boolean androidx.recyclerview.widget.DefaultItemAnimator.animateAdd(androidx.recyclerview.widget.RecyclerView$ViewHolder):0:0 -> a
    3:3:boolean androidx.recyclerview.widget.SimpleItemAnimator.animateAppearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo):0 -> a
    3:3:void androidx.recyclerview.widget.RecyclerView.animateAppearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo):0 -> a
    3:3:void processAppeared(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo):0 -> a
    4:4:void androidx.recyclerview.widget.RecyclerView.animateAppearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo):0:0 -> a
    4:4:void processAppeared(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo):0 -> a
    1:1:void androidx.recyclerview.widget.RecyclerView.animateDisappearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo):0:0 -> b
    1:1:void processDisappeared(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo):0 -> b
    2:2:boolean androidx.recyclerview.widget.SimpleItemAnimator.animateDisappearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo):0:0 -> b
    2:2:void androidx.recyclerview.widget.RecyclerView.animateDisappearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo):0 -> b
    2:2:void processDisappeared(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo):0 -> b
    3:3:boolean androidx.recyclerview.widget.DefaultItemAnimator.animateRemove(androidx.recyclerview.widget.RecyclerView$ViewHolder):0:0 -> b
    3:3:boolean androidx.recyclerview.widget.SimpleItemAnimator.animateDisappearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo):0 -> b
    3:3:void androidx.recyclerview.widget.RecyclerView.animateDisappearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo):0 -> b
    3:3:void processDisappeared(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo):0 -> b
    4:4:void androidx.recyclerview.widget.RecyclerView.animateDisappearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo):0:0 -> b
    4:4:void processDisappeared(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo):0 -> b
androidx.recyclerview.widget.RecyclerView$5 -> a.l.b.x:
    androidx.recyclerview.widget.RecyclerView this$0 -> a
    android.view.View getChildAt(int) -> a
    int getChildCount() -> b
    void removeViewAt(int) -> c
androidx.recyclerview.widget.RecyclerView$6 -> a.l.b.y:
    androidx.recyclerview.widget.RecyclerView this$0 -> a
    void dispatchUpdate(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> a
    1:1:androidx.recyclerview.widget.RecyclerView$ViewHolder androidx.recyclerview.widget.RecyclerView.findViewHolderForPosition(int,boolean):0:0 -> b
    1:1:androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolder(int):0 -> b
    2:2:androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolder(int):0:0 -> b
    1:1:void androidx.recyclerview.widget.RecyclerView.viewRangeUpdate(int,int,java.lang.Object):0:0 -> c
    1:1:void markViewHoldersUpdated(int,int,java.lang.Object):0 -> c
    2:2:void androidx.recyclerview.widget.RecyclerView$Recycler.viewRangeUpdate(int,int):0:0 -> c
    2:2:void androidx.recyclerview.widget.RecyclerView.viewRangeUpdate(int,int,java.lang.Object):0 -> c
    2:2:void markViewHoldersUpdated(int,int,java.lang.Object):0 -> c
    3:3:void markViewHoldersUpdated(int,int,java.lang.Object):0:0 -> c
    1:1:void androidx.recyclerview.widget.RecyclerView.offsetPositionRecordsForInsert(int,int):0:0 -> d
    1:1:void offsetPositionsForAdd(int,int):0 -> d
    2:2:void androidx.recyclerview.widget.RecyclerView$Recycler.offsetPositionRecordsForInsert(int,int):0:0 -> d
    2:2:void androidx.recyclerview.widget.RecyclerView.offsetPositionRecordsForInsert(int,int):0 -> d
    2:2:void offsetPositionsForAdd(int,int):0 -> d
    3:3:void androidx.recyclerview.widget.RecyclerView.offsetPositionRecordsForInsert(int,int):0:0 -> d
    3:3:void offsetPositionsForAdd(int,int):0 -> d
    4:4:void offsetPositionsForAdd(int,int):0:0 -> d
    1:1:void androidx.recyclerview.widget.RecyclerView.offsetPositionRecordsForMove(int,int):0:0 -> e
    1:1:void offsetPositionsForMove(int,int):0 -> e
    2:2:void androidx.recyclerview.widget.RecyclerView$Recycler.offsetPositionRecordsForMove(int,int):0:0 -> e
    2:2:void androidx.recyclerview.widget.RecyclerView.offsetPositionRecordsForMove(int,int):0 -> e
    2:2:void offsetPositionsForMove(int,int):0 -> e
    3:3:void androidx.recyclerview.widget.RecyclerView.offsetPositionRecordsForMove(int,int):0:0 -> e
    3:3:void offsetPositionsForMove(int,int):0 -> e
    4:4:void offsetPositionsForMove(int,int):0:0 -> e
androidx.recyclerview.widget.RecyclerView$Adapter -> androidx.recyclerview.widget.RecyclerView$e:
    1:1:void androidx.core.os.TraceCompat.beginSection(java.lang.String):0:0 -> bindViewHolder
    1:1:void bindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int):0 -> bindViewHolder
    2:2:void bindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int):0:0 -> bindViewHolder
    3:3:void androidx.core.os.TraceCompat.endSection():0:0 -> bindViewHolder
    3:3:void bindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int):0 -> bindViewHolder
    1:1:void androidx.core.os.TraceCompat.beginSection(java.lang.String):0:0 -> createViewHolder
    1:1:androidx.recyclerview.widget.RecyclerView$ViewHolder createViewHolder(android.view.ViewGroup,int):0 -> createViewHolder
    2:2:androidx.recyclerview.widget.RecyclerView$ViewHolder createViewHolder(android.view.ViewGroup,int):0:0 -> createViewHolder
    3:3:void androidx.core.os.TraceCompat.endSection():0:0 -> createViewHolder
    3:3:androidx.recyclerview.widget.RecyclerView$ViewHolder createViewHolder(android.view.ViewGroup,int):0 -> createViewHolder
    4:4:androidx.recyclerview.widget.RecyclerView$ViewHolder createViewHolder(android.view.ViewGroup,int):0:0 -> createViewHolder
    5:5:void androidx.core.os.TraceCompat.endSection():0:0 -> createViewHolder
    5:5:androidx.recyclerview.widget.RecyclerView$ViewHolder createViewHolder(android.view.ViewGroup,int):0 -> createViewHolder
    6:6:androidx.recyclerview.widget.RecyclerView$ViewHolder createViewHolder(android.view.ViewGroup,int):0:0 -> createViewHolder
    1:1:void androidx.recyclerview.widget.RecyclerView$AdapterDataObservable.notifyItemRangeChanged(int,int):0:0 -> notifyItemChanged
    1:1:void notifyItemChanged(int):0 -> notifyItemChanged
    1:1:void androidx.recyclerview.widget.RecyclerView$AdapterDataObservable.notifyItemRangeChanged(int,int):0:0 -> notifyItemRangeChanged
    1:1:void notifyItemRangeChanged(int,int):0 -> notifyItemRangeChanged
androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy -> androidx.recyclerview.widget.RecyclerView$e$a:
    androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy PREVENT_WHEN_EMPTY -> b
    androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy PREVENT -> c
    androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy ALLOW -> a
    androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy[] $VALUES -> d
androidx.recyclerview.widget.RecyclerView$AdapterDataObservable -> androidx.recyclerview.widget.RecyclerView$f:
    boolean hasObservers() -> a
    void notifyChanged() -> b
    void notifyItemMoved(int,int) -> c
    void notifyItemRangeChanged(int,int,java.lang.Object) -> d
    void notifyItemRangeInserted(int,int) -> e
    void notifyItemRangeRemoved(int,int) -> f
    void notifyStateRestorationPolicyChanged() -> g
androidx.recyclerview.widget.RecyclerView$AdapterDataObserver -> androidx.recyclerview.widget.RecyclerView$g:
    void onChanged() -> a
    void onItemRangeChanged(int,int) -> b
    void onItemRangeChanged(int,int,java.lang.Object) -> c
    void onItemRangeInserted(int,int) -> d
    void onItemRangeMoved(int,int,int) -> e
    void onItemRangeRemoved(int,int) -> f
    void onStateRestorationPolicyChanged() -> g
androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback -> androidx.recyclerview.widget.RecyclerView$h:
    int onGetChildDrawingOrder(int,int) -> a
androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory -> androidx.recyclerview.widget.RecyclerView$i:
    android.widget.EdgeEffect createEdgeEffect(androidx.recyclerview.widget.RecyclerView,int) -> a
androidx.recyclerview.widget.RecyclerView$ItemAnimator -> androidx.recyclerview.widget.RecyclerView$j:
    long mChangeDuration -> f
    long mMoveDuration -> e
    long mRemoveDuration -> d
    long mAddDuration -> c
    androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorListener mListener -> a
    java.util.ArrayList mFinishedListeners -> b
    boolean animateChange(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> a
    int buildAdapterChangeFlagsForAnimations(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> b
    1:1:void androidx.recyclerview.widget.RecyclerView$ItemAnimatorRestoreListener.onAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder):0:0 -> c
    1:1:void dispatchAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder):0 -> c
    2:2:boolean androidx.recyclerview.widget.RecyclerView.removeAnimatingView(android.view.View):0:0 -> c
    2:2:void androidx.recyclerview.widget.RecyclerView$ItemAnimatorRestoreListener.onAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder):0 -> c
    2:2:void dispatchAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder):0 -> c
    3:3:boolean androidx.recyclerview.widget.ChildHelper.removeViewIfHidden(android.view.View):0:0 -> c
    3:3:boolean androidx.recyclerview.widget.RecyclerView.removeAnimatingView(android.view.View):0 -> c
    3:3:void androidx.recyclerview.widget.RecyclerView$ItemAnimatorRestoreListener.onAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder):0 -> c
    3:3:void dispatchAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder):0 -> c
    4:4:int androidx.recyclerview.widget.RecyclerView$5.indexOfChild(android.view.View):0:0 -> c
    4:4:boolean androidx.recyclerview.widget.ChildHelper.removeViewIfHidden(android.view.View):0 -> c
    4:4:boolean androidx.recyclerview.widget.RecyclerView.removeAnimatingView(android.view.View):0 -> c
    4:4:void androidx.recyclerview.widget.RecyclerView$ItemAnimatorRestoreListener.onAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder):0 -> c
    4:4:void dispatchAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder):0 -> c
    5:5:boolean androidx.recyclerview.widget.ChildHelper.removeViewIfHidden(android.view.View):0:0 -> c
    5:5:boolean androidx.recyclerview.widget.RecyclerView.removeAnimatingView(android.view.View):0 -> c
    5:5:void androidx.recyclerview.widget.RecyclerView$ItemAnimatorRestoreListener.onAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder):0 -> c
    5:5:void dispatchAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder):0 -> c
    6:6:boolean androidx.recyclerview.widget.RecyclerView.removeAnimatingView(android.view.View):0:0 -> c
    6:6:void androidx.recyclerview.widget.RecyclerView$ItemAnimatorRestoreListener.onAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder):0 -> c
    6:6:void dispatchAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder):0 -> c
    7:7:void androidx.recyclerview.widget.RecyclerView$ItemAnimatorRestoreListener.onAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder):0:0 -> c
    7:7:void dispatchAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder):0 -> c
    void dispatchAnimationsFinished() -> d
    void endAnimation(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> e
    void endAnimations() -> f
    boolean isRunning() -> g
    1:1:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo obtainHolderInfo():0:0 -> h
    1:1:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo recordPreLayoutInformation(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,java.util.List):0 -> h
    2:2:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo.setFrom(androidx.recyclerview.widget.RecyclerView$ViewHolder,int):0:0 -> h
    2:2:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo.setFrom(androidx.recyclerview.widget.RecyclerView$ViewHolder):0 -> h
    2:2:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo recordPreLayoutInformation(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,java.util.List):0 -> h
androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorFinishedListener -> androidx.recyclerview.widget.RecyclerView$j$a:
    void onAnimationsFinished() -> a
androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorListener -> androidx.recyclerview.widget.RecyclerView$j$b:
androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo -> androidx.recyclerview.widget.RecyclerView$j$c:
    int top -> b
    int left -> a
androidx.recyclerview.widget.RecyclerView$ItemAnimatorRestoreListener -> androidx.recyclerview.widget.RecyclerView$k:
    androidx.recyclerview.widget.RecyclerView this$0 -> a
androidx.recyclerview.widget.RecyclerView$ItemDecoration -> androidx.recyclerview.widget.RecyclerView$l:
    1:1:void getItemOffsets(android.graphics.Rect,int,androidx.recyclerview.widget.RecyclerView):0:0 -> f
    1:1:void getItemOffsets(android.graphics.Rect,android.view.View,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State):0 -> f
    void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> g
    void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> h
androidx.recyclerview.widget.RecyclerView$LayoutManager -> androidx.recyclerview.widget.RecyclerView$m:
    1:1:boolean androidx.recyclerview.widget.RecyclerView$SmoothScroller.isRunning():0:0 -> addViewInt
    1:1:void addViewInt(android.view.View,int,boolean):0 -> addViewInt
    2:2:int androidx.recyclerview.widget.RecyclerView$SmoothScroller.getChildPosition(android.view.View):0:0 -> addViewInt
    2:2:void androidx.recyclerview.widget.RecyclerView$SmoothScroller.onChildAttachedToWindow(android.view.View):0 -> addViewInt
    2:2:void addViewInt(android.view.View,int,boolean):0 -> addViewInt
    3:3:int androidx.recyclerview.widget.RecyclerView.getChildLayoutPosition(android.view.View):0:0 -> addViewInt
    3:3:int androidx.recyclerview.widget.RecyclerView$SmoothScroller.getChildPosition(android.view.View):0 -> addViewInt
    3:3:void androidx.recyclerview.widget.RecyclerView$SmoothScroller.onChildAttachedToWindow(android.view.View):0 -> addViewInt
    3:3:void addViewInt(android.view.View,int,boolean):0 -> addViewInt
    4:4:int androidx.recyclerview.widget.RecyclerView$SmoothScroller.getTargetPosition():0:0 -> addViewInt
    4:4:void androidx.recyclerview.widget.RecyclerView$SmoothScroller.onChildAttachedToWindow(android.view.View):0 -> addViewInt
    4:4:void addViewInt(android.view.View,int,boolean):0 -> addViewInt
    5:5:void androidx.recyclerview.widget.RecyclerView$SmoothScroller.onChildAttachedToWindow(android.view.View):0:0 -> addViewInt
    5:5:void addViewInt(android.view.View,int,boolean):0 -> addViewInt
    6:6:void addViewInt(android.view.View,int,boolean):0:0 -> addViewInt
    1:1:void androidx.recyclerview.widget.RecyclerView.assertInLayoutOrScroll(java.lang.String):0:0 -> assertInLayoutOrScroll
    1:1:void assertInLayoutOrScroll(java.lang.String):0 -> assertInLayoutOrScroll
    1:1:boolean androidx.recyclerview.widget.ChildHelper.isHidden(android.view.View):0:0 -> findContainingItemView
    1:1:android.view.View findContainingItemView(android.view.View):0 -> findContainingItemView
    1:1:boolean androidx.recyclerview.widget.RecyclerView$State.isPreLayout():0:0 -> findViewByPosition
    1:1:android.view.View findViewByPosition(int):0 -> findViewByPosition
    2:2:android.view.View findViewByPosition(int):0:0 -> findViewByPosition
    1:1:android.view.View androidx.recyclerview.widget.ChildHelper.getChildAt(int):0:0 -> getChildAt
    1:1:android.view.View getChildAt(int):0 -> getChildAt
    1:1:void androidx.recyclerview.widget.RecyclerView.getDecoratedBoundsWithMarginsInt(android.view.View,android.graphics.Rect):0:0 -> getDecoratedBoundsWithMargins
    1:1:void getDecoratedBoundsWithMargins(android.view.View,android.graphics.Rect):0 -> getDecoratedBoundsWithMargins
    1:1:boolean androidx.recyclerview.widget.ChildHelper.isHidden(android.view.View):0:0 -> getFocusedChild
    1:1:android.view.View getFocusedChild():0 -> getFocusedChild
    1:1:int androidx.core.view.ViewCompat.getLayoutDirection(android.view.View):0:0 -> getLayoutDirection
    1:1:int getLayoutDirection():0 -> getLayoutDirection
    1:1:int androidx.core.view.ViewCompat.getMinimumHeight(android.view.View):0:0 -> getMinimumHeight
    1:1:int getMinimumHeight():0 -> getMinimumHeight
    1:1:int androidx.core.view.ViewCompat.getMinimumWidth(android.view.View):0:0 -> getMinimumWidth
    1:1:int getMinimumWidth():0 -> getMinimumWidth
    1:1:int androidx.core.view.ViewCompat.getPaddingEnd(android.view.View):0:0 -> getPaddingEnd
    1:1:int getPaddingEnd():0 -> getPaddingEnd
    1:1:int androidx.core.view.ViewCompat.getPaddingStart(android.view.View):0:0 -> getPaddingStart
    1:1:int getPaddingStart():0 -> getPaddingStart
    1:1:boolean androidx.recyclerview.widget.RecyclerView$SmoothScroller.isRunning():0:0 -> isSmoothScrolling
    1:1:boolean isSmoothScrolling():0 -> isSmoothScrolling
    1:1:void androidx.recyclerview.widget.RecyclerView.offsetChildrenHorizontal(int):0:0 -> offsetChildrenHorizontal
    1:1:void offsetChildrenHorizontal(int):0 -> offsetChildrenHorizontal
    1:1:void androidx.recyclerview.widget.RecyclerView.offsetChildrenVertical(int):0:0 -> offsetChildrenVertical
    1:1:void offsetChildrenVertical(int):0 -> offsetChildrenVertical
    1:1:void androidx.core.view.accessibility.AccessibilityNodeInfoCompat.addAction(int):0:0 -> onInitializeAccessibilityNodeInfo
    1:1:void onInitializeAccessibilityNodeInfo(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0 -> onInitializeAccessibilityNodeInfo
    2:2:void androidx.core.view.accessibility.AccessibilityNodeInfoCompat.setScrollable(boolean):0:0 -> onInitializeAccessibilityNodeInfo
    2:2:void onInitializeAccessibilityNodeInfo(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0 -> onInitializeAccessibilityNodeInfo
    3:3:void onInitializeAccessibilityNodeInfo(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0:0 -> onInitializeAccessibilityNodeInfo
    4:4:void androidx.core.view.accessibility.AccessibilityNodeInfoCompat.addAction(int):0:0 -> onInitializeAccessibilityNodeInfo
    4:4:void onInitializeAccessibilityNodeInfo(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0 -> onInitializeAccessibilityNodeInfo
    5:5:void androidx.core.view.accessibility.AccessibilityNodeInfoCompat.setScrollable(boolean):0:0 -> onInitializeAccessibilityNodeInfo
    5:5:void onInitializeAccessibilityNodeInfo(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0 -> onInitializeAccessibilityNodeInfo
    6:6:void onInitializeAccessibilityNodeInfo(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0:0 -> onInitializeAccessibilityNodeInfo
    7:7:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat.obtain(int,int,boolean,int):0:0 -> onInitializeAccessibilityNodeInfo
    7:7:void onInitializeAccessibilityNodeInfo(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0 -> onInitializeAccessibilityNodeInfo
    8:8:void androidx.core.view.accessibility.AccessibilityNodeInfoCompat.setCollectionInfo(java.lang.Object):0:0 -> onInitializeAccessibilityNodeInfo
    8:8:void onInitializeAccessibilityNodeInfo(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0 -> onInitializeAccessibilityNodeInfo
    1:1:void androidx.core.view.ViewCompat.postOnAnimation(android.view.View,java.lang.Runnable):0:0 -> postOnAnimation
    1:1:void postOnAnimation(java.lang.Runnable):0 -> postOnAnimation
    1:1:int androidx.recyclerview.widget.RecyclerView$Recycler.getScrapCount():0:0 -> removeAndRecycleScrapInt
    1:1:void removeAndRecycleScrapInt(androidx.recyclerview.widget.RecyclerView$Recycler):0 -> removeAndRecycleScrapInt
    2:2:android.view.View androidx.recyclerview.widget.RecyclerView$Recycler.getScrapViewAt(int):0:0 -> removeAndRecycleScrapInt
    2:2:void removeAndRecycleScrapInt(androidx.recyclerview.widget.RecyclerView$Recycler):0 -> removeAndRecycleScrapInt
    3:3:void removeAndRecycleScrapInt(androidx.recyclerview.widget.RecyclerView$Recycler):0:0 -> removeAndRecycleScrapInt
    4:4:void androidx.recyclerview.widget.RecyclerView$Recycler.quickRecycleScrapView(android.view.View):0:0 -> removeAndRecycleScrapInt
    4:4:void removeAndRecycleScrapInt(androidx.recyclerview.widget.RecyclerView$Recycler):0 -> removeAndRecycleScrapInt
    5:5:void androidx.recyclerview.widget.RecyclerView$Recycler.clearScrap():0:0 -> removeAndRecycleScrapInt
    5:5:void removeAndRecycleScrapInt(androidx.recyclerview.widget.RecyclerView$Recycler):0 -> removeAndRecycleScrapInt
    6:6:void removeAndRecycleScrapInt(androidx.recyclerview.widget.RecyclerView$Recycler):0:0 -> removeAndRecycleScrapInt
    1:1:void androidx.recyclerview.widget.ChildHelper.removeView(android.view.View):0:0 -> removeView
    1:1:void removeView(android.view.View):0 -> removeView
    2:2:int androidx.recyclerview.widget.RecyclerView$5.indexOfChild(android.view.View):0:0 -> removeView
    2:2:void androidx.recyclerview.widget.ChildHelper.removeView(android.view.View):0 -> removeView
    2:2:void removeView(android.view.View):0 -> removeView
    3:3:void androidx.recyclerview.widget.ChildHelper.removeView(android.view.View):0:0 -> removeView
    3:3:void removeView(android.view.View):0 -> removeView
    1:1:void androidx.recyclerview.widget.RecyclerView.smoothScrollBy(int,int,android.view.animation.Interpolator,int):0:0 -> requestChildRectangleOnScreen
    1:1:void androidx.recyclerview.widget.RecyclerView.smoothScrollBy(int,int,android.view.animation.Interpolator):0 -> requestChildRectangleOnScreen
    1:1:void androidx.recyclerview.widget.RecyclerView.smoothScrollBy(int,int):0 -> requestChildRectangleOnScreen
    1:1:boolean requestChildRectangleOnScreen(androidx.recyclerview.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean,boolean):0 -> requestChildRectangleOnScreen
    1:1:void androidx.recyclerview.widget.ViewInfoStore.onViewDetached(androidx.recyclerview.widget.RecyclerView$ViewHolder):0:0 -> scrapOrRecycleView
    1:1:void scrapOrRecycleView(androidx.recyclerview.widget.RecyclerView$Recycler,int,android.view.View):0 -> scrapOrRecycleView
    1:1:boolean androidx.recyclerview.widget.RecyclerView$SmoothScroller.isRunning():0:0 -> startSmoothScroll
    1:1:void startSmoothScroll(androidx.recyclerview.widget.RecyclerView$SmoothScroller):0 -> startSmoothScroll
    2:2:void startSmoothScroll(androidx.recyclerview.widget.RecyclerView$SmoothScroller):0:0 -> startSmoothScroll
    3:3:void androidx.recyclerview.widget.RecyclerView$SmoothScroller.start(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$LayoutManager):0:0 -> startSmoothScroll
    3:3:void startSmoothScroll(androidx.recyclerview.widget.RecyclerView$SmoothScroller):0 -> startSmoothScroll
    4:4:android.view.View androidx.recyclerview.widget.RecyclerView$SmoothScroller.findViewByPosition(int):0:0 -> startSmoothScroll
    4:4:void androidx.recyclerview.widget.RecyclerView$SmoothScroller.start(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$LayoutManager):0 -> startSmoothScroll
    4:4:void startSmoothScroll(androidx.recyclerview.widget.RecyclerView$SmoothScroller):0 -> startSmoothScroll
    5:5:void androidx.recyclerview.widget.RecyclerView$SmoothScroller.start(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$LayoutManager):0:0 -> startSmoothScroll
    5:5:void startSmoothScroll(androidx.recyclerview.widget.RecyclerView$SmoothScroller):0 -> startSmoothScroll
androidx.recyclerview.widget.RecyclerView$LayoutManager$1 -> androidx.recyclerview.widget.RecyclerView$m$a:
    androidx.recyclerview.widget.RecyclerView$LayoutManager this$0 -> a
    int getParentEnd() -> a
    int getParentStart() -> b
    int getChildEnd(android.view.View) -> c
    int getChildStart(android.view.View) -> d
    android.view.View getChildAt(int) -> e
androidx.recyclerview.widget.RecyclerView$LayoutManager$2 -> androidx.recyclerview.widget.RecyclerView$m$b:
    androidx.recyclerview.widget.RecyclerView$LayoutManager this$0 -> a
    int getParentEnd() -> a
    int getParentStart() -> b
    int getChildEnd(android.view.View) -> c
    int getChildStart(android.view.View) -> d
    android.view.View getChildAt(int) -> e
androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry -> androidx.recyclerview.widget.RecyclerView$m$c:
androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties -> androidx.recyclerview.widget.RecyclerView$m$d:
    int spanCount -> b
    boolean reverseLayout -> c
    int orientation -> a
    boolean stackFromEnd -> d
androidx.recyclerview.widget.RecyclerView$LayoutParams -> androidx.recyclerview.widget.RecyclerView$n:
    androidx.recyclerview.widget.RecyclerView$ViewHolder mViewHolder -> a
    boolean mInsetsDirty -> c
    android.graphics.Rect mDecorInsets -> b
    boolean mPendingInvalidate -> d
    int getViewLayoutPosition() -> a
    boolean isItemChanged() -> b
    boolean isItemRemoved() -> c
androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener -> androidx.recyclerview.widget.RecyclerView$o:
    void onChildViewDetachedFromWindow(android.view.View) -> a
    void onChildViewAttachedToWindow(android.view.View) -> e
androidx.recyclerview.widget.RecyclerView$OnFlingListener -> androidx.recyclerview.widget.RecyclerView$p:
androidx.recyclerview.widget.RecyclerView$OnItemTouchListener -> androidx.recyclerview.widget.RecyclerView$q:
    void onRequestDisallowInterceptTouchEvent(boolean) -> b
    boolean onInterceptTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent) -> c
    void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent) -> d
androidx.recyclerview.widget.RecyclerView$OnScrollListener -> androidx.recyclerview.widget.RecyclerView$r:
androidx.recyclerview.widget.RecyclerView$RecycledViewPool -> androidx.recyclerview.widget.RecyclerView$s:
    android.util.SparseArray mScrap -> a
    int mAttachCount -> b
    androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData getScrapDataForType(int) -> a
    long runningAverage(long,long) -> b
androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData -> androidx.recyclerview.widget.RecyclerView$s$a:
    long mBindRunningAverageNs -> d
    long mCreateRunningAverageNs -> c
    int mMaxScrap -> b
    java.util.ArrayList mScrapHeap -> a
androidx.recyclerview.widget.RecyclerView$Recycler -> androidx.recyclerview.widget.RecyclerView$t:
    androidx.recyclerview.widget.RecyclerView this$0 -> h
    java.util.List mUnmodifiableAttachedScrap -> d
    androidx.recyclerview.widget.RecyclerView$RecycledViewPool mRecyclerPool -> g
    int mViewCacheMax -> f
    int mRequestedCacheMax -> e
    java.util.ArrayList mCachedViews -> c
    java.util.ArrayList mChangedScrap -> b
    java.util.ArrayList mAttachedScrap -> a
    1:1:androidx.core.view.AccessibilityDelegateCompat androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate.getAndRemoveOriginalDelegateForItem(android.view.View):0:0 -> a
    1:1:void addViewHolderToRecycledViewPool(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean):0 -> a
    2:2:void addViewHolderToRecycledViewPool(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean):0:0 -> a
    3:3:void dispatchViewRecycled(androidx.recyclerview.widget.RecyclerView$ViewHolder):0:0 -> a
    3:3:void addViewHolderToRecycledViewPool(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean):0 -> a
    4:4:void addViewHolderToRecycledViewPool(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean):0:0 -> a
    5:5:void androidx.recyclerview.widget.RecyclerView$RecycledViewPool.putRecycledView(androidx.recyclerview.widget.RecyclerView$ViewHolder):0:0 -> a
    5:5:void addViewHolderToRecycledViewPool(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean):0 -> a
    void clear() -> b
    1:1:boolean androidx.recyclerview.widget.RecyclerView$State.isPreLayout():0:0 -> c
    1:1:int convertPreLayoutPositionToPostLayout(int):0 -> c
    2:2:int convertPreLayoutPositionToPostLayout(int):0:0 -> c
    3:3:int androidx.recyclerview.widget.AdapterHelper.findPositionOffset(int):0:0 -> c
    3:3:int convertPreLayoutPositionToPostLayout(int):0 -> c
    4:4:int convertPreLayoutPositionToPostLayout(int):0:0 -> c
    androidx.recyclerview.widget.RecyclerView$RecycledViewPool getRecycledViewPool() -> d
    1:1:void androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl.clearPrefetchPositions():0:0 -> e
    1:1:void recycleAndClearCachedViews():0 -> e
    void recycleCachedViewAt(int) -> f
    void recycleView(android.view.View) -> g
    void recycleViewHolderInternal(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> h
    1:1:boolean androidx.recyclerview.widget.RecyclerView.canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder):0:0 -> i
    1:1:void scrapView(android.view.View):0 -> i
    2:2:boolean androidx.recyclerview.widget.DefaultItemAnimator.canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,java.util.List):0:0 -> i
    2:2:boolean androidx.recyclerview.widget.RecyclerView.canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder):0 -> i
    2:2:void scrapView(android.view.View):0 -> i
    3:3:boolean androidx.recyclerview.widget.SimpleItemAnimator.canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder):0:0 -> i
    3:3:boolean androidx.recyclerview.widget.RecyclerView$ItemAnimator.canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,java.util.List):0 -> i
    3:3:boolean androidx.recyclerview.widget.DefaultItemAnimator.canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,java.util.List):0 -> i
    3:3:boolean androidx.recyclerview.widget.RecyclerView.canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder):0 -> i
    3:3:void scrapView(android.view.View):0 -> i
    4:4:void scrapView(android.view.View):0:0 -> i
    1:1:boolean androidx.recyclerview.widget.RecyclerView$State.isPreLayout():0:0 -> j
    1:1:androidx.recyclerview.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    2:2:androidx.recyclerview.widget.RecyclerView$ViewHolder getChangedScrapViewForPosition(int):0:0 -> j
    2:2:androidx.recyclerview.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    3:3:int androidx.recyclerview.widget.AdapterHelper.findPositionOffset(int):0:0 -> j
    3:3:androidx.recyclerview.widget.RecyclerView$ViewHolder getChangedScrapViewForPosition(int):0 -> j
    3:3:androidx.recyclerview.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    4:4:androidx.recyclerview.widget.RecyclerView$ViewHolder getChangedScrapViewForPosition(int):0:0 -> j
    4:4:androidx.recyclerview.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    5:5:androidx.recyclerview.widget.RecyclerView$ViewHolder getScrapOrHiddenOrCachedHolderForPosition(int,boolean):0:0 -> j
    5:5:androidx.recyclerview.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    6:6:android.view.View androidx.recyclerview.widget.ChildHelper.findHiddenNonRemovedView(int):0:0 -> j
    6:6:androidx.recyclerview.widget.RecyclerView$ViewHolder getScrapOrHiddenOrCachedHolderForPosition(int,boolean):0 -> j
    6:6:androidx.recyclerview.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    7:7:androidx.recyclerview.widget.RecyclerView$ViewHolder androidx.recyclerview.widget.RecyclerView$5.getChildViewHolder(android.view.View):0:0 -> j
    7:7:android.view.View androidx.recyclerview.widget.ChildHelper.findHiddenNonRemovedView(int):0 -> j
    7:7:androidx.recyclerview.widget.RecyclerView$ViewHolder getScrapOrHiddenOrCachedHolderForPosition(int,boolean):0 -> j
    7:7:androidx.recyclerview.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    8:8:android.view.View androidx.recyclerview.widget.ChildHelper.findHiddenNonRemovedView(int):0:0 -> j
    8:8:androidx.recyclerview.widget.RecyclerView$ViewHolder getScrapOrHiddenOrCachedHolderForPosition(int,boolean):0 -> j
    8:8:androidx.recyclerview.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    9:9:androidx.recyclerview.widget.RecyclerView$ViewHolder getScrapOrHiddenOrCachedHolderForPosition(int,boolean):0:0 -> j
    9:9:androidx.recyclerview.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    10:10:void androidx.recyclerview.widget.ChildHelper.unhide(android.view.View):0:0 -> j
    10:10:androidx.recyclerview.widget.RecyclerView$ViewHolder getScrapOrHiddenOrCachedHolderForPosition(int,boolean):0 -> j
    10:10:androidx.recyclerview.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    11:11:int androidx.recyclerview.widget.RecyclerView$5.indexOfChild(android.view.View):0:0 -> j
    11:11:void androidx.recyclerview.widget.ChildHelper.unhide(android.view.View):0 -> j
    11:11:androidx.recyclerview.widget.RecyclerView$ViewHolder getScrapOrHiddenOrCachedHolderForPosition(int,boolean):0 -> j
    11:11:androidx.recyclerview.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    12:12:void androidx.recyclerview.widget.ChildHelper.unhide(android.view.View):0:0 -> j
    12:12:androidx.recyclerview.widget.RecyclerView$ViewHolder getScrapOrHiddenOrCachedHolderForPosition(int,boolean):0 -> j
    12:12:androidx.recyclerview.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    13:13:androidx.recyclerview.widget.RecyclerView$ViewHolder getScrapOrHiddenOrCachedHolderForPosition(int,boolean):0:0 -> j
    13:13:androidx.recyclerview.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    14:14:void androidx.recyclerview.widget.ChildHelper.unhide(android.view.View):0:0 -> j
    14:14:androidx.recyclerview.widget.RecyclerView$ViewHolder getScrapOrHiddenOrCachedHolderForPosition(int,boolean):0 -> j
    14:14:androidx.recyclerview.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    15:15:androidx.recyclerview.widget.RecyclerView$ViewHolder getScrapOrHiddenOrCachedHolderForPosition(int,boolean):0:0 -> j
    15:15:androidx.recyclerview.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    16:16:boolean validateViewHolderForOffsetPosition(androidx.recyclerview.widget.RecyclerView$ViewHolder):0:0 -> j
    16:16:androidx.recyclerview.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    17:17:boolean androidx.recyclerview.widget.RecyclerView$State.isPreLayout():0:0 -> j
    17:17:boolean validateViewHolderForOffsetPosition(androidx.recyclerview.widget.RecyclerView$ViewHolder):0 -> j
    17:17:androidx.recyclerview.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    18:18:boolean validateViewHolderForOffsetPosition(androidx.recyclerview.widget.RecyclerView$ViewHolder):0:0 -> j
    18:18:androidx.recyclerview.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    19:19:boolean androidx.recyclerview.widget.RecyclerView$State.isPreLayout():0:0 -> j
    19:19:boolean validateViewHolderForOffsetPosition(androidx.recyclerview.widget.RecyclerView$ViewHolder):0 -> j
    19:19:androidx.recyclerview.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    20:20:boolean validateViewHolderForOffsetPosition(androidx.recyclerview.widget.RecyclerView$ViewHolder):0:0 -> j
    20:20:androidx.recyclerview.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    21:21:androidx.recyclerview.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0:0 -> j
    22:22:boolean validateViewHolderForOffsetPosition(androidx.recyclerview.widget.RecyclerView$ViewHolder):0:0 -> j
    22:22:androidx.recyclerview.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    23:23:androidx.recyclerview.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0:0 -> j
    24:24:int androidx.recyclerview.widget.AdapterHelper.findPositionOffset(int):0:0 -> j
    24:24:androidx.recyclerview.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    25:25:androidx.recyclerview.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0:0 -> j
    26:26:androidx.recyclerview.widget.RecyclerView$ViewHolder getScrapOrCachedViewForId(long,int,boolean):0:0 -> j
    26:26:androidx.recyclerview.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    27:27:boolean androidx.recyclerview.widget.RecyclerView$State.isPreLayout():0:0 -> j
    27:27:androidx.recyclerview.widget.RecyclerView$ViewHolder getScrapOrCachedViewForId(long,int,boolean):0 -> j
    27:27:androidx.recyclerview.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    28:28:androidx.recyclerview.widget.RecyclerView$ViewHolder getScrapOrCachedViewForId(long,int,boolean):0:0 -> j
    28:28:androidx.recyclerview.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    29:29:void quickRecycleScrapView(android.view.View):0:0 -> j
    29:29:androidx.recyclerview.widget.RecyclerView$ViewHolder getScrapOrCachedViewForId(long,int,boolean):0 -> j
    29:29:androidx.recyclerview.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    30:30:androidx.recyclerview.widget.RecyclerView$ViewHolder getScrapOrCachedViewForId(long,int,boolean):0:0 -> j
    30:30:androidx.recyclerview.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    31:31:androidx.recyclerview.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0:0 -> j
    32:32:androidx.recyclerview.widget.RecyclerView$ViewHolder androidx.recyclerview.widget.RecyclerView$RecycledViewPool.getRecycledView(int):0:0 -> j
    32:32:androidx.recyclerview.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    33:33:androidx.recyclerview.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0:0 -> j
    34:34:boolean androidx.recyclerview.widget.RecyclerView$RecycledViewPool.willCreateInTime(int,long,long):0:0 -> j
    34:34:androidx.recyclerview.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    35:35:androidx.recyclerview.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0:0 -> j
    36:36:void androidx.recyclerview.widget.RecyclerView$RecycledViewPool.factorInCreateTime(int,long):0:0 -> j
    36:36:androidx.recyclerview.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    37:37:androidx.recyclerview.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0:0 -> j
    38:38:boolean androidx.recyclerview.widget.RecyclerView$State.isPreLayout():0:0 -> j
    38:38:androidx.recyclerview.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    39:39:androidx.recyclerview.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0:0 -> j
    40:40:boolean androidx.recyclerview.widget.RecyclerView$State.isPreLayout():0:0 -> j
    40:40:androidx.recyclerview.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    41:41:androidx.recyclerview.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0:0 -> j
    42:42:int androidx.recyclerview.widget.AdapterHelper.findPositionOffset(int):0:0 -> j
    42:42:androidx.recyclerview.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    43:43:boolean tryBindViewHolderByDeadline(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,long):0:0 -> j
    43:43:androidx.recyclerview.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    44:44:boolean androidx.recyclerview.widget.RecyclerView$RecycledViewPool.willBindInTime(int,long,long):0:0 -> j
    44:44:boolean tryBindViewHolderByDeadline(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,long):0 -> j
    44:44:androidx.recyclerview.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    45:45:boolean tryBindViewHolderByDeadline(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,long):0:0 -> j
    45:45:androidx.recyclerview.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    46:46:void androidx.recyclerview.widget.RecyclerView$RecycledViewPool.factorInBindTime(int,long):0:0 -> j
    46:46:boolean tryBindViewHolderByDeadline(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,long):0 -> j
    46:46:androidx.recyclerview.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    47:47:void attachAccessibilityDelegateOnBind(androidx.recyclerview.widget.RecyclerView$ViewHolder):0:0 -> j
    47:47:boolean tryBindViewHolderByDeadline(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,long):0 -> j
    47:47:androidx.recyclerview.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    48:48:boolean androidx.recyclerview.widget.RecyclerView.isAccessibilityEnabled():0:0 -> j
    48:48:void attachAccessibilityDelegateOnBind(androidx.recyclerview.widget.RecyclerView$ViewHolder):0 -> j
    48:48:boolean tryBindViewHolderByDeadline(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,long):0 -> j
    48:48:androidx.recyclerview.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    49:49:void attachAccessibilityDelegateOnBind(androidx.recyclerview.widget.RecyclerView$ViewHolder):0:0 -> j
    49:49:boolean tryBindViewHolderByDeadline(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,long):0 -> j
    49:49:androidx.recyclerview.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    50:50:int androidx.core.view.ViewCompat.getImportantForAccessibility(android.view.View):0:0 -> j
    50:50:void attachAccessibilityDelegateOnBind(androidx.recyclerview.widget.RecyclerView$ViewHolder):0 -> j
    50:50:boolean tryBindViewHolderByDeadline(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,long):0 -> j
    50:50:androidx.recyclerview.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    51:51:void androidx.core.view.ViewCompat.setImportantForAccessibility(android.view.View,int):0:0 -> j
    51:51:void attachAccessibilityDelegateOnBind(androidx.recyclerview.widget.RecyclerView$ViewHolder):0 -> j
    51:51:boolean tryBindViewHolderByDeadline(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,long):0 -> j
    51:51:androidx.recyclerview.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    52:52:void attachAccessibilityDelegateOnBind(androidx.recyclerview.widget.RecyclerView$ViewHolder):0:0 -> j
    52:52:boolean tryBindViewHolderByDeadline(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,long):0 -> j
    52:52:androidx.recyclerview.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    53:53:void androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate.saveOriginalDelegate(android.view.View):0:0 -> j
    53:53:void attachAccessibilityDelegateOnBind(androidx.recyclerview.widget.RecyclerView$ViewHolder):0 -> j
    53:53:boolean tryBindViewHolderByDeadline(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,long):0 -> j
    53:53:androidx.recyclerview.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    54:54:void attachAccessibilityDelegateOnBind(androidx.recyclerview.widget.RecyclerView$ViewHolder):0:0 -> j
    54:54:boolean tryBindViewHolderByDeadline(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,long):0 -> j
    54:54:androidx.recyclerview.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    55:55:boolean tryBindViewHolderByDeadline(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,long):0:0 -> j
    55:55:androidx.recyclerview.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    56:56:boolean androidx.recyclerview.widget.RecyclerView$State.isPreLayout():0:0 -> j
    56:56:boolean tryBindViewHolderByDeadline(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,long):0 -> j
    56:56:androidx.recyclerview.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    57:57:boolean tryBindViewHolderByDeadline(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,long):0:0 -> j
    57:57:androidx.recyclerview.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0 -> j
    58:58:androidx.recyclerview.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long):0:0 -> j
    void unscrapView(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> k
    void updateViewCacheSize() -> l
androidx.recyclerview.widget.RecyclerView$RecyclerListener -> androidx.recyclerview.widget.RecyclerView$u:
    void onViewRecycled(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> a
androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver -> androidx.recyclerview.widget.RecyclerView$v:
    androidx.recyclerview.widget.RecyclerView this$0 -> a
    void onChanged() -> a
    1:1:boolean androidx.recyclerview.widget.AdapterHelper.onItemRangeChanged(int,int,java.lang.Object):0:0 -> c
    1:1:void onItemRangeChanged(int,int,java.lang.Object):0 -> c
    2:2:void onItemRangeChanged(int,int,java.lang.Object):0:0 -> c
    1:1:boolean androidx.recyclerview.widget.AdapterHelper.onItemRangeInserted(int,int):0:0 -> d
    1:1:void onItemRangeInserted(int,int):0 -> d
    2:2:void onItemRangeInserted(int,int):0:0 -> d
    1:1:boolean androidx.recyclerview.widget.AdapterHelper.onItemRangeMoved(int,int,int):0:0 -> e
    1:1:void onItemRangeMoved(int,int,int):0 -> e
    2:2:void onItemRangeMoved(int,int,int):0:0 -> e
    3:3:boolean androidx.recyclerview.widget.AdapterHelper.onItemRangeMoved(int,int,int):0:0 -> e
    3:3:void onItemRangeMoved(int,int,int):0 -> e
    1:1:boolean androidx.recyclerview.widget.AdapterHelper.onItemRangeRemoved(int,int):0:0 -> f
    1:1:void onItemRangeRemoved(int,int):0 -> f
    2:2:void onItemRangeRemoved(int,int):0:0 -> f
    void onStateRestorationPolicyChanged() -> g
    1:1:void androidx.core.view.ViewCompat.postOnAnimation(android.view.View,java.lang.Runnable):0:0 -> h
    1:1:void triggerUpdateProcessor():0 -> h
    2:2:void triggerUpdateProcessor():0:0 -> h
androidx.recyclerview.widget.RecyclerView$SavedState -> androidx.recyclerview.widget.RecyclerView$w:
    android.os.Parcelable mLayoutState -> c
    1:1:void androidx.customview.view.AbsSavedState.writeToParcel(android.os.Parcel,int):0:0 -> writeToParcel
    1:1:void writeToParcel(android.os.Parcel,int):0 -> writeToParcel
    2:2:void writeToParcel(android.os.Parcel,int):0:0 -> writeToParcel
androidx.recyclerview.widget.RecyclerView$SavedState$1 -> androidx.recyclerview.widget.RecyclerView$w$a:
    1:1:androidx.recyclerview.widget.RecyclerView$SavedState createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    1:1:java.lang.Object createFromParcel(android.os.Parcel):0 -> createFromParcel
    2:2:androidx.recyclerview.widget.RecyclerView$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader):0:0 -> createFromParcel
    2:2:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader):0 -> createFromParcel
    1:1:androidx.recyclerview.widget.RecyclerView$SavedState[] newArray(int):0:0 -> newArray
    1:1:java.lang.Object[] newArray(int):0 -> newArray
androidx.recyclerview.widget.RecyclerView$SmoothScroller -> androidx.recyclerview.widget.RecyclerView$x:
    androidx.recyclerview.widget.RecyclerView mRecyclerView -> b
    boolean mRunning -> e
    androidx.recyclerview.widget.RecyclerView$LayoutManager mLayoutManager -> c
    boolean mStarted -> h
    int mTargetPosition -> a
    boolean mPendingInitialRun -> d
    android.view.View mTargetView -> f
    androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action mRecyclingAction -> g
    1:1:androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager():0:0 -> a
    1:1:android.graphics.PointF computeScrollVectorForPosition(int):0 -> a
    2:2:android.graphics.PointF computeScrollVectorForPosition(int):0:0 -> a
    1:1:int getChildPosition(android.view.View):0:0 -> b
    1:1:void onAnimation(int,int):0 -> b
    2:2:int androidx.recyclerview.widget.RecyclerView.getChildLayoutPosition(android.view.View):0:0 -> b
    2:2:int getChildPosition(android.view.View):0 -> b
    2:2:void onAnimation(int,int):0 -> b
    3:3:void onAnimation(int,int):0:0 -> b
    4:4:int androidx.recyclerview.widget.LinearSmoothScroller.getHorizontalSnapPreference():0:0 -> b
    4:4:void androidx.recyclerview.widget.LinearSmoothScroller.onTargetFound(android.view.View,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action):0 -> b
    4:4:void onAnimation(int,int):0 -> b
    5:5:androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager():0:0 -> b
    5:5:int androidx.recyclerview.widget.LinearSmoothScroller.calculateDxToMakeVisible(android.view.View,int):0 -> b
    5:5:void androidx.recyclerview.widget.LinearSmoothScroller.onTargetFound(android.view.View,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action):0 -> b
    5:5:void onAnimation(int,int):0 -> b
    6:6:int androidx.recyclerview.widget.LinearSmoothScroller.calculateDxToMakeVisible(android.view.View,int):0:0 -> b
    6:6:void androidx.recyclerview.widget.LinearSmoothScroller.onTargetFound(android.view.View,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action):0 -> b
    6:6:void onAnimation(int,int):0 -> b
    7:7:int androidx.recyclerview.widget.LinearSmoothScroller.getVerticalSnapPreference():0:0 -> b
    7:7:void androidx.recyclerview.widget.LinearSmoothScroller.onTargetFound(android.view.View,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action):0 -> b
    7:7:void onAnimation(int,int):0 -> b
    8:8:androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager():0:0 -> b
    8:8:int androidx.recyclerview.widget.LinearSmoothScroller.calculateDyToMakeVisible(android.view.View,int):0 -> b
    8:8:void androidx.recyclerview.widget.LinearSmoothScroller.onTargetFound(android.view.View,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action):0 -> b
    8:8:void onAnimation(int,int):0 -> b
    9:9:int androidx.recyclerview.widget.LinearSmoothScroller.calculateDyToMakeVisible(android.view.View,int):0:0 -> b
    9:9:void androidx.recyclerview.widget.LinearSmoothScroller.onTargetFound(android.view.View,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action):0 -> b
    9:9:void onAnimation(int,int):0 -> b
    10:10:void androidx.recyclerview.widget.LinearSmoothScroller.onTargetFound(android.view.View,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action):0:0 -> b
    10:10:void onAnimation(int,int):0 -> b
    11:11:int androidx.recyclerview.widget.LinearSmoothScroller.calculateTimeForDeceleration(int):0:0 -> b
    11:11:void androidx.recyclerview.widget.LinearSmoothScroller.onTargetFound(android.view.View,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action):0 -> b
    11:11:void onAnimation(int,int):0 -> b
    12:12:void androidx.recyclerview.widget.LinearSmoothScroller.onTargetFound(android.view.View,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action):0:0 -> b
    12:12:void onAnimation(int,int):0 -> b
    13:13:void androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action.update(int,int,int,android.view.animation.Interpolator):0:0 -> b
    13:13:void androidx.recyclerview.widget.LinearSmoothScroller.onTargetFound(android.view.View,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action):0 -> b
    13:13:void onAnimation(int,int):0 -> b
    14:14:void onAnimation(int,int):0:0 -> b
    15:15:int getChildCount():0:0 -> b
    15:15:void androidx.recyclerview.widget.LinearSmoothScroller.onSeekTargetStep(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action):0 -> b
    15:15:void onAnimation(int,int):0 -> b
    16:16:void androidx.recyclerview.widget.LinearSmoothScroller.onSeekTargetStep(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action):0:0 -> b
    16:16:void onAnimation(int,int):0 -> b
    17:17:int getTargetPosition():0:0 -> b
    17:17:void androidx.recyclerview.widget.LinearSmoothScroller.updateActionForInterimTarget(androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action):0 -> b
    17:17:void androidx.recyclerview.widget.LinearSmoothScroller.onSeekTargetStep(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action):0 -> b
    17:17:void onAnimation(int,int):0 -> b
    18:18:void androidx.recyclerview.widget.LinearSmoothScroller.updateActionForInterimTarget(androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action):0:0 -> b
    18:18:void androidx.recyclerview.widget.LinearSmoothScroller.onSeekTargetStep(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action):0 -> b
    18:18:void onAnimation(int,int):0 -> b
    19:19:void normalize(android.graphics.PointF):0:0 -> b
    19:19:void androidx.recyclerview.widget.LinearSmoothScroller.updateActionForInterimTarget(androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action):0 -> b
    19:19:void androidx.recyclerview.widget.LinearSmoothScroller.onSeekTargetStep(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action):0 -> b
    19:19:void onAnimation(int,int):0 -> b
    20:20:void androidx.recyclerview.widget.LinearSmoothScroller.updateActionForInterimTarget(androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action):0:0 -> b
    20:20:void androidx.recyclerview.widget.LinearSmoothScroller.onSeekTargetStep(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action):0 -> b
    20:20:void onAnimation(int,int):0 -> b
    21:21:void androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action.update(int,int,int,android.view.animation.Interpolator):0:0 -> b
    21:21:void androidx.recyclerview.widget.LinearSmoothScroller.updateActionForInterimTarget(androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action):0 -> b
    21:21:void androidx.recyclerview.widget.LinearSmoothScroller.onSeekTargetStep(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action):0 -> b
    21:21:void onAnimation(int,int):0 -> b
    22:22:int getTargetPosition():0:0 -> b
    22:22:void androidx.recyclerview.widget.LinearSmoothScroller.updateActionForInterimTarget(androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action):0 -> b
    22:22:void androidx.recyclerview.widget.LinearSmoothScroller.onSeekTargetStep(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action):0 -> b
    22:22:void onAnimation(int,int):0 -> b
    23:23:void androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action.jumpTo(int):0:0 -> b
    23:23:void androidx.recyclerview.widget.LinearSmoothScroller.updateActionForInterimTarget(androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action):0 -> b
    23:23:void androidx.recyclerview.widget.LinearSmoothScroller.onSeekTargetStep(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action):0 -> b
    23:23:void onAnimation(int,int):0 -> b
    24:24:void androidx.recyclerview.widget.LinearSmoothScroller.updateActionForInterimTarget(androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action):0:0 -> b
    24:24:void androidx.recyclerview.widget.LinearSmoothScroller.onSeekTargetStep(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action):0 -> b
    24:24:void onAnimation(int,int):0 -> b
    25:25:void onAnimation(int,int):0:0 -> b
    26:26:boolean androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action.hasJumpTarget():0:0 -> b
    26:26:void onAnimation(int,int):0 -> b
    27:27:void onAnimation(int,int):0:0 -> b
    1:1:void androidx.recyclerview.widget.LinearSmoothScroller.onStop():0:0 -> c
    1:1:void stop():0 -> c
    2:2:void stop():0:0 -> c
androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action -> androidx.recyclerview.widget.RecyclerView$x$a:
    android.view.animation.Interpolator mInterpolator -> e
    boolean mChanged -> f
    int mConsecutiveUpdates -> g
    int mJumpToPosition -> d
    int mDy -> b
    int mDuration -> c
    int mDx -> a
    1:1:void <init>(int,int,int,android.view.animation.Interpolator):0:0 -> <init>
    1:1:void <init>(int,int):0 -> <init>
    1:1:void validate():0:0 -> a
    1:1:void runIfNecessary(androidx.recyclerview.widget.RecyclerView):0 -> a
    2:2:void runIfNecessary(androidx.recyclerview.widget.RecyclerView):0:0 -> a
    3:3:void validate():0:0 -> a
    3:3:void runIfNecessary(androidx.recyclerview.widget.RecyclerView):0 -> a
    4:4:void runIfNecessary(androidx.recyclerview.widget.RecyclerView):0:0 -> a
androidx.recyclerview.widget.RecyclerView$SmoothScroller$ScrollVectorProvider -> androidx.recyclerview.widget.RecyclerView$x$b:
androidx.recyclerview.widget.RecyclerView$State -> androidx.recyclerview.widget.RecyclerView$y:
    int mFocusedSubChildId -> n
    int mFocusedItemPosition -> l
    boolean mIsMeasuring -> i
    boolean mRunSimpleAnimations -> j
    boolean mRunPredictiveAnimations -> k
    int mLayoutStep -> d
    int mItemCount -> e
    int mPreviousLayoutItemCount -> b
    int mDeletedInvisibleItemCountSincePreviousLayout -> c
    int mTargetPosition -> a
    boolean mStructureChanged -> f
    boolean mInPreLayout -> g
    boolean mTrackOldChangeHolders -> h
    long mFocusedItemId -> m
    void assertLayoutStep(int) -> a
    int getItemCount() -> b
androidx.recyclerview.widget.RecyclerView$ViewCacheExtension -> androidx.recyclerview.widget.RecyclerView$z:
androidx.recyclerview.widget.RecyclerView$ViewFlinger -> androidx.recyclerview.widget.RecyclerView$a0:
    androidx.recyclerview.widget.RecyclerView this$0 -> g
    boolean mEatRunOnAnimationRequest -> e
    android.view.animation.Interpolator mInterpolator -> d
    boolean mReSchedulePostAnimationCallback -> f
    int mLastFlingY -> b
    int mLastFlingX -> a
    android.widget.OverScroller mOverScroller -> c
    1:1:void internalPostOnAnimation():0:0 -> a
    1:1:void postOnAnimation():0 -> a
    2:2:void androidx.core.view.ViewCompat.postOnAnimation(android.view.View,java.lang.Runnable):0:0 -> a
    2:2:void internalPostOnAnimation():0 -> a
    2:2:void postOnAnimation():0 -> a
    1:1:int computeScrollDuration(int,int):0:0 -> b
    1:1:void smoothScrollBy(int,int,int,android.view.animation.Interpolator):0 -> b
    2:2:void smoothScrollBy(int,int,int,android.view.animation.Interpolator):0:0 -> b
    void stop() -> c
    1:1:boolean androidx.recyclerview.widget.RecyclerView$SmoothScroller.isPendingInitialRun():0:0 -> run
    1:1:void run():0 -> run
    2:2:boolean androidx.recyclerview.widget.RecyclerView$SmoothScroller.isRunning():0:0 -> run
    2:2:void run():0 -> run
    3:3:void run():0:0 -> run
    4:4:int androidx.recyclerview.widget.RecyclerView$SmoothScroller.getTargetPosition():0:0 -> run
    4:4:void run():0 -> run
    5:5:void androidx.recyclerview.widget.RecyclerView$SmoothScroller.setTargetPosition(int):0:0 -> run
    5:5:void run():0 -> run
    6:6:void run():0:0 -> run
    7:7:boolean androidx.recyclerview.widget.RecyclerView$SmoothScroller.isPendingInitialRun():0:0 -> run
    7:7:void run():0 -> run
    8:8:void run():0:0 -> run
    9:9:void androidx.recyclerview.widget.RecyclerView.absorbGlows(int,int):0:0 -> run
    9:9:void run():0 -> run
    10:10:void androidx.core.view.ViewCompat.postInvalidateOnAnimation(android.view.View):0:0 -> run
    10:10:void androidx.recyclerview.widget.RecyclerView.absorbGlows(int,int):0 -> run
    10:10:void run():0 -> run
    11:11:void run():0:0 -> run
    12:12:void androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl.clearPrefetchPositions():0:0 -> run
    12:12:void run():0 -> run
    13:13:void run():0:0 -> run
    14:14:boolean androidx.recyclerview.widget.RecyclerView$SmoothScroller.isPendingInitialRun():0:0 -> run
    14:14:void run():0 -> run
    15:15:void run():0:0 -> run
    16:16:void internalPostOnAnimation():0:0 -> run
    16:16:void run():0 -> run
    17:17:void androidx.core.view.ViewCompat.postOnAnimation(android.view.View,java.lang.Runnable):0:0 -> run
    17:17:void internalPostOnAnimation():0 -> run
    17:17:void run():0 -> run
    18:18:void run():0:0 -> run
androidx.recyclerview.widget.RecyclerView$ViewHolder -> androidx.recyclerview.widget.RecyclerView$b0:
    1:1:boolean androidx.core.view.ViewCompat.hasTransientState(android.view.View):0:0 -> doesTransientStatePreventRecycling
    1:1:boolean doesTransientStatePreventRecycling():0 -> doesTransientStatePreventRecycling
    1:1:boolean androidx.core.view.ViewCompat.hasTransientState(android.view.View):0:0 -> isRecyclable
    1:1:boolean isRecyclable():0 -> isRecyclable
    1:1:int androidx.core.view.ViewCompat.getImportantForAccessibility(android.view.View):0:0 -> onEnteredHiddenState
    1:1:void onEnteredHiddenState(androidx.recyclerview.widget.RecyclerView):0 -> onEnteredHiddenState
    2:2:void onEnteredHiddenState(androidx.recyclerview.widget.RecyclerView):0:0 -> onEnteredHiddenState
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate -> a.l.b.z:
    androidx.recyclerview.widget.RecyclerView mRecyclerView -> d
    androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate mItemDelegate -> e
    1:1:void androidx.core.view.AccessibilityDelegateCompat.onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent):0:0 -> c
    1:1:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent):0 -> c
    2:2:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent):0:0 -> c
    1:1:void androidx.core.view.AccessibilityDelegateCompat.onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0:0 -> d
    1:1:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0 -> d
    2:2:android.view.accessibility.AccessibilityNodeInfo androidx.core.view.accessibility.AccessibilityNodeInfoCompat.unwrap():0:0 -> d
    2:2:void androidx.core.view.AccessibilityDelegateCompat.onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0 -> d
    2:2:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0 -> d
    3:3:void androidx.core.view.AccessibilityDelegateCompat.onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0:0 -> d
    3:3:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0 -> d
    4:4:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0:0 -> d
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> g
    androidx.core.view.AccessibilityDelegateCompat getItemDelegate() -> j
    boolean shouldIgnore() -> k
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate -> a.l.b.z$a:
    java.util.Map mOriginalItemDelegates -> e
    androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate mRecyclerViewDelegate -> d
    1:1:boolean androidx.core.view.AccessibilityDelegateCompat.dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent):0:0 -> a
    1:1:boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent):0 -> a
    androidx.core.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> b
    1:1:void androidx.core.view.AccessibilityDelegateCompat.onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent):0:0 -> c
    1:1:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent):0 -> c
    1:1:void androidx.core.view.AccessibilityDelegateCompat.onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0:0 -> d
    1:1:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0 -> d
    2:2:android.view.accessibility.AccessibilityNodeInfo androidx.core.view.accessibility.AccessibilityNodeInfoCompat.unwrap():0:0 -> d
    2:2:void androidx.core.view.AccessibilityDelegateCompat.onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0 -> d
    2:2:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0 -> d
    3:3:void androidx.core.view.AccessibilityDelegateCompat.onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0:0 -> d
    3:3:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0 -> d
    1:1:void androidx.core.view.AccessibilityDelegateCompat.onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent):0:0 -> e
    1:1:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent):0 -> e
    1:1:boolean androidx.core.view.AccessibilityDelegateCompat.onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent):0:0 -> f
    1:1:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent):0 -> f
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> g
    1:1:void androidx.core.view.AccessibilityDelegateCompat.sendAccessibilityEvent(android.view.View,int):0:0 -> h
    1:1:void sendAccessibilityEvent(android.view.View,int):0 -> h
    1:1:void androidx.core.view.AccessibilityDelegateCompat.sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent):0:0 -> i
    1:1:void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent):0 -> i
androidx.recyclerview.widget.SimpleItemAnimator -> a.l.b.a0:
    boolean mSupportsChangeAnimations -> g
    1:1:boolean androidx.recyclerview.widget.DefaultItemAnimator.animateChange(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int):0:0 -> a
    1:1:boolean animateChange(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo):0 -> a
    boolean animateMove(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int) -> i
androidx.recyclerview.widget.StaggeredGridLayoutManager -> androidx.recyclerview.widget.StaggeredGridLayoutManager:
    int mGapStrategy -> n
    int[] mPrefetchDistances -> v
    androidx.recyclerview.widget.StaggeredGridLayoutManager$Span[] mSpans -> b
    int mPendingScrollPositionOffset -> l
    boolean mLastLayoutFromEnd -> o
    boolean mLastLayoutRTL -> p
    androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo mAnchorInfo -> t
    boolean mShouldReverseLayout -> i
    java.util.BitSet mRemainingSpans -> j
    int mPendingScrollPosition -> k
    java.lang.Runnable mCheckForGapsRunnable -> w
    int mSizePerSpan -> f
    boolean mSmoothScrollbarEnabled -> u
    int mOrientation -> e
    androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState mPendingSavedState -> q
    int mSpanCount -> a
    androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup mLazySpanLookup -> m
    androidx.recyclerview.widget.LayoutState mLayoutState -> g
    androidx.recyclerview.widget.OrientationHelper mSecondaryOrientation -> d
    androidx.recyclerview.widget.OrientationHelper mPrimaryOrientation -> c
    boolean mReverseLayout -> h
    int mFullSizeSpec -> r
    android.graphics.Rect mTmpRect -> s
    1:1:void setOrientation(int):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet,int,int):0:0 -> <init>
    3:3:void setSpanCount(int):0:0 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    4:4:void invalidateSpanAssignments():0:0 -> <init>
    4:4:void setSpanCount(int):0 -> <init>
    4:4:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    5:5:void setSpanCount(int):0:0 -> <init>
    5:5:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    6:6:void <init>(android.content.Context,android.util.AttributeSet,int,int):0:0 -> <init>
    7:7:void setReverseLayout(boolean):0:0 -> <init>
    7:7:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    8:8:void <init>(android.content.Context,android.util.AttributeSet,int,int):0:0 -> <init>
    9:9:void createOrientationHelpers():0:0 -> <init>
    9:9:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    int calculateScrollDirectionForPosition(int) -> a
    boolean checkForGaps() -> b
    1:1:boolean androidx.recyclerview.widget.LayoutState.hasMore(androidx.recyclerview.widget.RecyclerView$State):0:0 -> c
    1:1:int fill(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LayoutState,androidx.recyclerview.widget.RecyclerView$State):0 -> c
    2:2:int fill(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LayoutState,androidx.recyclerview.widget.RecyclerView$State):0:0 -> c
    3:3:android.view.View androidx.recyclerview.widget.LayoutState.next(androidx.recyclerview.widget.RecyclerView$Recycler):0:0 -> c
    3:3:int fill(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LayoutState,androidx.recyclerview.widget.RecyclerView$State):0 -> c
    4:4:android.view.View androidx.recyclerview.widget.RecyclerView$Recycler.getViewForPosition(int,boolean):0:0 -> c
    4:4:android.view.View androidx.recyclerview.widget.RecyclerView$Recycler.getViewForPosition(int):0 -> c
    4:4:android.view.View androidx.recyclerview.widget.LayoutState.next(androidx.recyclerview.widget.RecyclerView$Recycler):0 -> c
    4:4:int fill(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LayoutState,androidx.recyclerview.widget.RecyclerView$State):0 -> c
    5:5:android.view.View androidx.recyclerview.widget.LayoutState.next(androidx.recyclerview.widget.RecyclerView$Recycler):0:0 -> c
    5:5:int fill(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LayoutState,androidx.recyclerview.widget.RecyclerView$State):0 -> c
    6:6:int fill(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LayoutState,androidx.recyclerview.widget.RecyclerView$State):0:0 -> c
    7:7:int androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup.getSpan(int):0:0 -> c
    7:7:int fill(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LayoutState,androidx.recyclerview.widget.RecyclerView$State):0 -> c
    8:8:androidx.recyclerview.widget.StaggeredGridLayoutManager$Span getNextSpan(androidx.recyclerview.widget.LayoutState):0:0 -> c
    8:8:int fill(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LayoutState,androidx.recyclerview.widget.RecyclerView$State):0 -> c
    9:9:int fill(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LayoutState,androidx.recyclerview.widget.RecyclerView$State):0:0 -> c
    10:10:void androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup.setSpan(int,androidx.recyclerview.widget.StaggeredGridLayoutManager$Span):0:0 -> c
    10:10:int fill(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LayoutState,androidx.recyclerview.widget.RecyclerView$State):0 -> c
    11:11:int fill(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LayoutState,androidx.recyclerview.widget.RecyclerView$State):0:0 -> c
    12:12:void measureChildWithDecorationsAndMargin(android.view.View,androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams,boolean):0:0 -> c
    12:12:int fill(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LayoutState,androidx.recyclerview.widget.RecyclerView$State):0 -> c
    13:13:int fill(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LayoutState,androidx.recyclerview.widget.RecyclerView$State):0:0 -> c
    14:14:void attachViewToSpans(android.view.View,androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams,androidx.recyclerview.widget.LayoutState):0:0 -> c
    14:14:int fill(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LayoutState,androidx.recyclerview.widget.RecyclerView$State):0 -> c
    15:15:int fill(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LayoutState,androidx.recyclerview.widget.RecyclerView$State):0:0 -> c
    1:1:boolean androidx.recyclerview.widget.LayoutState.hasMore(androidx.recyclerview.widget.RecyclerView$State):0:0 -> collectAdjacentPrefetchPositions
    1:1:void collectAdjacentPrefetchPositions(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry):0 -> collectAdjacentPrefetchPositions
    2:2:void collectAdjacentPrefetchPositions(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry):0:0 -> collectAdjacentPrefetchPositions
    android.view.View findFirstVisibleItemClosestToEnd(boolean) -> d
    android.view.View findFirstVisibleItemClosestToStart(boolean) -> e
    void fixEndGap(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean) -> f
    void fixStartGap(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean) -> g
    int getFirstChildPosition() -> h
    int getLastChildPosition() -> i
    int getMaxEnd(int) -> j
    int getMinStart(int) -> k
    void handleUpdate(int,int,int) -> l
    1:1:boolean checkSpanForGap(androidx.recyclerview.widget.StaggeredGridLayoutManager$Span):0:0 -> m
    1:1:android.view.View hasGapsToFix():0 -> m
    2:2:int androidx.recyclerview.widget.StaggeredGridLayoutManager$Span.getEndLine():0:0 -> m
    2:2:boolean checkSpanForGap(androidx.recyclerview.widget.StaggeredGridLayoutManager$Span):0 -> m
    2:2:android.view.View hasGapsToFix():0 -> m
    3:3:boolean checkSpanForGap(androidx.recyclerview.widget.StaggeredGridLayoutManager$Span):0:0 -> m
    3:3:android.view.View hasGapsToFix():0 -> m
    4:4:int androidx.recyclerview.widget.StaggeredGridLayoutManager$Span.getStartLine():0:0 -> m
    4:4:boolean checkSpanForGap(androidx.recyclerview.widget.StaggeredGridLayoutManager$Span):0 -> m
    4:4:android.view.View hasGapsToFix():0 -> m
    5:5:boolean checkSpanForGap(androidx.recyclerview.widget.StaggeredGridLayoutManager$Span):0:0 -> m
    5:5:android.view.View hasGapsToFix():0 -> m
    6:6:android.view.View hasGapsToFix():0:0 -> m
    1:1:void applyPendingSavedState(androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo):0:0 -> n
    1:1:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean):0 -> n
    2:2:void androidx.recyclerview.widget.StaggeredGridLayoutManager$Span.setLine(int):0:0 -> n
    2:2:void applyPendingSavedState(androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo):0 -> n
    2:2:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean):0 -> n
    3:3:void androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState.invalidateSpanInfo():0:0 -> n
    3:3:void applyPendingSavedState(androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo):0 -> n
    3:3:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean):0 -> n
    4:4:void applyPendingSavedState(androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo):0:0 -> n
    4:4:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean):0 -> n
    5:5:void setReverseLayout(boolean):0:0 -> n
    5:5:void applyPendingSavedState(androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo):0 -> n
    5:5:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean):0 -> n
    6:6:void applyPendingSavedState(androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo):0:0 -> n
    6:6:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean):0 -> n
    7:7:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean):0:0 -> n
    8:8:boolean androidx.recyclerview.widget.RecyclerView$State.isPreLayout():0:0 -> n
    8:8:boolean updateAnchorFromPendingData(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo):0 -> n
    8:8:void updateAnchorInfoForLayout(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo):0 -> n
    8:8:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean):0 -> n
    9:9:boolean updateAnchorFromPendingData(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo):0:0 -> n
    9:9:void updateAnchorInfoForLayout(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo):0 -> n
    9:9:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean):0 -> n
    10:10:void androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo.assignCoordinateFromPadding(int):0:0 -> n
    10:10:boolean updateAnchorFromPendingData(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo):0 -> n
    10:10:void updateAnchorInfoForLayout(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo):0 -> n
    10:10:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean):0 -> n
    11:11:boolean updateAnchorFromPendingData(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo):0:0 -> n
    11:11:void updateAnchorInfoForLayout(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo):0 -> n
    11:11:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean):0 -> n
    12:12:boolean updateAnchorFromChildren(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo):0:0 -> n
    12:12:void updateAnchorInfoForLayout(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo):0 -> n
    12:12:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean):0 -> n
    13:13:int findLastReferenceChildPosition(int):0:0 -> n
    13:13:boolean updateAnchorFromChildren(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo):0 -> n
    13:13:void updateAnchorInfoForLayout(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo):0 -> n
    13:13:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean):0 -> n
    14:14:int findFirstReferenceChildPosition(int):0:0 -> n
    14:14:boolean updateAnchorFromChildren(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo):0 -> n
    14:14:void updateAnchorInfoForLayout(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo):0 -> n
    14:14:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean):0 -> n
    15:15:boolean updateAnchorFromChildren(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo):0:0 -> n
    15:15:void updateAnchorInfoForLayout(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo):0 -> n
    15:15:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean):0 -> n
    16:16:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean):0:0 -> n
    17:17:void androidx.recyclerview.widget.StaggeredGridLayoutManager$Span.setLine(int):0:0 -> n
    17:17:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean):0 -> n
    18:18:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean):0:0 -> n
    19:19:void androidx.recyclerview.widget.StaggeredGridLayoutManager$Span.setLine(int):0:0 -> n
    19:19:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean):0 -> n
    20:20:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean):0:0 -> n
    21:21:void androidx.recyclerview.widget.StaggeredGridLayoutManager$Span.cacheReferenceLineAndClear(boolean,int):0:0 -> n
    21:21:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean):0 -> n
    22:22:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean):0:0 -> n
    23:23:void androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo.saveSpanReferenceLines(androidx.recyclerview.widget.StaggeredGridLayoutManager$Span[]):0:0 -> n
    23:23:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean):0 -> n
    24:24:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean):0:0 -> n
    25:25:void updateMeasureSpecs(int):0:0 -> n
    25:25:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean):0 -> n
    26:26:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean):0:0 -> n
    27:27:void repositionToWrapContentIfNecessary():0:0 -> n
    27:27:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean):0 -> n
    28:28:void updateMeasureSpecs(int):0:0 -> n
    28:28:void repositionToWrapContentIfNecessary():0 -> n
    28:28:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean):0 -> n
    29:29:void repositionToWrapContentIfNecessary():0:0 -> n
    29:29:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean):0 -> n
    30:30:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean):0:0 -> n
    31:31:boolean androidx.recyclerview.widget.RecyclerView$State.isPreLayout():0:0 -> n
    31:31:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean):0 -> n
    32:32:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean):0:0 -> n
    33:33:boolean androidx.recyclerview.widget.RecyclerView$State.isPreLayout():0:0 -> n
    33:33:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean):0 -> n
    34:34:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean):0:0 -> n
    boolean preferLastSpan(int) -> o
    1:1:void androidx.recyclerview.widget.StaggeredGridLayoutManager$Span.onOffset(int):0:0 -> offsetChildrenHorizontal
    1:1:void offsetChildrenHorizontal(int):0 -> offsetChildrenHorizontal
    1:1:void androidx.recyclerview.widget.StaggeredGridLayoutManager$Span.onOffset(int):0:0 -> offsetChildrenVertical
    1:1:void offsetChildrenVertical(int):0 -> offsetChildrenVertical
    1:1:int convertFocusDirectionToLayoutDirection(int):0:0 -> onFocusSearchFailed
    1:1:android.view.View onFocusSearchFailed(android.view.View,int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State):0 -> onFocusSearchFailed
    2:2:android.view.View onFocusSearchFailed(android.view.View,int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State):0:0 -> onFocusSearchFailed
    1:1:void androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState.invalidateAnchorPositionInfo():0:0 -> onRestoreInstanceState
    1:1:void onRestoreInstanceState(android.os.Parcelable):0 -> onRestoreInstanceState
    2:2:void androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState.invalidateSpanInfo():0:0 -> onRestoreInstanceState
    2:2:void onRestoreInstanceState(android.os.Parcelable):0 -> onRestoreInstanceState
    3:3:void onRestoreInstanceState(android.os.Parcelable):0:0 -> onRestoreInstanceState
    1:1:int findFirstVisibleItemPositionInt():0:0 -> onSaveInstanceState
    1:1:android.os.Parcelable onSaveInstanceState():0 -> onSaveInstanceState
    2:2:android.os.Parcelable onSaveInstanceState():0:0 -> onSaveInstanceState
    void prepareLayoutStateForDelta(int,androidx.recyclerview.widget.RecyclerView$State) -> p
    1:1:int getMaxStart(int):0:0 -> q
    1:1:void recycle(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LayoutState):0 -> q
    2:2:void recycle(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LayoutState):0:0 -> q
    3:3:int getMinEnd(int):0:0 -> q
    3:3:void recycle(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LayoutState):0 -> q
    4:4:void recycle(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LayoutState):0:0 -> q
    void recycleFromEnd(androidx.recyclerview.widget.RecyclerView$Recycler,int) -> r
    void recycleFromStart(androidx.recyclerview.widget.RecyclerView$Recycler,int) -> s
    1:1:void androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState.invalidateAnchorPositionInfo():0:0 -> scrollToPosition
    1:1:void scrollToPosition(int):0 -> scrollToPosition
    2:2:void scrollToPosition(int):0:0 -> scrollToPosition
    1:1:void androidx.recyclerview.widget.RecyclerView$SmoothScroller.setTargetPosition(int):0:0 -> smoothScrollToPosition
    1:1:void smoothScrollToPosition(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State,int):0 -> smoothScrollToPosition
    2:2:void smoothScrollToPosition(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State,int):0:0 -> smoothScrollToPosition
    void setLayoutStateDirection(int) -> t
    void updateAllRemainingSpans(int,int) -> u
    1:1:int androidx.recyclerview.widget.RecyclerView$State.getTargetScrollPosition():0:0 -> v
    1:1:void updateLayoutState(int,androidx.recyclerview.widget.RecyclerView$State):0 -> v
    2:2:void updateLayoutState(int,androidx.recyclerview.widget.RecyclerView$State):0:0 -> v
    1:1:int androidx.recyclerview.widget.StaggeredGridLayoutManager$Span.getDeletedSize():0:0 -> w
    1:1:void updateRemainingSpans(androidx.recyclerview.widget.StaggeredGridLayoutManager$Span,int,int):0 -> w
    2:2:int androidx.recyclerview.widget.StaggeredGridLayoutManager$Span.getStartLine():0:0 -> w
    2:2:void updateRemainingSpans(androidx.recyclerview.widget.StaggeredGridLayoutManager$Span,int,int):0 -> w
    3:3:int androidx.recyclerview.widget.StaggeredGridLayoutManager$Span.getEndLine():0:0 -> w
    3:3:void updateRemainingSpans(androidx.recyclerview.widget.StaggeredGridLayoutManager$Span,int,int):0 -> w
    4:4:void updateRemainingSpans(androidx.recyclerview.widget.StaggeredGridLayoutManager$Span,int,int):0:0 -> w
    int updateSpecWithExtra(int,int,int) -> x
androidx.recyclerview.widget.StaggeredGridLayoutManager$1 -> androidx.recyclerview.widget.StaggeredGridLayoutManager$a:
    androidx.recyclerview.widget.StaggeredGridLayoutManager this$0 -> a
androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo -> androidx.recyclerview.widget.StaggeredGridLayoutManager$b:
    int[] mSpanReferenceLines -> f
    androidx.recyclerview.widget.StaggeredGridLayoutManager this$0 -> g
    boolean mValid -> e
    int mOffset -> b
    boolean mLayoutFromEnd -> c
    int mPosition -> a
    boolean mInvalidateOffsets -> d
    void assignCoordinateFromPadding() -> a
    void reset() -> b
androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams -> androidx.recyclerview.widget.StaggeredGridLayoutManager$c:
    androidx.recyclerview.widget.StaggeredGridLayoutManager$Span mSpan -> e
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup -> androidx.recyclerview.widget.StaggeredGridLayoutManager$d:
    java.util.List mFullSpanItems -> b
    int[] mData -> a
    void clear() -> a
    1:1:int sizeForPosition(int):0:0 -> b
    1:1:void ensureSize(int):0 -> b
    2:2:void ensureSize(int):0:0 -> b
    androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem getFullSpanItem(int) -> c
    1:1:int invalidateFullSpansAfter(int):0:0 -> d
    1:1:int invalidateAfter(int):0 -> d
    2:2:int invalidateAfter(int):0:0 -> d
    1:1:void offsetFullSpansForAddition(int,int):0:0 -> e
    1:1:void offsetForAddition(int,int):0 -> e
    1:1:void offsetFullSpansForRemoval(int,int):0:0 -> f
    1:1:void offsetForRemoval(int,int):0 -> f
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem -> androidx.recyclerview.widget.StaggeredGridLayoutManager$d$a:
    int[] mGapPerSpan -> c
    int mGapDir -> b
    int mPosition -> a
    boolean mHasUnwantedGapAfter -> d
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem$1 -> androidx.recyclerview.widget.StaggeredGridLayoutManager$d$a$a:
    1:1:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    1:1:java.lang.Object createFromParcel(android.os.Parcel):0 -> createFromParcel
    1:1:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem[] newArray(int):0:0 -> newArray
    1:1:java.lang.Object[] newArray(int):0 -> newArray
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState -> androidx.recyclerview.widget.StaggeredGridLayoutManager$e:
    int[] mSpanLookup -> f
    boolean mAnchorLayoutFromEnd -> i
    boolean mLastLayoutRTL -> j
    int[] mSpanOffsets -> d
    int mSpanLookupSize -> e
    java.util.List mFullSpanItems -> g
    boolean mReverseLayout -> h
    int mVisibleAnchorPosition -> b
    int mSpanOffsetsSize -> c
    int mAnchorPosition -> a
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState$1 -> androidx.recyclerview.widget.StaggeredGridLayoutManager$e$a:
    1:1:androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    1:1:java.lang.Object createFromParcel(android.os.Parcel):0 -> createFromParcel
    1:1:androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState[] newArray(int):0:0 -> newArray
    1:1:java.lang.Object[] newArray(int):0 -> newArray
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span -> androidx.recyclerview.widget.StaggeredGridLayoutManager$f:
    androidx.recyclerview.widget.StaggeredGridLayoutManager this$0 -> f
    int mDeletedSize -> d
    int mIndex -> e
    int mCachedStart -> b
    int mCachedEnd -> c
    java.util.ArrayList mViews -> a
    void appendToSpan(android.view.View) -> a
    void calculateCachedEnd() -> b
    void calculateCachedStart() -> c
    1:1:void invalidateCache():0:0 -> d
    1:1:void clear():0 -> d
    2:2:void clear():0:0 -> d
    int findFirstPartiallyVisibleItemPosition() -> e
    int findLastPartiallyVisibleItemPosition() -> f
    1:1:int findOnePartiallyOrCompletelyVisibleChild(int,int,boolean,boolean,boolean):0:0 -> g
    1:1:int findOnePartiallyVisibleChild(int,int,boolean):0 -> g
    int getEndLine(int) -> h
    android.view.View getFocusableViewAfter(int,int) -> i
    androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams getLayoutParams(android.view.View) -> j
    int getStartLine(int) -> k
    void popEnd() -> l
    void popStart() -> m
    void prependToSpan(android.view.View) -> n
androidx.recyclerview.widget.ViewBoundsCheck -> a.l.b.b0:
    androidx.recyclerview.widget.ViewBoundsCheck$Callback mCallback -> a
    androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags mBoundFlags -> b
    1:1:void androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags.setBounds(int,int,int,int):0:0 -> a
    1:1:android.view.View findOneViewWithinBoundFlags(int,int,int,int):0 -> a
    2:2:void androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags.resetFlags():0:0 -> a
    2:2:android.view.View findOneViewWithinBoundFlags(int,int,int,int):0 -> a
    3:3:void androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags.addFlags(int):0:0 -> a
    3:3:android.view.View findOneViewWithinBoundFlags(int,int,int,int):0 -> a
    4:4:android.view.View findOneViewWithinBoundFlags(int,int,int,int):0:0 -> a
    5:5:void androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags.resetFlags():0:0 -> a
    5:5:android.view.View findOneViewWithinBoundFlags(int,int,int,int):0 -> a
    6:6:void androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags.addFlags(int):0:0 -> a
    6:6:android.view.View findOneViewWithinBoundFlags(int,int,int,int):0 -> a
    7:7:android.view.View findOneViewWithinBoundFlags(int,int,int,int):0:0 -> a
    1:1:void androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags.setBounds(int,int,int,int):0:0 -> b
    1:1:boolean isViewWithinBoundFlags(android.view.View,int):0 -> b
    2:2:boolean isViewWithinBoundFlags(android.view.View,int):0:0 -> b
    3:3:void androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags.resetFlags():0:0 -> b
    3:3:boolean isViewWithinBoundFlags(android.view.View,int):0 -> b
    4:4:void androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags.addFlags(int):0:0 -> b
    4:4:boolean isViewWithinBoundFlags(android.view.View,int):0 -> b
    5:5:boolean isViewWithinBoundFlags(android.view.View,int):0:0 -> b
androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags -> a.l.b.b0$a:
    int mChildStart -> d
    int mChildEnd -> e
    int mRvStart -> b
    int mRvEnd -> c
    int mBoundFlags -> a
    boolean boundsMatch() -> a
    int compare(int,int) -> b
androidx.recyclerview.widget.ViewBoundsCheck$Callback -> a.l.b.b0$b:
    int getParentEnd() -> a
    int getParentStart() -> b
    int getChildEnd(android.view.View) -> c
    int getChildStart(android.view.View) -> d
    android.view.View getChildAt(int) -> e
androidx.recyclerview.widget.ViewInfoStore -> a.l.b.c0:
    androidx.collection.SimpleArrayMap mLayoutHolderMap -> a
    androidx.collection.LongSparseArray mOldChangedHolders -> b
    1:1:java.lang.Object androidx.collection.SimpleArrayMap.get(java.lang.Object):0:0 -> a
    1:1:void addToDisappearedInLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder):0 -> a
    2:2:void addToDisappearedInLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder):0:0 -> a
    1:1:java.lang.Object androidx.collection.SimpleArrayMap.get(java.lang.Object):0:0 -> b
    1:1:void addToPostLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo):0 -> b
    2:2:void addToPostLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo):0:0 -> b
    1:1:java.lang.Object androidx.collection.SimpleArrayMap.get(java.lang.Object):0:0 -> c
    1:1:void addToPreLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo):0 -> c
    2:2:void addToPreLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo):0:0 -> c
    1:1:java.lang.Object androidx.collection.SimpleArrayMap.get(java.lang.Object):0:0 -> d
    1:1:boolean isDisappearing(androidx.recyclerview.widget.RecyclerView$ViewHolder):0 -> d
    2:2:boolean isDisappearing(androidx.recyclerview.widget.RecyclerView$ViewHolder):0:0 -> d
    androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo popFromLayoutStep(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> e
    1:1:java.lang.Object androidx.collection.SimpleArrayMap.get(java.lang.Object):0:0 -> f
    1:1:void removeFromDisappearedInLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder):0 -> f
    2:2:void removeFromDisappearedInLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder):0:0 -> f
    1:1:int androidx.collection.LongSparseArray.size():0:0 -> g
    1:1:void removeViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder):0 -> g
    2:2:void removeViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder):0:0 -> g
    3:3:java.lang.Object androidx.collection.LongSparseArray.valueAt(int):0:0 -> g
    3:3:void removeViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder):0 -> g
    4:4:void removeViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder):0:0 -> g
    5:5:void androidx.collection.LongSparseArray.removeAt(int):0:0 -> g
    5:5:void removeViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder):0 -> g
    6:6:void removeViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder):0:0 -> g
androidx.recyclerview.widget.ViewInfoStore$InfoRecord -> a.l.b.c0$a:
    androidx.core.util.Pools$Pool sPool -> d
    androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo preInfo -> b
    androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo postInfo -> c
    int flags -> a
    androidx.recyclerview.widget.ViewInfoStore$InfoRecord obtain() -> a
    void recycle(androidx.recyclerview.widget.ViewInfoStore$InfoRecord) -> b
androidx.recyclerview.widget.ViewInfoStore$ProcessCallback -> a.l.b.c0$b:
androidx.savedstate.Recreator -> androidx.savedstate.Recreator:
    androidx.savedstate.SavedStateRegistryOwner mOwner -> a
    1:1:void androidx.lifecycle.LifecycleRegistry.removeObserver(androidx.lifecycle.LifecycleObserver):0:0 -> g
    1:1:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):0 -> g
    2:2:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):0:0 -> g
    3:3:void reflectiveNew(java.lang.String):0:0 -> g
    3:3:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):0 -> g
    4:4:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):0:0 -> g
androidx.savedstate.Recreator$SavedStateProvider -> androidx.savedstate.Recreator$a:
    java.util.Set mClasses -> a
    android.os.Bundle saveState() -> a
androidx.savedstate.SavedStateRegistry -> a.m.a:
    android.os.Bundle mRestoredState -> b
    androidx.savedstate.Recreator$SavedStateProvider mRecreatorProvider -> d
    boolean mAllowingSavingState -> e
    androidx.arch.core.internal.SafeIterableMap mComponents -> a
    boolean mRestored -> c
    android.os.Bundle consumeRestoredStateForKey(java.lang.String) -> a
    void registerSavedStateProvider(java.lang.String,androidx.savedstate.SavedStateRegistry$SavedStateProvider) -> b
    1:1:void androidx.savedstate.Recreator$SavedStateProvider.add(java.lang.String):0:0 -> c
    1:1:void runOnNextRecreation(java.lang.Class):0 -> c
    2:2:void runOnNextRecreation(java.lang.Class):0:0 -> c
androidx.savedstate.SavedStateRegistry$1 -> androidx.savedstate.SavedStateRegistry$1:
    androidx.savedstate.SavedStateRegistry this$0 -> a
    void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> g
androidx.savedstate.SavedStateRegistry$AutoRecreated -> a.m.a$a:
    void onRecreated(androidx.savedstate.SavedStateRegistryOwner) -> a
androidx.savedstate.SavedStateRegistry$SavedStateProvider -> a.m.a$b:
    android.os.Bundle saveState() -> a
androidx.savedstate.SavedStateRegistryController -> a.m.b:
    androidx.savedstate.SavedStateRegistryOwner mOwner -> a
    androidx.savedstate.SavedStateRegistry mRegistry -> b
    1:1:androidx.lifecycle.Lifecycle$State androidx.lifecycle.LifecycleRegistry.getCurrentState():0:0 -> a
    1:1:void performRestore(android.os.Bundle):0 -> a
    2:2:void performRestore(android.os.Bundle):0:0 -> a
    3:3:void androidx.savedstate.SavedStateRegistry.performRestore(androidx.lifecycle.Lifecycle,android.os.Bundle):0:0 -> a
    3:3:void performRestore(android.os.Bundle):0 -> a
    4:4:void performRestore(android.os.Bundle):0:0 -> a
    1:1:void androidx.savedstate.SavedStateRegistry.performSave(android.os.Bundle):0:0 -> b
    1:1:void performSave(android.os.Bundle):0 -> b
androidx.savedstate.SavedStateRegistryOwner -> a.m.c:
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon -> a.n.a.a.a:
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat -> a.n.a.a.b:
androidx.versionedparcelable.ParcelImpl -> androidx.versionedparcelable.ParcelImpl:
    androidx.versionedparcelable.VersionedParcelable mParcel -> a
androidx.versionedparcelable.ParcelImpl$1 -> androidx.versionedparcelable.ParcelImpl$a:
    1:1:androidx.versionedparcelable.ParcelImpl createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    1:1:java.lang.Object createFromParcel(android.os.Parcel):0 -> createFromParcel
    1:1:androidx.versionedparcelable.ParcelImpl[] newArray(int):0:0 -> newArray
    1:1:java.lang.Object[] newArray(int):0 -> newArray
androidx.versionedparcelable.VersionedParcel -> a.o.a:
    androidx.collection.ArrayMap mParcelizerCache -> c
    androidx.collection.ArrayMap mReadCache -> a
    androidx.collection.ArrayMap mWriteCache -> b
    void closeField() -> a
    androidx.versionedparcelable.VersionedParcel createSubParcel() -> b
    1:1:java.lang.Object androidx.collection.SimpleArrayMap.get(java.lang.Object):0:0 -> c
    1:1:java.lang.Class findParcelClass(java.lang.Class):0 -> c
    2:2:java.lang.Class findParcelClass(java.lang.Class):0:0 -> c
    1:1:java.lang.Object androidx.collection.SimpleArrayMap.get(java.lang.Object):0:0 -> d
    1:1:java.lang.reflect.Method getReadMethod(java.lang.String):0 -> d
    2:2:java.lang.reflect.Method getReadMethod(java.lang.String):0:0 -> d
    1:1:java.lang.Object androidx.collection.SimpleArrayMap.get(java.lang.Object):0:0 -> e
    1:1:java.lang.reflect.Method getWriteMethod(java.lang.Class):0 -> e
    2:2:java.lang.reflect.Method getWriteMethod(java.lang.Class):0:0 -> e
    boolean readBoolean() -> f
    byte[] readByteArray() -> g
    java.lang.CharSequence readCharSequence() -> h
    boolean readField(int) -> i
    int readInt() -> j
    int readInt(int,int) -> k
    android.os.Parcelable readParcelable() -> l
    android.os.Parcelable readParcelable(android.os.Parcelable,int) -> m
    java.lang.String readString() -> n
    1:1:androidx.versionedparcelable.VersionedParcelable readFromParcel(java.lang.String,androidx.versionedparcelable.VersionedParcel):0:0 -> o
    1:1:androidx.versionedparcelable.VersionedParcelable readVersionedParcelable():0 -> o
    void setOutputField(int) -> p
    void writeBoolean(boolean) -> q
    void writeByteArray(byte[]) -> r
    void writeCharSequence(java.lang.CharSequence) -> s
    void writeInt(int) -> t
    void writeParcelable(android.os.Parcelable) -> u
    void writeString(java.lang.String) -> v
    1:1:void writeVersionedParcelableCreator(androidx.versionedparcelable.VersionedParcelable):0:0 -> w
    1:1:void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable):0 -> w
    2:2:void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable):0:0 -> w
    3:3:void writeToParcel(androidx.versionedparcelable.VersionedParcelable,androidx.versionedparcelable.VersionedParcel):0:0 -> w
    3:3:void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable):0 -> w
    4:4:void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable):0:0 -> w
    5:5:void writeToParcel(androidx.versionedparcelable.VersionedParcelable,androidx.versionedparcelable.VersionedParcel):0:0 -> w
    5:5:void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable):0 -> w
    6:6:void writeVersionedParcelableCreator(androidx.versionedparcelable.VersionedParcelable):0:0 -> w
    6:6:void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable):0 -> w
androidx.versionedparcelable.VersionedParcelParcel -> a.o.b:
    android.util.SparseIntArray mPositionLookup -> d
    java.lang.String mPrefix -> h
    int mNextRead -> j
    android.os.Parcel mParcel -> e
    int mFieldId -> k
    int mCurrentField -> i
    int mOffset -> f
    int mEnd -> g
    void closeField() -> a
    androidx.versionedparcelable.VersionedParcel createSubParcel() -> b
    boolean readBoolean() -> f
    byte[] readByteArray() -> g
    java.lang.CharSequence readCharSequence() -> h
    boolean readField(int) -> i
    int readInt() -> j
    android.os.Parcelable readParcelable() -> l
    java.lang.String readString() -> n
    1:1:void writeInt(int):0:0 -> p
    1:1:void setOutputField(int):0 -> p
    void writeBoolean(boolean) -> q
    void writeByteArray(byte[]) -> r
    void writeCharSequence(java.lang.CharSequence) -> s
    void writeInt(int) -> t
    void writeParcelable(android.os.Parcelable) -> u
    void writeString(java.lang.String) -> v
androidx.versionedparcelable.VersionedParcelable -> a.o.c:
com.android.tools.r8.GeneratedOutlineSupport -> b.a.a.a.a:
    java.lang.String outline0(androidx.recyclerview.widget.RecyclerView,java.lang.StringBuilder) -> a
    java.lang.String outline1(java.lang.String,androidx.fragment.app.Fragment,java.lang.String) -> b
    java.lang.String outline2(java.lang.String,java.lang.String) -> c
    java.lang.StringBuilder outline4(java.lang.String) -> d
com.vincent_falzon.discreetlauncher.ActivityMain -> com.vincent_falzon.discreetlauncher.ActivityMain:
    1:1:android.graphics.drawable.Drawable androidx.core.content.res.ResourcesCompat.getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme):0:0 -> displayFavorites
    1:1:void displayFavorites(boolean):0 -> displayFavorites
    2:2:void displayFavorites(boolean):0:0 -> displayFavorites
    3:3:android.graphics.drawable.Drawable androidx.core.graphics.drawable.DrawableCompat.unwrap(android.graphics.drawable.Drawable):0:0 -> displayFavorites
    3:3:void displayFavorites(boolean):0 -> displayFavorites
    4:4:void displayFavorites(boolean):0:0 -> displayFavorites
    1:1:android.content.SharedPreferences androidx.preference.PreferenceManager.getDefaultSharedPreferences(android.content.Context):0:0 -> onCreate
    1:1:void onCreate(android.os.Bundle):0 -> onCreate
    2:2:void onCreate(android.os.Bundle):0:0 -> onCreate
    1:1:boolean androidx.core.view.GestureDetectorCompat.onTouchEvent(android.view.MotionEvent):0:0 -> onTouchEvent
    1:1:boolean onTouchEvent(android.view.MotionEvent):0 -> onTouchEvent
    2:2:boolean androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr2.onTouchEvent(android.view.MotionEvent):0:0 -> onTouchEvent
    2:2:boolean androidx.core.view.GestureDetectorCompat.onTouchEvent(android.view.MotionEvent):0 -> onTouchEvent
    2:2:boolean onTouchEvent(android.view.MotionEvent):0 -> onTouchEvent
    3:3:boolean onTouchEvent(android.view.MotionEvent):0:0 -> onTouchEvent
com.vincent_falzon.discreetlauncher.RecyclerAdapter -> com.vincent_falzon.discreetlauncher.RecyclerAdapter:
    1:1:android.content.SharedPreferences androidx.preference.PreferenceManager.getDefaultSharedPreferences(android.content.Context):0:0 -> <init>
    1:1:void <init>(android.content.Context,java.util.ArrayList,int):0 -> <init>
    2:2:void <init>(android.content.Context,java.util.ArrayList,int):0:0 -> <init>
com.vincent_falzon.discreetlauncher.core.ApplicationsList -> com.vincent_falzon.discreetlauncher.core.ApplicationsList:
    1:1:android.graphics.drawable.Drawable androidx.core.content.res.ResourcesCompat.getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme):0:0 -> loadShortcuts
    1:1:void loadShortcuts(android.content.Context):0 -> loadShortcuts
    2:2:void loadShortcuts(android.content.Context):0:0 -> loadShortcuts
    1:1:android.content.SharedPreferences androidx.preference.PreferenceManager.getDefaultSharedPreferences(android.content.Context):0:0 -> update
    1:1:void update(android.content.Context):0 -> update
    2:2:void update(android.content.Context):0:0 -> update
    3:3:android.graphics.drawable.Drawable androidx.core.content.ContextCompat.getDrawable(android.content.Context,int):0:0 -> update
    3:3:void update(android.content.Context):0 -> update
    4:4:void update(android.content.Context):0:0 -> update
com.vincent_falzon.discreetlauncher.core.IconPack -> com.vincent_falzon.discreetlauncher.core.IconPack:
    1:1:android.content.SharedPreferences androidx.preference.PreferenceManager.getDefaultSharedPreferences(android.content.Context):0:0 -> <init>
    1:1:void <init>(android.content.Context,java.lang.String):0 -> <init>
    2:2:void <init>(android.content.Context,java.lang.String):0:0 -> <init>
    1:1:android.graphics.drawable.Drawable androidx.core.content.res.ResourcesCompat.getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme):0:0 -> searchIcon
    1:1:android.graphics.drawable.Drawable searchIcon(java.lang.String,java.lang.String):0 -> searchIcon
    2:2:android.graphics.drawable.Drawable searchIcon(java.lang.String,java.lang.String):0:0 -> searchIcon
com.vincent_falzon.discreetlauncher.menu.ActivityFavorites -> com.vincent_falzon.discreetlauncher.menu.ActivityFavorites:
    1:1:void androidx.recyclerview.widget.ItemTouchHelper.attachToRecyclerView(androidx.recyclerview.widget.RecyclerView):0:0 -> onCreate
    1:1:void onCreate(android.os.Bundle):0 -> onCreate
    2:2:void androidx.recyclerview.widget.ItemTouchHelper.destroyCallbacks():0:0 -> onCreate
    2:2:void androidx.recyclerview.widget.ItemTouchHelper.attachToRecyclerView(androidx.recyclerview.widget.RecyclerView):0 -> onCreate
    2:2:void onCreate(android.os.Bundle):0 -> onCreate
    3:3:void androidx.recyclerview.widget.RecyclerView.removeOnItemTouchListener(androidx.recyclerview.widget.RecyclerView$OnItemTouchListener):0:0 -> onCreate
    3:3:void androidx.recyclerview.widget.ItemTouchHelper.destroyCallbacks():0 -> onCreate
    3:3:void androidx.recyclerview.widget.ItemTouchHelper.attachToRecyclerView(androidx.recyclerview.widget.RecyclerView):0 -> onCreate
    3:3:void onCreate(android.os.Bundle):0 -> onCreate
    4:4:void androidx.recyclerview.widget.ItemTouchHelper.destroyCallbacks():0:0 -> onCreate
    4:4:void androidx.recyclerview.widget.ItemTouchHelper.attachToRecyclerView(androidx.recyclerview.widget.RecyclerView):0 -> onCreate
    4:4:void onCreate(android.os.Bundle):0 -> onCreate
    5:5:void androidx.recyclerview.widget.RecyclerView.removeOnChildAttachStateChangeListener(androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener):0:0 -> onCreate
    5:5:void androidx.recyclerview.widget.ItemTouchHelper.destroyCallbacks():0 -> onCreate
    5:5:void androidx.recyclerview.widget.ItemTouchHelper.attachToRecyclerView(androidx.recyclerview.widget.RecyclerView):0 -> onCreate
    5:5:void onCreate(android.os.Bundle):0 -> onCreate
    6:6:void androidx.recyclerview.widget.ItemTouchHelper.destroyCallbacks():0:0 -> onCreate
    6:6:void androidx.recyclerview.widget.ItemTouchHelper.attachToRecyclerView(androidx.recyclerview.widget.RecyclerView):0 -> onCreate
    6:6:void onCreate(android.os.Bundle):0 -> onCreate
    7:7:void androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation.cancel():0:0 -> onCreate
    7:7:void androidx.recyclerview.widget.ItemTouchHelper.destroyCallbacks():0 -> onCreate
    7:7:void androidx.recyclerview.widget.ItemTouchHelper.attachToRecyclerView(androidx.recyclerview.widget.RecyclerView):0 -> onCreate
    7:7:void onCreate(android.os.Bundle):0 -> onCreate
    8:8:void androidx.recyclerview.widget.ItemTouchHelper.destroyCallbacks():0:0 -> onCreate
    8:8:void androidx.recyclerview.widget.ItemTouchHelper.attachToRecyclerView(androidx.recyclerview.widget.RecyclerView):0 -> onCreate
    8:8:void onCreate(android.os.Bundle):0 -> onCreate
    9:9:void androidx.recyclerview.widget.ItemTouchHelper.releaseVelocityTracker():0:0 -> onCreate
    9:9:void androidx.recyclerview.widget.ItemTouchHelper.destroyCallbacks():0 -> onCreate
    9:9:void androidx.recyclerview.widget.ItemTouchHelper.attachToRecyclerView(androidx.recyclerview.widget.RecyclerView):0 -> onCreate
    9:9:void onCreate(android.os.Bundle):0 -> onCreate
    10:10:void androidx.recyclerview.widget.ItemTouchHelper.stopGestureDetection():0:0 -> onCreate
    10:10:void androidx.recyclerview.widget.ItemTouchHelper.destroyCallbacks():0 -> onCreate
    10:10:void androidx.recyclerview.widget.ItemTouchHelper.attachToRecyclerView(androidx.recyclerview.widget.RecyclerView):0 -> onCreate
    10:10:void onCreate(android.os.Bundle):0 -> onCreate
    11:11:void androidx.recyclerview.widget.ItemTouchHelper$ItemTouchHelperGestureListener.doNotReactToLongPress():0:0 -> onCreate
    11:11:void androidx.recyclerview.widget.ItemTouchHelper.stopGestureDetection():0 -> onCreate
    11:11:void androidx.recyclerview.widget.ItemTouchHelper.destroyCallbacks():0 -> onCreate
    11:11:void androidx.recyclerview.widget.ItemTouchHelper.attachToRecyclerView(androidx.recyclerview.widget.RecyclerView):0 -> onCreate
    11:11:void onCreate(android.os.Bundle):0 -> onCreate
    12:12:void androidx.recyclerview.widget.ItemTouchHelper.stopGestureDetection():0:0 -> onCreate
    12:12:void androidx.recyclerview.widget.ItemTouchHelper.destroyCallbacks():0 -> onCreate
    12:12:void androidx.recyclerview.widget.ItemTouchHelper.attachToRecyclerView(androidx.recyclerview.widget.RecyclerView):0 -> onCreate
    12:12:void onCreate(android.os.Bundle):0 -> onCreate
    13:13:void androidx.recyclerview.widget.ItemTouchHelper.attachToRecyclerView(androidx.recyclerview.widget.RecyclerView):0:0 -> onCreate
    13:13:void onCreate(android.os.Bundle):0 -> onCreate
    14:14:void androidx.recyclerview.widget.ItemTouchHelper.setupCallbacks():0:0 -> onCreate
    14:14:void androidx.recyclerview.widget.ItemTouchHelper.attachToRecyclerView(androidx.recyclerview.widget.RecyclerView):0 -> onCreate
    14:14:void onCreate(android.os.Bundle):0 -> onCreate
    15:15:void androidx.recyclerview.widget.RecyclerView.addOnItemTouchListener(androidx.recyclerview.widget.RecyclerView$OnItemTouchListener):0:0 -> onCreate
    15:15:void androidx.recyclerview.widget.ItemTouchHelper.setupCallbacks():0 -> onCreate
    15:15:void androidx.recyclerview.widget.ItemTouchHelper.attachToRecyclerView(androidx.recyclerview.widget.RecyclerView):0 -> onCreate
    15:15:void onCreate(android.os.Bundle):0 -> onCreate
    16:16:void androidx.recyclerview.widget.ItemTouchHelper.setupCallbacks():0:0 -> onCreate
    16:16:void androidx.recyclerview.widget.ItemTouchHelper.attachToRecyclerView(androidx.recyclerview.widget.RecyclerView):0 -> onCreate
    16:16:void onCreate(android.os.Bundle):0 -> onCreate
    17:17:void androidx.recyclerview.widget.RecyclerView.addOnChildAttachStateChangeListener(androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener):0:0 -> onCreate
    17:17:void androidx.recyclerview.widget.ItemTouchHelper.setupCallbacks():0 -> onCreate
    17:17:void androidx.recyclerview.widget.ItemTouchHelper.attachToRecyclerView(androidx.recyclerview.widget.RecyclerView):0 -> onCreate
    17:17:void onCreate(android.os.Bundle):0 -> onCreate
    18:18:void androidx.recyclerview.widget.ItemTouchHelper.startGestureDetection():0:0 -> onCreate
    18:18:void androidx.recyclerview.widget.ItemTouchHelper.setupCallbacks():0 -> onCreate
    18:18:void androidx.recyclerview.widget.ItemTouchHelper.attachToRecyclerView(androidx.recyclerview.widget.RecyclerView):0 -> onCreate
    18:18:void onCreate(android.os.Bundle):0 -> onCreate
com.vincent_falzon.discreetlauncher.menu.ActivityFavorites$RecyclerAdapter$1 -> com.vincent_falzon.discreetlauncher.menu.ActivityFavorites$RecyclerAdapter$1:
    1:1:void androidx.recyclerview.widget.ItemTouchHelper.startDrag(androidx.recyclerview.widget.RecyclerView$ViewHolder):0:0 -> onTouch
    1:1:boolean onTouch(android.view.View,android.view.MotionEvent):0 -> onTouch
    2:2:void androidx.recyclerview.widget.ItemTouchHelper.obtainVelocityTracker():0:0 -> onTouch
    2:2:void androidx.recyclerview.widget.ItemTouchHelper.startDrag(androidx.recyclerview.widget.RecyclerView$ViewHolder):0 -> onTouch
    2:2:boolean onTouch(android.view.View,android.view.MotionEvent):0 -> onTouch
    3:3:void androidx.recyclerview.widget.ItemTouchHelper.startDrag(androidx.recyclerview.widget.RecyclerView$ViewHolder):0:0 -> onTouch
    3:3:boolean onTouch(android.view.View,android.view.MotionEvent):0 -> onTouch
com.vincent_falzon.discreetlauncher.settings.ActivitySettingsAppearance -> com.vincent_falzon.discreetlauncher.settings.ActivitySettingsAppearance:
    1:1:androidx.fragment.app.FragmentTransaction androidx.fragment.app.FragmentManager.beginTransaction():0:0 -> onCreate
    1:1:void onCreate(android.os.Bundle):0 -> onCreate
    2:2:void onCreate(android.os.Bundle):0:0 -> onCreate
com.vincent_falzon.discreetlauncher.settings.ActivitySettingsAppearance$SettingsFragment -> com.vincent_falzon.discreetlauncher.settings.ActivitySettingsAppearance$SettingsFragment:
    1:1:void androidx.preference.Preference.setVisible(boolean):0:0 -> onCreatePreferences
    1:1:void onCreatePreferences(android.os.Bundle,java.lang.String):0 -> onCreatePreferences
    2:2:void androidx.preference.PreferenceGroupAdapter.onPreferenceHierarchyChange(androidx.preference.Preference):0:0 -> onCreatePreferences
    2:2:void androidx.preference.PreferenceGroupAdapter.onPreferenceVisibilityChange(androidx.preference.Preference):0 -> onCreatePreferences
    2:2:void androidx.preference.Preference.setVisible(boolean):0 -> onCreatePreferences
    2:2:void onCreatePreferences(android.os.Bundle,java.lang.String):0 -> onCreatePreferences
    3:3:void onCreatePreferences(android.os.Bundle,java.lang.String):0:0 -> onCreatePreferences
    4:4:void androidx.preference.ListPreference.setEntryValues(java.lang.CharSequence[]):0:0 -> onCreatePreferences
    4:4:void onCreatePreferences(android.os.Bundle,java.lang.String):0 -> onCreatePreferences
    5:5:void androidx.preference.Preference.setEnabled(boolean):0:0 -> onCreatePreferences
    5:5:void onCreatePreferences(android.os.Bundle,java.lang.String):0 -> onCreatePreferences
    6:6:void onCreatePreferences(android.os.Bundle,java.lang.String):0:0 -> onCreatePreferences
    7:7:void androidx.preference.ListPreference.setEntryValues(java.lang.CharSequence[]):0:0 -> onCreatePreferences
    7:7:void onCreatePreferences(android.os.Bundle,java.lang.String):0 -> onCreatePreferences
    8:8:void androidx.preference.Preference.setEnabled(boolean):0:0 -> onCreatePreferences
    8:8:void onCreatePreferences(android.os.Bundle,java.lang.String):0 -> onCreatePreferences
com.vincent_falzon.discreetlauncher.settings.ActivitySettingsOperation -> com.vincent_falzon.discreetlauncher.settings.ActivitySettingsOperation:
    1:1:androidx.fragment.app.FragmentTransaction androidx.fragment.app.FragmentManager.beginTransaction():0:0 -> onCreate
    1:1:void onCreate(android.os.Bundle):0 -> onCreate
    2:2:void onCreate(android.os.Bundle):0:0 -> onCreate
com.vincent_falzon.discreetlauncher.settings.ActivitySettingsOperation$SettingsFragment -> com.vincent_falzon.discreetlauncher.settings.ActivitySettingsOperation$SettingsFragment:
    1:1:void androidx.preference.ListPreference.setEntryValues(java.lang.CharSequence[]):0:0 -> onCreatePreferences
    1:1:void onCreatePreferences(android.os.Bundle,java.lang.String):0 -> onCreatePreferences
    2:2:void onCreatePreferences(android.os.Bundle,java.lang.String):0:0 -> onCreatePreferences
    3:3:void androidx.preference.ListPreference.setEntryValues(java.lang.CharSequence[]):0:0 -> onCreatePreferences
    3:3:void onCreatePreferences(android.os.Bundle,java.lang.String):0 -> onCreatePreferences
    4:4:void onCreatePreferences(android.os.Bundle,java.lang.String):0:0 -> onCreatePreferences
    5:5:void androidx.preference.ListPreference.setEntryValues(java.lang.CharSequence[]):0:0 -> onCreatePreferences
    5:5:void onCreatePreferences(android.os.Bundle,java.lang.String):0 -> onCreatePreferences
